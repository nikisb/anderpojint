//----------------------------------------------------------------------------//
/*
							  #Varadero v2.1
			   				  #Authors: bunta
drva mesaju id ig xD

 
TDEditor_TD

stanovi zavrsi mysql
zavrsi mysql za player
hash za sifre

posedovanje firme sredi mysql

banka // done jos samo int


zlatara



novi tdovi register, login, ig
rework plata
vcoin yini :O
cmd settings

rmb to clear anim




cmd:fv
*/


#include 					< a_samp >

#undef MAX_PLAYERS
#define MAX_PLAYERS 200


#include 					< a_mysql >
#include 					< SKY >
#include 					< weapon-config >

#if defined _ALS_OnPlayerGiveDamage
	#undef OnPlayerGiveDamage
#else
	#define _ALS_OnPlayerGiveDamage
#endif
#define OnPlayerGiveDamage NULL_OnPlayerGiveDamage
#if defined NULL_OnPlayerGiveDamage
	forward NULL_OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart);
#endif
#if defined _ALS_OnPlayerTakeDamage
	#undef OnPlayerTakeDamage
#else
	#define _ALS_OnPlayerTakeDamage
#endif
#define OnPlayerTakeDamage NULL_OnPlayerTakeDamage
#if defined NULL_OnPlayerTakeDamage
	forward NULL_OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart);
#endif

#include                    < a_objects >
#include  					< fdialog >
#include  					< streamer >
#include                    < YSI\y_ini >
#include                    < YSI\y_amx >
#define						OD_METHOD METHOD_BOX
#include                    < optidraw >
#include                    < modelsizes >
#include                    < YSI\y_commands >
#include                    < YSI\y_iterate > 
#include                    < YSI\y_hooks >
#include                    < YSI\y_utils >
#include                    < YSI\y_va >
#include 					< YSI\y_timers >
#include  					< sscanf2 >
#include 					< paused >
#include  					< Dini > // brisati ovo GEPEK USRANI
#include                    < fly >
#define 					DEBUG
#include 					< nex-ac >
#include  					< mSelection >
//#include                    < geolocation >


//----------------------------------------------------------------------------//
#define charsmax(%0) (sizeof(%0)-1)
//----------------------------------------------------------------------------//
#define GetTimeEx() gettime() - 0
#define gettimeEx(%0,%1,%2) gettime(%0,%1,%2); %0 += 1
#define gettimeHourEx(%0) gettime(%0); %0 += 1
#define function:%0(%1) forward %0(%1); public %0(%1)
//----------------------------------------------------------------------------//



// new saltHash[14] = "1912996731327";
new MySQL:SQL;

#define mysql_host 	"localhost"
#define mysql_user 	"root"
#define mysql_pass 	""
#define mysql_database 	"varadero"


#define HAT_TYPE_1          0
#define HAT_TYPE_2          1
#define DST     DIALOG_STYLE_TABLIST
#define MAX_GIFTS         (500)
#define SCMTAA SendClientMessageToAll
//----------------------------------------------------------------------------//
#define BELA            "{FFFFFF}"
#define ZELENA          "{52be80}"
#define CRVENA          "{c0392b}"
#define ORANGE2         "{EF4026}"
#define ELITE           "{5BF0CF}"
#define GCHAT           "{03C25E}"
#define LJUB            "{5f2ab5}"
#define VARADERO        "{F9B7FF}"
#define ORANGE          "{FFAF00}"
#define SPLAVA          "{3498db}"
#define ZPLAVA          "{3498db}"
#define Tomatino        "{C33838}"
#define esco_boja       "{1A80D2}"
#define NS_AGENCY       "{1A80D2}"
#define PLAVA           "{3498db}"
#define ROZA            "{FF00EA}"
#define CMDC            "{B8FF02}"
#define SERVER          "{AFE7FF}"
#define BLUE           	0x3498dbFF
#define SZELENA         "{52be80}"
#define assassko        "{EE11EE}"
#define SIVA            "{C0C0C0}"
#define CRVENA2         "{c0392b}"
#define SRWBOJA         "{0084e3}"
#define BOJA		   	"{0077C7}"
#define SCRV2           "{FF6347}"
#define BALLASC         "{D1345B}"
#define HZELENA         "{52be80}"
#define COL_TEAM1       "{F81414}"
#define COL_TEAM2       "{0049FF}"
#define HEX_PROX        0xF9B7FFAA
#define GROVE           0x00D900C8
#define PURPLE1         0xF9B7FFAA
#define PURPLE2         0xF9B7FFAA
#define PURPLE3         0xF9B7FFAA
#define PURPLE4         0xF9B7FFAA
#define PURPLE5         0xF9B7FFAA
#define AZUTA           0xFFC801C8
#define BELA2           0xFFFFFFAA
#define SERVERBOJA      0x0099FFC8
#define PROX            0xC2A2DAAA
#define SCRVENA         0xc0392bAA
#define COLOR_GRAD2     0xBFC0C2FF
#define COLOR_GREEN     0x33AA33AA
#define TEAM_HIT_COLOR  0xFFFFFF00
#define COLOR_YELLOW    0xDABB3EAA
#define SVETLOPLAVA     0x3498dbAA
#define COLOR_GREY      0xAFAFAFAA
#define COLOR_RED       0xAA3333AA
#define GREEN           0x21DD00FF
#define COLOR_LIGHTRED  0xFF6347AA
#define COLOR_PLAVA     0x3498dbAA
#define COLOR_WHITE     0xFFFFFFFF
#define SOBOJA 			0x0096FFFF
#define COLOR_ORANGE    0xFFAA00FF
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COL_ORANGE 		"{FFAF00}"
#define COL_WHITE 		"{FFFFFF}"
#define COL_TEAM1 		"{F81414}"
#define COL_TEAM2 		"{0049FF}"
#define col_war         "{800080}"
#define COLOR_BLUE      0x3498dbAA
#define COLOR_PURPLE    0xC2A2DAAA
#define BIJELA          0xFFFFFFAA
#define WHITE           0xFFFFFFAA
//----------------------------------------------------------------------------//
#define NEON            15006
#define MAX_ZONES	 	50
#define Idlewood 		1
#define Hospital 		2
#define Ammunation 		3
#define Stadium 		4
//----------------------------------------------------------------------------//
new	DailyRecord;
new iCP[MAX_PLAYERS];
new UnderAttack[30];
new g_timer[MAX_PLAYERS][30];
new CountVar[MAX_PLAYERS] = 25;
new InCP[MAX_PLAYERS][30];
new CountTime[MAX_PLAYERS];
new tCP[MAX_ZONES];


new Timer[MAX_PLAYERS];
new Napada[MAX_PLAYERS];
new flyon[MAX_PLAYERS];
new Typed[MAX_PLAYERS][64];
new God[MAX_PLAYERS] = 0;
new SpawnovaoVozilo[MAX_PLAYERS];
//----------------------------------------------------------------------------//
#define koriscenje(%0,%1) \
	va_SendClientMessage(%0, -1, "{0074c2}[usage] -{FFFFFF} "%1)

#define sendErrorMessage(%0,%1) \
	va_SendClientMessage(%0,-1,"{eb703b}[greska] - {FFFFFF} "%1)

#define info(%0,%1) \
	va_SendClientMessage(%0,-1,"{0074c2}[info] - {FFFFFF} "%1)
//----------------------------------------------------------------------------// NEWS
new TECcar[12], fudbaltim[MAX_PLAYERS], RCONPokusaji[MAX_PLAYERS], AFKDetekcija[MAX_PLAYERS],
	PrihvataGoto[ MAX_PLAYERS ], Rentano[MAX_PLAYERS], JeoBrt[MAX_PLAYERS], ponudio[MAX_PLAYERS], rampazalvot,rampazalsot, rampazasfot, rampazalsott,
	NargilaTimer[MAX_PLAYERS], bool:NargilaOpet[MAX_PLAYERS], AfkCount[MAX_PLAYERS], achat = 0, busigumetimer[MAX_PLAYERS],
	onlinepl, rekordigraca, gachat = 0, globalstring[ 128 ],lchat = 0, vozilo4,
	Bcckapija, Lockapija, Text:Zapovez, motorent[34],autorent[22], ProcesReganja[MAX_PLAYERS], RegistriraVozilo[MAX_PLAYERS],
	lopta, golovi1, golovi2, gol, strelac,fudvre, Tbbkapija, FireworkTotal, Fired, bool:fudbalon,
	PlayerText:SpecTextDraw[ MAX_PLAYERS ], ostrvo,IzmenaImanja[MAX_PLAYERS], imanja = 0, KradeVoce[MAX_PLAYERS], KVTimer[MAX_PLAYERS], ImanjeOffer[MAX_PLAYERS], ImanjePrice[MAX_PLAYERS],
	drvece = 0, 
	Text:NwnEditor_TD[12], 
	zadnjiupdate[MAX_PLAYERS], afkSec[MAX_PLAYERS], afkMin[MAX_PLAYERS],animacija[MAX_PLAYERS], VLACar[16],
	orgnabrdukapija[2],
	ZabranjenPark = INVALID_OBJECT_ID,
	bilbas,
	bill1,
	bill2,
	bill3,
	Tehnicki_Pregled[MAX_PLAYERS],
	bill4,
	bill5,
	bill6,
	mafiakapija,
	kapijahangar;
//----------------------------------------------------------------------------// SVERC
new ClanSverc2 = 1;
new ClanSverc3 = 1;
new ClanSverc22 = 1;
new ClanSverc17 = 1;
new ClanSverc5 = 1;
new ClanSverc9 = 1;
new ClanSverc11 = 1;
new ClanSverc20 = 1;
new ClanSverc13 = 1;
new ClanSverc12 = 1;
new ClanSverc15 = 1;
new ClanSverc19 = 1;
new ClanSverc21 = 1;
//----------------------------------------------------------------------------//
new Prozor[MAX_VEHICLES] = 0;
//----------------------------------------------------------------------------// NEW ZA FURNITURE
new furnmenu = mS_INVALID_LISTID;
new walls = mS_INVALID_LISTID;
new housedoors = mS_INVALID_LISTID;
new chairs = mS_INVALID_LISTID;
new tables = mS_INVALID_LISTID;
new fitness = mS_INVALID_LISTID;
new houselights = mS_INVALID_LISTID;
new eletronic = mS_INVALID_LISTID;
new bathroom = mS_INVALID_LISTID;
new kitchen = mS_INVALID_LISTID;
new beds = mS_INVALID_LISTID;
new objects = mS_INVALID_LISTID;
//----------------------------------------------------------------------------// DEFINE ZA FURNITURE
#define BlankTeleports 15001
#define BlankTeleportsGhetto 15002
#define BlankTeleportsModern 15003
#define BlankTeleportsHotel 15004
#define HousePickInt 15005
#define SearchForObject 15006
#define HouseFurniture 15000
#define FurnRemove 15001
#define MAX_FURNITURE 350
#define IP_LIMIT 3
#define SAME_IP_CONNECT 4
#define Time_Limit 3500
#define private%0(%1)	forward%0(%1); \
						public%0(%1)
//______________________________________________________________________________
#define NARGILA_SMOKE  			2
//______________________________________________________________________________
#define PS_ZID(%0) SetDynamicObjectMaterial(%0, 0, 8409, "gnhotel1", "gnhotelwall02_128", 0)
#define PS_POD(%0) SetDynamicObjectMaterial(%0, 0, 3922, "bistro", "DinerFloor", 0)
#define PS_KROV(%0) SetDynamicObjectMaterial(%0, 0, 3975, "lanbloke", "ceiling_256", 0)
//______________________________________________________________________________
#define PUMPA_VRATA(%0) SetDynamicObjectMaterial(%0,  0, 18646, "matcolours", "white", 0x90FFFFFF)
#define PUMPA_STUB(%0) SetDynamicObjectMaterial(%0, 0, 18646, "matcolours", "white", 0xFFC2C0BC)
#define PUMPA_KROV(%0) SetDynamicObjectMaterial(%0,  0, 18646, "matcolours", "white", 0)
#define PUMPA_ZID1(%0) SetDynamicObjectMaterial(%0,   0, 18646, "matcolours", "red-4", 0)
#define PUMPA_ZID2(%0) SetDynamicObjectMaterial(%0, 0, 18646, "matcolours", "white", 0xFFA3A0A1)
#define PUMPA_PROZOR(%0) SetDynamicObjectMaterial(%0, 0, 16639, "a51_labs", "ws_trainstationwin1", 0xFFFFFFFF)
//______________________________________________________________________________
#define     VAULT_VIRTUALWORLD      (69)
#define     PICKUP_COOLDOWN         (3)
#define     DEPOSIT_MIN             (3500)
#define     DEPOSIT_MAX             (10000)
//_______________________________________________________________________//
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define RELEASED(%0) \
    (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
//_______________________________________________________________________//
#define IsValidWeapon(%0) \
	(%0>=1 && %0<=18 || %0>=21 && %0<=46)



//----------------------------------------------------------------------------//
#define MAX_ULICA       100
enum Ulice
{
	uSQLID,
	Float:uUlicaX,
	Float:uUlicaY,
	Float:uUlicaZ,
	uText[256],
	uPostavljena,
	uVlasnik[MAX_PLAYER_NAME],
	uIme[ 64 ]
};
new UI[ MAX_ULICA ][ Ulice ];
new Text3D:LabelcicUlica[ sizeof( UI ) ];
new PickupUlicee[ sizeof( UI ) ];
//============================================================================//
enum    e_objecttypes
{
	TYPE_LASER1 = 2,
	TYPE_LASER2,
	TYPE_LASER3,
	TYPE_VAULTDOOR = 6
};

enum 	e_labeltypes
{
	Text3D: TYPE_KEYPAD,
	Text3D: TYPE_EXPLOSIVE,
	Text3D: TYPE_TIMELOCK
};

enum    e_bankcontrols
{
	bool: Alarm,
	bool: LasersOn,
	VaultDoorState,
	KeypadHackTime,
	DoorInteractionTime
};

new
	AlarmArea = -1,
    VaultObjects[8] = {INVALID_OBJECT_ID, ...},
	Text3D: VaultLabels[e_labeltypes] = {Text3D: INVALID_3DTEXT_ID, ...},
	Text3D: InsideVaultLabels[8] = {Text3D: INVALID_3DTEXT_ID, ...},
	BankControls[e_bankcontrols],
	bool: DepositRobbed[8];

new
	RobberyTimer[MAX_PLAYERS] = {-1, ...},
	RobberyCounter[MAX_PLAYERS],
	RobberyType[MAX_PLAYERS],
	RobberyCash[MAX_PLAYERS],
	RobberyEscape[MAX_PLAYERS] = {-1, ...};

new
	Float: DepositCoords[8][3] = {
		{2141.9255, 1629.3380, 993.5761},
		{2141.9255, 1633.2180, 993.5761},
		{2141.9255, 1637.0980, 993.5761},
		{2141.9255, 1640.9780, 993.5761},
		{2146.5600, 1629.3040, 993.5761},
		{2146.5600, 1633.1840, 993.5761},
		{2146.5600, 1637.0640, 993.5761},
		{2146.5600, 1640.9440, 993.5761}
	};

new
	Float: GetawayLocations[][3] = {
        {405.4649, 2451.4956, 16.5000},
        {-1647.8981, 2497.6980, 86.2031},
        {-911.9169, -498.3112, 25.9609}
	};

forward RobberyUpdate(playerid);
forward ResetLasers();
forward OpenVaultDoor(type, seconds);
forward ResetVaultDoor();
forward DisableAlarm();
//______________________________________________________________________________
#define IsPlayerPaused(%1)              GetTickCount() > (zadnjiupdate[%1]+2000)
#define JEDIVOCE 249
#define D_POTVRDI 		"{1A80D2}Potvrdi"
#define CAR_RESPAWN 20000
//______________________________________________________________________________
#define MAX_WARS    99
new PlayerText:WARTextDraw[ MAX_PLAYERS ][ 9 ];

enum WAR {
	bool:warCreating,
    bool:warActive,
	warTeamScore[ 2 ],
	warGuns[ 4 ],
	warMap,
	warMapMembers,
	warTeamMembers[ 2 ],
	warTeamLeader[ 2 ],
	warTimer,
	warTimerSec,
	warTimerMin,
	warTimerTime
}
new WARInfo[ MAX_WARS ][ WAR ];

enum WARI {
	bool:warTeam[ 2 ],
	warKills,
	warDeaths,
	warID,
	Float:LastPosition[ 3 ],
	LastInterior,
	LastVirtualWorld
}
new WARPInfo[ MAX_PLAYERS ][ WARI ];

new CreatingWAR[ MAX_PLAYERS ];

new Float:warMap1Team1[ 9 ][ 3 ] = {
	{ 1147.9226,2813.0664,10.8125 },
	{ 1148.4319,2809.7048,10.8203 },
	{ 1148.7649,2805.6304,10.8203 },
	{ 1151.0385,2800.8855,10.8203 },
	{ 1155.1233,2800.9697,10.8203 },
	{ 1155.0419,2805.0557,10.8203 },
	{ 1144.4396,2799.8264,10.8125 },
	{ 1139.9843,2806.2156,10.9688 },
	{ 1140.9631,2812.3542,10.9190 }
};

new Float:warMap1Team2[ 9 ][ 3 ] = {
	{ 1403.0447,2733.0447,10.8126 },
	{ 1410.5400,2737.9583,10.8203 },
	{ 1414.4192,2747.7236,10.8203 },
	{ 1411.3033,2757.2588,11.2597 },
	{ 1399.9032,2750.0581,10.8203 },
	{ 1391.1559,2744.3250,10.8203 },
	{ 1384.0992,2743.9656,10.8203 },
	{ 1388.7274,2728.1936,10.8203 },
	{ 1379.5826,2729.1980,10.8203 }
};

new Float:warMap2Team1[ 7 ][ 3 ] = {
	{ -972.6812,1096.0303,1344.9882 },
	{ -972.5949,1084.3115,1344.9950 },
	{ -973.4254,1076.6229,1344.9950 },
	{ -973.5809,1070.1228,1345.0007 },
	{ -973.7216,1064.7092,1345.0061 },
	{ -973.6556,1056.8405,1345.0156 },
	{ -973.0229,1024.2570,1345.0525 }
};

new Float:warMap2Team2[ 7 ][ 3 ] = {
	{ -1132.7081,1022.7668,1345.7273 },
	{ -1132.6602,1035.5205,1345.7427 },
	{ -1132.2740,1041.1238,1345.7412 },
	{ -1131.0614,1048.8101,1345.7435 },
	{ -1132.0385,1055.2090,1345.7603 },
	{ -1132.0372,1063.7393,1345.7628 },
	{ -1131.6272,1094.3673,1345.7885 }
};

new Float:warMap3Team1[ 4 ][ 3 ] = {
	{ 1295.8276,1070.7544,10.7652 },
	{ 1293.9846,1078.9841,10.6999 },
	{ 1300.7595,1085.3835,10.8203 },
	{ 1312.7617,1084.8655,10.8203}
};

new Float:warMap3Team2[ 4 ][ 3 ] = {
	{ 1492.2148,916.9006,10.9297 },
	{ 1478.9260,916.6356,10.8203 },
	{ 1467.7583,915.6778,10.8203 },
	{ 1471.7261,930.1809,10.8203 }
};

new Float:warMap4Team1[ 5 ][ 3 ] = {
	{ 2922.0735,4057.7339,41.9413 },
	{ 2924.9233,4058.4211,41.9413 },
	{ 2925.6855,4053.5361,41.9413 },
	{ 2926.5029,4045.3936,41.9413 },
	{ 2921.1628,4044.2600,41.9413 }
};

new Float:warMap4Team2[ 5 ][ 3 ] = {
	{ 2925.1416,4300.6401,41.9413 },
	{ 2923.4927,4307.6055,41.9413 },
	{ 2927.1511,4311.6382,41.9413 },
	{ 2930.3958,4310.5850,41.9413 },
	{ 2931.5002,4302.3281,41.9413 }
};

new Float:warMap5Team1[ 4 ][ 3 ] = {
	{ -136.6962,-114.7337,3.1172 },
	{ -126.6221,-115.4705,3.1172 },
	{ -104.1388,-119.4517,3.1172 },
	{ -84.2369,-121.1719,3.1172 }
};

new Float:warMap5Team2[ 4 ][ 3 ] = {
	{ 0.4129,91.1095,3.1172 },
	{ -22.3045,108.2041,3.1172 },
	{ -45.0152,113.6356,3.1172 },
	{ -77.4174,134.2272,3.1172 }
};
//______________________________FAJLOVI________________________________________//
#define AUTO_FILE    	                    "Auta/%d.ini"
#define AVION_FILE                          "Letjelice/%d.ini"
#define MOTOR_FILE                          "Motori/%d.ini"
#define BICIKLA_FILE                        "Bicikla/%d.ini"
#define PLOVILA_FILE                        "Plovila/%d.ini"
#define ATTACH_FILE 						"Attachs/%s.ini"
#define BAN_FOLDER 							"Banovani/%s.ini"

//______________________________________________________________________________

#define JELKA_OBJEKAT                       19076
#define MAX_JELKA                           30
//______________________________________________________________________________

enum Jelka
{
	jSQLID,
    zPostavljena,
    Float:zX,
    Float:zY,
    Float:zZ,
    Float:zAngle,
    zObjekat,
    aInt,
    aVW,
    Text3D:zLabelJelke
}
new JI[MAX_JELKA][Jelka], eData[MAX_PLAYERS];
//=====================[ DEFINICIJE ZA IMANJE] ========================//
#define MAX_IMANJA 150
enum Imanja
{
	iSQLID,
	iImaVlasnika,
	iVlasnik[MAX_PLAYER_NAME],
	Float:iImanjeX,
	Float:iImanjeY,
	Float:iImanjeZ,
	iLevel,
	iCena,
	iNeakt,
	iPostavljeno,
	iRadius
};
new II[MAX_IMANJA][Imanja];
new ImanjePickup[sizeof(II)];
new Text3D:ImanjeLabel[sizeof(II)];
//======================[ NEW ZA DRVECA ]==============================//

#define MAX_DRVECE 60
enum Drvece
{
	dSQLID,
	Float:dDrvoX,
	Float:dDrvoY,
	Float:dDrvoZ,
	dVrsta,
	dRast,
	dRastVoca,
	dPostavljeno,
	dIDImanja
};
new DI[MAX_DRVECE][Drvece];
new DrvoObject[MAX_DRVECE];
new Text3D:DrvoLabel[MAX_DRVECE];
//======================[ NEW ZA ANTI CIT ]==========================//
new AntiIBV[MAX_PLAYERS];
new AntiIBVCounter[MAX_PLAYERS];
new AntiIBVActive[MAX_PLAYERS];
//new ServerStartCount;
new updatewarntd[1024];
new CmdString[256];
new createdcar[MAX_VEHICLES];
//VATROMET
#define RocketHeight 50
#define RocketSpread 30
#define MAX_LAUNCH 51
#define MAX_FIREWORKS 100
new Rocket[MAX_LAUNCH];
new RocketLight[MAX_LAUNCH];
new RocketSmoke[MAX_LAUNCH];
new RocketExplosions[MAX_LAUNCH];
new Float:rx6[MAX_LAUNCH];
new Float:ry6[MAX_LAUNCH];
new Float:rz6[MAX_LAUNCH];
//==============[ DEFINE za Actor ]===================//
#define MAX_ACTOR                       (80)
enum ActorsData
{
	ActorSQLID,
	ActorSkinID,
	ActorAnimID,
	Float:ActorPos_X,
	Float:ActorPos_Y,
	Float:ActorPos_Z,
	Float:ActorRotation
};
new ActorInfo[MAX_ACTOR][ActorsData];
new Text3D:Actor3DText[MAX_ACTOR];
new ActorSkin[sizeof(ActorInfo)];
//==============[ DEFINE I NEW ZA MATEMATIKU ]===================//
#define RAND 7
new Roots[][] =
{
	{36, 6},
	{49, 7},
	{81, 9},
	{144, 12},
	{225, 15},
	{16, 4},
	{169, 13},
	{196, 14},
	{256, 16},
	{9, 3},
	{4, 2},
	{100, 10}
};

new isnow;
new strajt[200];
new rezultat;
new numberss[4];
new Text:WarnTD;
#define MAX_WARNS 10
enum warnData {
    Text[256]
};
new AdminWarns[ MAX_WARNS ][ warnData ];
new lastcommand[MAX_PLAYERS];
new noooc = 0;
new fchat = 0;
new interventnakapija;
new antifakekill[MAX_PLAYERS];
new togv[MAX_PLAYERS];
////////////////////////
enum E_CARJACK_DATA
{
	Float: E_LAST_X,  		Float: E_LAST_Y,    	Float: E_LAST_Z,
	E_LAST_VEH
}

#define PVAR_TAG "RRG_"
new vozilolist = mS_INVALID_LISTID;
new skinlist = mS_INVALID_LISTID;
//=========================[ NEW ZA LESEVI ]===========================//
#define MAX_LESEVA 40
new telostring[150];
enum dInfo
{
    dPlanted,
    dID,
    dObject,
    dObject2,
    dObject3,
    dObject4,
    dObject5,
    dObject6,
    dObject7,
   	Float:dX,
	Float:dY,
	Float:dZ,
	Text3D:d3DText
};
new SmrtInfo[MAX_LESEVA][dInfo];
//new lpstring[ 128 ];
//=============================[ NEW ZA /LP ]============================//
#define MAX_ASKQS     60

enum askqDataA {
    bool:askqSend,
    askqOwner[ MAX_PLAYER_NAME ],
    askqID,
	askqQuestion[ 128 ]
};
new adMaskqList[ MAX_ASKQS ][ askqDataA ];
enum askqDataG {
    bool:askqSendA,
    askqOwnerA[ MAX_PLAYER_NAME ],
    askqIDA,
	askqQuestionA[ 128 ]
};
new GMaskqList[ MAX_ASKQS ][ askqDataG ];

enum askqDataZ {
	bool:askqSended,
    bool:askqAnswered,
    askqAdmin[ MAX_PLAYER_NAME ],
	askqAnswer[ 128 ]
};
new askqInfo[ MAX_PLAYERS ][ askqDataZ ];

new DialogStrgEx[ 2048 ];
new IzabraniAskQ[ MAX_PLAYERS ];
new votetimer;
new nellys[500];
new votation;
new voteyes;
new voteno;
new zonaid[MAX_PLAYERS];
new zonatime[MAX_PLAYERS];
new zonas[MAX_PLAYERS];
new dodajezonu[MAX_PLAYERS];
new zonalvl[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new zonatimer[MAX_PLAYERS];
new PlayerText:klecanjetd[MAX_PLAYERS];
new PlayerText:NwnEditor_PTD[MAX_PLAYERS][24];
new votedrecently[MAX_PLAYERS];
forward KrajGlasanja(playerid);

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//
#define D_ODABERI 					"Odaberi"
#define D_ODUSTANI					"Odustani"
#define D_NAZAD 					"Back"
#define D_NASLOV              		"{017DCA}V{FFFFFF}aradero"
#define X_POTVRDI                   "Potvrdi"
#define X_ODUSTANI 					"Odustani"
#define X_NASLOV      				"{017DCA}V:RPG"
#define D_OK                    	"X"
//========================[ NEW ZA ZONE ]=======================//
#define GLAVNA     	"{7F00FF}"
#define MAX_ZONA 50
enum gzone
{
	gZSQLID,
	Float:mX69,
	Float:mY69,
	Float:vX69,
	Float:vY69,
	zonaTeam,
	gPreuzeto,
	gGlavna,
	Float:gPickupx,
	Float:gPickupy,
	Float:gPickupz,
};
new GZ[MAX_ZONA][gzone];
new ZonaID[sizeof(GZ)];
new Text3D:ZonaLabel[sizeof(GZ)];
new ZonaPickup[sizeof(GZ)];
///////////////////////////////////////
forward ImeTD(playerid);
public ImeTD(playerid)
{
    new imetd[26];
    format(imetd, sizeof(imetd), "%s_(%d)", GetName(playerid), playerid);
    PlayerTextDrawSetString(playerid, NwnEditor_PTD[playerid][6], imetd);
    PlayerTextDrawShow(playerid, NwnEditor_PTD[playerid][6]);
    return 1;
}
//=======================[ NEW ZA BANKA ]======================//
enum E_SETTINGS:(<<= 1) {
    SETTING_BANK_DISABLED = 1
}
#define SETTINGS_NONE E_SETTINGS:0
new E_SETTINGS:g_Settings = SETTINGS_NONE;

#define SafeGetPlayerMoney(%0) PlayerInfo[%0][pNovacDzep]
//=====================================================================//
#define				 CAMERA_LIMIT				 		15
#define				 CAMERA_UPDATE_INTERVAL		 		3000
#define				 CAMERA_FLASH_TIME			 		1200
#define              CAMERA_USEMPH                      0
#define              CAMERA_LABEL_COLOR                 0xFF000FFF
#define              CAMERA_PERSPECTIVE                 false                    



#define              STREAMER_ENABLED					true
#define              STREAMER_ADD                   	CreateDynamicObject
#define              STREAMER_REMOVE                    DestroyDynamicObject    
#if STREAMER_ENABLED == true

#endif   	                                                                    
//RACE
#define MAX_RACES 14
#define MAX_RACE_DISTANCE 30000
#define MIN_RACE_DISTANCE 150
#define MAX_TEXTDRAW_ICONS 80
#define MAX_CONTESTANTS 10
#define MINIMAL_DISTANCE_CP 100.0
#define REMEMBER_OLD_POSITION true
#define RACE_VIRTUAL_WORLD 0
#define RESPAWN_TIME 2000
#define VEHICLE_LEAVE_TIME 25
#define MAX_SUGGESTED_MAPICONS 2
new RaceVehicleList[] = {
	415, // Cheetah
	411, // Infernus
	451, // Turismo
	560, // Sultan
	494, // Hotring Racer
	524, // Cement Truck
	407, // Firetruck
	444, // Monster Truck
	423, // Mr. Whoopee
	457, // Golf Caddy
	571, // Go-Kart
	594, // RC Cam
	568, // Bandito
	463, // Freeway
	461, // PCJ-600
	468, // Sanchez
	471, // Quadbike
	510, // Mountain Bike
	530, // Forklift
	539  // Vortex Hovercraft
	// Make sure the last entry doesn't have a comma! (All the other entries require a comma at the end.)
};
#define ALLOW_ALL_VEHICLES false
#define RACE_VEHICLE_COL1 -1
#define RACE_VEHICLE_COL2 -1
#define PVAR_TAG "RRG_"
#define SUGGESTED_MAPICONS_OFFSET 80
#define COL_MENU_REGULAR 0xFFFFFFFF
#define COL_MENU_MOUSEOVER 0xDD8080FF
#define COL_MENU_SELECTED 0xCF2C23FF
#define COL_MENU_STARTED 0x5B0000FF
#define COL_TEXT_REG 0xFFFFFFFF
#define COL_TEXT_WIN 0xFF3E3EFF
#define COL_TEXT_ERROR 0xD21313FF
#define COL_MAP_CP 0x5B0000FF

#define MENU_X 50.0
#define MENU_Y 145.0

#define MAX_VEHICLE_NAME 25
new const VehicleNames[][MAX_VEHICLE_NAME char] = {
	!"Landstalker", !"Bravura", !"Buffalo", !"Linerunner", !"Perennial", !"Sentinel", !"Dumper", !"Firetruck", !"Trashmaster", !"Stretch", !"Manana", !"Infernus", !"Voodoo", !"Pony", !"Mule",
	!"Cheetah", !"Ambulance", !"Leviathan", !"Moonbeam", !"Esperanto", !"Taxi", !"Washington", !"Bobcat", !"Mr Whoopee", !"BF Injection", !"Hunter", !"Premier", !"Enforcer", !"Securicar", !"Banshee",
	!"Predator", !"Bus", !"Rhino", !"Barracks", !"Hotknife", !"Closed Trailer A", !"Previon", !"Coach", !"Cabbie", !"Stallion", !"Rumpo", !"RC Bandit",	"Romero", !"Packer", !"Monster",
	!"Admiral", !"Squalo", !"Seasparrow", !"Pizzaboy", !"Tram", !"Open Trailer", !"Turismo", !"Speeder", !"Reefer", !"Tropic", !"Flatbed", !"Yankee", !"Caddy", !"Solair", !"Berkley's RC Van",
	!"Skimmer", !"PCJ-600", !"Faggio", !"Freeway", !"RC Baron", !"RC Raider", !"Glendale", !"Oceanic", !"Sanchez", !"Sparrow", !"Patriot", !"Quad", !"Coastguard", !"Dinghy", !"Hermes",
	!"Sabre", !"Rustler", !"ZR-350", !"Walton", !"Regina", !"Comet", !"BMX", !"Burrito", !"Camper", !"Marquis", !"Baggage", !"Dozer", !"Maverick", !"News Chopper", !"Rancher",
	!"FBI Rancher", !"Virgo", !"Greenwood", !"Jetmax", !"Hotring", !"Sandking", !"Blista Compact", !"Police Maverick", !"Boxville", !"Benson", !"Mesa", !"RC Goblin", !"Hotring Racer A", !"Hotring Racer B", !"Bloodring Banger",
	!"Lure Rancher", !"Super GT", !"Elegant", !"Journey", !"Bike", !"Mountain Bike", !"Beagle", !"Cropdust", !"Stuntplane", !"Petrol Trailer", !"Roadtrain", !"Nebula", !"Majestic", !"Buccaneer", !"Shamal",
	!"Hydra", !"FCR-900", !"NRG-500", !"HPV1000", !"Cement Truck", !"Tow Truck", !"Fortune", !"Cadrona", !"FBI Truck", !"Willard", !"Forklift", !"Tractor", !"Combine", !"Feltzer", !"Remington",
	!"Slamvan", !"Blade", !"Freight", !"Brown Streak", !"Vortex", !"Vincent", !"Bullet", !"Clover", !"Sadler", !"Firetruck LA", !"Hustler", !"Intruder", !"Primo", !"Cargobob", !"Tampa", !"Sunrise",
	!"Merit", !"Utility", !"Nevada", !"Yosemite", !"Windsor", !"Monster A", !"Monster B", !"Uranus", !"Jester", !"Sultan", !"Stratum", !"Elegy", !"Raindance", !"RC Tiger", !"Flash", !"Tahoma", !"Savanna",
	!"Bandito", !"Freight Flat", !"Brown Streak Carriage", !"Kart", !"Mower", !"Duneride", !"Sweeper", !"Broadway", !"Tornado", !"AT-400", !"DFT-30", !"Huntley", !"Stafford", !"BF-400", !"Newsvan",
	!"Tug", !"Petrol Trailer", !"Emperor", !"Wayfarer", !"Euros", !"Hotdog", !"Club", !"Freight Carriage", !"Closed Trailer B", !"Andromada", !"Dodo", !"RC Cam", !"Launch", !"LSPD Police", !"SFPD Police",
	!"LVPD Police", !"Police Ranger", !"Picador", !"S.W.A.T. Van", !"Alpha", !"Phoenix", !"Ghost Glendale", !"Ghost Sadler", !"Baggage Trailer A", !"Baggage Trailer B", !"Stairs Trailer", !"Black Boxville",
	!"Farm Plow", !"Utility Trailer"
};
new vehListStr[(sizeof(RaceVehicleList) + 1) * (MAX_VEHICLE_NAME + 2)];
//=====================================================================//


//====================================================================//
#define SCM SendClientMessage
#define SAM SendAdminMessage
#define SASM SendAdminSpecMessage
#define MPN MAX_PLAYER_NAME
#define IPI INVALID_PLAYER_ID
#define MIN_DUZINA_LOZINKE 		6
#define MAX_DUZINA_LOZINKE      12
#define MAX_VOZILA  2000
#if !defined Loop
#define Loop(%0,%1) \
        for(new %0 = 0; %0 != %1; %0++)
#endif

#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))


#if !defined TIME
#define TIME \
    1200000
#endif
#define MAX_DROP_ITEMS 1000
#define COLOR_ACTION 0xFFC0CBFF
//tempomat
new question[64] = "None",
	answer[64] = "None",
	rewardtype,
	reward;

new	bool:quizexist;
new Float:PlayerCruiseSpeed[MAX_PLAYERS];
new Float:PlayerHeadingAngle[MAX_PLAYERS];

#define HOLDING(%0)  ((newkeys & (%0)) == (%0))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

new Float:positionx[MAX_PLAYERS];
new Float:positiony[MAX_PLAYERS];
new Float:positionz[MAX_PLAYERS];
new positionint[MAX_PLAYERS];
new positionvw[MAX_PLAYERS];
new g_Dialog[MAX_PLAYERS];
SPD(playerid, dialogid, style, caption[], info[], button1[], button2[] = "") {
	g_Dialog[playerid] = dialogid;
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
//=====================================================================//
// definicije //
#define ZidKamen(%0) SetDynamicObjectMaterial(%0, 0, 8839, "vgsecarshow", "sw_wallbrick_06", 0)
#define PodPlocice(%0) SetDynamicObjectMaterial(%0, 0, 8390, "vegasemulticar", "Bow_sub_walltiles", 0)
#define KrovBlok(%0) SetDynamicObjectMaterial(%0, 0, 6095, "shops01_law", "hotwall1_law", 0)
#define SivZid(%0) SetDynamicObjectMaterial(%0, 0, 8423, "pirateship01", "tislandwall04_64", 0)
#define PodParket(%0) SetDynamicObjectMaterial(%0, 0, 13007, "sw_bankint", "woodfloor1", 0)
#define KrovPlafon(%0) SetDynamicObjectMaterial(%0, 0, 8675, "wddngchpl02", "vgschapelwall01_64", 0)
#define CENTAR_SPOD(%0) SetObjectMaterial(%0, 0, 8399, "vgs_shops", "vgsclubwall05_128", 0)
#define CENTAR_CPOD(%0) SetObjectMaterial(%0, 0, 10973, "mall_sfse", "mallfloor3", 0)
#define CENTAR_IZID(%0) SetDynamicObjectMaterial(%0, 0, 6095, "shops01_law", "hotwall1_law", 0)
#define CENTAR_TRAVA(%0) SetDynamicObjectMaterial(%0, 0, 9554, "park_sfw", "Grass_128HV", 0)
////////////////////////////FBI/////////////////////////////////////////////////////////
#define FBIBM(%0) SetDynamicObjectMaterial(%0, 0, 4593, "buildblk55", "holpac01_law", 0)
#define FBIBM1(%0) SetDynamicObjectMaterial(%0, 0, 4828, "airport3_las", "mirrwind1_LAn", 0)
#define FBIBM2(%0) SetDynamicObjectMaterial(%0, 0, 9525, "boigas_sfw", "GEwhite1_64", 0)
#define FBIBM3(%0) SetDynamicObjectMaterial(%0, 0, 3820, "boxhses_sfsx", "stonewall_la", 0)
#define FBIBM4(%0) SetObjectMaterial(%0, 0, 4593, "buildblk55", "sl_plazatile01", 0)
// burg //
#define KFC_CRVENO(%0) SetDynamicObjectMaterial(%0, 0, 18646, "matcolours", "red-4", 0)
#define KFC_BELO(%0) SetDynamicObjectMaterial(%0, 0, 18646, "matcolours", "white", 0)
///////////////////////////////////////////////////////
////////////definicije textura BANKA///////////////////
#define BANKA_PROZOR(%0) SetDynamicObjectMaterial(%0, 0, 9169, "vgslowbuild", "marinawindow1_256", 0)
#define BANKA_ZID(%0) SetDynamicObjectMaterial(%0, 0, 11429, "matcolours", "white", 0)
#define BANKA_TRAKA(%0) SetDynamicObjectMaterial(%0, 0, 11429, "des_nw", "vgs_shopwall01_128", 0xFF00AAFF)
////////////////////////////////////////////////////////
#define SCM    SendClientMessage
#define DSL    DIALOG_STYLE_LIST
#define DSB    DIALOG_STYLE_MSGBOX
#define DSI    DIALOG_STYLE_INPUT
////////////////////DEFINE RANKOVI/////////////////
#define PD_RANK1                280
#define PD_RANK2                266
#define PD_RANK3                267
#define PD_RANK4                265
#define PD_RANK5                288
#define PD_ZENSKI               211
////////////////////////////////////////////////
#define MA_RANK1                280
#define MA_RANK2                282
#define MA_RANK3                288
#define MA_RANK4                283
#define MA_RANK5                311
#define MA_ZENSKI               91
////////////////////PARKING SERVIS//////////////
#define PS_RANK                 16
////////////////////CONDOR////////////////////
#define CO_RANK                  126
#define CO_RANK2                 111
#define CO_RANK3                 59
#define CO_RANK4                 43
#define CO_RANK5                 294
#define CO_ZRANK                 12
///////////////////////TVF///////////////////////
#define TVF_RANK1                127
#define TVF_RANK2                125
#define TVF_RANK3                126
#define TVF_RANK4                46
#define TVF_RANK5                98
#define TVF_ZENSKI               214
///////////////////TRIADS////////////////////////
#define TBT_RANK1                117
#define TBT_RANK2                118
#define TBT_RANK3                186
#define TBT_RANK4                208
#define TBT_RANK5                294
#define TBT_ZENSKI               263
//////////////////GROVE////////////////////////////
#define GSF_RANK1                105
#define GSF_RANK2                106
#define GSF_RANK3                107
#define GSF_RANK4                269
#define GSF_RANK5                270
#define GSF_ZENSKI               298
///////////////BALLAS////////////////////////////
#define BALLAS_RANK1             103
#define BALLAS_RANK2             102
#define BALLAS_RANK3             104
#define BALLAS_RANK4             292
#define BALLAS_RANK5             293
#define BALLAS_ZENSKI            298
/////////////////NOVINARI////////////////////////
#define NOVINARI_RANK1           101
#define NOVINARI_RANK2           17
#define NOVINARI_RANK3           187
#define NOVINARI_RANK4           227
#define NOVINARI_RANK5           228
#define NOVINARI_ZENSKI          141
/////////////HITMAN/////////////////////////
#define SA_RANK1                166
#define SA_RANK2                166
#define SA_RANK3                165
#define SA_RANK4                165
#define SA_RANK5                164
#define SA_ZENSKI               12
/////////////Blue Lagoon/////////////////////////
#define PO_RANK1                115
#define PO_RANK2                174
#define PO_RANK3                175
#define PO_RANK4                114
#define PO_RANK5                116
/////////////LCN/////////////////////////
#define PO2_RANK1                184
#define PO2_RANK2                223
#define PO2_RANK3                186
#define PO2_RANK4                185
#define PO2_RANK5                46
/////////////DNB/////////////////////////
#define PO3_RANK1                121
#define PO3_RANK2                122
#define PO3_RANK3                123
#define PO3_RANK4                110
#define PO3_RANK5                108
/////////////DNB/////////////////////////
#define SMITH_RANK1                21
#define SMITH_RANK2                30
#define SMITH_RANK3                144
#define SMITH_RANK4                28
#define SMITH_RANK5                29
/////////////////Loca Cartel///////////////////////
#define LOCA_RANK1                 98
#define LOCA_RANK2                 184
#define LOCA_RANK3                 46
#define LOCA_RANK4                 147
#define LOCA_RANK5                 149
/////////////Russian Mafia/////////////////////////
#define PO4_RANK1                111
#define PO4_RANK2                112
#define PO4_RANK3                164
#define PO4_RANK4                166
#define PO4_RANK5                249
/////////////////Taxi
#define TAXI_RANK1               187
/////////////////FBI
#define FBI_RANK1                163
#define FBI_RANK2                164
#define FBI_RANK3                165
#define FBI_RANK4                166
#define FBI_RANK5                286
/////////////////Black Cobra Corporation
#define RB_RANK1                185
#define RB_RANK2                186
#define RB_RANK3                98
#define RB_RANK4                124
#define RB_RANK5                294
//Vatraogasci
#define V_RANK1                278
////////////////Yakuza
#define BASE_RANK1               117
#define BASE_RANK2               118
#define BASE_RANK3               186
#define BASE_RANK4               208
#define BASE_RANK5               294
/////////////DeathRow/////////////////////////
#define LCN_RANK1                299
#define LCN_RANK2                177
#define LCN_RANK3                124
#define LCN_RANK4                147
#define LCN_RANK5                294
////////////////////TBB RANKOVI/////////////////
#define TEC_RANK1               98
#define TEC_RANK2                43
#define TEC_RANK3                46
#define TEC_RANK4                125
#define TEC_RANK5                124
#define TEC_ZENSKI               195
////////////////////VLA RANKOVI/////////////////
#define VLA_RANK1                114
#define VLA_RANK2                116
#define VLA_RANK3                175
#define VLA_RANK4                115
#define VLA_RANK5                175
#define VLA_ZENSKI               193
//=====================================================================//
//=====================================================================//
#define VRSTA_MARKET      1
#define VRSTA_BURG        2
#define VRSTA_CLUCKIN     3
#define VRSTA_PIZZA       4
#define VRSTA_PIGPEN      5
#define VRSTA_BAR         6
#define VRSTA_GYM         7
#define VRSTA_SEXSHOP     8
#define VRSTA_BINCO       9
#define VRSTA_GUNSHOP     10
#define VRSTA_DISCO       11
#define VRSTA_RESTORAN    12
#define VRSTA_ZIP         13
#define VRSTA_VICTIM      14
#define VRSTA_SUBURBAN    15
#define VRSTA_BARBER      16
#define VRSTA_KLADIONICA  17
#define VRSTA_SBIZZ       18
#define VRSTA_DRVECE      19
#define VRSTA_AUTO        20
#define VRSTA_MOTOR       21
#define VRSTA_BICIKLO     22
#define VRSTA_SVE         23
/////////////////////OBJECTS SLOT/////////////////////
#define LISICE_SLOT       0
#define NAOCARE_SLOT      1
#define MARAMA_SLOT       2
#define FRIZURA_SLOT      3
#define TELEFON_SLOT      4
#define DOSTAVLJAC_SLOT   5
#define KACIGA_SLOT       6
#define PAPAGAJ_SLOT      7
#define VRECA_SLOT        9
#define DZAK_SLOT        10
#define STIT_SLOT        9
#define NARGILA_SLOT     11
///////////////////DEFINE SPAWNOVI////////////////////
#define SPAWN_NORMAL            0
#define SPAWN_BAZA              1
#define SPAWN_KUCA              2
#define SPAWN_RENTKUCA          3
#define SPAWN_STAN              4
#define SPAWN_VIKENDICA         5
#define SPAWN_NORMALV           6
#define SPAWN_VIPBAZA           7
//////////////////DEFINE POSLOVI//////////////////////
#define POSAO_BUSVOZAC             1
#define POSAO_KOSACTRAVE           2
#define POSAO_MEHANICAR            3
#define POSAO_POSTAR               4
#define POSAO_KOMUNALAC            5
#define POSAO_GRADJEVINAR          6
#define POSAO_BOLNICAR             7
#define POSAO_GROBAR               8
#define POSAO_DZEPAROS             9
#define POSAO_FARMER               10
#define POSAO_MASINOVODJA          11
#define POSAO_DOSTAVLJAC           12
#define POSAO_KAMIONDZIJA          13
#define POSAO_PILOT                14
#define POSAO_ELEKTRICAR           15
#define POSAO_VODOINSTALATER       16
#define POSAO_RUDAR                17
#define POSAO_DRVOSECA             18
#define POSAO_RIBAR                19
#define POSAO_COCA                20
#define Sec(%0)             (( %0 ) * ( 1000 ))
#define Min(%0)             (( %0 ) * ( 1000*60 ))
#define Sati(%0)            (( %0 ) * ( 1000*60*60 )
main()
{
	print("|-----------------------------------------|");
	print("- Community Owner: bunta");
	print("- Community Developer: bunta");
	print("- Version: v1.0");
	print("- Weburl: www.varadero-samp.com");
	print("|-----------------------------------------|");
}
//////////////////////////////////////////////////////////////////
enum pInfo
{
	pSQLID,
	pName[25],
    pPassword[64],
	pAdminpin,
	pPrisluskivanje,
    pPosedovanjeRanca,
	pPrislusk,
    pNovacDzep,
    pAdmin,
    pDozvola1,
    pDozvola2,
    pDozvola3,
    pDozvola4,
    pDozvola5,
    pDozvola6,
    pDozvola7,
	pDozvola8,
	pDozvola9,
    pSkripter,
	pDvaV,
    pMuteg,
    pMutel,
    pDiploma,
    pVabjuzer,
    pDrvoSljiva,
    pDrvoJabuka,
    pDrvoKruska,
	pPosedovanjeImanja,
    pJabuka,
    pKruska,
    pSljiva,
	pVlidera,
	pTurcin,
	pRPucitelj,
    pRPE,
    pDme,
	pRankName[128],
	pPismeni,
	pKantica,
    pAbjuzer,
    pPasos,
	pKzlato,
	pKopac,
    pMarriedTo[128],
    pMarried,
    pNarucen,
	pGM,
	pVA,
	pTestAdmin,
	pVGM,
	pProbaj,
	pPUBG,
	pUPUBG,
	pPrivilegija,
	pLPodg,
	pBrojBanned,
	pBrojJail,
	pBrojWarn,
    pBrojMute,
	pDdodelirank,
	pSatiIgreS,
	pSpecating,
	pDutyTime,
	pPozicioner,
	pPromoter,
	pSpecteam,
	pMinus,
	pPlus,
	pDonate,
    pDisarm,
    pDisarmVreme,
	pNemas,
	pGPS,
	pNargila,
	pNaglavu,
	pSuky,
	pChatF,
	pGoto,
	pPomocnik,
	pCmarenje,
	pImunitet,
	pImunitett,
	pVip,
	pPridruzeneventu,
	pLottoNr,
    pUbistava,
    pSmrti,
    pLevel,
    pSkin,
	pGodine,
	pDrzava,
	pSex,
	pTutorial,
	pEmail[128],
	pLider,
	pClan,
	pRank,
	pBonus,
	pWar,
	pSkinuto,
	pUfbi,
	pMutiran,
	pNovacBanka,
	pWarn,
	pBankovniRacun,
	pZatvor,
	pJailed,
	pZatvorenVreme,
	pMutiranVreme,
	pExp,
	pPozvan,
	pTrazeniLevel,
	pUhapsenPuta,
	pDroga,
	pMats,
	pPayDayPoeni,
	pSatiIgre,
	pIznosRate,
	pIznosKredita,
	Float:pCistacX,
	Float:pCistacY,
	Float:pCistacZ,
	pPreostaloZaOtplatu,
	pADozvola,
	pKamionDozvola,
	pAvionDozvola,
	pMotorDozvola,
	pBrodDozvola,
	pGunDozvola,
	pPosedovanjeFirme,
	pMobilni,
	pKartica,
	pImenik,
	pMobKredit,
	pCigare,
	pUpaljac,
	pKanap,
	pPovez,
	pNaocare,
	pSat,
	pBorbeniStil,
	pPosao,
	pHrana,
	pRadio,
	pPosedovanjeKuce,
	pProveraSpawna,
	pRent,
	pPosedovanjeStana,
	pPosedovanjeVikendice,
	pOrgUgovor,
	pPosaoUgovor,
	pPosedovanjeAuta,
	pPosedovanjeAuta2,
	pDzeparosVreme,
	pPosedovanjeMotora,
	pKaciga,
	pRadi,
	pPosedovanjeBicikla,
	pPosedovanjeAviona,
	pPosedovanjePlovila,
	pRobbankVreme,
	pKonopacVreme,
	pPovezVreme,
	pElektricarVreme,
	pZlato,
	pAlat,
	pRegDozvola,
    pLastSeen[50],
	pPistSkill,
	pSilenSkill,
	pDesertSkill,
    pShotgSkill,
	pSawnSkill,
	pCombSkill,
	pUziSkill,
	pSmgSkill,
	pAkSkill,
	pM4Skill,
	pSnipSkill,
	pAttach1,
	pAttach2,
	pAttach3,
	pAttach4,
	pAttach5,
	pAttach6,
	pAttach7,
	pAttach8,
	pAttach9,
	pBone1,
	pBone2,
	pBone3,
	pBone4,
	pBone5,
	pBone6,
	pBone7,
	pBone8,
	pBone9
}
new PlayerInfo[MAX_PLAYERS][pInfo];
enum AC
{
	acWeapon[13],
	Acammo[13]
}
//-------------------------------------//
#define MAX_ATTACHS	9


enum AttachData
{
	attIndex,
	attModel,
	attBone,
	Float:attFOffsetX,
    Float:attFOffsetY,
	Float:attFOffsetZ,
	Float:attFRotX,
	Float:attFRotY,
	Float:attFRotZ,
	Float:attFScaleX,
	Float:attFScaleY,
	Float:attFScaleZ,
	attStatus
}
new AttachInfo[MAX_PLAYERS][MAX_ATTACHS][AttachData];

enum AttachmentEnum
{
    attachmodel,
    attachname[24]
}

new AttachmentObjects[][AttachmentEnum] = {
{18632, "Pecaljka"},
{18633, "Pajser 1"},
{18634, "Pajser 2"},
{18635, "Cekic"},
{18636, "Policiska Kapa 1"},
{18637, "Policiski Stit"},
{18638, "Radnicka Kapa"},
{18639, "Crna Kapa 1"},
{18640, "Kosa 1"},
{18975, "Kosa 2"},
{19136, "Kosa 3"},
{19274, "Kosa 4"},
{18641, "Lampa"},
{18642, "Soker 1"},
{18643, "Laser 1"},
{19080, "Laser 2"},
{19081, "Laser 3"},
{19082, "Laser 4"},
{19083, "Laser 5"},
{19084, "Laser 6"},
{18644, "Savciger"},
{18865, "Mobilni Telefon 2"},
{18866, "Mobilni Telefon 3"},
{18867, "Mobilni Telefon 4"},
{18868, "Mobilni Telefon 5"},
{18869, "Mobilni Telefon 6"},
{18870, "Mobilni Telefon 7"},
{18871, "Mobilni Telefon 8"},
{18872, "Mobilni Telefon 9"},
{18873, "Mobilni Telefon 10"},
{18874, "Mobilni Telefon 11"},
{18891, "Bandana 1"},
{18892, "Bandana 2"},
{18893, "Bandana 3"},
{18894, "Bandana 4"},
{18895, "Bandana 5"},
{18896, "Bandana 6"},
{18897, "Bandana 7"},
{18898, "Bandana 8"},
{18899, "Bandana 9"},
{18900, "Bandana 10"},
{18901, "Bandana 11"},
{18902, "Bandana 12"},
{18903, "Bandana 13"},
{18904, "Bandana 14"},
{18905, "Bandana 15"},
{18906, "Bandana 16"},
{18907, "Bandana 17"},
{18908, "Bandana 18"},
{18909, "Bandana 19"},
{18910, "Bandana 20"},
{18911, "Maska 1"},
{18912, "Maska 2"},
{18913, "Maska 3"},
{18914, "Maska 4"},
{18915, "Maska 5"},
{18916, "Maska 6"},
{18917, "Maska 7"},
{18918, "Maska 8"},
{18919, "Maska 9"},
{18920, "Maska 10"},
{18926, "Kapa 1"},
{18927, "Kapa 2"},
{18928, "Kapa 3"},
{18929, "Kapa 4"},
{18930, "Kapa 5"},
{18931, "Kapa 6"},
{18932, "Kapa 7"},
{18933, "Kapa 8"},
{18934, "Kapa 9"},
{18935, "Kapa 10"},
{18936, "Slem 1"},
{18937, "Slem 2"},
{18938, "Slem 3"},
{18939, "Kapa 11"},
{18940, "Kapa 12"},
{18941, "Kapa 13"},
{18942, "Kapa 14"},
{18943, "Kapa 15"},
{18944, "Sesir 5"},
{18945, "Sesir 6"},
{18946, "Sesir 7"},
{18947, "Sesir 8"},
{18948, "Sesir 9"},
{18949, "Sesir 10"},
{18950, "Sesir 11"},
{18951, "Sesir 12"},
{18952, "Boks Kapa"},
{18953, "Natikaca 1"},
{18954, "Natikaca 2"},
{18955, "Kapa 6"},
{18956, "Kapa 7"},
{18957, "Kapa 8"},
{18958, "Kapa 9"},
{18959, "Kapa 10"},
{18961, "Kapa 16"},
{18962, "Sesir 13"},
{18963, "CJ Glava"},
{18964, "Cool Kapa 1"},
{18965, "Cool Kapa 2"},
{18966, "Cool Kapa 3"},
{18967, "Ribarska kapa 1"},
{18968, "Ribarska kapa 2"},
{18969, "Ribarska kapa3"},
{19006, "Naocare 1"},
{19007, "Naocare 2"},
{19008, "Naocare 3"},
{19009, "Naocare 4"},
{19010, "Naocare 5"},
{19011, "Naocare 6"},
{19012, "Naocare 7"},
{19013, "Naocare 8"},
{19014, "Naocare 9"},
{19015, "Naocare 10"},
{19016, "Naocare 11"},
{19017, "Naocare 12"},
{19018, "Naocare 13"},
{19019, "Naocare 14"},
{19020, "Naocare 15"},
{19021, "Naocare 16"},
{19022, "Naocare 17"},
{19023, "Naocare 18"},
{19024, "Naocare 19"},
{19025, "Naocare 20"},
{19026, "Naocare 21"},
{19027, "Naocare 22"},
{19028, "Naocare 23"},
{19029, "Naocare 24"},
{19030, "Naocare 25"},
{19031, "Naocare 26"},
{19032, "Naocare 27"},
{19033, "Naocare 28"},
{19034, "Naocare 29"},
{19035, "Naocare 30"},
{19036, "Hokej Maska 1"},
{19037, "Hokej Maska 2"},
{19038, "Hokej Maska 3"},
{19039, "Sat 1"},
{19040, "Sat 2"},
{19041, "Sat 3"},
{19042, "Sat 4"},
{19043, "Sat 5"},
{19044, "Sat 6"},
{19045, "Sat 7"},
{19046, "Sat 8"},
{19047, "Sat 9"},
{19048, "Sat 10"},
{19049, "Sat 11"},
{19050, "Sat 12"},
{19051, "Sat 13"},
{19052, "Sat 14"},
{19053, "Sat 15"},
{19095, "Sesir 1"},
{19096, "Sesir 2"},
{19097, "Sesir 3"},
{19098, "Sesir 4"},
{19099, "Policiska kapa 2"},
{19100, "Policiska kapa 3"},
{19101, "Vojni slem 1"},
{19102, "Vojni slem 2"},
{19103, "Vojni slem 3"},
{19104, "Vojni slem 4"},
{19105, "Vojni slem 5"},
{19106, "Vojni slem 6"},
{19107, "Vojni slem 7"},
{19108, "Vojni slem 8"},
{19109, "Vojni slem 9"},
{19110, "Vojni slem 10"},
{19111, "Vojni slem 11"},
{19112, "Vojni slem 12"},
{19137, "CBall kapa 1"},
{19138, "Policiske naocare 1"},
{19139, "Policiske naocare 2"},
{19140, "Policiske naocare 3"},
{19141, "SWAT Slem 1"},
{19142, "SWAT Armor 1"},
{19161, "Policiska kapa 1"},
{19162, "Policiska kapa 2"},
{19317, "Gitara 1"},
{19318, "Gitara 2"},
{19319, "Gitara 3"},
{19347, "Znacka"},
{18655, "Svetlo 1"},
{18654, "Svetlo 2"},
{18653, "Svetlo 3"},
{18646, "Svetlo 4"},
{19306, "Crvena zastava"},
{19307, "Plava zastava"},
{19773, "Holster"},
{2919, "Crna Torba 1"},
{19163, "Fantomka 1"},
{19624, "Kofer 1"},
{1210, "Kofer 2"},
{11738, "Prva Pomoc"},
{19847, "Batak"},
{2880, "Burger"},
{2804, "Meso"},
{2703, "Burger 2"},
{11712, "Krst"},
{11715, "Viljuska"},
{11716, "Noz"},
{11746, "Kljuc"},
{11749, "Lisice"},
{19528, "Sesir 14"},
{19559, "Torba"},
{19583, "Noz"},
{19610, "Mirkofon"},
{19627, "Kljuc"},
{19631, "Cekic 2"},
{19778, "Bodz 1"},
{19779, "Bodz 2"},
{19780, "Bodz 3"},
{19781, "Bodz 4"},
{19582, "Bodz 5"},
{19783, "Bodz 6"},
{19784, "Bodz 7"},
{19785, "Bodz 8"},
{19914, "Palica"},
{19942, "Radio"},
{334, "Pendrek"},
{19904, "Pancir"},
{19521, "Policiska kapa"}
};

new AttachmentBones[][24] = {
{"Kicma"},
{"Glava"},
{"Lijeva nadlaktica"},
{"Desna nadlaktica"},
{"Lijeva ruka"},
{"Desna ruka"},
{"Lijeva butina"},
{"Desna butina"},
{"Lijeva noga"},
{"Desna noga"},
{"Lijevi list"},
{"Desni list"},
{"Lijeva podlaktica"},
{"Desna podlaktica"},
{"Lijevo rame"},
{"Desno rame"},
{"Vrat"},
{"Vilica"}
};

new PUAttach[MAX_PLAYERS];
new UseAttach1[MAX_PLAYERS];
new UseAttach2[MAX_PLAYERS];
new UseAttach3[MAX_PLAYERS];
new UseAttach4[MAX_PLAYERS];
new UseAttach5[MAX_PLAYERS];
new UseAttach6[MAX_PLAYERS];
new UseAttach7[MAX_PLAYERS];
new UseAttach8[MAX_PLAYERS];
new UseAttach9[MAX_PLAYERS];


///////////////////////////////////////////
new bool:InputPassword[ MAX_PLAYERS ],
	bool:ChoseCountry[ MAX_PLAYERS ],
	bool:InputAge[ MAX_PLAYERS ],
	bool:InputMail[ MAX_PLAYERS ],
	RegSex[ MAX_PLAYERS ];
///////////////////////////////////////////
enum zlInfo
{
	zPocinio[MAX_PLAYER_NAME],
	zPrijavio[MAX_PLAYER_NAME],
	zZlocin[64],
};
new ZlocinInfo[MAX_PLAYERS][zlInfo];
new
        xCharacters[][] =
        {
            "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
                "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
            "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
                "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
            "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"
        },
        xChars[16] = "",
        xCash,
        bool: xTestBusy
;
////////////////////////////////////////////
enum Server
{
	isRegistracija,
	isOglas,
	isPitanja,
	isReport,
	isdozvolakupovine
};
new ServerInfo[Server];
////////////////////////////////////////////////////
enum Org
{
	TvfDroga,
	BdtDroga,
	GsfDroga,
	CondorDroga,
	PoDroga,
	Po2Droga,
    Po3Droga,
	Po4Droga,
	TvfMats,
	TECDroga,
	TECNovac,
	TECOruzije,
	BdtMats,
	GsfMats,
	CondorMats,
	PoMats,
	Po2Mats,
	Po3Mats,
	Po4Mats,
	TvfNovac,
	BdtNovac,
	GsfNovac,
	CondorNovac,
	PoNovac,
	Po2Novac,
	Po3Novac,
	Po4Novac,
	TvfMasina,
	BallasDroga,
	BallasMats,
	BallasNovac,
	CondorOruzije,
	PoOruzije,
	BallasOruzije,
	BaseDroga,
	BaseMats,
	BaseNovac,
	BaseOruzije,
	LCNOruzije,
	LCNNovac,
	LCNDroga,
	LCNMats,
	RbNovac,
	RbDroga,
	RbMats,
	LSPDClanovi,
	DrzavaNovac,
	PSSef,
	SmithNovac,
	SmithDroga,
	SmithMats,
	LCSNovac,
	LCSDroga,
    LCSMats,
   	TCNovac,
	TCDroga,
	TCMats
};
new OrgInfo[Org];
//////////////////////////////////////////////////
#define MAX_FIRMI 100
enum Firme
{
	fSQLID,
	fImaVlasnika,
	fVlasnik[MAX_PLAYER_NAME],
	fVrsta,
	fNaziv[64],
	fIznuda[64],
	Float:fUlazX,
	Float:fUlazY,
	Float:fUlazZ,
	Float:fIzlazX,
	Float:fIzlazY,
	Float:fIzlazZ,
	fNeaktivnost,
	fLevel,
	fCena,
	fKasa,
	fInt,
	fZatvoreno,
	fProizvodi,
	fMaxProizvodi,
	fVW
};
new FirmaInfo[MAX_FIRMI][Firme];
new UsaoFirma[MAX_PLAYERS];
new FirmaPickup[sizeof(FirmaInfo)];
new Text3D:FirmaLabel[sizeof(FirmaInfo)];
/////////////////////////////////////////////////
new nvozilo[MAX_PLAYERS];
enum gepek
{
	gOruzije,
	gMunicija,
	gNovac,
};
new GepekInfo[MAX_VEHICLES][gepek];

////////////////////////////////////////////////////////////
enum gInfo 
{
	gSQLID,
    gOwned,
    gPrice,
    gOwner[MAX_PLAYER_NAME],
    gType,
    gLocked,
    gMoney,
    Float:gEntranceX,
    Float:gEntranceY,
    Float:gEntranceZ,
    Float:gEntranceA,
    Float:gExitX,
    Float:gExitY,
    Float:gExitZ,
    Float:gExitA,
    gInt,
    gWorld,
    gInsideInt,
    gInsideWorld,
    gInsideIcon,
    gOutsideIcon,
    gName[128]
}
new GarageInfo[200][gInfo];
new Text3D:GarageText[200];
new InsideGarage[MAX_PLAYERS];

//___________________________________________________________//
#define MAX_KUCA 350
enum Kuce
{
	kSQLID,
	kProveraVlasnika,
	kVlasnik[MAX_PLAYER_NAME],
	kVrsta[35],
	Float:kUlazX,
	Float:kUlazY,
	Float:kUlazZ,
	Float:kIzlazX,
	Float:kIzlazY,
	Float:kIzlazZ,
	kNeaktivnost,
	kLevel,
	kCena,
    kNovac,
	kInt,
	kZatvoreno,
	kVW,
	kOruzije,
	kMunicija,
	kRent,
	kCenaRenta,
	kZvono,
	kFrizder,
	kMats,
	kDroga,
	kOdjeca,
	kVrstaIntKuce,
	kHrana,
	kNaziv[64],
 //Namestaj
	ObjectID[MAX_FURNITURE],
	Float:ObjectPosX[MAX_FURNITURE],
	Float:ObjectPosZ[MAX_FURNITURE],
	Float:ObjectPosY[MAX_FURNITURE],
	Float:ObjectPosRX[MAX_FURNITURE],
	Float:ObjectPosRY[MAX_FURNITURE],
	Float:ObjectPosRZ[MAX_FURNITURE]
};
new KucaInfo[MAX_KUCA][Kuce],
 KucaPickup[sizeof(KucaInfo)],
 Text3D:KucaLabel[sizeof(KucaInfo)],
 FurnObject[MAX_PLAYERS],
 FurnID[MAX_PLAYERS],
 HouseObject[MAX_KUCA][MAX_FURNITURE],
 PlayerEditSlot[MAX_PLAYERS];
//////////////////////////////////////////
#define MAX_STANOVA 1500
enum Stan
{
	sSQLID,
	sProveraVlasnika,
	sVlasnik[45],
	Float:sUlazX,
	Float:sUlazY,
	Float:sUlazZ,
	Float:sIzlazX,
	Float:sIzlazY,
	Float:sIzlazZ,
	sNeaktivnost,
	sLevel,
	sCena,
    sNovac,
	sInt,
	sZatvoreno,
	sVW,
	sOruzije,
	sMunicija
};
new StanInfo[MAX_STANOVA][Stan];
new StanPickup[sizeof(StanInfo)];
new Text3D:StanLabel[sizeof(StanInfo)];
/////////////////////////////////////////////////////
#define MAX_VIKENDICA 1500
enum Vikendica
{
	vSQLID,
	viProveraVlasnika,
	viVlasnik[45],
	Float:viUlazX,
	Float:viUlazY,
	Float:viUlazZ,
	Float:viIzlazX,
	Float:viIzlazY,
	Float:viIzlazZ,
	viNeaktivnost,
	viLevel,
	viCena,
    viNovac,
	viInt,
	viZatvoreno,
	viVW,
	viDroga,
	viMats
};
new VikendiceInfo[MAX_VIKENDICA][Vikendica];
new VikendicaPickup[sizeof(VikendiceInfo)];
new Text3D:VikendicaLabel[sizeof(VikendiceInfo)];
///////////////////////////////////////////////////////////////////////
#define ATM_OBJEKAT                       2942
#define MAX_ATM                           50
enum ATM
{
	banSQLID,
    aPostavljen,
    Float:aX,
    Float:aY,
    Float:aZ,
    Float:aAngle,
    aObjekat,
    aInt,
    aVW,
    Text3D:aAtmLabel
}
new randlottopare[MAX_PLAYERS];
new Number;
new AtmInfo[MAX_ATM][ATM];
static pmodelid[MAX_PLAYERS];
static pvehicleid[MAX_PLAYERS];
new giftCounter;
new Gift[MAX_GIFTS];
new RandomModel[5][1] = {
	{19054},
	{19055},
	{19056},
	{19057},
	{19058}
};
new spoiler[20][0] =
{
	{1000}, {1001}, {1002}, {1003}, {1014}, {1015}, {1016}, {1023}, {1058}, {1060}, {1049}, {1050},
	{1138}, {1139}, {1146}, {1147}, {1158}, {1162}, {1163}, {1164}
};

new nitro[3][0] =
{
    {1008},
    {1009},
    {1010}
};

new fbumper[23][0] =
{
    {1117}, {1152}, {1153}, {1155}, {1157}, {1160}, {1165},{1167}, {1169}, {1170}, {1171}, {1172}, {1173},
    {1174}, {1175}, {1179}, {1181}, {1182}, {1185}, {1188}, {1189}, {1192}, {1193}
};

new rbumper[22][0] =
{
    {1140}, {1141}, {1148}, {1149}, {1150}, {1151}, {1154}, {1156}, {1159}, {1161},
    {1166}, {1168}, {1176}, {1177}, {1178}, {1180}, {1183}, {1184}, {1186}, {1187},
    {1190}, {1191}
};

new exhaust[29][0] =
{
    {1018}, {1019}, {1020}, {1021}, {1022}, {1028}, {1029}, {1037}, {1043}, {1044},
    {1045}, {1046}, {1059}, {1064}, {1065}, {1066}, {1089}, {1092}, {1104}, {1105},
    {1113}, {1114}, {1126}, {1127}, {1129}, {1132}, {1135}, {1136}, {1034}
};

new bventr[2][0] =
{
    {1042}, {1044}
};

new bventl[2][0] =
{
    {1043}, {1045}
};

new bscoop[4][0] =
{
	{1004}, {1005}, {1011}, {1012}
};

new rscoop[13][0] =
{
    {1006}, {1032}, {1033}, {1035}, {1038}, {1053}, {1054}, {1055}, {1061}, {1067},
    {1068}, {1088}, {1091}
};

new lskirt[21][0] =
{
    {1007}, {1026}, {1031}, {1036}, {1039}, {1042}, {1047}, {1048}, {1056},
    {1057}, {1069}, {1070}, {1090}, {1093}, {1106}, {1108}, {1118}, {1119},
    {1133}, {1122}, {1134}
};

new rskirt[21][0] =
{
    {1017}, {1027}, {1030}, {1040}, {1041}, {1051}, {1052}, {1062}, {1063},
    {1071}, {1072}, {1094}, {1095}, {1099}, {1101}, {1102}, {1107}, {1120},
    {1121}, {1124}, {1137}
};

new hydraulics[1][0] =
{
    {1087}
};

new base2[1][0] =
{
    {1086}
};

new rbbars[2][0] =
{
    {1109}, {1110}
};

new fbbars[2][0] =
{
    {1115}, {1116}
};

new wheels[17][0] =
{
    {1025}, {1073}, {1074}, {1075}, {1076}, {1077}, {1078}, {1079}, {1080},
    {1081}, {1082}, {1083}, {1084},  {1085}, {1096}, {1097}, {1098}
};

new tunelights[2][0] =
{
	{1013}, {1024}
};
new Float:prevVehicleHealth[MAX_PLAYERS];
new Naruciubistvo[MAX_PLAYERS];
new Pasos[MAX_PLAYERS];
new Pismeni[MAX_PLAYERS];
new Ppopravi[MAX_PLAYERS];
new Opree[MAX_PLAYERS];
new OpstinOpljackana;
new ZlatarOpljackana;
new DupliRespekti;
new PljackaVrijeme[MAX_PLAYERS];
new WarTrajanje;
new vozact[MAX_PLAYERS];
new taxit[MAX_PLAYERS];
new taxicena[MAX_PLAYERS];
new PozvaoTaxi[MAX_PLAYERS];
//////////////////////////////////////////////////////////////////////
#define MAX_PLOVILA      900
enum plInfo
{
	plModel,
    Float:plPozX,
    Float:plPozY,
    Float:plPozZ,
    Float:plPozA,
    plBoja1,
    plBoja2,
    plVlasnik[60],
    plImaVlasnika,
	plID,
	plZakljucan,
	plCijena,
	plSpawn

}
new PlovilaInfo[MAX_PLOVILA][plInfo];
new Float:RandomPlovilaSpawn[5][4] =
{
	{271.1502,-1927.8934,1.0528,179.8750},
	{279.0280,-1928.0841,1.0528,181.6212},
	{286.9686,-1928.1747,1.0528,180.5379},
	{262.9707,-1927.9923,1.0528,180.1947},
	{294.0964,-1928.2909,1.0528,180.6209}
};
new Float:RandomPlovilaSpawnLV[4][4] =
{
	{1640.0568,588.3419,0.2767,356.0432},
	{1617.9056,588.4921,0.2273,0.2063},
	{1619.6868,571.9531,-0.4747,90.9467},
	{1636.9734,572.3179,-0.4364,276.7213}
};
new Float:RandomPlovilaPijacaSpawn[8][4] =
{
	{2547.1000977,-2253.6000977,0.0000000,270.0000000},
	{2547.0000000,-2261.6000977,0.0000000,270.0000000},
	{2582.3999023,-2256.0000000,0.0000000,178.0000000},
	{2573.8000488,-2255.8000488,0.0000000,177.9949951},
	{2591.1000977,-2256.3999023,0.0000000,177.9949951},
	{2600.3000488,-2256.6999512,0.0000000,177.9949951},
	{2610.6999512,-2257.1000977,0.0000000,177.9949951},
	{2620.8999023,-2258.3000488,0.0000000,177.9949951}
};
new DropObject[MAX_DROP_ITEMS];
//=================//
enum dData
{
    DropGunAmmount[2],//ModelID & Bullets
    Float:DropGunPosX,
    Float:DropGunPosY,
    Float:DropGunPosZ,
    DropGunVWorld,
    DropGunInterior,
};
new DropInfo[MAX_DROP_ITEMS][dData];
new GunObjectIDs[200] ={

   1575,  331, 333, 334, 335, 336, 337, 338, 339, 341, 321, 322, 323, 324, 325, 326, 342, 343, 344, -1,  -1 , -1 ,
   346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 372, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367,
   368, 369, 1575
};
//===K zlata==//
new Float:KopacCheckPoints[9][6] = {
{596.50,944.50,-89.75},
{596.75,919.50,-91.90},
{612.25,890.75,-91.50},
{613.00,864.75,-93.00},
{624.25,835.00,-96.00},
{622.00,852.00,-94.00},
{602.75,900.00,-91.00},
{604.00,923.00,-91.75},
{592.00,940.00,-90.00}
};//
//=======================
//----------------------------------------------- [ Event Sistem ] ---------------------

new Float:gVORTEX[32][3] = {
{-2877.4558,327.9842,12.6793},
{-2893.1685,-356.1097,2.8224},
{-2929.5166,-752.6310,10.4297},
{-2911.3472,-908.7932,0.2907},
{-2949.9851,-1150.6403,0.8198},
{-3014.4448,-1365.0945,1.0526},
{-2960.2625,-1942.9016,0.4052},
{-2705.3147,-2156.6187,0.5942},
{-2659.2449,-2270.4944,5.6990},
{-2685.5054,-2403.3340,2.2550},
{-2657.9233,-2501.5227,11.3892},
{-2655.5059,-2634.7820,6.9508},
{-2444.3433,-2767.8281,2.6271},
{-2337.1096,-2790.8848,8.8936},
{-2103.7961,-2818.8181,2.2550},
{-1920.7834,-2759.3245,8.9217},
{-1687.4009,-2891.8101,0.1844},
{-1286.4886,-3015.4622,1.0432},
{-1145.7498,-2846.7651,0.4213},
{-1201.6666,-2579.3792,0.4448},
{-1244.7169,-2422.0369,0.4374},
{-1149.9225,-2193.6377,0.4852},
{-1264.2650,-1980.3899,0.4475},
{-1415.6458,-1687.0181,0.3931},
{-1645.6625,-1624.4104,0.3807},
{-1854.6431,-1497.9126,0.4457},
{-2080.1599,-1230.3290,0.2997},
{-2260.7571,-1024.9904,0.3936},
{-2432.2666,-870.3289,0.3304},
{-2639.8987,-971.8152,0.3809},
{-2749.3191,-1078.5820,15.0394},
{-2926.1597,-1207.9789,8.5278}
};

new Float:gDRIFT1[37][3] = {
{-331.4726,1317.1892,51.8621},
{-388.9670,1404.5604,40.6689},
{-428.2535,1443.3492,33.9389},
{-430.6893,1650.9321,35.5219},
{-404.2908,1910.7819,57.6953},
{-431.4308,1764.4843,71.6829},
{-477.5445,1946.8467,85.6874},
{-388.5322,2046.3987,62.5370},
{-410.0191,2075.7761,61.3117},
{-492.7551,1990.8907,59.8480},
{-617.9631,2053.7939,59.8461},
{-842.6879,2029.3726,59.8440},
{-865.7452,1892.6287,59.9326},
{-887.5961,1798.5608,59.9279},
{-1028.1371,1857.6259,60.1298},
{-1103.2057,1812.1613,43.7448},
{-1248.8043,1913.3915,42.4227},
{-1341.0527,2050.2566,52.9225},
{-1403.4902,2294.2556,54.8760},
{-1503.7133,2368.9651,49.5635},
{-1620.4043,2381.7000,49.8600},
{-1716.4526,2316.7710,31.7084},
{-1706.0095,2355.5789,49.5391},
{-1733.8942,2429.3440,68.4156},
{-1673.2996,2460.9170,84.7630},
{-1651.8269,2594.6787,81.2864},
{-1714.9331,2674.2024,62.1298},
{-1767.8363,2706.5618,59.0696},
{-1895.1704,2629.8252,49.6909},
{-2264.1536,2679.6121,54.9692},
{-2605.4282,2671.7380,75.5066},
{-2771.3796,2432.6541,90.6333},
{-2723.0281,2354.7314,71.4807},
{-2535.5720,2457.1843,17.9005},
{-2539.9397,2397.3694,14.3638},
{-2539.9282,2281.0752,4.4934},
{-2424.0762,2227.1582,4.6430}
};

new Float:gNRG[10][3] = {
{1408.9570,-1352.5127,8.1252},
{1368.6074,-1570.6552,8.2455},
{1362.9183,-1699.4833,8.1343},
{1596.7728,-1761.6859,3.5142},
{1849.2413,-1822.2478,3.5445},
{2070.7402,-1852.0706,3.5536},
{2533.4043,-1851.8652,2.7504},
{2599.5464,-1716.2312,1.2018},
{2622.2646,-1501.0272,15.6871},
{2804.4028,-1420.5986,15.8120}
};

new Float:gSacnchez2[8][3] = {
{-2361.7668,-2189.4280,33.5759},
{-2104.4705,-1883.9630,110.1925},
{-2470.9866,-2064.6853,135.6288},
{-2646.7646,-1729.5820,258.2361},
{-2582.3103,-1638.6969,347.5402},
{-2523.8325,-1689.6687,402.0617},
{-2447.2375,-1724.2310,431.2773},
{-2320.2327,-1638.2820,483.7031}
};

new Float:gMorski[24][3] = {
{705.6152,-3195.8086,14.3372},
{795.7244,-3225.8345,13.4520},
{1033.4116,-3369.5874,13.5679},
{627.1729,-3693.3452,14.4340},
{646.5905,-3605.0674,14.3910},
{711.2781,-3361.7334,14.3695},
{705.6152,-3195.8086,14.3372},
{795.7244,-3225.8345,13.4520},
{1033.4116,-3369.5874,13.5679},
{627.1729,-3693.3452,14.4340},
{646.5905,-3605.0674,14.3910},
{711.2781,-3361.7334,14.3695},
{705.6152,-3195.8086,14.3372},
{795.7244,-3225.8345,13.4520},
{1033.4116,-3369.5874,13.5679},
{627.1729,-3693.3452,14.4340},
{646.5905,-3605.0674,14.3910},
{711.2781,-3361.7334,14.3695},
{705.6152,-3195.8086,14.3372},
{795.7244,-3225.8345,13.4520},
{1033.4116,-3369.5874,13.5679},
{627.1729,-3693.3452,14.4340},
{646.5905,-3605.0674,14.3910},
{711.2781,-3361.7334,14.3695}
};

new Float:gKART[35][3] = {
{-2274.1938,2352.5476,4.0997},
{-2363.8984,2430.2944,7.4285},
{-2383.4006,2473.1328,7.4920},
{-2400.1353,2501.2561,11.0642},
{-2470.3337,2501.0813,16.2938},
{-2486.2439,2481.3159,17.3399},
{-2459.2007,2476.2468,15.4992},
{-2435.4556,2462.3354,13.0727},
{-2466.7288,2433.7344,14.6326},
{-2489.0862,2393.2292,14.3896},
{-2483.5537,2332.8862,4.1198},
{-2515.4727,2358.3237,4.2686},
{-2551.7661,2351.2964,4.2683},
{-2580.0408,2331.3950,4.6010},
{-2615.1348,2300.5581,7.4864},
{-2626.4421,2264.9475,7.4376},
{-2606.0857,2254.5269,7.4947},
{-2560.7739,2285.4609,4.2682},
{-2477.9700,2240.3501,4.1276},
{-2427.7073,2212.5151,4.2678},
{-2373.9365,2214.7458,4.2683},
{-2414.0410,2225.1902,4.2683},
{-2430.5337,2299.7407,4.2675},
{-2350.4492,2359.5750,4.3553},
{-2400.6064,2432.6118,10.1244},
{-2434.1228,2460.1130,13.0696},
{-2435.0007,2513.7168,13.3286},
{-2510.3181,2525.5264,17.9716},
{-2519.9104,2513.7273,18.1082},
{-2512.3062,2502.5886,18.1744},
{-2400.8547,2501.6636,11.1243},
{-2396.1592,2479.9033,9.5646},
{-2260.8237,2373.0591,4.3424},
{-2224.6191,2348.5139,4.2700},
{-2188.1765,2408.2825,4.2545}
};

new Float:gQUAD2[27][3] = {
{-2546.1438,-1496.1924,358.7686},
{-2574.0737,-1502.2365,358.6871},
{-2555.1948,-1447.6212,354.9184},
{-2421.9507,-1355.9407,336.7443},
{-2344.4485,-1321.7269,311.0970},
{-2340.3748,-1288.7635,309.1430},
{-2499.6794,-1271.2932,274.5565},
{-2563.3723,-1349.7533,265.3881},
{-2653.3127,-1386.3483,256.4097},
{-2662.5291,-1339.0300,245.3289},
{-2612.5952,-1231.6809,209.4556},
{-2575.0330,-1166.4513,187.3108},
{-2518.3350,-1136.3287,177.9933},
{-2533.3945,-1114.2214,176.5538},
{-2619.7085,-1157.5526,169.6420},
{-2747.0645,-1374.9272,143.9963},
{-2768.8694,-1639.5679,141.0767},
{-2778.1550,-1699.2267,141.2497},
{-2820.5291,-1806.6600,138.6241},
{-2813.6135,-1860.8002,122.0320},
{-2760.1284,-1912.9965,114.3252},
{-2671.9614,-1983.0370,94.0523},
{-2638.8979,-2170.7583,70.1853},
{-2514.1204,-2134.3914,53.9275},
{-2394.3562,-2139.8757,53.5083},
{-2335.4263,-2162.0896,42.0341},
{-2368.4395,-2192.3345,33.1349}
};

new Float:gQUAD[28][3] = {
{-2563.8455,-1507.4001,358.5058},
{-2577.2019,-1472.7889,358.4970},
{-2513.9290,-1419.9513,347.7614},
{-2439.1836,-1381.5688,335.2477},
{-2305.6624,-1345.7375,297.0228},
{-2249.7014,-1341.1055,274.7868},
{-2292.0691,-1279.2002,256.9989},
{-2338.9463,-1251.2589,240.0871},
{-2252.8416,-1284.5221,226.4850},
{-2427.0210,-1160.4713,184.2305},
{-2524.1409,-1130.9763,177.9583},
{-2599.3843,-1176.3071,192.4554},
{-2666.7781,-1348.5331,247.3667},
{-2710.1404,-1485.2551,291.3923},
{-2599.8997,-1615.8002,341.9313},
{-2583.7813,-1657.2732,350.6854},
{-2544.8586,-1801.1155,373.1238},
{-2549.8921,-1766.8033,382.0579},
{-2556.7839,-1675.7717,397.2978},
{-2516.8867,-1743.1743,401.4614},
{-2441.7839,-1809.5182,409.8407},
{-2458.7390,-1740.1329,425.2882},
{-2419.8137,-1751.5237,433.0191},
{-2280.1406,-1723.9487,470.9093},
{-2305.6597,-1662.7915,483.1450},
{-2312.6543,-1633.3802,483.1811},
{-2291.4580,-1655.2102,482.5912},
{-2269.5078,-1695.5411,479.5316}
};

new Float:gRelly2[39][3] = {
{313.0738,-683.9000,6.1852},
{330.1048,-548.5929,11.5119},
{365.4064,-442.8465,24.9220},
{335.5322,-363.5023,11.6408},
{417.3832,-301.5121,7.7668},
{518.6606,-219.6527,15.2768},
{767.9618,-136.6013,20.5243},
{997.1193,-80.3451,21.6477},
{1199.5204,-90.5920,38.8528},
{1260.3523,-147.0946,38.3409},
{1363.4813,-210.4161,7.6579},
{1550.2976,-144.1666,17.3716},
{1534.3289,91.0788,29.0576},
{1498.4419,159.3525,30.7005},
{1170.3807,304.6570,18.0901},
{987.2738,164.4669,28.1538},
{796.9722,215.5409,35.7512},
{532.2614,155.4615,23.8305},
{545.3138,-16.3393,27.4382},
{719.8311,-2.4567,35.5716},
{891.2003,10.7466,91.1057},
{1090.9237,2.1184,70.1712},
{1260.2560,83.5434,21.8747},
{1445.0236,188.4951,22.9688},
{1587.2749,263.3284,16.0987},
{1756.9965,202.8558,25.4233},
{2097.7024,98.8158,30.6302},
{2210.9553,87.4579,25.9307},
{2388.6055,85.9599,26.2005},
{2608.5203,38.1451,26.1500},
{2710.3118,-65.2907,42.1138},
{2654.2920,-328.8899,47.2968},
{2736.6240,-511.3683,50.0167},
{2762.0603,-652.1751,62.9565},
{2757.0615,-841.1254,38.8759},
{2655.2402,-963.4670,78.7171},
{2531.4172,-971.1289,81.6214},
{2405.5537,-973.1158,75.9478},
{2337.8755,-1036.5385,52.8025}
};

new Float:RibRand[12][3] =
{
{3050.80005, -1976.90002, 0.0000 },
{3171.8999, -1983.09998, 0.0000 },
{3253.3999, -1852.5, 0.0000 },
{3388.5, -1898.19995, 0.0000 },
{3405.6001, -1981.09998, 0.0000 },
{3355.00001, -1756.5, 0.0000 },
{2993.5, -1590.19995, 0.0000 },
{3277.59961, -1610.39941, 0.0000 },
{3233.59961, -1554.89941, 0.0000 },
{3147.09961, -1502.19922, 0.0000 },
{3072.19922, -1504.19922, 0.0000},
{2952.30005, -1782.0000, 0.00000}
};

new Float:gRelly[57][3] = {
{-1925.1014,-2435.2253,30.3305},
{-1835.5861,-2349.0774,32.5943},
{-1693.8379,-2300.3840,43.5644},
{-1683.4353,-2121.6892,36.7781},
{-1823.7947,-2089.1387,55.7092},
{-1964.8224,-2056.9670,73.6673},
{-1984.5386,-2008.2151,80.9230},
{-1927.5936,-1936.8187,78.6125},
{-1705.5056,-1915.0463,98.5352},
{-1559.1273,-1890.2921,81.1248},
{-1532.4099,-1823.2727,64.4761},
{-1479.9725,-1781.4946,50.7670},
{-1442.7535,-1838.7336,41.0056},
{-1421.8889,-2000.7012,9.1428},
{-1389.2802,-2059.7949,7.7629},
{-1312.1051,-2070.0608,22.3254},
{-1285.0177,-2209.2229,21.7494},
{-1242.2401,-2312.6433,19.1646},
{-1128.6604,-2370.6001,29.7160},
{-960.3499,-2355.9724,61.6178},
{-959.5837,-2284.2332,53.4012},
{-952.9464,-2199.4082,39.2915},
{-885.0292,-2183.5425,28.0226},
{-807.5110,-2172.4399,21.4337},
{-802.2761,-2083.5737,24.3619},
{-856.1570,-1955.7111,14.3752},
{-778.4379,-1873.4130,11.5694},
{-676.8055,-1875.7080,8.5544},
{-675.7490,-1963.7230,19.9979},
{-642.0883,-2024.3364,29.4884},
{-528.6448,-2030.6731,51.5415},
{-448.7393,-1975.9550,25.6154},
{-406.9102,-1917.5901,5.7078},
{-334.4812,-1911.4904,11.5391},
{-272.0948,-1980.5378,29.2870},
{-261.1133,-2078.4768,37.0462},
{-248.7042,-2153.8889,28.9903},
{-233.8040,-2234.1248,28.8711},
{-253.6564,-2254.6606,27.9900},
{-304.9010,-2252.5256,29.2257},
{-380.4303,-2256.1030,43.8299},
{-476.2809,-2267.9802,41.8371},
{-588.9582,-2381.5872,27.7255},
{-665.3437,-2501.3513,39.4040},
{-732.0746,-2648.8586,82.8434},
{-815.5640,-2682.1406,92.3543},
{-885.3950,-2667.1790,94.5925},
{-989.8499,-2680.0063,59.7413},
{-1132.1111,-2659.2417,16.3824},
{-1218.3339,-2637.4268,9.5742},
{-1344.5605,-2630.7556,19.9803},
{-1491.7957,-2633.7671,45.3364},
{-1589.2501,-2631.2759,53.0222},
{-1717.1071,-2573.7612,18.3893},
{-1822.7600,-2464.8191,24.7051},
{-1887.2577,-2428.8916,32.5469},
{-1945.8682,-2462.2087,30.5747}
};


new Float:gJETMAX[23][3] = {
{1878.5844,-77.7029,-0.5101},
{1726.0803,-13.9029,-0.4865},
{1612.6638,-115.7606,-0.4212},
{1417.7321,-251.2797,-0.4623},
{1174.0161,-116.1315,-0.5025},
{966.9347,-121.9781,-0.4247},
{737.8581,-200.9102,-0.5107},
{542.7610,-245.2343,-0.4960},
{360.1682,-307.2303,-0.5391},
{148.2456,-418.3948,-0.4673},
{-41.5266,-600.1201,-0.4558},
{-174.1612,-719.3446,-0.4707},
{-99.3364,-889.5696,-0.5035},
{37.2309,-906.4547,-0.5338},
{65.8771,-1056.3616,-0.3118},
{58.9911,-1278.8127,-0.4429},
{45.8067,-1353.7440,-0.4870},
{43.0755,-1545.7151,-0.4829},
{-76.9635,-1646.9235,-0.3451},
{-209.1236,-1841.7670,-0.4358},
{-299.8962,-1857.9659,-0.4059},
{-365.2315,-1864.7280,-0.3665},
{-446.6908,-1883.3351,-0.5839}
};

new Float:gRACE[56][3] = {
{-1557.3826,926.5211,6.9337},
{-1656.3866,925.1031,22.8082},
{-1752.3472,924.1346,24.6409},
{-1794.0951,1007.4344,24.6289},
{-1793.4614,1078.0341,44.3836},
{-1794.0876,1147.0785,34.8955},
{-1862.1740,1178.4789,43.5002},
{-1934.1008,1176.8026,45.1914},
{-1966.4216,1135.8920,49.8814},
{-1972.5553,1074.3538,55.4648},
{-1994.6687,1048.1876,55.4612},
{-2007.2377,948.8363,45.1914},
{-2037.6505,946.7137,49.6644},
{-2088.9919,941.4039,69.5086},
{-2131.4646,919.3971,79.7463},
{-2140.5645,1098.4977,79.7410},
{-2212.4500,1177.8737,55.4725},
{-2262.0771,1109.7119,77.6827},
{-2260.2617,644.1404,49.1905},
{-2053.3967,563.3163,34.9098},
{-2004.1913,793.5469,45.1912},
{-1946.3163,843.1717,40.9009},
{-1900.0808,765.1602,44.2578},
{-1973.6628,732.8857,45.1914},
{-2065.1147,732.5994,64.0983},
{-2088.0103,703.3538,69.2866},
{-2087.7983,622.9579,52.0773},
{-2025.9307,565.6592,34.9101},
{-1995.8201,598.8995,34.9168},
{-1810.5465,605.5506,34.9101},
{-1740.1923,607.3470,24.6368},
{-1713.7831,713.6169,24.6326},
{-1666.0315,731.2742,18.4941},
{-1559.3718,688.7055,6.9336},
{-1561.6752,515.7045,6.9257},
{-1706.4926,348.3598,6.9256},
{-1792.5792,354.4253,16.6145},
{-1853.4481,407.4475,16.9058},
{-1972.4189,345.0302,34.2372},
{-2006.4377,249.2237,29.7934},
{-2038.2186,109.5417,28.3212},
{-2220.8262,103.7289,35.2149},
{-2254.0591,176.3750,35.0664},
{-2132.3562,208.3339,35.1885},
{-2041.0281,220.3917,35.4842},
{-1954.8378,225.9915,32.8679},
{-1891.1798,147.6028,38.0984},
{-1864.7363,166.2910,38.1566},
{-1825.9028,315.5803,20.3818},
{-1739.4420,288.3435,7.0820},
{-1754.5166,187.9117,3.4481},
{-1750.1827,35.9556,3.4492},
{-1749.8472,-112.4061,3.4492},
{-1801.2119,-199.8998,15.0665},
{-1823.5304,-541.9139,15.3304},
{-1617.0463,-504.9920,8.6179}
};


new Float:gDRIFT2[57][3] = {
{-2437.1638,-585.8436,130.8380},
{-2460.0820,-515.1210,110.5789},
{-2535.0454,-489.0289,82.7235},
{-2609.7407,-500.9760,72.1585},
{-2571.8699,-470.4286,67.8751},
{-2455.7256,-427.5012,83.4474},
{-2366.4736,-448.6220,81.0073},
{-2320.2849,-446.4856,79.4737},
{-2374.8574,-383.0163,76.3888},
{-2571.1953,-368.2228,49.1926},
{-2673.5061,-416.7704,31.8886},
{-2669.3218,-496.8978,20.3238},
{-2730.0325,-522.0938,8.2047},
{-2819.9963,-445.3162,6.7661},
{-2817.7910,-356.7486,6.7583},
{-2740.1023,-322.0146,6.7661},
{-2659.5835,-242.2678,5.4538},
{-2656.1477,-118.3424,3.7717},
{-2516.6963,-71.1651,23.4989},
{-2418.4883,-22.5155,34.8989},
{-2455.0735,79.9970,30.7860},
{-2563.8271,93.1236,7.0332},
{-2603.6045,115.1935,3.9106},
{-2561.4004,187.6986,5.4310},
{-2658.9836,218.2783,3.9068},
{-2706.8940,244.8471,3.9068},
{-2779.1187,287.5506,6.2395},
{-2852.8838,356.3065,4.0786},
{-2826.7825,563.3486,5.1149},
{-2867.4043,765.2027,32.2411},
{-2828.7385,952.3882,43.6409},
{-2813.1948,1267.2654,5.1804},
{-2514.5994,1373.6814,6.7661},
{-2457.4426,1297.9852,19.2879},
{-2539.5588,1248.0157,34.7427},
{-2712.5984,1101.8197,45.1441},
{-2753.3340,909.5503,62.8618},
{-2753.0718,767.3282,53.9614},
{-2748.0400,540.4747,12.5986},
{-2710.3250,490.8701,5.4419},
{-2793.9573,466.7638,5.1423},
{-2856.2949,378.1397,4.0786},
{-2811.2673,285.5636,6.7583},
{-2823.9724,-397.7095,6.7661},
{-2730.0325,-522.0938,8.2047},
{-2669.3218,-496.8978,20.3238},
{-2673.5061,-416.7704,31.8886},
{-2571.1953,-368.2228,49.1926},
{-2374.8574,-383.0163,76.3888},
{-2320.2849,-446.4856,79.4737},
{-2366.4736,-448.6220,81.0073},
{-2455.7256,-427.5012,83.4474},
{-2571.8699,-470.4286,67.8751},
{-2609.7407,-500.9760,72.1585},
{-2535.0454,-489.0289,82.7235},
{-2460.0820,-515.1210,110.5789},
{-2437.1638,-585.8436,130.8380}
};
//////////////////////////////////////////////////////////////////////
#define MAX_BICIKALA      450
enum biInfo
{
	biModel,
    Float:biPozX,
    Float:biPozY,
    Float:biPozZ,
    Float:biPozA,
    biBoja1,
    biBoja2,
    biVlasnik[60],
    biImaVlasnika,
	biID,
	biZakljucan,
	biCijena
}
new BiciklaInfo[MAX_BICIKALA][biInfo];
new Float:RandomBiciklaSpawn[4][4] =
{
	{1368.0381,-1883.0105,13.1390,270.3800},
	{1367.7576,-1886.6827,13.1352,268.6593},
	{1377.4901,-1883.7943,13.1303,87.4174},
	{1377.6002,-1886.9238,13.0871,91.6235}
};
/////////////////////////////////////////////////////////////////////
#define MAX_MOTORA      450
enum mInfo
{
	mModel,
    Float:mPozX,
    Float:mPozY,
    Float:mPozZ,
    Float:mPozA,
    mBoja1,
    mBoja2,
    mVlasnik[60],
    mImaVlasnika,
	mID,
	mZakljucan,
	mCijena,
	mSpawn
}
new MotorInfo[MAX_MOTORA][mInfo];
new Float:RandomMotorSpawn[4][4] =
{
	{688.0403,-1579.5131,14.1367,193.5802},
	{681.3804,-1578.9053,14.1301,175.7201},
	{703.1239,-1579.4504,14.1851,204.6919},
	{707.4030,-1578.8665,14.2299,143.8087}
};
new Float:RandomMotorSpawnLV[4][4] =
{
	{1940.0906,2086.8606,10.8203,89.6382},
	{1939.5547,2080.8840,10.8203,134.6382},
	{1939.6038,2074.3794,10.8203,89.6382},
	{1940.0154,2066.8994,10.8203,89.6382}
};
new Float:RandomMotorPijacaSpawn[8][4] =
{
	{1235.6038,-1835.3873,12.9592,358.2124},
	{1246.8193,-1834.9384,12.9618,4.3339},
	{1253.1272,-1834.5632,12.9614,2.0875},
	{1197.2903,-1831.3833,12.9608,267.9536},
	{1279.8566,-1825.1543,12.9560,92.7602},
	{1280.3198,-1810.0697,12.9565,90.9997},
	{1263.7938,-1795.3627,12.9882,180.1026},
	{1272.4303,-1795.7157,12.9747,178.9173}
};
/////////////////////////////////////////////////////////////////////////////////
#define MAX_AVIONA      450
enum avInfo
{
	avModel,
    Float:avPozX,
    Float:avPozY,
    Float:avPozZ,
    Float:avPozA,
    avBoja1,
    avBoja2,
    avVlasnik[60],
    avImaVlasnika,
	avID,
	avZakljucan,
	avCijena,
	avSpawn
}
new AvionInfo[MAX_AVIONA][avInfo];
new Float:RandomAvionSpawn[3][4] =
{
	{1911.9492,-2248.0083,13.7652,181.8509},
	{1932.9390,-2246.2471,13.7701,178.9676},
	{1902.3052,-2301.1155,13.7236,271.9897}
};
new Float:RandomAvionSpawnLV[3][4] =
{
	{1312.1965,1305.1797,10.8203,313.6503},
	{1337.8036,1277.5833,10.8203,223.4094},
	{1284.0155,1289.8984,10.8203,31.9843}
};
new Float:RandomPijacaAvionSpawn[9][4] =
{
	{348.4602, 2538.2520, 16.8036, 180.0000},
	{365.4836, 2537.8467, 16.8036, 180.0000},
	{381.8236, 2537.6836, 16.8036, 180.0000},
	{430.2319, 2515.9307, 16.8036, 90.0000},
	{429.9558, 2501.8843, 16.8036, 90.0000},
	{430.0882, 2487.2053, 16.8036, 90.0000},
	{370.3311, 2482.5159, 16.8036, 360.0000},
	{353.3836, 2482.0618, 16.8036, 360.0000},
	{336.3575, 2481.7078, 16.8036, 360.0000}
};
new Float:DrvaRand[4][3] =
{
	{-738.09997558594,-118.69999694824,67.2222},
	{-738.09997558594,-118.69999694824,67.2222},
	{-738.09997558594,-118.69999694824,67.212288},
	{-738.09997558594,-118.69999694824,67.2222}
};
/*new RandomMSG[][] =
{
    ""SRWBOJA"*** "BELA"Ukoliko ste u mogucnosti Donirajte da bi server potrajao sto duze "SRWBOJA"((/mreze))...",
	""SRWBOJA"*** "BELA"Imate komandu /ateleport s kojom idete do raznih lokacija...",
    ""SRWBOJA"*** "BELA"Ukoliko zelite malo zabave imate /pubg...",
	""SRWBOJA"*** "BELA"Ukoliko zelite vidjeti listu donacija imate /donacije...",
	""SRWBOJA"*** "BELA"Ovaj server ima raznih zanimljivosti , a neke se nalaze na /gps...",
	""SRWBOJA"*** "BELA"Na serveru ima i RP-a po GSF , Ballas i ostalim RP Org hoodovima...",
	""SRWBOJA"*** "BELA"Staff ce vam izaci u susret i potruditi se da vam pomogne na /pitaj , /novi...",
	""SRWBOJA"*** "BELA"Nemojte zvati staff po /g , za to postoji komanda /pitaj...",
    ""SRWBOJA"*** "BELA"Sve bugove , citere i igrace koji krse pravila prijavite na /report..."
};*/
////////////////////////////////////////////////////////////////////////////////
#define MAX_AUTA        1000
#define PRODAJA_AUTA 57
#define AIZLOZBENO_X	543.4000244
#define AIZLOZBENO_Y	-1269.4000244
#define AIZLOZBENO_Z	17.2999992
#define AIZLOZBENO_A    220.0000000
new bool:KupovinaAuta[MAX_PLAYERS];
new IzlozbenoAuto;
new AutoModel;
enum vInfo
{
	vModel,
    Float:vPozX,
    Float:vPozY,
    Float:vPozZ,
    Float:vPozA,
    vBoja1,
    vBoja2,
    vVlasnik[60],
    vImaVlasnika,
	vID,
	vZakljucan,
	vDroga,
	vMats,
	vOruzije,
	vMunicija,
	vRadio,
	vMod[18],
	vDatumReg[20],
    vBrojReg,
    vSpawn,
    vRegistracija,
    vTehnickiPregled
}
new VoziloInfo[MAX_AUTA][vInfo];


new Float:RandomAutoSpawnLV[3][4] =
{
	{2148.6938,1408.6226,10.5252,359.1866},
	{2142.3167,1408.7863,10.5216,358.5265},
	{2136.0527,1408.9476,10.5334,358.5275}
};


new Float:RandomAutoSpawn[8][4] =
{
	{2160.3423,-1152.6759,23.6749,88.9506},
	{2161.1055,-1163.1614,23.5432,90.1102},
	{2160.1709,-1177.8567,23.5456,89.7745},
	{2159.4475,-1187.6072,23.5490,88.8034},
	{2149.2324,-1148.0177,24.1725,269.5118},
	{2148.6343,-1161.8051,23.5496,270.9761},
	{2149.1267,-1180.3998,23.5474,270.0889},
	{2149.5168,-1198.7321,23.6147,269.3420}
};
new AutoSalon[PRODAJA_AUTA][2] =
{
    {400,130000},
	{402,300000},
	{405,130000},
	{411,10000000},
	{412,200000},
	{415,970000},
	{419,140000},
	{429,450000},
	{439,85000},
	{445,150000},
	{451,5000000},
	{459,110000},
	{466,150000},
	{467,120000},
	{474,200000},
	{475,250000},
	{477,390000},
	{480,370000},
	{489,550000},
	{491,350000},
	{492,80000},
	{496,650000},
	{500,250000},
	{506,290000},
	{507,150000},
	{516,40000},
	{526,50000},
	{527,65000},
	{529,75000},
	{533,195000},
	{535,350000},
	{536,150000},
	{541,4000000},
	{542,100000},
	{545,950000},
	{546,650000},
	{550,200000},
	{551,170000},
	{554,150000},
	{555,300000},
	{558,500000},
	{559,450000},
	{560,8000000},
	{561,290000},
	{562,620000},
	{565,700000},
	{566,230000},
	{567,245000},
	{575,450000},
	{579,850000},
	{580,230000},
	{585,150000},
	{587,950000},
	{589,500000},
	{602,850000},
	{603,190000},
	{600,90000}
};
new Float:RandomPijacaSpawn[11][4] =
{
	{1454.5442,1542.4406,10.7540,95.7586},
    {1454.0013,1532.6895,10.7600,95.0840},
    {1412.5852,1530.6520,10.7467,93.6720},
    {1412.1106,1538.3293,10.7446,89.1938},
    {1412.2814,1548.9822,10.7495,92.1672},
    {1411.8619,1556.2351,10.7562,92.4762},
    {1412.5165,1567.6774,10.7524,92.2534},
    {1412.0181,1580.4166,10.7474,86.1331},
    {1412.9540,1590.9203,10.7434,85.2734},
    {1412.5206,1607.2551,10.7469,91.3293},
    {1412.0024,1620.3944,10.7486,84.3541}
};
////////////////////////////////////////////////////////////////////
new	bool:Prepreka1Kreirana[MAX_PLAYERS];
new	bool:Prepreka2Kreirana[MAX_PLAYERS];
new	bool:Prepreka3Kreirana[MAX_PLAYERS];
new	bool:Prepreka4Kreirana[MAX_PLAYERS];
new bool:TelefonZvoni[MAX_PLAYERS];
new ObjektSirena[MAX_VOZILA];
new bool:PuniGorivo[MAX_PLAYERS];
new	bool:Naocare[MAX_PLAYERS];
new zeton[MAX_PLAYERS];
new iznajmio[MAX_PLAYERS];
new Zeton[MAX_PLAYERS];
new BankomatMeni[MAX_PLAYERS];
new UsaoPloviloProdaja[MAX_PLAYERS];
new UsaoAvionProdaja[MAX_PLAYERS];
new KacigaStavljena[MAX_PLAYERS];
new Screenoff[MAX_PLAYERS];
new UsaoAutoProdaja[MAX_PLAYERS];
new UsaoMotorProdaja[MAX_PLAYERS];
new CijenaProdaje[MAX_PLAYERS];
new KomeProdaje[MAX_PLAYERS];
new PonudioIgrac[MAX_PLAYERS];
new RadioAktiviran[MAX_PLAYERS];
new ElektricarKvar[MAX_PLAYERS];
new LetSF[MAX_PLAYERS];
new GaddafiTime[MAX_PLAYERS];
new GaddafiPaketa;
new LetLV[MAX_PLAYERS];
new TuraSF[MAX_PLAYERS];
new DrvaPrevoz[MAX_PLAYERS];
new drvence[17];
new TuraLV[MAX_PLAYERS];
new UzeoKutiju[MAX_PLAYERS];
new VozLinija[MAX_PLAYERS];
new Mleko[MAX_PLAYERS];
new Vrsenje[MAX_PLAYERS];
new Dostavicolu[MAX_PLAYERS];
new Oranje[MAX_PLAYERS];
new GrobarLinija[MAX_PLAYERS];
new HelpMessages[MAX_PLAYERS];
new LecenjeOd[MAX_PLAYERS];
new CenaLecenja[MAX_PLAYERS];
new MalterDovozi[MAX_PLAYERS];
new PoravnaBagerom[MAX_PLAYERS];
new BunnyHop[MAX_PLAYERS];
new TelefonRazgovor[MAX_PLAYERS];
new Poziv[MAX_PLAYERS];
new UpaljenTelefon[MAX_PLAYERS];
new CistiUlice[MAX_PLAYERS];
new SmeceSakuplja[MAX_PLAYERS];
new AdminVozilo[MAX_PLAYERS];\
new Text3D: avehl[MAX_PLAYERS];
new PromoterVozilo[MAX_PLAYERS];
new TextDrawGangZone[MAX_PLAYERS];
new PostaPreuzmi[MAX_PLAYERS];
new PostaRaznesi[MAX_PLAYERS];
new Ribari[MAX_PLAYERS];
new PosaoOprema[MAX_PLAYERS];
new PonudioGorivo[MAX_PLAYERS];
new KopacZlata[MAX_PLAYERS];
new PrevozZlata[MAX_PLAYERS];
new CenaGoriva[MAX_PLAYERS];
new PonudioPopravku[MAX_PLAYERS];
new CenaPopravke[MAX_PLAYERS];
new PosaoGPS[MAX_PLAYERS];
new KosenjeTrave[MAX_PLAYERS];
new BusLinija[MAX_PLAYERS];
new PrikazanTextDraw[MAX_PLAYERS];
new UsaoZgrada[MAX_PLAYERS];
new	IntervjuGotov[MAX_PLAYERS];
new	PricauIntervju[MAX_PLAYERS];
new	SvercOruzija[MAX_PLAYERS];
new	SvercDroge[MAX_PLAYERS];
new	KoristiDrogu[MAX_PLAYERS];
new	GroveDrogaTimer[MAX_PLAYERS];
new	Posadjena[MAX_PLAYERS];
new	BranjeDroge[MAX_PLAYERS];
new	SjemeDrogeGrove[MAX_PLAYERS];
new	SadjenjeDrogeGrove[4][MAX_PLAYERS];
new	KapijeTimer[MAX_PLAYERS];
new	TutorialTimer[MAX_PLAYERS];
new	SvercMaterijala[MAX_PLAYERS];
new	SvercUlja[MAX_PLAYERS];
new	IzmenaFirme[MAX_PLAYERS];
new	VuceIgraca[MAX_PLAYERS];
new Vucen[MAX_PLAYERS];
new	Zavezan[MAX_PLAYERS];
new Povez[MAX_PLAYERS];
new	VuciTimer[MAX_PLAYERS];
new	hReport[MAX_PLAYERS];
new	Marama[MAX_PLAYERS];
new	Muteg[MAX_PLAYERS];
new	Mutel[MAX_PLAYERS];
new ribvozilo[6];
new	Interijer[MAX_PLAYERS];
new IgracKrvari[MAX_PLAYERS];
//////////////////////////WAR
new WarBrojanje1 = 0;
new WarBrojanje2 = 0;
new WarZapocet = 0;
new startovanwar = 0;
////////////////////////////

new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new	gPlayerAnimLibsPreloaded[MAX_PLAYERS];
new	gPlayerUsingLoopingAnim[MAX_PLAYERS];
new	MDC[MAX_PLAYERS];
new	Kockica[MAX_PLAYERS];
new	utovar[MAX_PLAYERS];
new	g_freeze[MAX_PLAYERS];
new	KazneniPoeni[MAX_PLAYERS];
new	Poligon[MAX_PLAYERS];
new	Lociranje[MAX_PLAYERS];
new	DobioPay[MAX_PLAYERS];
new	Prepreka1[MAX_PLAYERS];
new	Prepreka2[MAX_PLAYERS];
new	Prepreka3[MAX_PLAYERS];
new	Prepreka4[MAX_PLAYERS];
new	Kaucija[MAX_PLAYERS];
new	TazerTimer[MAX_PLAYERS];
new	OborenTimer[MAX_PLAYERS];
new	NewNew[MAX_PLAYERS];
new	KaznuNapisao[MAX_PLAYERS];
new	CenaKazne[MAX_PLAYERS];
new	Tazer[MAX_PLAYERS];
new	Frezovan[MAX_PLAYERS];
new	StavljeneLisice[MAX_PLAYERS];
new	IgracTazovan[MAX_PLAYERS];
new	IgracOboren[MAX_PLAYERS];
new	PolicajacNaDuznosti[MAX_PLAYERS];
new	LoginPokusaji[MAX_PLAYERS];
new	IgracKojimSaljes[MAX_PLAYERS];
new	hPomoc[MAX_PLAYERS];
new gKomanda[MAX_PLAYERS];
new OpljackajBanku[MAX_PLAYERS];
new OpljackajZlataru[MAX_PLAYERS];
new OpljackajOpstinu[MAX_PLAYERS];
new Streljana[MAX_PLAYERS];
new gLeader[MAX_PLAYERS];
new mLocate[MAX_PLAYERS];
new	bacitimer[MAX_PLAYERS];
new cctime;
new	tempomatt[MAX_PLAYERS];
new tDuznostVreme[MAX_PLAYERS];
new	AdminDuty[MAX_PLAYERS];
new	GMDuty[MAX_PLAYERS];
new saduty[MAX_PLAYERS];
new UpaljenGPS[MAX_PLAYERS];
new	UlogovanProvera[MAX_PLAYERS];
new KladionicaBroj[MAX_PLAYERS];
new KioskKupovina[MAX_PLAYERS];
////////////////////////////////////////////////////////////////////
new pozar1;
new pozar3;
new pozar4;
new pozar5;
new pozar6;

new VatraEquip[MAX_PLAYERS];

new Pozarcic = 0;
new Float:PozarX, Float:PozarY, Float:PozarZ;
new vatkapija;

new Text3D:berza;
new Text3D:dsef;
new pdrvoseca;
new srace[4];
new eventa[15];
new UCount[MAX_PLAYERS];
new bool:Prisustvuje[MAX_PLAYERS];
new NGRTRKA[MAX_PLAYERS];
new vorcp[MAX_PLAYERS] = 0;
new event = 0;
new slotovi = 15;
new ecp[MAX_PLAYERS];
new mjesta = 0;
new eecp[MAX_PLAYERS];
new bool:auts;
new lsdok[3];
new beachhell[3];
new KartO[4];
new Relly1[4];
new ddrive[20];
//----[Kvar na vodovodu]----
new kg1,kg2,kg3,kg4,kg5,kg6,kg7,kg8,kg9,kg10,kg11,kg12,kg13,kg14,kg15,kg16,kg17,kg18,kg19,kg20,kg21,kg22,kg23,kg24,kg25,kg26,kg27,kg28,kg29;
new ko1,ko2,ko3,ko4,ko5,ko6,ko7,ko8,ko9,ko10,ko11,ko12,ko13,ko14,ko15,ko16,ko17,ko18,ko19,ko20,ko21;
new kb1,kb2,kb3,kb4,kb5,kb6,kb7,kb8,kb9,kb10,kb11,kb12,kb13,kb14,kb15,kb16,kb17,kb18,kb19,kb20,kb21,kb22,kb23,kb24,kb25;
new kk1,kk2,kk3,kk4,kk5,kk6,kk7,kk8,kk9,kk10,kk11,kk12,kk13,kk14,kk15,kk16,kk17,kk18,kk19,kk20,kk21,kk22;
new Ventil;
new Kvar1;
new BankaKvar;
new OpstinaKvar;
new KolodvorKvar;
new GroweKvar;
//

new KupovnaCena;
new ProdajnaCena;

new UsingBelt[MAX_PLAYERS];

new autokatalog;
new pelektricar;
new pvodoinstalater;
new prudar;
new ppilot;
new pkamiondzija;
new pdostavljac;
new pmasinovodja;
new pfarmer;
new pdzeparos;
new pgrobar;
new pbolnicar;
new pgradjevinar;
new pkomunalac;
new ppostar;
new pmehanicar;
new pkosactrave;
new pbusvozac;
new pbusvozac2;
new pcoca;
new toglas;
new wartd;
new	bdtdroga;
new	iscountactivated = 0;
new	countamount;
new	CountTimer;
new	bdtkapija;
new bdttkapija;
new smithkapija;
new sakapija;
//new rbkapija1;
//new rbkapija2;
//new rbkapija3;
new	swatoprema = 1;
new	lspdlift;
new	tvforuzije;
new	bdtoruzije;
new	PozvaoPojacanje;
new	realchat = 1;
static Float:X,Float:Y,Float:Z;
new	lspdz;
new kapijapo;
new kapijapo1;
new kapija2po;
//new kapija2po1;
//new kapija2po2;
new kapijapo3;
new	pdrampaotvorena;
new	pdrampazatvorena;
new	kapijapd1;
new condorkapija;
new basekapija;
new vratakapija;
new basekapija1;
new pskapija;
new	tvfkapija1;
new	tvfkapija2;
new	tvfgaraza;
new	policecar[32];
new	sacar[17];
new rbcar[34];
new fbicar[12];
new taxicar[8];
new basecar[31];
new po2car[16]; // La Cosa Nostra
new po3car[13]; // DNB
new po4car[26]; //Russian Mafia
new pocar[23]; // Blue Lagoon
new pocar3[17]; // Death Row
new Smithcar[15];
new Locacar[17];
new vatra[12];
new rezervacar[24];
new zlatocar[5];
new condorcar[15];
new lvpdvozila[28];
new drvovozila[8];
new	askolavozila[10];
new parkingcar[7];
new	tvf[17];
new	tbt[19];
new	grove[16];
new	vballas[19];
new	vnovinari[10];
new busvozilo[10];
new kosilica[7];
new vmehanicar[8];
new postavozilo[10];
new vkomunalno[12];
new vgradjevinar[7];
new autosalon[4];
new vbolnicar[7];
new vgrobar[7];
new vcola[8];
new vfarmer[19];
new VozVozilo;
new vdostavljac[7];
new vkamiondzija[10];
new vpilot[5];
new velektricar[7];
new vvodoinstalater[4];
new vmotosalon[7];
new vkarting[7];
new vdonator[13];
////////////////////////////////////////////////////////////////////
new Text3D:motosalon3d[10][MAX_VOZILA];
new ProduktiVozila[MAX_VOZILA];
new PlayerText:TDPOSAO[11][MAX_PLAYERS];
new PlayerText:LoginTD[MAX_PLAYERS][24]; // ovo
new PlayerText:RegisterTD[MAX_PLAYERS][37];
//
new PlayerText:GunTD[ MAX_PLAYERS ][ 15 ];
new Stranica[ MAX_PLAYERS ];
//GUN
new Fuel[MAX_VOZILA];
new PlayerText:Brzinomer[MAX_PLAYERS][12];
new Text:SPORUKE[1];
////////////////////////////////////
new Text:TDwar0;
new Text:TDwar1;
new Text:TDwar2;
new Text:TDwar3;
new Text:TDwar4;
new Text:TDwar5;
new Text:TDwar6;
new PlayerText:mdct[10];
new PlayerText:TDProdajaVozila[6][MAX_PLAYERS];
new PlayerText:Bankomat[8][MAX_PLAYERS];
////////////////////////////////////////////////////////////////
new ImenaVozila[212][] =
{
	{"Landstal"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"}, {"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},
	{"Washington"},{"Bobcat"},{"Whoopee"},{"BF-INJ"},{"Hunter"},{"Premier"},{"Enforcer"},{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Article TR"},{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Article TR2"},{"Turismo"},{"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC"},{"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},{"Sanchez"},
	{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},{"Maverick"},{"Chopper"},{"Rancher"},{"FBI - Ra"},{"Virgo"},{"Greenwood"},{"Jetmax"},{"Hotring"},
	{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},{"HR - A"},{"HR - B"},{"Bloodring Banger"},{"Rancher"},{"Super GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stuntplane"},{"Tanker"},{"Roadtrain"},
	{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},{"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},{"Blade"},{"Freight"},{"Streak"},{"Vortex"},
	{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},
	{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},{"Kart"},{"Mower"},{"Dunerider"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},{"Tug"},{"Article Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Mobile Hotdog"},
	{"Club"},{"Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police"},{"Police"},{"Police"},{"LSDP-Ranger"},{"Picador"},{"SWAT Van"},{"Alpha"},{"Phoenix"},{"Glendale"},{"Sadler"},{"Luggage TR A"},{"Luggage TR B"},{"Stair Trailer"},
	{"Boxville"},{"Farm Plow"},{"Utility TR"}
};
new RandomSPoruke[][] =
{
    "TRENUTNA VERZIJA MODA JE ~p~V:RPG v1.0",
    "UKOLIKO PRIMETITE CITERA ILI BUG PRIJAVITE GA NA ~p~/REPORT",
    "POSETITE I NAS OFFICIALNI TEAMSPEAK SERVER -> ~p~/MREZE",
    "POSETITE I NAS FORUM -> ~p~/MREZE",
    "UKOLIKO VAM JE POTREBNA POMOC KORISTITE ~p~/PITAJ",
    "VLASNIK SERVERA JE ~p~bunta",
    "SKRIPTER SERVERA JE ~p~bunta"
};
////////////////////////////////////////////////////////////////////////
new Float:RandomZatvor[8][3] =
{
	{1797.6871,-1672.6364,-48.9141},
	{1801.5232,-1671.9987,-48.9141},
	{1805.2000,-1671.5542,-48.9141},
	{1808.1843,-1671.8374,-48.9141},
	{1797.8950,-1651.2415,-48.9141},
	{1801.7429,-1651.8702,-48.9141},
	{1805.2446,-1651.7125,-48.9141},
	{1808.8861,-1652.0724,-48.9141}
};
////////////////////////////////////////////////////////////////////////
new Float:RandomTim1[7][3] =
{
	{-972.6812,1096.0303,1344.9882},
	{-972.5949,1084.3115,1344.9950},
	{-973.4254,1076.6229,1344.9950},
	{-973.5809,1070.1228,1345.0007},
	{-973.7216,1064.7092,1345.0061},
	{-973.6556,1056.8405,1345.0156},
	{-973.0229,1024.2570,1345.0525}
};
////////////////////////////////////////////////////////////////////////
new Float:RandomTim2[7][3] =
{
	{-1132.7081,1022.7668,1345.7273},
	{-1132.6602,1035.5205,1345.7427},
	{-1132.2740,1041.1238,1345.7412},
	{-1131.0614,1048.8101,1345.7435},
	{-1132.0385,1055.2090,1345.7603},
	{-1132.0372,1063.7393,1345.7628},
	{-1131.6272,1094.3673,1345.7885}
};
/////////////////////////////////////////////////////////////////////////
new Float:RandomSpawn[4][3] =
{
    {1868.6683,-1681.0046,12.5610},
    {1866.5753,-1678.7615,12.5451},
    {1866.4728,-1683.3446,12.5451},
    {1862.3132,-1678.2087,12.5451}
};
new Float:RandomSpawn2[4][3]=
{
    {1866.4728,-1683.3446,12.5451},
    {1862.3132,-1678.2087,12.5451},
    {1862.0573,-1683.6671,12.5451},
    {1864.9348,-1681.1924,12.5610}
};
/////////////////////////////////////////////////////////////////////////
new Float:RandomPubg[4][3] =
{
    {195.7705,2495.1074,16.7410},
    {87.5442,2555.6208,16.8727},
    {-18.2499,2484.6892,16.8480},
    {-11.6625,2427.8359,16.8480}
};
/////////////////////////////////////////////////////////////////////////
new Float:KosiTravuRand[13][3] =
{
	{1928.0717,-1234.3527,18.0249},
	{1898.9652,-1222.1378,16.9995},
	{1868.4001,-1244.1985,13.9893},
	{1883.6132,-1192.0978,21.9133},
	{1907.1113,-1189.7694,22.0713},
	{1889.1681,-1158.8250,24.1529},
	{1967.3208,-1157.3369,20.9635},
	{1996.6298,-1165.6517,20.7865},
	{2034.3589,-1173.2274,22.6516},
	{2054.7466,-1156.8724,23.6783},
	{2032.5651,-1202.7784,23.0269},
	{2046.7028,-1240.0741,23.3066},
	{1976.8083,-1234.8224,20.0469}
};
/////////////////////////////////////////////////////////////////////////
new Float:PostaRand[6][3] =
{
	{1091.4614,-1094.1199,25.4475},
	{281.2743,-1319.2477,53.8384},
	{1424.9646,-881.8390,50.5805},
	{314.5819,-1773.2887,4.6928},
	{645.4933,-1695.4625,14.9006},
	{2379.3457,-1276.0836,24.0000}
};
/////////////////////////////////////////////////////////////////////////
new Float:GrobarRand[5][3] =
{
	{1522.5540,-805.1614,72.4516},
	{2529.8806,-1054.0079,69.5751},
	{2865.1929,-1365.5314,10.9426},
	{1883.3254,-2146.6113,13.5469},
	{192.1054,-1776.2201,3.7120}
};
Attacher(playerid) {
    new string[64];
    format(string, sizeof(string), ATTACH_FILE, GetName(playerid));
    return string;
}

/////////////////////////////////////////////////////////////////////////
//===================================================================================================
//                                         	  Variables
//===================================================================================================
enum _camera
{Float:_x,Float:_y,Float:_z,Float:_rot,_range,_limit,_fine,_usemph,_objectid,bool:_active,bool:_activelabel,_labeltxt[128],Text3D:_label}
new SpeedCameras[CAMERA_LIMIT][_camera],loaded_cameras = 0,Text:flash;
Text3D:AttachLabelToCamera(cameraid,text[])
{
	new position,buffer[128];format(buffer,sizeof buffer,"%s",text);
	for(new i = 0;strfind(buffer,"\\n",true) != -1;i++)
	{
	    position = strfind(buffer,"\\n",true);
	    strdel(buffer,position,position +2);
	    strins(buffer,"\r\n",position,sizeof(buffer));
	}
	return Create3DTextLabel(buffer,CAMERA_LABEL_COLOR,SpeedCameras[cameraid][_x],SpeedCameras[cameraid][_y],SpeedCameras[cameraid][_z] +7,100,0,0);
}
UpdateCameraLabel(Text3D:labelid,text[])
{
	new position,buffer[128];format(buffer,sizeof buffer,"%s",text);
	for(new i = 0;strfind(buffer,"\\n",true) != -1;i++)
	{
	    position = strfind(buffer,"\\n",true);
	    strdel(buffer,position,position +2);
	    strins(buffer,"\r\n",position,sizeof(buffer));
	}
	return	Update3DTextLabelText(labelid,CAMERA_LABEL_COLOR,buffer);
}
SCMTA(color, message[]) {

    foreach(new i : Player) {
        if(UlogovanProvera[i] == 1) {
            SendClientMessage(i, color, message);
        }
    }

}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/////////////////////////////////////////////////////////////////////////
new Float:MlekoRand[4][3] =
{
	{1313.7887,-915.9097,38.2476},
	{2156.0115,-1011.5659,62.9644},
	{1827.8735,-1845.6213,13.5781},
	{1355.5454,-1744.7853,13.5469}
};
/////////////////////////////////////////////////////////////////////////
new Float:ElektricarRand[4][3] =
{
	{1046.7399,-711.1586,120.3453},
	{914.1028,-799.7390,114.2409},
	{1273.2079,191.6825,19.5547},
	{2416.8228,-1668.2932,13.5448}
};
////////////////////////////////////////////////////////////////////////
new OneSeatVehicles[38] =
{
    425, 430, 432, 441, 446, 448, 452, 453,
	454, 464, 465, 472, 473, 476, 481, 484,
	485, 486, 493, 501, 509, 510, 519, 520,
	530, 531, 532, 539, 553, 564, 568, 571,
	572, 574, 583, 592, 594, 595
};
IsSeatAvailable(vehicleid, seat)
{
	new carmodel = GetVehicleModel(vehicleid);
	for (new i = 0; i < sizeof( OneSeatVehicles ); i++ )
	{
	    if( carmodel == OneSeatVehicles[i] ) return 0;
	}
	foreach(new i : Player)
	{
	    if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == seat) return 0;
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////
enum SAZONE_MAIN
{
	SAZONE_NAME[38],
	Float:SAZONE_AREA[6]
};
////////////////////////////////////////////////////////////////////////
#define MAX_ZONE_NAME 38
static const gSAZones[][SAZONE_MAIN] =
{
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Section",          {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Section",          {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Section",          {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Section",          {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemical",         {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemical",         {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"Castillo del Diablo",         {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"Castillo del Diablo",         {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"Castillo del Diablo",         {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"KACC Military Fuels",         {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"LS International",            {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"LS International",            {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"LS International",            {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"LS International",            {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"LS International",            {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"LS International",            {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Section",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Section",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Section",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Ind. Estate",        {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Section",              {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
/////////////////////////////////////////////////////////
#include Maps.pwn

public OnGameModeInit()
{
	Command_AddAltNamed("jetpack", "jp");
	Command_AddAltNamed("postaviadmina", "makeadmin");
	Command_AddAltNamed("ateleport", "aport");
	Command_AddAltNamed("postavilidera", "makeleader");
	Command_AddAltNamed("podesisat", "tod");
	Command_AddAltNamed("podesivreme", "weather");
	Command_AddAltNamed("vpopravi", "fv");


	SQL = mysql_connect(mysql_host, mysql_user, mysql_pass, mysql_database);
	if	(SQL == MYSQL_INVALID_HANDLE || mysql_errno(SQL) != 0) 
	{
		print("Povezivanje na bazu nije uspesno, plaky");
		SendRconCommand("exit");
		return 0;
	}

	SetWeather(10);
    for(new i = 0; i < sizeof(AdminWarns); i++) // Warnovi u TD
    {
        strmid(AdminWarns[ i ][ Text ], "____", 0, strlen("____"), 255);
    }
	furnmenu = LoadModelSelectionMenu("furnmenu.txt");
	housedoors = LoadModelSelectionMenu("doors.txt");
	walls = LoadModelSelectionMenu("walls.txt");
	bathroom = LoadModelSelectionMenu("bathroom.txt");
	beds = LoadModelSelectionMenu("beds.txt");
	chairs = LoadModelSelectionMenu("chairs.txt");
	eletronic = LoadModelSelectionMenu("eletronics.txt");
	fitness = LoadModelSelectionMenu("fitness.txt");
	kitchen = LoadModelSelectionMenu("kitchen.txt");
	houselights = LoadModelSelectionMenu("lights.txt");
	tables = LoadModelSelectionMenu("tables.txt");
	objects = LoadModelSelectionMenu("037object.txt");
    /////////////////////////////////////////////////////////////////

   	AlarmArea = CreateDynamicRectangle(2130.6169, 1607.9010, 2156.9197,1625.2343, VAULT_VIRTUALWORLD, 1);

	VaultObjects[0] = CreateDynamicObject(19446, 2144.333, 1601.475, 1001.387, 90.000, 90.199, 0.000, VAULT_VIRTUALWORLD); // wall
	VaultObjects[1] = CreateDynamicObject(2947, 2145.037, 1601.421, 996.776, 0.000, 0.000, -89.500, VAULT_VIRTUALWORLD); // door
	VaultObjects[TYPE_LASER1] = CreateDynamicObject(18643, 2142.983, 1606.679, 993.188, 0.000, 0.000, 0.000, VAULT_VIRTUALWORLD); // laser
	VaultObjects[TYPE_LASER2] = CreateDynamicObject(18643, 2142.983, 1606.679, 993.938, 0.000, 0.000, 0.000, VAULT_VIRTUALWORLD); // laser
	VaultObjects[TYPE_LASER3] = CreateDynamicObject(18643, 2142.983, 1606.679, 994.688, 0.000, 0.000, 0.000, VAULT_VIRTUALWORLD); // laser
	VaultObjects[5] = CreateDynamicObject(19273, 2146.116, 1604.895, 994.118, 0.000, 0.000, 270.000, VAULT_VIRTUALWORLD); // keypad
	VaultObjects[TYPE_VAULTDOOR] = CreateDynamicObject(19799, 2143.185, 1626.965, 994.298, 0.000, -0.400, -180.000, VAULT_VIRTUALWORLD); // vault door
	VaultObjects[7] = CreateDynamicObject(2922, 2140.361, 1626.826, 993.978, 0.000, 0.000, 180.000, VAULT_VIRTUALWORLD); // timelock

	VaultLabels[TYPE_KEYPAD] = CreateDynamic3DTextLabel(" / hakuj za onemogucavanje lasera", 0xF39C12FF, 2145.85, 1604.9456, 993.5684, 15.0, .testlos = 1, .worldid = VAULT_VIRTUALWORLD);
    VaultLabels[TYPE_EXPLOSIVE] = CreateDynamic3DTextLabel("/ postavibombu da raznese vrata trezora (brzo i glasno)", 0xF39C12FF, 2144.1624, 1626.25, 993.6882, 10.0, .testlos = 1, .worldid = VAULT_VIRTUALWORLD);
    VaultLabels[TYPE_TIMELOCK] = CreateDynamic3DTextLabel(" timelock za pocetak vremenske blokade (sporo i tiho)", 0xF39C12FF, 2140.2610, 1626.25, 993.6882, 10.0, .testlos = 1, .worldid = VAULT_VIRTUALWORLD);

	for(new i; i < sizeof(InsideVaultLabels); ++i)
	{
		InsideVaultLabels[i] = CreateDynamic3DTextLabel("/isprazni", 0x2ECC71FF, DepositCoords[i][0], DepositCoords[i][1], DepositCoords[i][2], 15.0, .testlos = 1, .worldid = VAULT_VIRTUALWORLD);
	}

	BankControls[LasersOn] = true;
    /////////////////////////////////////////////////////////////////
	CreateMaps( ); 
	TerminatorMape(); //ServerStartCount = GetTickCount();
	skinlist = LoadModelSelectionMenu("skins.txt");
	vozilolist = LoadModelSelectionMenu("vozila.txt");
	////////////////////////////////////////////////////////////////////////////

	for (new v; v != sizeof(RaceVehicleList); v++)
	{
		strcat(vehListStr, VehicleNames[RaceVehicleList[v] - 400]);
		strcat(vehListStr, "\n");
	}
	#if ALLOW_ALL_VEHICLES == true
	strcat(vehListStr, "Enter a specific model ID");
	#endif

	///////////////////////////////////////////////////////////////////////////////
	new pprelaz1 = CreateDynamicObject(4238, 1480, -1730, 12.4, 300.26, 90.0000, 0.0);
 	SetDynamicObjectMaterialText(pprelaz1, 0,"{FFFFFF}llllllllllllllllll", 80, "Arial", 80, 1, -16730675, 0, 1);
 	new pprelaz2 = CreateDynamicObject(4238, 1476.5, -1735, 12.4, 300.26, 90.0000, 0.0);
	SetDynamicObjectMaterialText(pprelaz2, 0,"{FFFFFF}STOP", 120, "Arial", 40, 1, -16730675, 0, 1);
	new pprelaz3 = CreateDynamicObject(4238, 1483.5, -1730, 12.4, 300.26, 90.0000, 180.0);
	SetDynamicObjectMaterialText(pprelaz3, 0,"{FFFFFF}STOP", 120, "Arial", 40, 1, -16730675, 0, 1);
	new pprelaz4 = CreateDynamicObject(4238, 1460, -1035, 22.7, 300.26, 90.0000, 0.0);
	SetDynamicObjectMaterialText(pprelaz4, 0,"{FFFFFF}llllllllllllllllll", 80, "Arial", 80, 1, -16730675, 0, 1);
	new pprelaz5 = CreateDynamicObject(4238, 1456.5, -1036.5, 22.7, 300.26, 90.0000, 0.0);
	SetDynamicObjectMaterialText(pprelaz5, 0,"{FFFFFF}STOP", 120, "Arial", 40, 1, -16730675, 0, 1);
 	new pprelaz6 = CreateDynamicObject(4238, 1463.5, -1031.5, 22.7, 300.26, 90.0000, 180.0);
	SetDynamicObjectMaterialText(pprelaz6, 0,"{FFFFFF}STOP", 120, "Arial", 40, 1, -16730675, 0, 1);
	new pprelaz10 = CreateDynamicObject(4238, 1563.25, -2285, 12.4, 300.26, 90.0000, 00.0);
	SetDynamicObjectMaterialText(pprelaz10, 0,"{FFFFFF}llllllllllllllllll", 80, "Arial", 80, 1, -16730675, 0, 1);
	new pprelaz11 = CreateDynamicObject(4238, 1560.25, -2289, 12.4, 300.26, 90.0000, 0.0);
	SetDynamicObjectMaterialText(pprelaz11, 0,"{FFFFFF}STOP", 120, "Arial", 40, 1, -16730675, 0, 1);
 	new pprelaz12 = CreateDynamicObject(4238, 1566.25, -2284, 12.4, 300.26, 90.0000, 180.0);
	SetDynamicObjectMaterialText(pprelaz12, 0,"{FFFFFF}STOP", 120, "Arial", 40, 1, -16730675, 0, 1);
	new pprelaz13 = CreateDynamicObject(4238, 1365, -1400, 12.54, 300.26, 90.0000, 0.0);
	SetDynamicObjectMaterialText(pprelaz13, 0,"{FFFFFF}llllllllllllllllllllllll", 80, "Arial", 80, 1, -16730675, 0, 1);
	new pprelaz14 = CreateDynamicObject(4238, 1335, -1400, 12.50, 300.26, 90.0000, 0.0);
    SetDynamicObjectMaterialText(pprelaz14, 0,"{FFFFFF}llllllllllllllllllllllll", 80, "Arial", 80, 1, -16730675, 0, 1);
	/////////END BURGA////////
    tvfkapija1 = CreateDynamicObject(989, 2236.3000488281, -2217.3999023438, 14.39999961853, 0, 0, 62);
	tvfkapija2 = CreateDynamicObject(989, 2232.3999023438, -2213.5, 14.39999961853, 0, 0, 61.995849609375);
	tvfgaraza = CreateDynamicObject(10558, 2178, -2255.3999023438, 15.800000190735, 0, 0, 314);
	//Tbbkapija = CreateDynamicObject(19912,-652.613647, -1538.440796, 22.677771,0.115,0.000,74.443,-1,-1,-1,300.000,300.000);
	bdtkapija = CreateDynamicObject(980, 1245.1999511719, -767, 93.900001525879, 0, 0, 0);
	bdttkapija = CreateDynamicObject(971, 1303.90698, -797.91052, 85.73474,   0.00000, 0.00000, -90.90001);
	Bcckapija = CreateDynamicObject(18981, 2287.330078, 602.700317, 1.249639, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	Tbbkapija = CreateDynamicObject(19451, -652.613647, -1538.440796, 22.677771, 0.000000, 0.000000, 356.985931, -1, -1);
	SetDynamicObjectMaterial(Tbbkapija, 0, 6487, "councl_law2", "lanlabra1_M", 0);
	SetDynamicObjectMaterial(Bcckapija, 0, 17555, "eastbeach3c_lae2", "compfence3_LAe", 0x00000000);
	ostrvo = CreateDynamicObject(980, 269.85248, 3204.38403, 4.96086,   0.00000, 0.00000, 169.22749);
	Lockapija = CreateDynamicObject(980, 43.50505, -1834.50879, 5.79710,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Lockapija, 0, 17555, "eastbeach3c_lae2", "compfence3_LAe", 0x00000000);
	smithkapija = CreateDynamicObject(980, -2127.13623, -81.05120, 37.13630,   0.00000, 0.00000, 0.00000);
	sakapija = CreateDynamicObject(980,1024.8000500,-365.2999900,75.7000000,0.0000000,0.0000000,352.0000000);
	interventnakapija = CreateDynamicObject(16773, 1285.58533, -1652.17957, 16.30103, 0, 0, 90);
   	rampazalsot = CreateDynamicObject(968, 1791.66272, 810.52039, 10.64000,   0.00000, 270.00000, 0.00000); //rampa zatvorena ulaz LS
	rampazalvot = CreateDynamicObject(968, 1809.94458, 819.34558, 10.45770,   0.00000, 270.00000, 0.00000); //rampa zatvorena izlaz LS
	rampazalsott = CreateDynamicObject(968, 50.616279, -1527.437255, 4.821100, 0.000000, 90.000000, 83.519973);//rampa za LS zatvorena
	rampazasfot = CreateDynamicObject(968, 49.939498, -1534.832397, 4.821100, 0.000000, 90.000000, -96.480003); //rampa za SF zatvorena
	////////////////////////////////////////////////////////////////////////////////////////////////////////
     //////////////////////////////////RENT LABELI DEFINICIJE//////////////////////////////////////////////
	//PO CAR Blue Lagoon (label tag blcar)
	pocar[0] = AddStaticVehicleEx(493, -640.4612, 893.4827, 0.7000, -135.0000, 2,2, 1000);
	pocar[1] = AddStaticVehicleEx(454, -635.3029, 902.4298, 0.7000, -135.0000, 2,2, 1000);
	pocar[2] = AddStaticVehicleEx(493, -643.5026, 888.0217, 0.7000, -135.0000, 2,2, 1000);
	pocar[3] = AddStaticVehicleEx(473, -647.5662, 884.2711, 0.4000, -135.0000, 2,2, 1000);
	pocar[4] = AddStaticVehicleEx(473, -649.9335, 879.4630, 0.4000, -135.0000, 2,2, 1000);
	pocar[5] = AddStaticVehicleEx(473, -649.1464, 869.1798, 0.4000, -135.0000, 2,2, 1000);
	pocar[6] = AddStaticVehicleEx(473, -658.3012, 873.0892, 0.4000, -135.0000, 2,2, 1000);
	pocar[7] = AddStaticVehicleEx(460, -626.7673, 911.3917, 2.2000, -135.0000, 2,2, 1000);
	pocar[8] = AddStaticVehicleEx(522, -675.0000, 945.0000, 11.6400, 0.0000, 2,2, 1000);
	pocar[9] = AddStaticVehicleEx(522, -673.0283, 945.0010, 11.6400, 0.0000, 2,2, 1000);
	pocar[10] = AddStaticVehicleEx(522, -671.0000, 945.0000, 11.6400, 0.0000, 2,2, 1000);
	pocar[11] = AddStaticVehicleEx(522, -669.0000, 945.0000, 11.6400, 0.0000, 2,2, 1000);
	pocar[12] = AddStaticVehicleEx(411, -708.0000, 969.0000, 12.2000, 180.0000, 2,2, 1000);
	pocar[13] = AddStaticVehicleEx(560, -690.0000, 969.0000, 11.8120, 180.0000, 2,2, 1000);
	pocar[14] = AddStaticVehicleEx(482, -709.0901, 940.8886, 12.4400, 0.0000, 2,2, 1000);
	pocar[15] = AddStaticVehicleEx(409, -689.0055, 950.4000, 11.9000, 90.0000, 2,2, 1000);
	pocar[16] = AddStaticVehicleEx(411, -702.0000, 969.0000, 12.2000, 180.0000, 2,2, 1000);
	pocar[17] = AddStaticVehicleEx(411, -696.0000, 969.0000, 12.0280, 180.0000, 2,2, 1000);
	pocar[18] = AddStaticVehicleEx(560, -684.0000, 969.0000, 11.7400, 180.0000, 2,2, 1000);
	pocar[19] = AddStaticVehicleEx(487,-680.9323,979.4311,12.3356,184.6071, 2,2, 1000);
	pocar[20] = AddStaticVehicleEx(471, -701.0000, 945.5747, 12.4400, 0.0000, 2,2, 1000);
	pocar[21] = AddStaticVehicleEx(471, -704.0000, 945.5747, 12.4400, 0.0000, 2,2, 1000);
	pocar[22] = AddStaticVehicleEx(482, -714.6445, 941.3599, 12.3791, 358.6696, 2,2, 1000);
	for(new ia; ia < 22; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ Blue Lagoon ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, pocar[ia], 0);
     }
	////////////////////////////////////////////////////////////////////////////////////////////
	vvodoinstalater[0] = AddStaticVehicleEx(552,1779.7842,-1690.7028,13.1391,270.0474,0,0,1000);//389
    vvodoinstalater[1] = AddStaticVehicleEx(552,1782.7136,-1702.1819,13.2108,89.3235,0,0,1000);//390
    vvodoinstalater[2] = AddStaticVehicleEx(552,1774.5471,-1702.5623,13.2055,0.0739,0,0,1000);//391
	////////////////////////////////////////////////////////////////////////////////////////////
	//PO 3 CAR DeathRow
	pocar3[0] = AddStaticVehicleEx(579,-1085.9818,-1245.0422,129.2019,177.6254,251,251, 1000); // drhuntley2
	pocar3[1] = AddStaticVehicleEx(579,-1067.4436,-1245.5308,129.2003,181.1342,251,251, 1000); // drhuntley
	pocar3[2] = AddStaticVehicleEx(451,-1072.8182,-1262.5077,128.9763,181.4293,251,251, 1000); // drturismo2
	pocar3[3] = AddStaticVehicleEx(451,-1080.7111,-1262.6586,128.9775,182.5669,251,251, 1000); // drturismo
	pocar3[4] = AddStaticVehicleEx(541,-1087.6918,-1292.3682,128.8953,271.9936,251,251, 1000); // drbullet2
	pocar3[5] = AddStaticVehicleEx(541,-1087.7698,-1287.5577,128.8955,272.1743,251,251, 1000); // drbullet
	pocar3[6] = AddStaticVehicleEx(411,-1087.5111,-1298.7440,128.9976,271.5423,251,251, 1000); // drinfernus2
	pocar3[7] = AddStaticVehicleEx(411,-1087.4352,-1303.2310,128.9976,271.4477,251,251, 1000); // drinfernus
	pocar3[8] = AddStaticVehicleEx(482,-1103.8431,-1289.4838,129.3866,89.1739,251,251, 1000); // drburrito
	pocar3[9] = AddStaticVehicleEx(482,-1078.4861,-1243.5114,128.8421,183.5175,251,251, 1000); // drnrg2
	pocar3[10] = AddStaticVehicleEx(522,-1076.0078,-1243.8615,128.8385,180.6814,251,251, 1000); // drnrg
	pocar3[11] = AddStaticVehicleEx(522,-1072.9591,-1243.5039,128.8446,179.7817,251,251, 1000); // drnrg3
	pocar3[12] = AddStaticVehicleEx(487,-1105.1477,-1244.1335,139.0534,269.3400,251,251, 1000); // drmaverick
	pocar3[13] = AddStaticVehicleEx(487,-1105.5255,-1257.7493,139.0533,272.6108,251,251, 1000); // drmaverick2
	pocar3[14] = AddStaticVehicleEx(560,-1068.9238,-1307.8381,128.9754,90.1819,251,251, 1000); // drsultan
	pocar3[15] = AddStaticVehicleEx(560,-1079.3630,-1310.5676,128.9757,0.6326,251,251, 1000); // drsultan2
 	pocar3[16] = AddStaticVehicleEx(560,-1069.1340,-1301.8511,128.9753,89.5269,251,251,1000); // drsultan3
	for(new ia; ia < 16; ia++) {
    CreateDynamic3DTextLabel(""SIVA"[ DeathRow ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, pocar3[ia], 0);
     }
	//////////////////////////////////La Cosa Nostra
    po2car[2] = AddStaticVehicleEx(411, 2786.5684, 2696.2332, 10.6753, 180.5872, 39, 39, 1000);
    po2car[3] = AddStaticVehicleEx(411, 2783.7231, 2696.2263, 10.6753, 180.1161, 39, 39, 1000);
    po2car[4] = AddStaticVehicleEx(411, 2780.8027, 2696.1931, 10.6753, 179.8533, 39, 39, 1000);
    po2car[0] = AddStaticVehicleEx(482, 2777.7595, 2696.3264, 10.8763, 179.7303, 39, 39, 1000);
    po2car[1] = AddStaticVehicleEx(482, 2774.7688, 2696.3203, 10.8753, 180.2587, 39, 39, 1000);
    po2car[7] = AddStaticVehicleEx(522, 2771.8625, 2697.1487, 10.3702, 178.0000, 39, 39, 1000);
    po2car[8] = AddStaticVehicleEx(522, 2768.7695, 2697.2664, 10.3863, 180.8224, 39, 39, 1000);
    po2car[9] = AddStaticVehicleEx(522, 2765.8425, 2697.2952, 10.3944, 178.0000, 39, 39, 1000);
    po2car[10] = AddStaticVehicleEx(560, 2762.9543, 2696.5488, 10.4433, 181.1971, 39, 39, 1000);
    po2car[11] = AddStaticVehicleEx(560, 2759.8853, 2696.6521, 10.4463, 180.8186, 39, 39, 1000);
    po2car[12] = AddStaticVehicleEx(470, 2756.9741, 2696.2896, 10.5423, 180.2291, 39, 39, 1000);
    po2car[13] = AddStaticVehicleEx(487, 2786.8816, 2706.5459, 20.9588, 269.2204, 39, 39, 1000);
    po2car[14] = AddStaticVehicleEx(487, 2786.1511, 2721.4390, 20.9178, 270.5044, 39, 39, 100);
    for(new ia; ia < 14; ia++) {
    CreateDynamic3DTextLabel(""ORANGE"[ La Cosa Nostra ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, po2car[ia], 0);
    }
	//Da Naga Boys
	po3car[0] = AddStaticVehicleEx(522, 1275.1835, -2009.8468, 58.5228, 180.1800, 6, 6, 1000);
	po3car[1] = AddStaticVehicleEx(482, 1263.4282, -2010.9971, 59.2380, 180.6000, 6, 6, 1000);
	po3car[2] = AddStaticVehicleEx(482, 1251.6359,-2041.9521,59.7822,   359.5501, 6, 6, 1000);
	po3car[3] = AddStaticVehicleEx(560, 1245.8625, -2018.9456, 59.3380, 269.8000, 6, 6, 1000);
	po3car[4] = AddStaticVehicleEx(560, 1245.8737, -2021.7144, 59.3380, 269.8000, 6, 6, 1000);
	po3car[5] = AddStaticVehicleEx(560, 1245.7584, -2024.5541, 59.3380, 269.8000, 6, 6, 1000);
	po3car[6] = AddStaticVehicleEx(579, 1246.2477, -2012.9518, 59.7167, -89.6400, 6, 6, 1000);
	po3car[7] = AddStaticVehicleEx(579, 1246.2528, -2009.4705, 59.7167, -89.6400, 6, 6, 1000);
	po3car[8] = AddStaticVehicleEx(522, 1273.9879, -2009.8353, 58.5228, 180.1800, 6, 6, 1000);
	po3car[9] = AddStaticVehicleEx(522, 1272.5334, -2009.8444, 58.5228, 180.1800, 6, 6, 1000);
	po3car[10] = AddStaticVehicleEx(522, 1271.1547, -2009.8146, 58.5228, 180.1800, 6, 6, 1000);
	po3car[11] = AddStaticVehicleEx(487, 1115.5388, -2053.8386, 74.4947, -88.8000, 6, 6, 1000);
	po3car[12] = AddStaticVehicleEx(487, 1115.9419, -2019.0111, 74.4947, -88.8000, 6, 6, 1000);
    for(new ia; ia < 12; ia++) {
    CreateDynamic3DTextLabel(""ORANGE"[ Da Naga Boys ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, po3car[ia], 0);
     }
	 ///////////////////////////
    po4car[1] = AddStaticVehicleEx(411,-2350.4292,-1620.2997,483.7374,254.4526,1,1,1000); // rminf2
    po4car[2] = AddStaticVehicleEx(541,-2349.3799,-1615.9619,483.6313,254.7185,1,1,1000); // rmbullet
    po4car[3] = AddStaticVehicleEx(541,-2348.5190,-1612.9185,483.6351,255.7096,1,1,1000); // rmbullet2
    po4car[4] = AddStaticVehicleEx(482,-2302.5081,-1599.5566,484.1380,165.7941,1,1,1000); // rmburrito
    po4car[5] = AddStaticVehicleEx(482,-2307.7119,-1598.4209,484.1407,164.2438,1,1,1000); // rmburrito2
    po4car[6] = AddStaticVehicleEx(470,-2340.6819,-1627.3094,484.0044,345.1909,1,1,1000); // rmpatriot
    po4car[7] = AddStaticVehicleEx(470,-2337.0142,-1628.3833,484.0049,346.1316,1,1,1000); // rmpatriot2
    po4car[8] = AddStaticVehicleEx(495,-2333.2473,-1630.1908,484.3659,346.1174,1,1,1000); // rmsandk
    po4car[9] = AddStaticVehicleEx(495,-2329.0483,-1631.4257,484.3690,347.1705,1,1,1000); // rmsandk2
    po4car[10] = AddStaticVehicleEx(522,-2348.2129,-1609.5632,483.5796,253.3019,1,1,1000); // rmnrg
    po4car[11] = AddStaticVehicleEx(522,-2347.6382,-1607.5699,483.5718,257.2459,1,1,1000); // rmnrg2
    po4car[12] = AddStaticVehicleEx(522,-2346.4919,-1605.0996,483.5927,250.6332,1,1,1000); // rmnrg3
    po4car[13] = AddStaticVehicleEx(522,-2347.1260,-1606.3203,483.5810,252.4836,1,1,1000); // rmnrg4
    po4car[14] = AddStaticVehicleEx(560,-2306.3474,-1612.7438,483.7238,75.7125,1,1,1000); // rmsultan
    po4car[15] = AddStaticVehicleEx(560,-2307.7432,-1616.3022,483.7229,77.8542,1,1,1000); // rmsultan2
    po4car[16] = AddStaticVehicleEx(560,-2308.6741,-1619.5992,483.7216,76.1082,1,1,1000); // rmsultan3
    po4car[17] = AddStaticVehicleEx(560,-2310.0544,-1623.6426,483.7218,74.8463,1,1,1000); // rmsultan4
    po4car[18] = AddStaticVehicleEx(463,-2345.9590,-1603.4484,483.5609,249.6391,1,1,1000); // rmfw
    po4car[19] = AddStaticVehicleEx(463,-2345.6704,-1602.0095,483.5593,246.6249,1,1,1000); // rmfw2
    po4car[20] = AddStaticVehicleEx(489,-2319.4021,-1590.9139,484.1624,166.7399,1,1,1000); // rmrancher
    po4car[21] = AddStaticVehicleEx(489,-2305.5999,-1608.3096,484.1617,72.5503,1,1,1000); // rmrancher2
    po4car[22] = AddStaticVehicleEx(579,-2324.4944,-1632.0216,483.9483,345.4209,1,1,1000); // rmhuntley
    po4car[23] = AddStaticVehicleEx(579,-2320.7278,-1633.1305,483.9531,346.4305,1,1,1000); // rmhuntley2
    po4car[24] = AddStaticVehicleEx(487,-2322.0129,-1612.5844,484.1936,173.1062,29,42,1000); // rmmawerick
    po4car[25] = AddStaticVehicleEx(487,-2332.3518,-1611.1740,484.1872,174.8702,29,42,1000); // rmmawerick
	 ///////////////////////////
    for(new ia; ia < 25; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ Russia Mafia ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, po4car[ia], 0);
     }
     
    Smithcar[0] = AddStaticVehicleEx(482, -2183.6643, -209.0805, 36.9718, 269.4010, 0, 0, 100);
	Smithcar[1] = AddStaticVehicleEx(482, -2148.8984, -187.3290, 35.4330, 359.8000, 0, 0, 100);
	Smithcar[2] = AddStaticVehicleEx(495, -2132.8853, -113.6451, 35.4612, 178.0000, 0, 0, 100);
	Smithcar[3] = AddStaticVehicleEx(495, -2128.7183, -113.5954, 35.4612, 178.0000, 0, 0, 100);
	Smithcar[4] = AddStaticVehicleEx(470, -2124.6155, -113.6057, 34.9206, 178.0000, 0, 0, 100);
	Smithcar[5] = AddStaticVehicleEx(470, -2120.2092, -113.5458, 35.0166, 177.9000, 0, 0, 100);
	Smithcar[6] = AddStaticVehicleEx(410, -2114.1677, -118.8455, 35.2311, 90.5209, 0, 0, 100);
	Smithcar[7] = AddStaticVehicleEx(410, -2114.3647, -123.0063, 35.2311, 90.5209, 0, 0, 100);
	Smithcar[8] = AddStaticVehicleEx(410, -2113.7356, -126.6887, 34.9146, 91.0000, 0, 0, 100);
	Smithcar[9] = AddStaticVehicleEx(560, -2113.8169, -130.7579, 34.9158, 91.0000, 0, 0, 100);
	Smithcar[10] = AddStaticVehicleEx(560, -2113.8003, -134.3698, 34.9158, 91.0000, 0, 0, 100);
	Smithcar[11] = AddStaticVehicleEx(522, -2113.2520, -138.8742, 34.7521, 86.0000, 0, 0, 100);
	Smithcar[12] = AddStaticVehicleEx(522, -2113.4612, -140.6583, 34.7521, 86.0000, 0, 0, 100);
	Smithcar[13] = AddStaticVehicleEx(522, -2113.5186, -142.4716, 34.7521, 86.0000, 0, 0, 100);
	Smithcar[14] = AddStaticVehicleEx(522, -2113.4175, -144.0182, 34.7521, 86.0000, 0, 0, 100);
     
    for(new ia; ia < 14; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ Narco Cartel ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, Smithcar[ia], 0);
     }
     //loca car
    Locacar[0] = CreateVehicle(482, 17.1401, -1898.1136, 4.4472, 178.0000, 0, 0, 100);
    Locacar[1] = CreateVehicle(560, 17.2729, -1911.9948, 4.4493, 0.0000, 0, 0, 100);
    Locacar[2] = CreateVehicle(560, 12.3362, -1911.8126, 4.4493, 0.0000, 0, 0, 100);
	Locacar[3] = CreateVehicle(560, 7.2950, -1911.7673, 4.4493, 0.0000, 0, 0, 100);
	Locacar[4] = CreateVehicle(411, 2.2191, -1911.7526, 4.3468, 0.0000, 0, 0, 100);
	Locacar[5] = CreateVehicle(411, -2.8345, -1911.4534, 4.4468, 0.0000, 0, 0, 100);
	Locacar[6] = CreateVehicle(541, -8.0797, -1911.9568, 3.9394, 0.0000, 0, 0, 100);
	Locacar[7] = CreateVehicle(541, -13.0685, -1912.0244, 3.8364, 0.0000, 0, 0, 100);
	Locacar[8] = CreateVehicle(451, -18.0605, -1911.3793, 3.9442, 0.0000, 0, 0, 100);
	Locacar[9] = CreateVehicle(451, -17.8081, -1897.4236, 4.2460, 178.0000, 0, 0, 100);
	Locacar[10] = CreateVehicle(451, -12.9608, -1897.5886, 4.3460, 178.0000, 0, 0, 100);
	Locacar[11] = CreateVehicle(495, -7.7650, -1897.8408, 4.7468, 178.0000, 0, 0, 100);
	Locacar[12] = CreateVehicle(495, -2.6306, -1897.7313, 4.7468, 178.0000, 0, 0, 100);
	Locacar[13] = CreateVehicle(495, 2.2909, -1897.5730, 4.7468, 178.0000, 0, 0, 100);
	Locacar[14] = CreateVehicle(495, 7.3520, -1897.5337, 4.7468, 178.0000, 0, 0, 100);
	Locacar[15] = CreateVehicle(482, 12.0392, -1897.8613, 4.4472, 178.0000, 0, 0, 100);
	Locacar[16] = CreateVehicle(487, -40.0064, -1916.3431, 4.5468, -98.0000, 0, 0, 100);

    for(new ia; ia < 16; ia++) {
    CreateDynamic3DTextLabel(""CRVENA"[ Loca Cartel ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, Locacar[ia], 0);
     }
    //Taxi(label tag taxicarl)
	taxicar[0] = AddStaticVehicleEx(420, 1278.1136, -1797.4867, 12.9362, 89.3400, 6, 6, 1000);
	taxicar[1] = AddStaticVehicleEx(420, 1278.0499, -1801.3730, 12.9362, 89.3400, 6, 6, 1000);
	taxicar[2] = AddStaticVehicleEx(420, 1277.9862, -1805.2594, 12.9362, 89.3400, 6, 6, 1000);
	taxicar[3] = AddStaticVehicleEx(420, 1277.9252, -1808.9758, 12.9362, 89.3400, 6, 6, 1000);
	taxicar[4] = AddStaticVehicleEx(420, 1277.8615, -1812.8622, 12.9362, 89.3400, 6, 6, 1000);
	taxicar[5] = AddStaticVehicleEx(420, 1277.7953, -1816.4747, 12.9362, 89.3400, 6, 6, 1000);
	taxicar[6] = AddStaticVehicleEx(438, 1277.7340, -1819.8191, 12.9362, 89.3400, 6, 6, 1000);
	taxicar[7] = AddStaticVehicleEx(438, 1277.6619, -1823.4314, 12.9362, 89.3400, 6, 6, 1000);
	for(new ia; ia < 7; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ Taxi ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, taxicar[ia], 0);
     }
	fbicar[1] = AddStaticVehicleEx(528, 1328.6552, -1379.9443, 13.5124, 0.0000, 10 , 10, 100);
	fbicar[2] = AddStaticVehicleEx(528, 1323.6844, -1379.8521, 13.5124, 0.0000, 10 , 10, 100);
	fbicar[3] = AddStaticVehicleEx(528, 1318.9115, -1379.7703, 13.5124, 0.0000, 10 , 10, 100);
	fbicar[4] = AddStaticVehicleEx(601, 1313.8887, -1379.7855, 13.5124, 0.0000, 10 , 10, 100);
	fbicar[5] = AddStaticVehicleEx(601, 1308.7114, -1380.1683, 13.5124, 0.0000, 10 , 10, 100);
	fbicar[6] = AddStaticVehicleEx(560, 1328.9493, -1295.8500, 13.1805, 180.9000, 10 , 10, 100);
	fbicar[7] = AddStaticVehicleEx(560, 1324.5796, -1295.9325, 13.1805, 180.9000, 10 , 10, 100);
	fbicar[8] = AddStaticVehicleEx(427, 1319.7428, -1295.8987, 13.1805, 180.9000, 10 , 10, 100);
	fbicar[9] = AddStaticVehicleEx(490, 1313.7804, -1295.8750, 13.4960, 179.8200, 10 , 10, 100);
	fbicar[10] = AddStaticVehicleEx(490, 1309.3649, -1295.6036, 13.4960, 179.8200, 10 , 10, 100);
	fbicar[11] = AddStaticVehicleEx(490, 1304.3120, -1296.2833, 13.4960, 179.8200, 10 , 10, 100);
	for(new ia; ia < 11; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[Federal Bureau of Investigation ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, fbicar[ia], 0);
     }
	vatra[0] = CreateVehicle(407, 206.9240, -1444.7463, 13.5859, -41.0000, 3, 3, 100);
	vatra[1] = CreateVehicle(407, 226.6791, -1425.0059, 13.5859, 133.0000, 3, 3, 100);
	vatra[2] = CreateVehicle(407, 221.6405, -1413.4132, 13.5859, 133.0000, 3, 3, 100);
	vatra[3] = CreateVehicle(407, 224.2339, -1418.9976, 13.5859, 133.0000, 3, 3, 100);
	vatra[4] = CreateVehicle(490, 200.1830, -1452.5914, 13.5273, -41.0000, 3, 3, 100);
	for(new ia; ia < 11; ia++) {
    CreateDynamic3DTextLabel(""SIVA"[Vatrogasci ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vatra[ia], 0);
     }
	//SA CAR
	sacar[0] = AddStaticVehicleEx(560,1050.0999800,-361.5000000,73.8000000,267.9950000,0,0,1000); //Sultan
	sacar[1] = AddStaticVehicleEx(560,1050.3000500,-354.5000000,73.8000000,267.9950000,0,0,1000); //Sultan
	sacar[2] = AddStaticVehicleEx(560,1050.4000200,-357.8999900,73.8000000,267.9950000,0,0,1000); //Sultan
	sacar[3] = AddStaticVehicleEx(560,1050.3000500,-350.7999900,73.8000000,267.9950000,0,0,1000); //Sultan
	sacar[4] = AddStaticVehicleEx(505,1072.4000200,-348.5000000,74.3000000,90.0000000,0,0,1000); //FBI Rancher
	sacar[5] = AddStaticVehicleEx(505,1072.9000200,-353.7000100,74.3000000,90.0000000,0,0,1000); //FBI Rancher
	sacar[6] = AddStaticVehicleEx(505,1072.6999500,-359.5000000,74.3000000,90.0000000,0,0,1000); //FBI Rancher
	sacar[7] = AddStaticVehicleEx(461,1100.9000200,-361.1000100,73.7000000,0.0000000,0,0,1000); //PCJ-600
	sacar[8] = AddStaticVehicleEx(461,1103.3000500,-361.0000000,73.7000000,0.0000000,0,0,1000); //PCJ-600
	sacar[9] = AddStaticVehicleEx(461,1105.8000500,-360.8999900,73.7000000,0.0000000,0,0,1000); //PCJ-600
	sacar[10] = AddStaticVehicleEx(461,1108.5000000,-361.0000000,73.7000000,0.0000000,0,0,1000); //PCJ-600
	sacar[11] = AddStaticVehicleEx(461,1111.5999800,-361.1000100,73.7000000,0.0000000,0,0,1000); //PCJ-600
	sacar[12] = AddStaticVehicleEx(411,1107.3000500,-319.1000100,73.8000000,0.0000000,0,0,1000); //Infernus
	sacar[13] = AddStaticVehicleEx(411,1105.9000200,-298.8999900,73.8000000,179.9950000,0,0,1000); //Infernus
	sacar[14] = AddStaticVehicleEx(409,1110.1999500,-343.5000000,73.9000000,87.9970000,0,0,1000); //Stretch
	sacar[15] = AddStaticVehicleEx(487,1070.0999800,-306.1000100,74.8000000,178.0000000,0,0,1000); //Maverick
	sacar[16] = AddStaticVehicleEx(487,1055.9000200,-306.2999900,74.8000000,181.9950000,0,0,1000); //Maverick
	for(new ia; ia < 16; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ Hitman ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, sacar[ia], 0);
     }
	///////////////////////////////////////////////////////////////////////////////////////////////////
	rbcar[0] = AddStaticVehicleEx(560, 2303.9763, 549.8203, 7.2845, 0.0000, 1,1, 1000);
	rbcar[1] = AddStaticVehicleEx(409, 2357.0879, 562.8549, 7.5156, 0.0000, 1, 1, 100);
	rbcar[2] = AddStaticVehicleEx(409, 2356.8730, 590.3546, 7.5156, 0.0000, 1, 1, 100);
	rbcar[3] = AddStaticVehicleEx(522, 2344.2395, 548.4275, 7.3478, 0.0000, 1, 1, 100);
	rbcar[4] = AddStaticVehicleEx(522, 2342.4800, 548.4275, 7.3478, 0.0000, 1, 1, 100);
	rbcar[5] = AddStaticVehicleEx(522, 2340.7793, 548.4275, 7.3478, 0.0000, 1, 1, 100);
	rbcar[6] = AddStaticVehicleEx(522, 2339.1162, 548.4275, 7.3478, 0.0000, 1, 1, 100);
	rbcar[7] = AddStaticVehicleEx(482, 2336.0186, 549.5064, 7.8657, 0.0000, 1, 1, 100);
	rbcar[8] = AddStaticVehicleEx(454, 2361.3689, 518.2098, 0.6286, 90.0000, 1, 1, 100);
	rbcar[9] = AddStaticVehicleEx(560, 2326.4836, 549.1366, 7.4439, 0.0000, 1, 1, 100);
	rbcar[10] = AddStaticVehicleEx(560, 2322.6809, 549.1366, 7.4439, 0.0000, 1, 1, 100);
	rbcar[11] = AddStaticVehicleEx(560, 2318.8235, 549.1366, 7.4439, 0.0000, 1, 1, 100);
	rbcar[12] = AddStaticVehicleEx(560, 2315.1326, 549.1366, 7.4439, 0.0000, 1, 1, 100);
	rbcar[13] = AddStaticVehicleEx(495, 2283.8789, 549.2151, 8.0664, 0.0000, 1, 1, 100);
	rbcar[14] = AddStaticVehicleEx(495, 2279.2271, 549.2151, 8.0664, 0.0000, 1, 1, 100);
	rbcar[15] = AddStaticVehicleEx(495, 2274.4460, 549.2151, 8.0664, 0.0000, 1, 1, 100);
	rbcar[16] = AddStaticVehicleEx(495, 2269.6580, 549.2151, 8.0664, 0.0000, 1, 1, 100);
	rbcar[17] = AddStaticVehicleEx(411, 2264.1978, 549.4542, 7.5571, 0.0000, 1, 1, 100);
	rbcar[18] = AddStaticVehicleEx(411, 2259.9775, 549.4542, 7.5571, 0.0000, 1, 1, 100);
	rbcar[19] = AddStaticVehicleEx(411, 2255.7964, 549.4542, 7.5571, 0.0000, 1, 1, 100);
	rbcar[20] = AddStaticVehicleEx(411, 2251.4951, 549.4542, 7.5571, 0.0000, 1, 1, 100);
	rbcar[21] = AddStaticVehicleEx(541, 2245.4346, 595.7227, 7.4454, 180.0000, 1, 1, 100);
	rbcar[22] = AddStaticVehicleEx(541, 2249.4543, 595.7227, 7.4454, 180.0000, 1, 1, 100);
	rbcar[23] = AddStaticVehicleEx(541, 2253.3760, 595.7227, 7.4454, 180.0000, 1, 1, 100);
	rbcar[24] = AddStaticVehicleEx(541, 2257.3574, 595.7227, 7.4454, 180.0000, 1, 1, 100);
	rbcar[25] = AddStaticVehicleEx(470, 2261.5645, 595.2266, 7.5310, 180.0000, 1, 1, 100);
	rbcar[26] = AddStaticVehicleEx(470, 2265.6431, 595.2266, 7.5310, 180.0000, 1, 1, 100);
	rbcar[27] = AddStaticVehicleEx(470, 2269.3652, 595.2266, 7.5310, 180.0000, 1, 1, 100);
	rbcar[28] = AddStaticVehicleEx(487, 2310.4373, 589.4359, 7.9415, 180.0000, 1, 1, 100);
	rbcar[29] = AddStaticVehicleEx(487, 2327.2773, 589.4359, 7.9415, 180.0000, 1, 1, 100);
	rbcar[30] = AddStaticVehicleEx(487, 2343.5215, 589.4359, 7.9415, 180.0000, 1, 1, 100);
	rbcar[31] = AddStaticVehicleEx(493, 2344.8340, 534.6342, 0.9314, 180.0000, 1, 1, 100);
	rbcar[32] = AddStaticVehicleEx(493, 2374.9575, 534.5671, 0.9314, 180.0000, 1, 1, 100);
	rbcar[33] = AddStaticVehicleEx(454, 2361.3689, 518.2098, 0.6286, 90.0000, 1, 1, 100);
	for(new ia; ia < 33; ia++) {
    CreateDynamic3DTextLabel(""ZELENA"[ BCC ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, rbcar[ia], 0);
     }
	//////////////////////////////////////////////////////////////////////////////////////
	basecar[0] = AddStaticVehicleEx(470, -62.0549, -310.9099, 5.3544, -90.0000, 39, 39, 1000);
    basecar[1] = AddStaticVehicleEx(470, -62.0549, -307.5201, 5.3544, -90.0000, 39, 39, 1000);
    basecar[2] = AddStaticVehicleEx(470, -62.0549, -303.9648, 5.3544, -90.0000, 39, 39, 1000);
    basecar[3] = AddStaticVehicleEx(470, -62.0549, -300.4935, 5.3544, -90.0000, 39, 39, 1000);
    basecar[4] = AddStaticVehicleEx(451, -62.0549, -325.0389, 5.2226, -90.0000, 39, 39, 1000);
    basecar[5] = AddStaticVehicleEx(451, -62.0549, -321.5771, 5.2226, -90.0000, 39, 39, 1000);
    basecar[6] = AddStaticVehicleEx(451, -62.0549, -318.0496, 5.2226, -90.0000, 39, 39, 1000);
    basecar[7] = AddStaticVehicleEx(522, -31.3636, -296.9704, 5.2471, -90.0000, 39, 39, 1000);
    basecar[8] = AddStaticVehicleEx(522, -31.3636, -293.4564, 5.2471, -90.0000, 39, 39, 1000);
    basecar[9] = AddStaticVehicleEx(522, -31.3636, -287.0561, 5.2471, -90.0000, 39, 39, 1000);
    basecar[10] = AddStaticVehicleEx(522, -31.3636, -290.2776, 5.2471, -90.0000, 39, 39, 1000);
    basecar[11] = AddStaticVehicleEx(541, -1.0123, -311.8344, 5.1401, 90.0000, 39, 39, 1000);
    basecar[12] = AddStaticVehicleEx(541, -1.0123, -315.5802, 5.1401, 90.0000, 39, 39, 1000);
    basecar[13] = AddStaticVehicleEx(541, -1.0123, -308.1908, 5.1401, 90.0000, 39, 39, 1000);
    basecar[14] = AddStaticVehicleEx(409, -0.9311, -301.0499, 5.4618, 90.0000, 39, 39, 1000);
    basecar[15] = AddStaticVehicleEx(579, -1.2100, -322.6731, 5.6751, 90.0000, 39, 39, 1000);
    basecar[16] = AddStaticVehicleEx(579, -1.2100, -325.9672, 5.6751, 90.0000, 39, 391, 1000);
    basecar[17] = AddStaticVehicleEx(579, -1.2100, -329.3859, 5.6751, 90.0000, 39, 39, 1000);
    basecar[18] = AddStaticVehicleEx(579, -1.2100, -332.8645, 5.6751, 90.0000, 39, 39, 1000);
    basecar[19] = AddStaticVehicleEx(482, -1.1720, -339.8088, 5.6241, 90.0000, 39, 39, 1000);
    basecar[20] = AddStaticVehicleEx(482, -1.1720, -343.4731, 5.6241, 90.0000, 39, 39, 1000);
    basecar[21] = AddStaticVehicleEx(482, -1.1720, -347.0335, 5.6241, 90.0000, 39, 39, 1000);
    basecar[22] = AddStaticVehicleEx(482, -1.1720, -350.4224, 5.6241, 90.0000, 39, 39, 1000);
    basecar[23] = AddStaticVehicleEx(560, -31.3636, -280.4329, 4.4175, 90.0000, 39, 39, 1000);
    basecar[24] = AddStaticVehicleEx(560, -31.3636, -276.5734, 4.4175, 90.0000, 39, 39, 1000);
    basecar[25] = AddStaticVehicleEx(560, -31.3636, -273.1429, 4.4175, 90.0000, 39, 39, 1000);
    basecar[26] = AddStaticVehicleEx(487, -15.5457, -369.0887, 5.6979, 0.0000, 6, 6, 100);
	basecar[27] = AddStaticVehicleEx(487, -28.8888, -368.8464, 5.4363, 0.0000, 6, 6, 100);
	basecar[28] = AddStaticVehicleEx(487, -41.6055, -369.2800, 5.4363, 0.0000, 6, 6, 100);
	for(new ia; ia < 28; ia++) {
    CreateDynamic3DTextLabel(""ZELENA"[ YAKUZA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, basecar[ia], 0);
     }
     ///////////////////////RENT MOTORA VOZILA///////////////////////
    motorent[0] = AddStaticVehicleEx(462, 808.9613, -1345.2709, 13.1406, 89.4185,201,201,2400);
    motorent[1] = AddStaticVehicleEx(462, 1438.9204, -1040.0199, 23.5260, 0.0000,201,201,2400);
	motorent[2] = AddStaticVehicleEx(462, 1437.4274, -1039.9282, 23.5260, 0.0000,201,201,2400);
	motorent[3] = AddStaticVehicleEx(462, 1435.5192, -1039.9233, 23.5260, 0.0000,201,201,2400);
	motorent[4] = AddStaticVehicleEx(462, 1434.0934, -1039.9482, 23.5260, 0.0000,201,201,2400);
	motorent[5] = AddStaticVehicleEx(462, 1216.5587, -953.1153, 42.3742, 0.0000,201,201,2400);
	motorent[6] = AddStaticVehicleEx(462, 1219.7450, -952.3152, 42.3742, 0.0000,201,201,2400);
	motorent[7] = AddStaticVehicleEx(462, 1221.7434, -951.9762, 42.3742, 0.0000,201,201,2400);
	motorent[8] = AddStaticVehicleEx(462, 1213.9727, -953.6320, 42.3742, 0.0000,201,201,2400);
	motorent[9] = AddStaticVehicleEx(462, 1397.2959, -2261.3372, 13.1577, 0.0000,201,201,2400);
	motorent[10] = AddStaticVehicleEx(462, 1384.4526, -2261.6780, 13.1577, 0.0000,201,201,2400);
	motorent[11] = AddStaticVehicleEx(462, 1394.0929, -2261.3765, 13.1577, 0.0000,201,201,2400);
	motorent[12] = AddStaticVehicleEx(462, 1390.7766, -2261.4023, 13.1577, 0.0000,201,201,2400);
	motorent[13] = AddStaticVehicleEx(462, 1387.5261, -2261.5439, 13.1577, 0.0000,201,201,2400);
	motorent[14] = AddStaticVehicleEx(462, 411.0201, -1558.1271, 28.0124, -124.1800,201,201,2400);
	motorent[15] = AddStaticVehicleEx(462, 411.8450, -1556.6165, 28.0124, -124.7200,201,201,2400);
	motorent[16] = AddStaticVehicleEx(462, 410.0850, -1559.9305, 28.0124, -110.5600,201,201,2400);
	motorent[17] = AddStaticVehicleEx(462, 409.4992, -1561.5331, 28.0124, -98.6200,201,201,2400);
	motorent[18] = AddStaticVehicleEx(462, 409.3329, -1563.3660, 28.0124, -91.4800,201,201,2400);
	motorent[19] = AddStaticVehicleEx(462, 409.1905, -1565.3430, 28.0124, -91.4800,201,201,2400);
	motorent[20] = AddStaticVehicleEx(462, 427.1223, -1544.6428, 27.3127, -222.7799,201,201,2400);
	motorent[21] = AddStaticVehicleEx(462, 427.9088, -1546.2815, 27.3127, -236.3999,201,201,2400);
	motorent[22] = AddStaticVehicleEx(462, 428.6197, -1548.0071, 27.3127, -240.6000,201,201,2400);
	motorent[23] = AddStaticVehicleEx(462, 429.2118, -1549.9280, 27.3127, -239.8199,201,201,2400);
	motorent[24] = AddStaticVehicleEx(462, 160.8280, -1880.3981, 3.5685, 83.7365,201,201,2400);
	motorent[25] = AddStaticVehicleEx(462, 160.8967, -1883.2552, 3.5685, 83.7365,201,201,2400);
	motorent[26] = AddStaticVehicleEx(462, 160.9497, -1886.3792, 3.5685, 83.7365,201,201,2400);
	motorent[27] = AddStaticVehicleEx(462, 161.0423, -1889.7844, 3.5685, 83.7365,201,201,2400);
	motorent[28] = AddStaticVehicleEx(462, 148.7663, -1883.2245, 3.3790, 262.5499,201,201,2400);
	motorent[29] = AddStaticVehicleEx(462, 148.6719, -1886.0930, 3.3790, 262.5499,201,201,2400);
	motorent[30] = AddStaticVehicleEx(462, 148.5768, -1880.4812, 3.3790, 262.5499,201,201,2400);
	motorent[31] = AddStaticVehicleEx(462, 148.6624, -1888.7333, 3.3790, 262.5499,201,201,2400);
	motorent[32] = AddStaticVehicleEx(462, 148.6856, -1891.5555, 3.3790, 262.5499,201,201,2400);
	motorent[33] = AddStaticVehicleEx(462, 160.7845, -1892.0923, 3.5685, 83.7365,201,201,2400);

	for(new ia; ia < 33; ia++)
    {
        CreateDynamic3DTextLabel(""SRWBOJA"[ RENT MOTORA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, motorent[ia], 0);
    }
    ///////////////////////////////////////////////////////
	autorent[0] = AddStaticVehicleEx(401, 1560.0972, -2308.8193, 13.1798, 91.0000,201,201,2400);
	autorent[1] = AddStaticVehicleEx(401, 1560.6619, -2312.2798, 13.1798, 91.0000,201,201,2400);
	autorent[2] = AddStaticVehicleEx(401, 1560.5140, -2315.4985, 13.1798, 91.0000,201,201,2400);
	autorent[3] = AddStaticVehicleEx(401, 1560.3112, -2318.7061, 13.1798, 91.0000,201,201,2400);
	autorent[4] = AddStaticVehicleEx(401, 1560.3617, -2322.1309, 13.1798, 91.0000,201,201,2400);
	autorent[5] = AddStaticVehicleEx(401, 1560.5559, -2325.3564, 13.1798, 91.0000,201,201,2400);
	autorent[6] = AddStaticVehicleEx(401, 1560.4648, -2328.4714, 13.1798, 91.0000,201,201,2400);
	autorent[7] = AddStaticVehicleEx(401, 1560.3696, -2331.8074, 13.1798, 91.0000,201,201,2400);
	autorent[8] = AddStaticVehicleEx(401, 1560.3162, -2335.1602, 13.1798, 91.0000,201,201,2400);
	autorent[9] = AddStaticVehicleEx(401, 1560.4148, -2338.4019, 13.1798, 91.0000,201,201,2400);
	autorent[10] = AddStaticVehicleEx(405, 1544.3507, -1724.7429, 13.2490, 180.3392,201,201,2400);
	autorent[11] = AddStaticVehicleEx(405, 1547.8535, -1724.6622, 13.2490, 180.3392,201,201,2400);
	autorent[12] = AddStaticVehicleEx(405, 1552.0306, -1724.7401, 13.2490, 180.3392,201,201,2400);
	autorent[13] = AddStaticVehicleEx(405, 513.7192, -1253.1108, 16.0360, 0.0000,201,201,2400);
	autorent[14] = AddStaticVehicleEx(405, 517.4841, -1251.1359, 16.0360, 0.0000,201,201,2400);
	autorent[15] = AddStaticVehicleEx(405, 527.0030, -1243.3137, 16.3370, 0.0000,201,201,2400);
	autorent[16] = AddStaticVehicleEx(405, 530.6713, -1240.2257, 16.4380, 0.0000,201,201,2400);
	autorent[17] = AddStaticVehicleEx(585, 1400.7615, -2261.1589, 13.1899, 0.0000,201,201,2400);
	autorent[18] = AddStaticVehicleEx(585, 1413.7719, -2261.3938, 13.1899, 0.0000,201,201,2400);
	autorent[19] = AddStaticVehicleEx(585, 1410.3796, -2261.3860, 13.1899, 0.0000,201,201,2400);
	autorent[20] = AddStaticVehicleEx(585, 1407.1219, -2261.3789, 13.1899, 0.0000,201,201,2400);
	autorent[21] = AddStaticVehicleEx(585, 1403.9415, -2261.2722, 13.1899, 0.0000,201,201,2400);
	
	for(new ia; ia < 21; ia++)
    {
        CreateDynamic3DTextLabel(""SRWBOJA"[ RENT AUTA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, autorent[ia], 0);
    }
    ///////////////////////LSPD VOZILA//////////////////////////////////////////////
    policecar[0] = AddStaticVehicleEx(601,1584.7368,-1667.7959,5.6535,269.5010,79,79,100000,1); //
    policecar[1] = AddStaticVehicleEx(601,1584.9166,-1671.7932,5.6567,266.4415,79,79,100000,1); //
    policecar[2] = AddStaticVehicleEx(596,1601.7339,-1684.0460,5.6104,89.4424,0,1,1000,1); //
    policecar[3] = AddStaticVehicleEx(596,1601.5808,-1688.1733,5.6174,88.2674,0,1,1000,1); //
    policecar[4] = AddStaticVehicleEx(596,1601.5415,-1692.0887,5.6176,89.3647,0,1,1000,1); //
    policecar[5] = AddStaticVehicleEx(596,1601.5051,-1696.2206,5.6339,89.4700,0,1,1000,1); //
    policecar[6] = AddStaticVehicleEx(596,1601.5486,-1699.9568,5.6171,89.0717,0,1,1000,1); //
    policecar[7] = AddStaticVehicleEx(596,1601.5427,-1704.2527,5.6213,87.6995,0,1,1000,1); //
    policecar[8] = AddStaticVehicleEx(560,1595.5632,-1711.6532,6.0970,358.2355,0,1,1000,1); //
    policecar[9] = AddStaticVehicleEx(560,1591.3987,-1711.6128,5.9946,0.0566,0,1,1000,1); //
    policecar[10] = AddStaticVehicleEx(599,1587.5619,-1711.6483,6.0967,359.1454,0,1,1000,1); //
    policecar[11] = AddStaticVehicleEx(599,1583.3173,-1711.7200,6.0944,0.3282,0,1,1000,1); //
    policecar[12] = AddStaticVehicleEx(599,1578.7839,-1711.6694,6.1094,358.8447,0,1,1000,1); //
    policecar[13] = AddStaticVehicleEx(523,1574.5072,-1711.5969,5.4541,357.9977,0,1,1000,1); //
    policecar[14] = AddStaticVehicleEx(523,1570.2257,-1711.5991,5.4522,355.2889,0,1,1000,1); //
    policecar[15] = AddStaticVehicleEx(523,1566.3562,-1711.5674,5.4540,0.1485,0,1,1000,1); //
    policecar[16] = AddStaticVehicleEx(523,1562.4592,-1711.5630,5.4557,0.0835,0,1,1000,1); //
    policecar[17] = AddStaticVehicleEx(523,1558.4421,-1711.4493,5.4525,357.6365,0,1,1000,1); //
    policecar[18] = AddStaticVehicleEx(528,1528.7146,-1688.0525,5.9330,269.1443,0,1,1000,1); //
    policecar[19] = AddStaticVehicleEx(528,1528.9067,-1683.7241,5.9345,267.5096,0,1,1000,1); //
    policecar[20] = AddStaticVehicleEx(559,1545.6238,-1684.4012,6.0208,88.3610,1,1,1000,1); //
    policecar[21] = AddStaticVehicleEx(559,1545.7035,-1680.1997,6.0197,89.8517,0,0,1000,1); //
    policecar[22] = AddStaticVehicleEx(559,1545.7408,-1676.2264,6.0220,89.2174,1,1,1000,1); //
    policecar[23] = AddStaticVehicleEx(559,1545.7916,-1672.0359,6.0198,89.6051,0,0,1000,1); //
    policecar[24] = AddStaticVehicleEx(427,1545.3751,-1667.9617,6.0247,89.1419,0,1,1000,1); //
    policecar[25] = AddStaticVehicleEx(427,1545.3838,-1663.3464,6.0228,90.3053,0,1,1000,1); //
    policecar[26] = AddStaticVehicleEx(427,1545.3019,-1659.0342,6.0252,88.3446,0,1,1000,1); //
    policecar[27] = AddStaticVehicleEx(541,1538.6786,-1645.2246,5.5165,178.8359,0,0,1000,1); //
    policecar[28] = AddStaticVehicleEx(541,1534.6016,-1645.3502,5.5068,177.8562,0,0,1000,1); //
    policecar[29] = AddStaticVehicleEx(541,1530.4916,-1645.3164,5.5116,178.9140,0,0,1000,1); //
    policecar[30] = CreateVehicle(497,1565.59997559,-1651.69995117,28.70000076,90.00000000,0,1,1000); //Police Maverick
    policecar[31] = CreateVehicle(497,1566.19995117,-1698.30004883,28.70000076,90.00000000,0,1,1000); //Police Maverick

	for(new ia; ia < 31; ia++) {
    CreateDynamic3DTextLabel(""SPLAVA"[ Policija ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, policecar[ia], 0);
     }
   	new patrolnum[6];
	patrolnum[0] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolnum[1] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolnum[2] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolnum[3] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolnum[4] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolnum[5] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	AttachDynamicObjectToVehicle(patrolnum[0], policecar[2], 0, -0.7982, 0.814, -90, 0, 0);
	AttachDynamicObjectToVehicle(patrolnum[1], policecar[3], 0, -0.7982, 0.814, -90, 0, 0);
	AttachDynamicObjectToVehicle(patrolnum[2], policecar[4], 0, -0.7982, 0.814, -90, 0, 0);
	AttachDynamicObjectToVehicle(patrolnum[3], policecar[5], 0, -0.7982, 0.814, -90, 0, 0);
	AttachDynamicObjectToVehicle(patrolnum[4], policecar[6], 0, -0.7982, 0.814, -90, 0, 0);
	AttachDynamicObjectToVehicle(patrolnum[5], policecar[7], 0, -0.7982, 0.814, -90, 0, 0);
	SetDynamicObjectMaterialText(patrolnum[0], 0, "208", 130, "Arial", 160, 1, -16777216, 0, 1);
	SetDynamicObjectMaterialText(patrolnum[1], 0, "223", 130, "Arial", 160, 1, -16777216, 0, 1);
	SetDynamicObjectMaterialText(patrolnum[2], 0, "289", 130, "Arial", 160, 1, -16777216, 0, 1);
	SetDynamicObjectMaterialText(patrolnum[3], 0, "346", 130, "Arial", 160, 1, -16777216, 0, 1);
	SetDynamicObjectMaterialText(patrolnum[4], 0, "415", 130, "Arial", 160, 1, -16777216, 0, 1);
	SetDynamicObjectMaterialText(patrolnum[5], 0, "679", 130, "Arial", 160, 1, -16777216, 0, 1);
	new patrolrot[9];
	patrolrot[0] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[1] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[2] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[3] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[4] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[5] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[6] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[7] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	patrolrot[8] = CreateDynamicObject(19620, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	AttachDynamicObjectToVehicle(patrolrot[0], policecar[8], 0, -0.3, 0.87, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[1], policecar[9], 0, -0.3, 0.87, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[2], policecar[27], 0, -0.3, 0.68, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[3], policecar[28], 0, -0.3, 0.68, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[4], policecar[29], 0, -0.3, 0.68, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[5], policecar[20], 0, -0.3, 0.75, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[6], policecar[21], 0, -0.3, 0.75, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[7], policecar[22], 0, -0.3, 0.75, 0, 0, 0);
	AttachDynamicObjectToVehicle(patrolrot[8], policecar[23], 0, -0.3, 0.75, 0, 0, 0);
	////////////////////////////////Interventna VOZILO//////////////////
    lvpdvozila[0] = AddStaticVehicleEx(560,1216.0000000,-1650.0000000,11.6000000,270.0000000,0,0,1000); //Sultan
    lvpdvozila[1] = AddStaticVehicleEx(560,1216.0000000,-1655.0000000,11.6000000,270.0000000,0,0,1000); //Sultan
    lvpdvozila[2] = AddStaticVehicleEx(560,1216.0000000,-1640.0000000,11.6000000,270.0000000,0,0,1000); //Sultan
    lvpdvozila[3] = AddStaticVehicleEx(560,1216.0000000,-1645.0000000,11.6000000,270.0000000,0,0,1000); //Sultan
    lvpdvozila[4] = AddStaticVehicleEx(490,1217.0000000,-1665.0000000,12.1000000,270.0000000,0,0,1000); //FBI Rancher
    lvpdvozila[5] = AddStaticVehicleEx(490,1217.0000000,-1660.0000000,12.1000000,270.0000000,0,0,1000); //FBI Rancher
    lvpdvozila[6] = AddStaticVehicleEx(490,1217.0000000,-1675.0000000,12.1000000,270.0000000,0,0,1000); //FBI Rancher
    lvpdvozila[7] = AddStaticVehicleEx(490,1217.0000000,-1670.0000000,12.1000000,270.0000000,0,0,1000); //FBI Rancher
    lvpdvozila[10] = AddStaticVehicleEx(427,1239.9969,-1649.3146,11.9311,179.9998,0,0,1000);
	lvpdvozila[11] = AddStaticVehicleEx(427,1232.0000,-1649.2212,11.9289,179.9996,0,0,1000);
	lvpdvozila[12] = AddStaticVehicleEx(490,1236.0000000,-1648.0000000,12.0000000,180.0000000,0,0,1000); //FBI Truck
	lvpdvozila[14] = AddStaticVehicleEx(507,1236.9933,-1674.0822,11.6221,1.8721,0,0,1000); //Bullet
	lvpdvozila[15] = AddStaticVehicleEx(507,1241.0024,-1673.8954,11.6258,0.2454,0,0,1000); //Bullet
	lvpdvozila[16] = AddStaticVehicleEx(507,1232.7831,-1673.9990,11.6221,359.5906,0,0,1000); //Bullet
	for(new ia; ia < 16; ia++) {
    CreateDynamic3DTextLabel(""SPLAVA"[ Central Intelligence Agency ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, lvpdvozila[ia], 0); }
	//=======================DRVOSECA===========================================
	drvovozila[0] = AddStaticVehicleEx(578,118.2471,1112.1707,13.2730,180.2029,1,1,900); //DFT-30
	drvovozila[1] = AddStaticVehicleEx(578,124.1638,1112.1921,13.2730,180.2029,1,1,900); //DFT-30
	drvovozila[2] = AddStaticVehicleEx(578,139.2619,1089.8162,13.3210,342.3293,1,1,900); //DFT-30
	drvovozila[3] = AddStaticVehicleEx(578,134.2257,1074.0083,13.3291,342.3292,1,1,900); //DFT-30
	drvovozila[4] = AddStaticVehicleEx(578,132.0458,1050.6471,13.2727,350.9964,1,1,900); //DFT-30
	drvovozila[5] = AddStaticVehicleEx(578,116.2412,1041.2987,13.2731,267.6987,1,1,900); //DFT-30
	drvovozila[6] = AddStaticVehicleEx(578,97.6686,1041.3756,13.2795,271.0682,1,1,900); //DFT-30
	drvovozila[7] = AddStaticVehicleEx(578,87.5403,1056.0736,13.2724,184.6843,1,1,900); //DFT-30
	for(new ia; ia < 7; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ DRVOSECA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, drvovozila[ia], 0);
     }
	//////////////////////////////////////REZERVA/////////////////////////////////////////////
	rezervacar[0] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[1] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[2] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[3] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[4] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[5] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[6] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[7] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[8] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[9] = AddStaticVehicleEx(481,1049.9877,-3291.3359,-0.5955,155.4577,0,0,1000); //
	rezervacar[10] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[11] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[12] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[13] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[14] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[15] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[16] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[17] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[18] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[19] = AddStaticVehicleEx(481,1015.9559,-3348.1768,-0.7523,147.2281,0,0,1000); //
	rezervacar[20] = AddStaticVehicleEx(481,980.7319,-3397.7561,0.3863,142.9975,0,0,1000); //
	rezervacar[21] = AddStaticVehicleEx(481,980.7319,-3397.7561,0.3863,142.9975,0,0,1000); //
	rezervacar[22] = AddStaticVehicleEx(481,980.7319,-3397.7561,0.3863,142.9975,0,0,1000); //
	rezervacar[23] = AddStaticVehicleEx(481,980.7319,-3397.7561,0.3863,142.9975,0,0,1000); //

	zlatocar[0] = AddStaticVehicleEx(428,582.8784,862.2365,-43.4742,90.2092,0,0,1000); //
	zlatocar[1] = AddStaticVehicleEx(428,579.7651,862.2736,-43.4445,90.8002,0,0,1000); //
	zlatocar[2] = AddStaticVehicleEx(428,575.9048,870.0046,-43.8123,91.6425,0,0,1000); //
	zlatocar[3] = AddStaticVehicleEx(428,575.5292,866.2879,-43.6004,89.9546,0,0,1000); //
	zlatocar[4] = AddStaticVehicleEx(428,575.8820,875.0109,-44.0196,91.0738,0,0,1000); //
	/////////////////////////////////////Condor Vozila/////////////////////////////////////////
	condorcar[0] = AddStaticVehicleEx(470,659.4117,-1273.7271,13.5354,0.2958,0,0,1000); //
	condorcar[1] = AddStaticVehicleEx(470,659.6558,-1285.8304,13.5404,359.6803,0,0,1000); //
	condorcar[2] = AddStaticVehicleEx(470,659.7627,-1297.6677,13.5386,0.2019,0,0,1000); //
	condorcar[3] = AddStaticVehicleEx(470,670.6267,-1297.5779,13.5388,0.0586,0,0,1000); //
	condorcar[4] = AddStaticVehicleEx(470,670.6120,-1285.9039,13.5431,357.9735,0,0,1000); //
	condorcar[5] = AddStaticVehicleEx(470,670.4926,-1266.4615,13.5316,0.4895,0,0,1000); //
	condorcar[6] = AddStaticVehicleEx(470,659.5686,-1261.4807,13.5382,359.5245,0,0,1000); //
	condorcar[7] = AddStaticVehicleEx(482,670.3304,-1255.7255,13.5294,0.5871,0,0,1000); //
	condorcar[8] = AddStaticVehicleEx(482,680.0415,-1305.1758,13.6151,359.5899,55,55,1000); //
	condorcar[9] = AddStaticVehicleEx(560, 687.0438, -1263.5768, 13.2211, 91.1306,1,1,1000); //
	condorcar[10] = AddStaticVehicleEx(560, 687.1120, -1267.0248, 13.2211, 91.2448,1,1,1000); //
	condorcar[11] = AddStaticVehicleEx(560, 687.1431, -1260.1781, 13.2039, 91.1990,1,1,1000); //
	condorcar[12] = AddStaticVehicleEx(522, 687.4309, -1257.6807, 13.4286, 86.3938,1,1,1000); //
	condorcar[13] = AddStaticVehicleEx(522, 687.4756, -1256.1372, 13.2254, 89.8774,1,1,1000); //
	condorcar[14] = AddStaticVehicleEx(522, 687.4813, -1254.6758, 13.1526, 92.2146,1,1,1000); //
	for(new ia; ia < 14; ia++) {
    CreateDynamic3DTextLabel(""CRVENA"[ CONDOR ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, condorcar[ia], 0);
     }
    //////////////////////////////////PARKING SERVIS/////////////////
    parkingcar[0] = AddStaticVehicleEx(525, 1674.1910, -1012.6928, 23.7174, -162.3000, 1, 1, 100);
	parkingcar[1] = AddStaticVehicleEx(525, 1678.5741, -1011.8911, 23.7174, -162.3000, 1, 1, 100);
	parkingcar[2] = AddStaticVehicleEx(525, 1683.1012, -1010.7236, 23.7174, -162.6000, 1, 1, 100);
	parkingcar[3] = AddStaticVehicleEx(525, 1687.2921, -1009.2527, 23.7174, -162.6000, 1, 1, 100);
	parkingcar[4] = AddStaticVehicleEx(525, 1691.6346, -1008.0523, 23.7174, -162.1200, 1, 1, 100);
	parkingcar[5] = AddStaticVehicleEx(525, 1695.8112, -1006.8600, 23.7174, -162.1200, 1, 1, 100);


	for(new ia; ia < 6; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ PARKING SERVIS ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, parkingcar[ia], 0);
     }
   /////////////////////////////AS AUTA////////////////////////
    askolavozila[0] = AddStaticVehicleEx(410, 1560.4180, -2263.8779, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[1] = AddStaticVehicleEx(410, 1560.3646, -2234.5417, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[2] = AddStaticVehicleEx(410, 1560.4097, -2237.7700, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[3] = AddStaticVehicleEx(410, 1560.3932, -2241.0457, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[4] = AddStaticVehicleEx(410, 1560.4392, -2244.3557, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[5] = AddStaticVehicleEx(410, 1560.4431, -2247.5789, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[6] = AddStaticVehicleEx(410, 1560.4141, -2250.9939, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[7] = AddStaticVehicleEx(410, 1560.4985, -2254.2310, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[8] = AddStaticVehicleEx(410, 1560.4283, -2257.4309, 13.1248, 90.1423, 79, 79, 100);
	askolavozila[9] = AddStaticVehicleEx(410, 1560.3992, -2260.7212, 13.1248, 90.1423, 79, 79, 100);

    for(new ia; ia < 9; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ AUTO SKOLA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, askolavozila[ia], 0);
    }
    ///////////////////////////////////TVF VOZILA/////////////////////////
	tvf[0] = AddStaticVehicleEx(487,2164.1108,-2316.8198,13.7234,320.4763,3,3,1000); //
    tvf[1] = AddStaticVehicleEx(487,2175.7319,-2327.2483,13.7235,317.2115,3,3,1000); //
	tvf[2] = AddStaticVehicleEx(409,2209.6853,-2294.6021,14.5647,135.7495,3,3,1000); //
	tvf[3] = AddStaticVehicleEx(482,2205.1428,-2274.9336,13.6407,44.3306,3,3,1000); //
	tvf[4] = AddStaticVehicleEx(482,2212.3401,-2267.3699,13.6372,44.8106,3,3,1000); //
	tvf[5] = AddStaticVehicleEx(482,2219.4888,-2259.6812,13.6423,45.1212,3,3,1000); //
	tvf[6] = AddStaticVehicleEx(482,2226.3225,-2251.8188,13.6370,44.7360,3,3,1000); //
	tvf[7] = AddStaticVehicleEx(415,2160.5061,-2281.1152,13.1542,225.0530,3,3,1000); //
	tvf[8] = AddStaticVehicleEx(415,2167.1111,-2274.3496,13.1535,225.8032,3,3,1000); //
	tvf[9] = AddStaticVehicleEx(415,2174.7170,-2266.6401,13.1535,225.1967,3,3,1000); //
	tvf[10] = AddStaticVehicleEx(400,2204.2371,-2210.9229,13.6441,225.6964,3,3,1000); //
	tvf[11] = AddStaticVehicleEx(400,2196.9983,-2218.4880,13.6471,225.0477,3,3,1000); //
	tvf[12] = AddStaticVehicleEx(400,2189.4214,-2225.9763,13.6162,224.0316,3,3,1000); //
	tvf[13] = AddStaticVehicleEx(470,2154.6907,-2290.7034,13.3885,224.8960,3,3,1000); //
	tvf[14] = AddStaticVehicleEx(522,2190.1313,-2300.2195,13.1155,47.8058,3,3,1000); //
    tvf[15] = AddStaticVehicleEx(522,2188.5159,-2302.0007,13.1208,47.8040,3,3,1000); //
    tvf[16] = AddStaticVehicleEx(522,2187.1240,-2303.5359,13.1273,47.8054,3,3,1000); //
    for(new ia; ia < 16; ia++) {
    CreateDynamic3DTextLabel(""CRVENA"[ TVF ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, tvf[ia], 0);
     }
   ///////////////////////////////TRIADS VOZILA/////////////////////////
	tbt[0] = AddStaticVehicleEx(560,1254.9799,-804.6835,83.8477,179.1335,0,0,1000); //
	tbt[1] = AddStaticVehicleEx(560,1248.9850,-804.5305,83.8478,179.5021,0,0,1000); //
	tbt[2] = AddStaticVehicleEx(560,1242.9395,-804.5250,83.8476,181.0672,0,0,1000); //
	tbt[3] = AddStaticVehicleEx(579,1207.1425,-813.2472,87.2369,342.9764,0,0,1000); //
	tbt[4] = AddStaticVehicleEx(579,1214.3260,-831.2048,84.9551,57.1136,0,0,1000); //
	tbt[5] = AddStaticVehicleEx(579,1232.0984,-836.7262,84.0964,96.5101,0,0,1000); //
	tbt[6] = AddStaticVehicleEx(579,1245.7867,-829.7741,84.0748,141.7326,0,0,1000); //
	tbt[7] = AddStaticVehicleEx(409,1228.0399,-811.6204,87.4253,272.0457,0,0,1000); //
	tbt[8] = AddStaticVehicleEx(522,1270.4773,-827.3653,82.7072,286.3281,0,0,1000); //
	tbt[9] = AddStaticVehicleEx(522,1270.6080,-830.5942,82.7094,284.0607,0,0,1000); //
	tbt[10] = AddStaticVehicleEx(522,1292.7186,-830.6199,82.7100,66.2416,0,0,1000); //
	tbt[11] = AddStaticVehicleEx(522,1293.0371,-827.6884,82.7120,68.1789,0,0,1000); //
	tbt[12] = AddStaticVehicleEx(487,1291.3033,-787.6732,96.6328,0.0287,0,0,1000); //
	tbt[13] = AddStaticVehicleEx(482,-1110.2076,-1663.9122,76.4873,269.4305,0,0,1000); //
	tbt[14] = AddStaticVehicleEx(482,-1110.1793,-1657.8979,76.4868,269.8071,0,0,1000); //
	tbt[15] = AddStaticVehicleEx(482,-1110.2544,-1652.2460,76.4849,268.2507,0,0,1000); //
	tbt[16] = AddStaticVehicleEx(482,-1110.1361,-1646.4880,76.4886,267.2733,0,0,1000); //
	tbt[17] = AddStaticVehicleEx(470, 1249.9241, -790.4387, 89.7464, 0.0000,0,0,1000); //
	tbt[18] = AddStaticVehicleEx(470, 1241.2211, -790.6191, 89.9544, 0.0000,0,0,1000); //

    for(new ia; ia < 18; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ BDT ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, tbt[ia], 0);
     }
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    grove[0] = AddStaticVehicleEx(468,2497.1035,-1686.8821,13.1526,9.9271,128,128,1000); //
	grove[1] = AddStaticVehicleEx(468,2498.6887,-1686.5801,13.1462,11.7520,128,128,1000); //
	grove[2] = AddStaticVehicleEx(468,2500.2888,-1686.2477,13.1522,12.6925,128,128,1000); //
	grove[3] = AddStaticVehicleEx(467,2505.5762,-1694.0403,13.5681,359.8195,128,128,1000); //
	grove[4] = AddStaticVehicleEx(492,2508.2463,-1671.4452,13.0880,347.9738,128,128,1000); //
	grove[5] = AddStaticVehicleEx(492,2435.6328,-1675.6285,13.3965,358.4603,128,128,1000); //
	grove[6] = AddStaticVehicleEx(567,2430.9690,-1675.6989,13.4544,358.5824,128,128,1000); //
	grove[7] = AddStaticVehicleEx(492,2426.7175,-1675.5388,13.3917,0.2378,128,128,1000); //
	grove[8] = AddStaticVehicleEx(567,2485.2747,-1655.2722,13.1957,89.6859,128,128,1000); //
	grove[9] = AddStaticVehicleEx(567,2481.3408,-1681.9795,13.2031,260.4550,128,128,1000); //
	grove[10] = AddStaticVehicleEx(481,2525.7231,-1669.8816,14.6516,356.7262,128,128,1000); //
	grove[11] = AddStaticVehicleEx(481,2527.1160,-1669.9303,14.6863,355.1009,128,128,1000); //
	grove[12] = AddStaticVehicleEx(481,2528.5144,-1669.9213,14.6864,357.6727,128,128,1000); //
	grove[13] = AddStaticVehicleEx(492,2501.1948,-1654.8361,13.5559,59.5508,128,128,1000); //
	grove[14] = AddStaticVehicleEx(492,2505.6909,-1678.1511,13.5657,141.7974,128,128,1000); //
	grove[15] = AddStaticVehicleEx(567,2439.5942,-1675.8260,13.3380,1.5652,128,128,1000); //
	for(new ia; ia < 15; ia++) {
    CreateDynamic3DTextLabel(""ZELENA"[ GROVE ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, grove[ia], 0);
     }
	///////////////////////////////////////////////////////////////////////
	vballas[0] = AddStaticVehicleEx(412, 1986.8041, -1130.6388, 25.3236, -92.0000, 85, 85, 100);
	vballas[1] = AddStaticVehicleEx(475, 1986.2969, -1141.1960, 25.3575, -91.0000, 85, 85, 100);
	vballas[2] = AddStaticVehicleEx(412, 1993.7906, -1130.8260, 25.3236, -92.0000, 85, 85, 100);
	vballas[3] = AddStaticVehicleEx(475, 1992.3354, -1141.3643, 25.3575, -91.0000, 85, 85, 100);
	vballas[4] = AddStaticVehicleEx(566, 2006.0072, -1130.7487, 25.0263, -94.0000, 85, 85, 100);
	vballas[5] = AddStaticVehicleEx(566, 2013.1704, -1131.1222, 25.0263, -94.0000, 85, 85, 100);
	vballas[6] = AddStaticVehicleEx(567, 2005.6730, -1141.2302, 25.1935, -90.0000, 85, 85, 100);
	vballas[7] = AddStaticVehicleEx(567, 2012.6320, -1141.1990, 25.1935, -90.0000, 85, 85, 100);
	vballas[8] = AddStaticVehicleEx(468, 1993.6898, -1115.8223, 26.3779, 176.0000, 85, 85, 100);
	vballas[9] = AddStaticVehicleEx(468, 1994.4139, -1115.7915, 26.3779, 176.0000, 85, 85, 100);
	vballas[10] = AddStaticVehicleEx(468, 1995.1837, -1115.7942, 26.3779, 176.0000, 85, 85, 100);
	vballas[11] = AddStaticVehicleEx(468, 1996.0220, -1115.8470, 26.3779, 176.0000, 85, 85, 100);
	vballas[12] = AddStaticVehicleEx(468, 1996.8678, -1115.8177, 26.3779, 176.0000, 85, 85, 100);
	vballas[13] = AddStaticVehicleEx(468, 1997.7000, -1115.8311, 26.3779, 176.0000, 85, 85, 100);
	vballas[14] = AddStaticVehicleEx(481, 1989.8132, -1117.6669, 26.2785, 181.0000, 85, 85, 100);
	vballas[15] = AddStaticVehicleEx(481, 1990.4332, -1117.6696, 26.2785, 181.0000, 85, 85, 100);
	vballas[16] = AddStaticVehicleEx(481, 1990.8881, -1117.7086, 26.2785, 181.0000, 85, 85, 100);
	vballas[17] = AddStaticVehicleEx(481, 1991.5308, -1117.6721, 26.2785, 181.0000, 85, 85, 100);
	vballas[18] = AddStaticVehicleEx(481, 1992.2061, -1117.6906, 26.2785, 181.0000, 85, 85, 100);
	for(new ia; ia < 18; ia++) {
    CreateDynamic3DTextLabel(""LJUB"[ BALLAS ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vballas[ia], 0);
     }
	/////////////////////////////////NOVINARI///////////////////////////////////////
	vnovinari[0] =	AddStaticVehicleEx(582, 1707.0522, -1790.1348, 13.5805, -90.0000, 6, -1, 100);
	vnovinari[1] =	AddStaticVehicleEx(582, 1707.0522, -1785.1348, 13.5805, -90.0000, 6, -1, 100);
	vnovinari[2] =	AddStaticVehicleEx(582, 1707.0522, -1780.1348, 13.5805, -90.0000, 6, -1, 100);
	vnovinari[3] =	AddStaticVehicleEx(582, 1707.0522, -1775.1348, 13.5805, -90.0000, 6, -1, 100);
	vnovinari[4] =	AddStaticVehicleEx(582, 1707.0522, -1770.1348, 13.5805, -90.0000, 6, -1, 100);
	vnovinari[5] =	AddStaticVehicleEx(582, 1707.0522, -1765.1348, 13.5805, -90.0000, 6, -1, 100);
    vnovinari[6] =  AddStaticVehicleEx(582, 1707.0522, -1760.1348, 13.5805, -90.0000, 6, -1, 100);
	vnovinari[7] =  AddStaticVehicleEx(582, 1707.0522, -1755.1348, 13.5805, -90.0000, 6, -1, 100);
	vnovinari[8] =  AddStaticVehicleEx(488, 1727.5602, -1750.9027, 13.6827, 180.0000, 6, -1, 100);
	vnovinari[9] =  AddStaticVehicleEx(488, 1741.0768, -1751.2174, 13.6827, 180.0000, 6, -1, 100);
    for(new ia; ia < 9; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ NOVINARI ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vnovinari[ia], 0);
    }
    ////////////////////////////////////////////////////////////////////////
	TECcar[0] = AddStaticVehicleEx(560, -645.8552, -1546.8599, 25.0522, 267.0256, 3, 3, 100);
	TECcar[1] = AddStaticVehicleEx(560, -646.1221, -1550.9249, 25.0522, 267.0256, 3, 3, 100);
	TECcar[2] = AddStaticVehicleEx(482, -648.2870, -1559.8309, 24.6994, 264.5449, 3, 3, 100);
	TECcar[3] = AddStaticVehicleEx(482, -648.5629, -1564.1022, 24.6994, 264.5449, 3, 3, 100);
	TECcar[4] = AddStaticVehicleEx(522, -625.9421, -1544.7964, 24.3170, 178.0000, 3, 3, 100);
	TECcar[5] = AddStaticVehicleEx(522, -623.7164, -1545.2947, 24.3170, 178.0000, 3, 3, 100);
	TECcar[6] = AddStaticVehicleEx(522, -621.7157, -1545.5835, 24.3170, 178.0000, 3, 3, 100);
	TECcar[7] = AddStaticVehicleEx(470, -616.5809, -1564.1565, 24.6067, 0.0000, 3, 3, 100);
	TECcar[8] = AddStaticVehicleEx(470, -621.4903, -1564.2992, 24.6067, 0.0000, 3, 3, 100);
	TECcar[9] = AddStaticVehicleEx(463, -618.6846, -1545.2202, 24.1023, 178.0000, 3, 3, 100);
	TECcar[10] = AddStaticVehicleEx(463, -616.5410, -1545.3534, 24.1023, 178.0000, 3, 3, 100);
	TECcar[11] = AddStaticVehicleEx(463, -614.6140, -1545.6514, 24.1023, 178.0000, 3, 3, 100);
	for(new ia; ia < 11; ia++) {
    CreateDynamic3DTextLabel(""CRVENA"[ TBB ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, TECcar[ia], 0);
    }
    //----------------------------VLA VOZILA ----------------------------------------------//
    VLACar[0] = AddStaticVehicleEx(481, 2649.9941, -2031.1704, 13.0137, 90.7586, 2,2, 1000);
    VLACar[1] = AddStaticVehicleEx(481, 2649.9509, -2032.5302, 13.0137, 90.7586, 2,2, 1000);
	VLACar[2] = AddStaticVehicleEx(481, 2649.9307, -2033.7904, 13.0137, 90.7586, 2,2, 1000);
	VLACar[3] = AddStaticVehicleEx(468, 2638.3826, -2007.4862, 13.1065, 267.3872, 2,2, 1000);
	VLACar[4] = AddStaticVehicleEx(468, 2638.3689, -2005.1726, 13.1065, 267.3872, 2,2, 1000);
	VLACar[5] = AddStaticVehicleEx(468, 2638.4170, -2002.7090, 13.1065, 267.3872, 2,2, 1000);
	VLACar[6] = AddStaticVehicleEx(468, 2638.5461, -2000.4359, 13.1065, 267.3872, 2,2, 1000);
	VLACar[7] = AddStaticVehicleEx(474, 2643.2214, -2017.5004, 13.2151, 0.0000, 2,2, 1000);
	VLACar[8] = AddStaticVehicleEx(567, 2647.6416, -2008.7310, 13.2036, 269.7569, 2,2, 1000);
	VLACar[9] = AddStaticVehicleEx(566, 2647.6357, -1998.7698, 13.2252, 268.0717, 2,2, 1000);
	VLACar[10] = AddStaticVehicleEx(567, 2655.4492, -1998.8134, 13.2036, 269.7569, 2,2, 1000);
	VLACar[11] = AddStaticVehicleEx(534, 2663.3271, -1998.8746, 13.1428, 270.3133, 2,2, 1000);
	VLACar[12] = AddStaticVehicleEx(576, 2671.7373, -1998.8960, 13.1193, 270.7358, 2,2, 1000);
	VLACar[13] = AddStaticVehicleEx(566, 2655.6289, -2008.7308, 13.2252, 268.0717, 2,2, 1000);
	VLACar[14] = AddStaticVehicleEx(482, 2663.5562, -2008.8054, 13.3466, 269.0401, 2,2, 1000);
	VLACar[15] = AddStaticVehicleEx(576, 2672.1973, -2008.9063, 13.1193, 270.7358, 2,2, 1000);
    for(new ia; ia < 15; ia++) {
    CreateDynamic3DTextLabel(""CRVENA"[ VLA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, VLACar[ia], 0);
    }
	////////////////////////////////////////////////////////////////////////
	busvozilo[0] = AddStaticVehicleEx(431,1780.0836,-1930.9801,13.4867,269.6190,1,1,1000); //
	busvozilo[1] = AddStaticVehicleEx(431,1780.0095,-1925.5414,13.4925,269.4843,1,1,1000); //
	busvozilo[2] = AddStaticVehicleEx(431,1780.0300,-1919.9363,13.4920,270.0146,1,1,1000); //
	busvozilo[3] = AddStaticVehicleEx(431,1780.0364,-1914.2203,13.4906,270.3983,1,1,1000); //
	busvozilo[4] = AddStaticVehicleEx(431,1780.0848,-1908.4395,13.4924,269.6162,1,1,1000); //
	busvozilo[5] = AddStaticVehicleEx(431,1780.1636,-1902.4102,13.4903,269.9979,1,1,1000); //
	busvozilo[6] = AddStaticVehicleEx(431,1894.4746,2297.7712,10.9256,269.9608,1,1,1000); //
	busvozilo[7] = AddStaticVehicleEx(431,1894.5946,2305.9104,10.9151,271.0363,1,1,1000); //
	busvozilo[8] = AddStaticVehicleEx(431,1894.4327,2314.8796,10.9153,271.0363,1,1,1000); //
	busvozilo[9] = AddStaticVehicleEx(431,1894.6217,2324.3494,10.9125,271.0363,1,1,1000); //
    for(new ia; ia < 9; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ BUS VOZAC ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, busvozilo[ia], 0);
    }
	/////////////////////////////////////////////////////////////////////////
	kosilica[0] = AddStaticVehicleEx(572,1955.8530,-1247.6792,19.3691,0.0653,3,3,1000); //
	kosilica[1] = AddStaticVehicleEx(572,1952.6689,-1247.7767,19.2594,359.6955,1,1,1000); //
	kosilica[2] = AddStaticVehicleEx(572,1949.6405,-1247.8177,19.1656,358.6474,2,2,1000); //
	kosilica[3] = AddStaticVehicleEx(572,1946.8290,-1247.7072,19.0117,358.6920,3,3,1000); //
	kosilica[4] = AddStaticVehicleEx(572,1943.6764,-1247.6243,18.7368,357.6494,0,0,1000); //
	kosilica[5] = AddStaticVehicleEx(572,1940.3818,-1247.5013,18.3957,355.8244,6,6,1000); //
	kosilica[6] = AddStaticVehicleEx(572,1937.0133,-1247.5010,18.0510,359.9681,11,11,1000); //
    for(new ia; ia < 6; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ KOSAC TRAVE ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, kosilica[ia], 0);
    }
	////////////////////////////////////////MEHANICARI////////////////////////////////////////
	vmehanicar[0] = AddStaticVehicleEx(525,1815.4097,-1406.1652,13.3356,270.7086,105,30,300); //Tow Truck
	vmehanicar[1] = AddStaticVehicleEx(525,1815.4058,-1401.6158,13.2833,270.0254,105,30,300); //Tow Truck
	vmehanicar[2] = AddStaticVehicleEx(525,1815.4019,-1397.4142,13.2854,269.3110,105,30,300); //Tow Truck
	vmehanicar[3] = AddStaticVehicleEx(525,1815.4193,-1392.9805,13.3136,269.6755,105,30,300); //Tow Truck
	vmehanicar[4] = AddStaticVehicleEx(525,1822.4192,-1406.1455,13.3933,268.7992,105,30,300); //Tow Truck
	vmehanicar[5] = AddStaticVehicleEx(525,1822.4117,-1401.6681,13.3025,269.8070,105,30,300); //Tow Truck
	vmehanicar[6] = AddStaticVehicleEx(525,1822.2736,-1397.2780,13.2995,271.2060,105,30,300); //Tow Truck
	vmehanicar[7] = AddStaticVehicleEx(525,1822.1182,-1392.9749,13.3025,270.0429,105,30,300); //Tow Truck
    for(new ia; ia < 7; ia++) {
    CreateDynamic3DTextLabel(""VARADERO"[ MEHANICAR ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vmehanicar[ia], 0);
    }
	////////////////////////////////////////////////////////////////////////////
	postavozilo[0] = AddStaticVehicleEx(586,964.1982,-1259.1316,16.5057,285.6276, 6, 6, 1000);
	postavozilo[1] = AddStaticVehicleEx(586,964.2839,-1262.3364,16.5062,292.4339, 6, 6, 1000);
	postavozilo[2] = AddStaticVehicleEx(586,964.5551,-1265.7271,16.5059,297.0405, 6, 6, 1000);
	postavozilo[3] = AddStaticVehicleEx(586,987.7828,-1258.8264,16.5044,66.3439, 6, 6, 1000);
	postavozilo[4] = AddStaticVehicleEx(586,987.6219,-1262.4590,16.4975,68.4397, 6, 6, 1000);
	postavozilo[5] = AddStaticVehicleEx(586,987.5938,-1265.6187,16.5007,63.8321, 6, 6, 1000);
	postavozilo[6] = AddStaticVehicleEx(609,979.6910,-1262.6973,16.1477,179.7693, 6, 6, 1000);
	postavozilo[7] = AddStaticVehicleEx(609,972.8448,-1262.7968,16.1317,179.4866, 6, 6, 1000);
	postavozilo[8] = AddStaticVehicleEx(609,1033.5001,-1258.1083,15.2483,90.9222, 6, 6, 1000);
	postavozilo[9] = AddStaticVehicleEx(609,1033.4745,-1252.6483,15.2551,90.0765, 6, 6, 1000);
    for(new ia; ia < 9; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ POSTAR ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, postavozilo[ia], 0);
    }
	//////////////////////////////////////////////////////////////////////////////
	vkomunalno[0] = AddStaticVehicleEx(408,1596.3713,-1554.1453,14.1419,358.9731,1,1,1000); //
	vkomunalno[1] = AddStaticVehicleEx(408,1607.6460,-1554.1571,14.1483,0.3557,1,1,1000); //
	vkomunalno[2] = AddStaticVehicleEx(408,1617.9121,-1554.1823,14.1835,0.2225,1,1,1000); //
	vkomunalno[3] = AddStaticVehicleEx(408,1609.8394,-1493.8306,14.1060,90.5765,1,1,1000); //
	vkomunalno[4] = AddStaticVehicleEx(408,1636.7837,-1524.6949,14.1556,180.4516,1,1,1000); //
	vkomunalno[5] = AddStaticVehicleEx(408,1643.3101,-1524.5868,14.1067,180.4140,1,1,1000); //
	vkomunalno[6] = AddStaticVehicleEx(574,1573.1981,-1474.1064,13.2770,89.4329,1,1,1000); //
	vkomunalno[7] = AddStaticVehicleEx(574,1573.2014,-1477.9152,13.2769,89.5585,1,1,1000); //
	vkomunalno[8] = AddStaticVehicleEx(574,1611.9270,-1505.5903,13.2823,89.7045,1,1,1000); //
	vkomunalno[9] = AddStaticVehicleEx(574,1611.8894,-1501.5206,13.2767,91.1558,1,1,1000); //
	vkomunalno[10] = AddStaticVehicleEx(574,1602.2781,-1454.5635,13.2767,180.6156,1,1,1000); //
	vkomunalno[11] = AddStaticVehicleEx(574,1608.3848,-1454.5148,13.2766,179.3521,1,1,1000); //
    for(new ia; ia < 11; ia++) {
    CreateDynamic3DTextLabel(""SPLAVA"[ KOMUNALNO ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vkomunalno[ia], 0);
    }
    ////////////////////////////////////////////////////////////////////////////////
	vgradjevinar[0] = AddStaticVehicleEx(524,1837.0264,-1597.7650,14.5041,359.1913,1,1,1000); //
	vgradjevinar[1] = AddStaticVehicleEx(524,1843.4828,-1597.6019,14.5160,359.9626,1,1,1000); //
	vgradjevinar[2] = AddStaticVehicleEx(524,1849.9630,-1597.8450,14.5134,358.5327,1,1,1000); //
	vgradjevinar[3] = AddStaticVehicleEx(524,1855.8724,-1597.7997,14.5098,358.3537,1,1,1000); //
	vgradjevinar[4] = AddStaticVehicleEx(486,1843.6965,-1581.3092,13.8598,226.2770,1,1,1000); //
	vgradjevinar[5] = AddStaticVehicleEx(486,1846.9395,-1576.9655,13.8598,223.7437,1,1,1000); //
	vgradjevinar[6] = AddStaticVehicleEx(486,1928.9602,-1571.0245,13.8041,177.7270,1,1,1000); //
    for(new ia; ia < 6; ia++) {
    CreateDynamic3DTextLabel(""SPLAVA"[ GRADJEVINAR ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vgradjevinar[ia], 0);
    }
	///~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [ VOZILA OD SALONA ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~///
	///////////////////////////////////VOZILA OD SALONA//////////////////////////////
    autosalon[0] = AddStaticVehicleEx(411,560.2999878,-1291.0999756,17.1000004,0.0000000,106,106,1000); //Infernus
	autosalon[1] = AddStaticVehicleEx(451,550.4000244,-1290.9000244,17.1000004,0.0000000,106,106,1000); //Turismo
	autosalon[2] = AddStaticVehicleEx(579,541.2000122,-1290.6999512,17.3999996,0.0000000,106,106,1000); //Huntley
	autosalon[3] = AddStaticVehicleEx(567,531.4000244,-1290.8000488,17.2999992,0.0000000,106,106,1000); //Savanna
	for(new ia; ia < 4; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ AUTO SALON ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, autosalon[ia], 0);
     }
	////////////////////////////////RIBAR////////////////////////////////////////////////////////////
	ribvozilo[0] = AddStaticVehicleEx(453, 2923.9656, -1947.2906, 0.2359, -90.0000, 1, 1, 900);
	ribvozilo[1] = AddStaticVehicleEx(453, 2923.7153, -1936.1161, 0.2359, -90.0000, 1, 1, 900);
	ribvozilo[2] = AddStaticVehicleEx(453, 2924.2576, -1973.2566, 0.2359, -90.0000, 1, 1, 900);
	ribvozilo[3] = AddStaticVehicleEx(453, 2924.4241, -1982.9757, 0.2359, -90.0000, 1, 1, 900);
	ribvozilo[4] = AddStaticVehicleEx(453, 2925.0173, -1993.6862, 0.2359, -90.0000, 1, 1, 900);
	ribvozilo[5] = AddStaticVehicleEx(453, 2925.1533, -2004.3403, 0.2359, -90.0000, 1, 1, 900);
	for(new ia; ia < 5; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ RIBAR ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, ribvozilo[ia], 0);
    }
	////////////////////////////////GROBAR VOZILA//////////////////////////////////////////
	vgrobar[0] = AddStaticVehicleEx(442,923.0174,-1122.2928,23.8387,359.7257,0,0,1000); //
	vgrobar[1] = AddStaticVehicleEx(442,928.0810,-1122.2867,23.8372,0.6282,0,0,1000); //
	vgrobar[2] = AddStaticVehicleEx(442,938.7794,-1122.2743,23.8318,0.0927,0,0,1000); //
	vgrobar[3] = AddStaticVehicleEx(442,933.3726,-1122.2916,23.8336,0.1940,0,0,1000); //
	vgrobar[4] = AddStaticVehicleEx(442,928.9634,-1068.3563,24.1252,89.5684,0,0,1000); //
	vgrobar[5] = AddStaticVehicleEx(442,928.9048,-1072.8079,24.1249,91.0959,0,0,1000); //
	vgrobar[6] = AddStaticVehicleEx(442,928.8880,-1077.2089,24.1163,90.1986,0,0,1000); //

    for(new ia; ia < 6; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ GROBAR ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vgrobar[ia], 0);
    }
    ////////////////////////////////COCA COLA VOZILA///////////////////////////////////////
    vcola[0] = AddStaticVehicleEx(456, -619.8723, -556.2136, 25.4983, 0.0000, 3, 3, 100);
	vcola[1] = AddStaticVehicleEx(456, -613.4606, -556.2739, 25.4983, 0.0000, 3, 3, 100);
	vcola[2] = AddStaticVehicleEx(456, -606.8817, -556.1647, 25.4983, 0.0000, 3, 3, 100);
	vcola[3] = AddStaticVehicleEx(456, -599.2499, -556.2358, 25.4983, 0.0000, 3, 3, 100);
	vcola[4] = AddStaticVehicleEx(609, -593.0617, -556.2169, 25.5035, 0.0000, 3, 3, 100);
	vcola[5] = AddStaticVehicleEx(609, -587.2473, -555.9907, 25.5035, 0.0000, 3, 3, 100);
	vcola[6] = AddStaticVehicleEx(482, -582.3313, -555.6298, 25.4487, 0.0000, 3, 3, 100);
	vcola[7] = AddStaticVehicleEx(482, -577.6913, -555.5497, 25.4487, 0.0000, 3, 3, 100);
	for(new ia; ia < 7; ia++) {
    CreateDynamic3DTextLabel(""CRVENA"[ COCA COLA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vcola[ia], 0);
    }
	////////////////////////////////FARMER VOZILA//////////////////////////////////////////
	vfarmer[0] = AddStaticVehicleEx(531,-94.8457,40.9137,3.0830,70.2139,11,11,1000); //
	vfarmer[1] = AddStaticVehicleEx(531,-96.1986,37.0346,3.0823,70.5144,3,3,1000); //
	vfarmer[2] = AddStaticVehicleEx(531,-97.4744,33.0178,3.0832,69.8901,1,1,1000); //
	vfarmer[3] = AddStaticVehicleEx(531,-99.0186,28.5714,3.0822,69.8819,0,0,1000); //
	vfarmer[4] = AddStaticVehicleEx(531,-78.1003,76.1926,3.0825,159.7456,0,0,1000); //
	vfarmer[5] = AddStaticVehicleEx(531,-74.0343,74.7236,3.0837,159.4243,3,3,1000); //
	vfarmer[6] = AddStaticVehicleEx(532,-28.0460,45.0135,4.0928,248.7299,1,1,1000); //
	vfarmer[7] = AddStaticVehicleEx(532,-31.3459,36.3296,4.0899,246.9921,1,1,1000); //
	vfarmer[8] = AddStaticVehicleEx(532,-35.0025,27.7014,4.0845,245.5002,1,1,1000); //
	vfarmer[9] = AddStaticVehicleEx(532,21.2410,127.5555,3.6151,151.3346,1,1,1000); //
	vfarmer[10] = AddStaticVehicleEx(532,13.4097,132.1450,3.6319,147.8867,1,1,1000); //
	vfarmer[11] = AddStaticVehicleEx(532,4.9891,137.1808,3.6420,149.9712,1,1,1000); //
	vfarmer[12] = AddStaticVehicleEx(532,-3.7507,142.1602,3.6853,149.9031,1,1,1000); //
	vfarmer[13] = AddStaticVehicleEx(478,-60.2480,65.8072,3.1129,340.3069,1,1,1000); //
	vfarmer[14] = AddStaticVehicleEx(478,-51.2756,63.0579,3.1092,340.4160,1,1,1000); //
	vfarmer[15] = AddStaticVehicleEx(478,-57.1812,74.5819,3.1134,250.8044,1,1,1000); //
	vfarmer[16] = AddStaticVehicleEx(478,-55.5704,79.1668,3.1119,249.3403,1,1,1000); //
	vfarmer[17] = AddStaticVehicleEx(478,-53.9715,83.4354,3.1069,249.0947,1,1,1000); //
	vfarmer[18] = AddStaticVehicleEx(478,-52.6312,87.2516,3.1066,250.3192,1,1,1000); //

    for(new ia; ia < 18; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[FARMER ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vfarmer[ia], 0);
    }
	///////////////////////////////MASINOVODJA///////////////////////////////////////////
	VozVozilo = AddStaticVehicleEx(538, 1730.0007,-1955.9659,13.2678,270.00000000,1,1, 200);

    CreateDynamic3DTextLabel(""SZELENA"[ VOZ ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, VozVozilo, 0);
	/////////////////////////////////////////////////////////////////////////////////////
	vdostavljac[0] = AddStaticVehicleEx(414,1601.2288,-1814.7871,13.5278,270.1661,3,3,1000); //
	vdostavljac[1] = AddStaticVehicleEx(414,1606.1405,-1824.8988,13.5681,270.3123,3,3,1000); //
	vdostavljac[2] = AddStaticVehicleEx(414,1606.4567,-1837.0959,13.6007,270.3558,3,3,1000); //
	vdostavljac[3] = AddStaticVehicleEx(456,1653.3256,-1837.6365,13.7197,90.2453,3,1,1000); //
	vdostavljac[4] = AddStaticVehicleEx(456,1653.7223,-1820.6571,13.7166,90.2960,3,1,1000); //
	vdostavljac[5] = AddStaticVehicleEx(499,1654.8939,-1806.6040,13.5351,89.0818,3,3,1000); //
	vdostavljac[6] = AddStaticVehicleEx(499,1600.5210,-1791.3615,13.3586,269.1948,3,3,1000); //
    for(new ia; ia < 6; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[DOSTAVLJAC ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vkamiondzija[ia], 0);
    }
	////////////////////////////////////////////////////////////////////////////////////
	vkamiondzija[0] = AddStaticVehicleEx(403,1751.5232,-2058.5015,14.4408,179.5120,11,11,1000); //
	vkamiondzija[1] = AddStaticVehicleEx(514,1770.2588,-2049.1406,14.3048,271.3796,11,11,1000); //
	vkamiondzija[2] = AddStaticVehicleEx(514,1770.4080,-2040.4338,14.1803,269.9501,11,11,1000); //
	vkamiondzija[3] = AddStaticVehicleEx(515,1770.6696,-2031.7490,14.2468,269.4795,11,11,1000); //
	vkamiondzija[4] = AddStaticVehicleEx(515,1769.7300,-2022.7188,14.6487,270.1694,11,11,1000); //
	vkamiondzija[5] = AddStaticVehicleEx(435,1802.9000244,-2026.3000488,14.6999998,180.0000000,-1,-1,1000);
	vkamiondzija[6] = AddStaticVehicleEx(435,1792.6999512,-2026.4000244,14.6000004,180.0000000,-1,-1,1000);
	vkamiondzija[7] = AddStaticVehicleEx(435,1797.9000244,-2026.4000244,14.6999998,180.0000000,-1,-1,1000);
	vkamiondzija[8] = AddStaticVehicleEx(435,1773.1999512,-2072.3000488,14.3000002,0.0000000,-1,-1,1000);
	vkamiondzija[9] = AddStaticVehicleEx(435,1768.3000488,-2072.3000488,14.3000002,0.0000000,-1,-1,1000);

    for(new ia; ia < 9; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[KAMIONDJIJA ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vkamiondzija[ia], 0);
    }
	//////////////////////////////////////////////////////////////////////////////////////
	vpilot[0] = AddStaticVehicleEx(519,1992.3000488,-2315.3000488,14.5000000,90.0000000,-1,-1,1000); //Shamal
	vpilot[1] = AddStaticVehicleEx(519,1992.3000488,-2381.8000488,14.5000000,90.0000000,-1,-1,1000); //Shamal
	vpilot[2] = AddStaticVehicleEx(553,1889.8000488,-2626.5000000,15.6000004,0.0000000,106,1,1000); //Nevada
	vpilot[3] = AddStaticVehicleEx(553,1754.0999756,-2625.8000488,15.6000004,0.0000000,106,1,1000); //Nevada
	vpilot[4] = AddStaticVehicleEx(553,1617.0999756,-2625.8999023,15.6000004,0.0000000,106,1,1000); //Nevada

    for(new ia; ia < 4; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[PILOT ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vpilot[ia], 0);
    }
	/////////////////////////////////////////////////////////////////////////////////////////
	velektricar[0] = AddStaticVehicleEx(552,1106.9103,-1193.7048,17.8030,179.0390,3,1,1000); //
	velektricar[1] = AddStaticVehicleEx(552,1113.5936,-1193.9406,17.7412,178.9419,3,1,1000); //
	velektricar[2] = AddStaticVehicleEx(552,1087.4014,-1193.9984,17.8152,179.8508,3,1,1000); //
	velektricar[3] = AddStaticVehicleEx(552,1110.4088,-1227.6609,15.5183,179.8673,3,1,1000); //
	velektricar[4] = AddStaticVehicleEx(552,1104.0431,-1227.5527,15.5259,179.0463,3,1,1000); //
	velektricar[5] = AddStaticVehicleEx(552,1098.9528,-1227.4906,15.5177,178.9478,3,1,1000); //
	velektricar[6] = AddStaticVehicleEx(552,1093.9534,-1227.4974,15.5295,179.0645,3,1,1000); //

	for(new ia; ia < 6; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ELEKTRICAR ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, velektricar[ia], 0);
    }
	////////////////////////////////////////////////////////////////////////////////////////////
	vkarting[0] = AddStaticVehicleEx(571, 2232.0000, -1454.1392, 25.1035, 0.0000, 6, 6, 1000);
	vkarting[1] = AddStaticVehicleEx(571, 2235.0000, -1454.1444, 25.1035, 0.0000, 6, 6, 1000);
	vkarting[2] = AddStaticVehicleEx(571, 2238.0000, -1454.1444, 25.1035, 0.0000, 6, 6, 1000);
	vkarting[3] = AddStaticVehicleEx(571, 2241.0000, -1454.1444, 25.1035, 0.0000, 6, 6, 1000);
	vkarting[4] = AddStaticVehicleEx(571, 2244.0000, -1454.1444, 25.1035, 0.0000, 6, 6, 1000);
	vkarting[5] = AddStaticVehicleEx(571, 2247.0000, -1454.1444, 25.1035, 0.0000, 6, 6, 1000);
	vkarting[6] = AddStaticVehicleEx(571, 2250.0000, -1454.1444, 25.1035, 0.0000, 6, 6, 1000);

	for(new ia; ia < 6; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ KARTING ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vkarting[ia], 0);
    }
	////////////////////////////////////////////////////////////////////////////////////////////
	vdonator[0] = AddStaticVehicleEx(411,1361.9028,-1658.6366,13.1098,268.2302,0,0, 1000); //
	vdonator[1] = AddStaticVehicleEx(411,1361.9141,-1654.9382,13.1099,269.8298,0,0, 1000); //
	vdonator[2] = AddStaticVehicleEx(411,1361.8506,-1651.1761,13.1099,270.0380,0,0, 1000); //
	vdonator[3] = AddStaticVehicleEx(411,1361.7733,-1647.2906,13.1099,270.4747,0,0, 1000); //
	vdonator[4] = AddStaticVehicleEx(411,1361.7444,-1643.6652,13.1099,269.2300,0,0, 1000); //
	vdonator[5] = AddStaticVehicleEx(579,1362.1085,-1639.9232,13.3152,269.9889,0,0, 1000); //
	vdonator[6] = AddStaticVehicleEx(579,1362.0642,-1636.6271,13.3143,270.0081,0,0, 1000); //
	vdonator[7] = AddStaticVehicleEx(579,1362.0192,-1633.0023,13.3135,270.1778,0,0, 1000); //
	vdonator[8] = AddStaticVehicleEx(522,1375.1021,-1633.3226,12.9515,92.8211,0,0, 1000); //
	vdonator[9] = AddStaticVehicleEx(522,1375.2383,-1635.1927,12.9517,93.8646,0,0, 1000); //
	vdonator[10] = AddStaticVehicleEx(522,1375.4277,-1637.1678,12.9535,95.3707,0,0, 1000); //
	vdonator[11] = AddStaticVehicleEx(522,1375.4819,-1639.0175,12.9525,94.6752,0,0, 1000); //
	vdonator[12] = AddStaticVehicleEx(522,1375.5721,-1640.7933,12.9536,98.7311,0,0, 1000); //
	for(new ia; ia < 12; ia++) {
    CreateDynamic3DTextLabel(""SRWBOJA"[ DONATORSKO VOZILO  ]",-1,0.0,0.0,0.0,15,INVALID_PLAYER_ID, vdonator[ia], 0); }
	///////////////////////////////////////////////////////////////////////////////////////////
	motosalon3d[0][vmotosalon[0]] = Create3DTextLabel(""SRWBOJA"NRG\n"SRWBOJA"Cena: "BELA"3.000.000$", 0x00C0FFAA, 0.0, 0.0, 0.0, 10.0, 0, 1);
	Attach3DTextLabelToVehicle(motosalon3d[0][vmotosalon[0]], vmotosalon[0], 0.0, 0.0, 0.0);
	////////////////////////////////////////////////////////////////////////////////////////////////
	bdtdroga = CreateDynamicObject(988, -1079.0999755859, -1647, 76.300003051758, 0, 0, 90);
	lspdz = CreateDynamicObject(1569, 1487.04, -1762.43, 3284.27,   0.00, 0.00, 270.00);
	kapijapo = CreateDynamicObject(971, -722.67, 912.14, 11.83,   0.00, 0.00, 358.68);
	kapijapo1 = CreateDynamicObject(971, -658.20, 921.77, 11.84,   0.00, 0.00, 43.78);
	kapija2po = CreateDynamicObject(980, 2806.94922, 2663.75562, 12.48939,   0.00000, 0.00000, 0.00000); //ZATVORENO
	kapijapo3 = CreateDynamicObject(980, 1264.89, -2045.90, 60.73,   0.00, 0.00, 177.00); // DNB Kapija
	pskapija = CreateDynamicObject(980, 1637.73047, -1142.15271, 25.22402,   0.00000, 0.00000, 3.00000);
	condorkapija = CreateDynamicObject(980, 785.59997558594, -1152.4000244141, 25.200000762939, 0, 0, 270);
	kapijapd1 = CreateDynamicObject(980, 1590.4000244141, -1638, 15.199999809265, 0, 0, 0);
	pdrampazatvorena = CreateDynamicObject(968, 1544.6999511719, -1630.8000488281, 13.10000038147, 0, 270, 269.99993896484);
	basekapija = CreateDynamicObject(980, -75.9113, -352.2065, 3.1565, 0, 0, 90);
	basekapija1 = CreateDynamicObject(3036, -75.8444, -326.9831, 6.1236, 0, 0, 270);
	vratakapija = CreateDynamicObject(980, 4195.9180, 1776.5142, 51.5546, 0.0000, 0.0000, 90);
    //--------------------------------------------------
	TDwar0 = TextDrawCreate(612.000000, 212.000000, "_");
	TextDrawBackgroundColor(TDwar0, 255);
	TextDrawFont(TDwar0, 1);
	TextDrawLetterSize(TDwar0, 0.910000, 10.300001);
	TextDrawColor(TDwar0, -1);
	TextDrawSetOutline(TDwar0, 0);
	TextDrawSetProportional(TDwar0, 1);
	TextDrawSetShadow(TDwar0, 1);
	TextDrawUseBox(TDwar0, 1);
	TextDrawBoxColor(TDwar0, 1010580540);
	TextDrawTextSize(TDwar0, 502.000000, 0.000000);

	TDwar1 = TextDrawCreate(529.000000, 228.000000, "Team 1");
	TextDrawBackgroundColor(TDwar1, 255);
	TextDrawFont(TDwar1, 2);
	TextDrawLetterSize(TDwar1, 0.360000, 1.100000);
	TextDrawColor(TDwar1, -1);
	TextDrawSetOutline(TDwar1, 0);
	TextDrawSetProportional(TDwar1, 1);
	TextDrawSetShadow(TDwar1, 0);

	TDwar2 = TextDrawCreate(548.000000, 240.000000, "0");
	TextDrawBackgroundColor(TDwar2, 255);
	TextDrawFont(TDwar2, 2);
	TextDrawLetterSize(TDwar2, 0.360000, 1.100000);
	TextDrawColor(TDwar2, 16711935);
	TextDrawSetOutline(TDwar2, 0);
	TextDrawSetProportional(TDwar2, 1);
	TextDrawSetShadow(TDwar2, 0);

	TDwar3 = TextDrawCreate(499.000000, 252.000000, "-");
	TextDrawBackgroundColor(TDwar3, 255);
	TextDrawFont(TDwar3, 1);
	TextDrawLetterSize(TDwar3, 8.199995, 1.000000);
	TextDrawColor(TDwar3, 16711935);
	TextDrawSetOutline(TDwar3, 0);
	TextDrawSetProportional(TDwar3, 1);
	TextDrawSetShadow(TDwar3, 1);

	TDwar4 = TextDrawCreate(529.000000, 267.000000, "Team 2");
	TextDrawBackgroundColor(TDwar4, 255);
	TextDrawFont(TDwar4, 2);
	TextDrawLetterSize(TDwar4, 0.360000, 1.100000);
	TextDrawColor(TDwar4, -1);
	TextDrawSetOutline(TDwar4, 0);
	TextDrawSetProportional(TDwar4, 1);
	TextDrawSetShadow(TDwar4, 0);

	TDwar5 = TextDrawCreate(548.000000, 280.000000, "0");
	TextDrawBackgroundColor(TDwar5, 255);
	TextDrawFont(TDwar5, 2);
	TextDrawLetterSize(TDwar5, 0.360000, 1.100000);
	TextDrawColor(TDwar5, 16711935);
	TextDrawSetOutline(TDwar5, 0);
	TextDrawSetProportional(TDwar5, 1);
	TextDrawSetShadow(TDwar5, 0);

	TDwar6 = TextDrawCreate(512.000000, 209.000000, "Varadero War");
	TextDrawBackgroundColor(TDwar6, 255);
	TextDrawFont(TDwar6, 2);
	TextDrawLetterSize(TDwar6, 0.250000, 1.000000);
	TextDrawColor(TDwar6, 16711935);
	TextDrawSetOutline(TDwar6, 0);
	TextDrawSetProportional(TDwar6, 1);
	TextDrawSetShadow(TDwar6, 0);
	
	////////////////////////////////////////////////////
	
	WarnTD = TextDrawCreate(26.875000, 214.083435, "Text");
	TextDrawLetterSize(WarnTD, 0.187499, 0.800832);
	TextDrawAlignment(WarnTD, 1);
	TextDrawColor(WarnTD, -1);
	TextDrawSetShadow(WarnTD, 0);
	TextDrawSetOutline(WarnTD, 1);
	TextDrawBackgroundColor(WarnTD, 255);
	TextDrawFont(WarnTD, 1);
	TextDrawSetProportional(WarnTD, 1);
    //--------------------------------------------------------------------------
	
	Zapovez = TextDrawCreate(0.000000, 0.000000, "LD_SPAC:white");
    TextDrawLetterSize(Zapovez, 0.000000, 0.000000);
	TextDrawTextSize(Zapovez, 640.000000, 448.000000);
	TextDrawAlignment(Zapovez, 1);
	TextDrawColor(Zapovez, 255);
	TextDrawSetShadow(Zapovez, 0);
	TextDrawSetOutline(Zapovez, 0);
	TextDrawFont(Zapovez, 4);
	//////////////////////////////////////////////////////
	NwnEditor_TD[0] = TextDrawCreate(2.500000, 430.187500, "box");
	TextDrawLetterSize(NwnEditor_TD[0], 0.000000, 1.499997);
	TextDrawTextSize(NwnEditor_TD[0], 699.000000, 0.000000);
	TextDrawAlignment(NwnEditor_TD[0], 1);
	TextDrawColor(NwnEditor_TD[0], -1);
	TextDrawUseBox(NwnEditor_TD[0], 1);
	TextDrawBoxColor(NwnEditor_TD[0], 674313215);
	TextDrawSetShadow(NwnEditor_TD[0], 0);
	TextDrawBackgroundColor(NwnEditor_TD[0], 255);
	TextDrawFont(NwnEditor_TD[0], 1);
	TextDrawSetProportional(NwnEditor_TD[0], 1);

	NwnEditor_TD[1] = TextDrawCreate(569.000000, 9.287469, "online_gaming_community");
	TextDrawLetterSize(NwnEditor_TD[1], 0.112998, 0.685624);
	TextDrawAlignment(NwnEditor_TD[1], 2);
	TextDrawColor(NwnEditor_TD[1], -1);
	TextDrawSetShadow(NwnEditor_TD[1], 0);
	TextDrawBackgroundColor(NwnEditor_TD[1], 255);
	TextDrawFont(NwnEditor_TD[1], 2);
	TextDrawSetProportional(NwnEditor_TD[1], 1);

	NwnEditor_TD[2] = TextDrawCreate(15.700014, 431.112609, "V");
	TextDrawLetterSize(NwnEditor_TD[2], 0.345498, 1.403121);
	TextDrawTextSize(NwnEditor_TD[2], 0.000000, 160.000000);
	TextDrawAlignment(NwnEditor_TD[2], 2);
	TextDrawColor(NwnEditor_TD[2], 674313215);
	TextDrawSetShadow(NwnEditor_TD[2], 0);
	TextDrawBackgroundColor(NwnEditor_TD[2], 255);
	TextDrawFont(NwnEditor_TD[2], 2);
	TextDrawSetProportional(NwnEditor_TD[2], 1);

	NwnEditor_TD[3] = TextDrawCreate(19.000024, 432.450164, "ARADERO");
	TextDrawLetterSize(NwnEditor_TD[3], 0.163498, 0.829998);
	TextDrawTextSize(NwnEditor_TD[3], 161.000000, 0.000000);
	TextDrawAlignment(NwnEditor_TD[3], 1);
	TextDrawColor(NwnEditor_TD[3], 674313215);
	TextDrawSetShadow(NwnEditor_TD[3], 0);
	TextDrawBackgroundColor(NwnEditor_TD[3], 255);
	TextDrawFont(NwnEditor_TD[3], 2);
	TextDrawSetProportional(NwnEditor_TD[3], 1);

	NwnEditor_TD[4] = TextDrawCreate(19.100023, 438.375152, "ONLINE_GAMING_COMMUNITY");
	TextDrawLetterSize(NwnEditor_TD[4], 0.111996, 0.558746);
	TextDrawTextSize(NwnEditor_TD[4], 161.000000, 0.000000);
	TextDrawAlignment(NwnEditor_TD[4], 1);
	TextDrawColor(NwnEditor_TD[4], 674313215);
	TextDrawSetShadow(NwnEditor_TD[4], 0);
	TextDrawBackgroundColor(NwnEditor_TD[4], 255);
	TextDrawFont(NwnEditor_TD[4], 2);
	TextDrawSetProportional(NwnEditor_TD[4], 1);

	NwnEditor_TD[5] = TextDrawCreate(595.099975, 434.562500, "www.varadero-ogc.com");
	TextDrawLetterSize(NwnEditor_TD[5], 0.108497, 0.672496);
	TextDrawTextSize(NwnEditor_TD[5], 0.000000, 161.000000);
	TextDrawAlignment(NwnEditor_TD[5], 2);
	TextDrawColor(NwnEditor_TD[5], 674313215);
	TextDrawSetShadow(NwnEditor_TD[5], 0);
	TextDrawBackgroundColor(NwnEditor_TD[5], 255);
	TextDrawFont(NwnEditor_TD[5], 2);
	TextDrawSetProportional(NwnEditor_TD[5], 1);

	NwnEditor_TD[6] = TextDrawCreate(186.500000, 432.687652, "box");
	TextDrawLetterSize(NwnEditor_TD[6], 0.000000, 1.049996);
	TextDrawTextSize(NwnEditor_TD[6], 445.000000, 0.000000);
	TextDrawAlignment(NwnEditor_TD[6], 1);
	TextDrawColor(NwnEditor_TD[6], -1);
	TextDrawUseBox(NwnEditor_TD[6], 1);
	TextDrawBoxColor(NwnEditor_TD[6], 674313215);
	TextDrawSetShadow(NwnEditor_TD[6], 0);
	TextDrawBackgroundColor(NwnEditor_TD[6], 255);
	TextDrawFont(NwnEditor_TD[6], 1);
	TextDrawSetProportional(NwnEditor_TD[6], 1);

	NwnEditor_TD[7] = TextDrawCreate(315.699676, 433.487487, "MUDJA_CIGAN_VAM_SVIMA_SALJE_POZDRAVE_SA_JANE_DACOVIC,_UKOLIKO_VAM_SE_SKIJA_PO_MRVIMA_/skijaj");
	TextDrawLetterSize(NwnEditor_TD[7], 0.114999, 0.742497);
	TextDrawTextSize(NwnEditor_TD[7], 0.000000, 161.000000);
	TextDrawAlignment(NwnEditor_TD[7], 2);
	TextDrawColor(NwnEditor_TD[7], -1094795521);
	TextDrawSetShadow(NwnEditor_TD[7], 0);
	TextDrawBackgroundColor(NwnEditor_TD[7], 255);
	TextDrawFont(NwnEditor_TD[7], 2);
	TextDrawSetProportional(NwnEditor_TD[7], 1);

	NwnEditor_TD[8] = TextDrawCreate(126.699676, 436.987487, "15.05.2016");
	TextDrawLetterSize(NwnEditor_TD[8], 0.114999, 0.742497);
	TextDrawTextSize(NwnEditor_TD[8], 161.000000, 0.000000);
	TextDrawAlignment(NwnEditor_TD[8], 1);
	TextDrawColor(NwnEditor_TD[8], -1094795521);
	TextDrawSetShadow(NwnEditor_TD[8], 0);
	TextDrawBackgroundColor(NwnEditor_TD[8], 255);
	TextDrawFont(NwnEditor_TD[8], 2);
	TextDrawSetProportional(NwnEditor_TD[8], 1);

	NwnEditor_TD[9] = TextDrawCreate(125.699684, 431.062500, "12:45");
	TextDrawLetterSize(NwnEditor_TD[9], 0.172997, 0.864997);
	TextDrawTextSize(NwnEditor_TD[9], 182.000000, 0.000000);
	TextDrawAlignment(NwnEditor_TD[9], 1);
	TextDrawColor(NwnEditor_TD[9], -1094795521);
	TextDrawSetShadow(NwnEditor_TD[9], 0);
	TextDrawBackgroundColor(NwnEditor_TD[9], 255);
	TextDrawFont(NwnEditor_TD[9], 1);
	TextDrawSetProportional(NwnEditor_TD[9], 1);

	NwnEditor_TD[10] = TextDrawCreate(551.500000, 2.312500, "VARADERO");
	TextDrawLetterSize(NwnEditor_TD[10], 0.208998, 1.009374);
	TextDrawAlignment(NwnEditor_TD[10], 1);
	TextDrawColor(NwnEditor_TD[10], -1);
	TextDrawSetShadow(NwnEditor_TD[10], 0);
	TextDrawBackgroundColor(NwnEditor_TD[10], 255);
	TextDrawFont(NwnEditor_TD[10], 1);
	TextDrawSetProportional(NwnEditor_TD[10], 1);

	NwnEditor_TD[11] = TextDrawCreate(360.000000, 415.649993, "box");
	TextDrawLetterSize(NwnEditor_TD[11], 0.000000, 0.749997);
	TextDrawTextSize(NwnEditor_TD[11], 1181.000000, 0.000000);
	TextDrawAlignment(NwnEditor_TD[11], 1);
	TextDrawColor(NwnEditor_TD[11], -1);
	TextDrawUseBox(NwnEditor_TD[11], 1);
	TextDrawBoxColor(NwnEditor_TD[11], 674313215);
	TextDrawSetShadow(NwnEditor_TD[11], 0);
	TextDrawBackgroundColor(NwnEditor_TD[11], 255);
	TextDrawFont(NwnEditor_TD[11], 1);
	TextDrawSetProportional(NwnEditor_TD[11], 1);
    // ************************************************************************** //
	
	/////////////////////////////////////////////////
	for(new o; o < MAX_VOZILA; o++)
	{
	    if(VoziloJeAvion(GetVehicleModel(o)) || VoziloJeBrod(GetVehicleModel(o)) || VoziloJeKamion(GetVehicleModel(o))) Fuel[o] = 85;
	    else if(VoziloJeMotor(GetVehicleModel(o))) Fuel[o] = 45;
	    else if(VoziloJeBicikla(GetVehicleModel(o)) || GetVehicleModel(o) == 538) Fuel[o] = 1000000;
	    else Fuel[o] = 45;
		if(!VoziloJeBicikla(GetVehicleModel(o)))
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(o, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(o, 0, 0, alarm, doors, bonnet, boot, objective);
		}
		if(DostavljacVozila(GetVehicleModel(o)))
		{
		    ProduktiVozila[o] = 0;
		}
	}		
	
	// =============================== [ mysql ucitavanje ] ============================= //
	mysql_tquery(SQL, "select * from `firme` order BY `firme`.`fSQLID` asc ", "_SQLLoadFirme", "");
	mysql_tquery(SQL, "select * from `kuce` order by `kuce`.`kSQLID` asc", "_SQLLoadKuce", "");
	mysql_tquery(SQL, "select * from `server_podesavanja`", "_SQLLoadServer", "");
	mysql_tquery(SQL, "select * from `bankomati` order by `bankomati`.`banSQLID` asc", "_SQLLoadATM", "");
	mysql_tquery(SQL, "select * from `stanovi` order by `stanovi`.`sSQLID` asc", "_SQLLoadStanove", "");
	mysql_tquery(SQL, "select * from `org_podesavanja`", "_SQLLoadOrgPodesavanja", "");
	mysql_tquery(SQL, "select * from `ulice` order by `ulice`.`uSQLID` asc", "_SQLLoadUlice", "");
	mysql_tquery(SQL, "select * from `jelke` order by `jelke`.`jSQLID` asc", "_SQLLoadJelke", "");
	mysql_tquery(SQL, "select * from `garaze` order by `garaze`.`gSQLID` asc", "_sqlLoadGarage", "");
	mysql_tquery(SQL, "select * from `vikendice` order by `vikendice`.`vSQLID` asc", "_SQLLoadVikendice", "");
	mysql_tquery(SQL, "select * from `gangzone` order by `gangzone`.`gZSQLID` asc", "_SQLLoadGangZones", "" );
	mysql_tquery(SQL, "select * from `aktori` order by `aktori`.`ActorSQLID` asc", "_SQLLoadActors", "" );
	mysql_tquery(SQL, "select * from `imanja` order by `imanja`.`iSQLID` asc", "_SQLLoadImanja", "" );
	mysql_tquery(SQL, "select * from `drvo` order by `drvo`.`dSQLID` asc", "_SQLLoadDrvece", "" );
	
	
   
	print("[V:RPG] Skripta vrsi ocitavanje....");
	print("[V:RPG] OnGameModeInit se pokrece.");
	print("[V:RPG] Mape uspijesno ucitane.");
	////////////////////////////////AUTA UCITAVANJE//////////////////////////////////
	IzlozbenoAuto = CreateVehicle(AutoSalon[AutoModel][0], AIZLOZBENO_X,AIZLOZBENO_Y,AIZLOZBENO_Z,AIZLOZBENO_A, 2, 2, 30000);
	for(new i = 0; i < sizeof(VoziloInfo); i++)
	{
		VoziloInfo[i][vID] = -1;
	}
	for(new i = 0; i < sizeof(MotorInfo); i++)
	{
		MotorInfo[i][mID] = -1;
	}
	for(new i = 0; i < sizeof(AvionInfo); i++)
	{
		AvionInfo[i][avID] = -1;
	}
	for(new i = 0; i < sizeof(PlovilaInfo); i++)
	{
		PlovilaInfo[i][plID] = -1;
	}
	for(new i = 0; i < sizeof(BiciklaInfo); i++)
	{
		BiciklaInfo[i][biID] = -1;
	}
	

	//------------------------------------------------------------------------//
	
	
	///////////////////////////////LABELI I PICKUPI////////////////////////////////////////////
    CreateDynamic3DTextLabel(""SRWBOJA"[Banka]\n"BELA"Da vidite mogucnosti kucajte /banka",0x9EC73DAA,451.2185,502.6533,407.0240, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""CRVENA"[ Addiko Banka ]\n"BELA"Pritisnite 'F' za ulaz",0x9EC73DAA,1460.8344,-1022.5966,23.8276, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Izlaz iz Banke]\n"BELA"Pritisnite 'F' za izlaz",0x9EC73DAA,1109.6980,1052.3937,-19.9389, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Bankovni Racun]\n"BELA"Da otvorite bankovni racun kucajte /otvoriracun",0x9EC73DAA,451.2206,509.2217,407.0240, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[LSPD]\n"BELA"Pritisnite 'F' za ulaz",0x9EC73DAA,1554.4662,-1675.6755,16.1953,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Duznost]\n"BELA"Kucajte /duznost da uzmete duznost",0x9EC73DAA,-252.1009,118.0368,-56.5761,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Dosije Igraca]\n"BELA"Da ocistite dosije kucajte /ocistidosije",0x9EC73DAA,-227.3521,133.3322,-53.8010,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Hapsenje <<"BELA"\nDa uhapsite koristite '/uhapsi'",0x9EC73DAA,1568.3774,-1694.3285,5.8906,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Hapsenje <<"BELA"\nDa uhapsite koristite '/uhapsi'",0x9EC73DAA,1312.4955,-1361.4672,13.4930,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Oprema ]\n"BELA"Kucajte /pdoprema da uzmete opremu",0x9EC73DAA,-247.1670,120.3929,-56.5761,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Auto Skola]\n"BELA"Pritisnite 'F' za ulaz u Auto Skolu",0x9EC73DAA,1539.4762,-2245.8247,14.5417,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Auto Skola]\n"BELA"Pritisnite 'F' za izlaz iz Auto Skole",0x9EC73DAA,-2026.8488,-104.1944,1035.1719,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Kupovina Dozvola ]\n"BELA"Da kupite dozvole kucajte /kupidozvole",0x9EC73DAA,1547.5439,-2242.6726,-91.4350,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ The Vinci Family HQ ]\n"BELA"Za ulaz kucajte '/otvori'",0x9EC73DAA,2179.5295,-2255.9658,14.7734,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Dozvola za oruzije ]\n"SIVA"Da kupite dozvolu kucajte /oruzijedozvola",0x9EC73DAA,-241.3386,138.0957,-53.8010,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Black Dragon Triads ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA,1298.5117,-798.4493,84.1406,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Black Dragon Triads ]\n"BELA"Pritisnite 'F' za izlaz iz baze",0x9EC73DAA,1324.4985,-635.8423,14280.8857,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ The Vinci Family Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 2120.9382,-2270.8269,20.6719,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Pokretanje sverca ]\n"BELA"Kucajte '/sverc' da svercate",0x9EC73DAA, 2133.8552,-2296.7241,13.4270, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Mesto za utovar ]\n"BELA"Samo clanovi mafije",0x9EC73DAA, 210.9088,-228.5437,1.7786, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Luka ]\n"BELA"Luka Los Santos",0x9EC73DAA, 1332.4681,-641.8524,14281.4863, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Black Dragon Triads Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 1332.4681,-641.8524,14281.4863,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Black Dragon Triads ]\n"BELA"... Oruzaonica ...",0x9EC73DAA, 1258.9980,-785.4474,92.0302,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Kupovina Sjemena ]\n"BELA"Komanda: /kupisjeme",0x9EC73DAA, 1940.5697,-1984.3297,13.5469, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Grove Street Family ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA, 2495.4365,-1690.9509,14.7656, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Grove Street Family Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 308.1252,1120.6827,1083.8828, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Ballas ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA, 2000.1547,-1114.0616,27.1250, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Ballas Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 2455.6946,-1706.6046,1013.5078, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Pokretanje Sverca ]\n"BELA"Samo clanovi Black Dragon Triads",0x9EC73DAA, -1108.1185,-1620.9246,76.3672, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Ballas Oruzaonica ]\n"BELA"Za koriscenje pritisnite 'SPACE'",0x9EC73DAA, 2451.2080,-1685.5591,1013.5078, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Los Santos Zatvor ]\n"BELA"Ulaziti mogu samo clanovi policije",0x9EC73DAA, 1797.8744,-1578.8844,14.0906, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Novinari ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA, 1772.5709,-1750.0457,13.545, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SZELENA"Dobro dosli na Varadero\nOwner: "BELA"bunta\n"SZELENA"Developers: "BELA"bunta\n"SZELENA"Weburl: "BELA"www.varadero-samp.com\n"SZELENA"Discord: "BELA"discord.varadero-samp.com\n"SZELENA"Version: "BELA"1.0 © bunta",0x9EC73DAA, 707.4662,-1357.4747,13.5966, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Oglasi ]\n"BELA"Komanda: /oglas (50$)",0x9EC73DAA, 1782.4839,-1797.2479,-43.3141, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 1004.0422,-937.5357,42.3281, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 1382.2139,460.1810,20.3452, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"(( ~ Los Santos Opstina ~ ))\n"BELA"Pritisnite 'F' za ulaz u opstinu",0x9EC73DAA, 1477.1902,-1742.2083,13.5747, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Opstina ]\n"BELA"Pritisnite 'F' za izlaz iz opstine",0x9EC73DAA, 64.3019,123.1929,495.6328, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Sef! ]\n"BELA"da otvirte pretisnite space!",0x9EC73DAA, 261.2951,1832.9836,1010.9302, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Radionica ]\n"BELA"Da popravite vozilo kucajte /radionica",0x9EC73DAA, 1816.7518, -1434.8579, 13.6016, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""ZELENA"[ Auto Salon ]\n"BELA"Za kupovinu auta kucajte /kupiauto",0x9EC73DAA, 565.0984, -1285.4423, 17.2482, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Za utovar kutije kucaj\n/uzmikutiju",0x9EC73DAA, 1639.5282,-1900.4049,13.5521, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Pijaca polovnih automobila ]",0x9EC73DAA, 1720.6200,1603.4927,15.6419, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Moto Salon ]\n"BELA"Za kupovinu motora kucajte /kupivozilo /kupikacigu",0x9EC73DAA, 699.4522,-1573.1166,14.2680, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Prodavnica Kaciga ]\n"BELA"Za kupovinu kucajte /kupikacigu za kacigu /kupikacigu /kupivozilo",0x9EC73DAA, 1990.1863,-2062.6316,13.3699, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Letjelica Salon ]\n"BELA"Za kupovinu letjelice kucajte /kupivozilo",0x9EC73DAA, 1868.8652,-2284.3818,13.5469, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Letjelice ]\n"BELA"Pijaca polovnih letjelica",0x9EC73DAA, 414.4259,2529.6877,16.6096, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Taxi ]\n"BELA"za ulazak u pretisnite F!",0x9EC73DAA, 1219.1790, -1811.6605, 16.5430, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Plovila Salon ]\n"BELA"Za kupovinu plovila kucajte /kupivozilo", 0x9EC73DAA, 833.9309,-2081.7688,10.1159, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Pijaca polovnih plovila ]", 0x9EC73DAA, 2581.8689,-2154.9531,-0.2188, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Kupovina zetona ]\n"BELA"Cena zetona: 1000$ (/kupizeton)", 0x9EC73DAA, 2257.5688,-1449.7758,25.8391, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Masina za preradu materijala",0x9EC73DAA, 2145.6873,-2269.3774,13.2998, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Parking Servis ]\n"BELA"Da otvorite kapiju treba vam 5000$",0x9EC73DAA, 1636.2178,-1146.0499,23.9063, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Roleri ]\n"BELA"Da kupite rolere udjite unutra",0x9EC73DAA, 1247.6490,-952.2573,42.5065, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Roleri ]\n"BELA"Da kupite kucajte /roleri",0x9EC73DAA, 851.9899,853.5080,-4.4804, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"/disco",0x9EC73DAA, -2653.1223,1410.0814,906.2734, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"/skiniorgkaznu",0x9EC73DAA, 33.3096,129.8112,495.6328, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"CONDOR",0x9EC73DAA, -2654.4868,1427.0139,907.3604, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"BLACK DRAGON TRIADS",0x9EC73DAA, -2661.1895,1427.3140,907.3604, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Varadero",0x9EC73DAA, -2670.8828,1427.5236,907.3604, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"/naruci",0x9EC73DAA, 1455.5018,-1896.7522,23.1622, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Oprema ]\n"BELA"Kucajte /Hoprema da uzmete opremu",0x9EC73DAA,2816.6794,-1169.7616,1025.5778,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Alat ]\n"BELA"Kucajte /kupialat da uzmete alat",0x9EC73DAA,1936.7006,-2013.6572,13.6469,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Sef Banke ]\n"BELA"Pretisni F Da udjes",0x9EC73DAA,416.4890,512.5776,401.5359,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Condor Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 1711.8944,-1640.0162,20.2239, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Blue Lagoon Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, -691.7795,939.8020,13.6328, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Luka ]\n"BELA"Luka Los Santos",0x9EC73DAA, 1709.5293,2231.4001,10.8203, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Luka ]\n"BELA"Luka Los Santos",0x9EC73DAA, 2794.7620,-2417.8188,13.2843, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Condor Oruzaonica ]\n"BELA"Za koriscenje pritisnite 'SPACE'",0x9EC73DAA, 1734.1084,-1660.5541,20.2427, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Blue Lagoon Oruzaonica ]\n"BELA"Za koriscenje pritisnite 'SPACE'",0x9EC73DAA, -684.3718,933.5969,13.6328, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ La Cosa Nostra ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, -53.7273,1118.3241,-6.6925, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Da Naga Boys ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 754.1263,-40.3540,1000.5906, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Yakuza Oruzaonica ]\n"BELA"Za koriscenje pritisnite 'SPACE'",0x9EC73DAA, 265.5525,1846.3704,-29.4295, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Yakuza Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 265.5046,1844.0194,-29.4295, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Sef Opstine ]\n"BELA"Kucaj "SPLAVA"/opljackajopstinu"BELA" da bi pljackao",0x9EC73DAA,29.7447,136.0314,495.6298,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[FBI]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA,1305.8044,-1341.4901,13.4934,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[/duznost\n[/fbioprema]", 0x00FFF9FF, -1109.4800, -95.5956, 2040.0691, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Black Cobra Corporation Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 333.8751,1746.6344,1008.8220, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Bandera Srece ]\n"BELA"Ko ceka taj doceka",0x9EC73DAA, 1134.5845,-935.8270,42.8968, 50, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ V:RPG Lutrija ]\n"BELA"Za kupovinu lotto listica kucajte\n"SPLAVA"/Lotto",0x9EC73DAA, 2101.2185,-1359.8767,23.9868, 50, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Sverc ]\n"BELA"Kucajte /sverc da pokrenete sverc",0x9EC73DAA,2791.8171,2696.4822,10.8469,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ DR Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, -430.3754,1306.1533,2.4242, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ DR Oruzaonica ]\n"BELA"Za koriscenje pritisnite 'SPACE'",0x9EC73DAA, 950.0635,831.9800,524.7799, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ /pronadjikvar ]\n"BELA"",0x9EC73DAA, 1806.2552,-1690.9285,13.7140, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ /vatrenaoprema ]\n"BELA"",0x9EC73DAA, 2628.7944,-1103.3114,1045.2733, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ZLATARA]\n"SRWBOJA"Da udjes u zlataru stisni F",0x9EC73DAA,1211.8041,-1449.3671,13.6139, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[Vatrogasna Stanica]\n"SRWBOJA"Da udjes u Vatrogasnu Stanicu stisni F",0x9EC73DAA,2050.9836,-1893.3771,13.8117, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA" Da kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 1816.9990,-1414.6753,13.6285, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Sef Zlatare ]\n"BELA"Kucaj "SPLAVA"/opljackajzlataru"BELA" da bi pljackao",0x9EC73DAA,286.9147,1425.9718,727.4360,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Rudnik ]\n"BELA"Kucajte "SPLAVA"/kopajzlato"BELA" da bi skupljao zlato",0x9EC73DAA,620.2411,834.2767,-94.8276,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Rudnik ]\n"BELA"Kucajte "SPLAVA"/predajzlato"BELA" da bi predao zlato",0x9EC73DAA,585.4147,871.9699,-42.4973,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Rudnik ]\n"BELA"Kucajte "SPLAVA"/istovarizlato"BELA" da bi predao zlato",0x9EC73DAA,1348.0571,-1797.3876,13.5443,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Rudnik ]\n"BELA"Pritisnite F da udjete u rudnik",0x9EC73DAA,602.1806,867.9139,-42.9609,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Hotel Cuba]\n"BELA"Pritisnite F da udjete u zgradu"SPLAVA"\nID:1\n Vlasnik: bunta",0x9EC73DAA,942.9377,-1418.1169,13.5469,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Pasos ]\n"BELA"Da podignete pasos kucajte /izvadipasos",0x9EC73DAA, 33.1681,114.4860,495.6328, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ NEON ]\n"BELA"Da stavite neon kucajte /neon",0x9EC73DAA, 1319.5065,-1239.1620,13.5469, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ GRANICNI PRELAZ ]\n"BELA"Kucajte /otvori da podignete rampu",0x9EC73DAA, 1744.8798,560.2429,25.6389, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ GRANICNI PRELAZ ]\n"BELA"Kucajte /otvori da podignete rampu",0x9EC73DAA, 1756.7955,556.5726,25.6242, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[Las Venturas Banka]\n"BELA"Da vidite mogucnosti kucajte /banka",0x9EC73DAA,2433.10498, 2285.00513, -3.42100, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[Las Venturas Banka]\n"BELA"Pritisnite 'F' za ulaz",0x9EC73DAA,2462.79175, 2244.54370, 10.47492, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[LV Izlaz iz Banke]\n"BELA"Pritisnite 'F' za izlaz",0x9EC73DAA,2427.74951, 2280.09009, -2.82720, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 2199.1162,2473.9028,10.8203, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 2209.6011,2474.6040,10.8203, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 2639.6072,1113.3043,10.8203, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 2639.9292,1099.2878,10.8203, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Govornica ]\n"BELA"Da pricate kucajte /govornica",0x9EC73DAA, 1512.54163, -1741.81860, 13.13770, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Govornica ]\n"BELA"Da pricate kucajte /govornica",0x9EC73DAA, 1537.43262, -1610.37415, 13.15950, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Govornica ]\n"BELA"Da pricate kucajte /govornica",0x9EC73DAA, 842.28149, -1311.88721, 13.18350, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Govornica ]\n"BELA"Da pricate kucajte /govornica",0x9EC73DAA, 419.36960, -1783.72668, 5.14680, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Govornica ]\n"BELA"Da pricate kucajte /govornica",0x9EC73DAA, 1247.24646, -1383.00098, 12.96790, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[Da uzmete znacku /duznost]\n"BELA"/pdoprema !",0x9EC73DAA,198.7946,309.3438,1002.9796,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""ZELENA"[ Auto Salon ]\n"BELA"Za kupovinu auta kucajte /kupiauto",0x9EC73DAA, 2172.9819,1400.6012,11.0625, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Plovila Salon ]\n"BELA"Za kupovinu plovila kucajte /kupivozilo", 0x9EC73DAA, 286.0556, -1900.6504, 2.1071, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Letjelica Salon ]\n"BELA"Za kupovinu letjelice kucajte /kupivozilo",0x9EC73DAA, 1319.0121,1249.7191,10.8203, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Moto Salon ]\n"BELA"Za kupovinu motora kucajte /kupivozilo",0x9EC73DAA, 1948.6079,2068.6697,11.0610, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ TUNING ]\n"BELA"Da tunirate vase vozilo /tunecar\nDa skinete tuning /skinitune",0x9EC73DAA, 2534.2839,-1544.9838,26.0105, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Russian Mafia ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA, -2338.2700,-1594.0641,484.0203, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Russian Mafia ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 305.7284,-1511.2084,5.6959, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Dozvola za oruzije ]\n"SIVA"Da kupite dozvolu kucajte /oruzijedozvola",0x9EC73DAA,195.2423,271.0422,1007.2893,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Parking Servis ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA, 1672.9596,-1003.4055,24.0703, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Parking Servis ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 1071.8682,-896.5525,1043.3033, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[/psduznost]", 0x00FFF9FF, 1077.5121,-909.2858,1043.3033, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[Koristite /hangar]", 0x00FFF9FF, 23.9277,1897.6150,17.6406, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Fbi Duznost]\n"BELA"Kucajte /duznost da uzmete duznost",0x9EC73DAA,1463.9390,-1544.3516,642.6298,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[Fbi Oprema]\n"BELA"Kucajte /fbioprema da uzmete duznost",0x9EC73DAA,1458.0588,-1544.0089,642.6298,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ RP Skola ]\n"BELA"Nakon kucanja /pismeni, pokazite vase RPG znanje!",0x9EC73DAA, 1163.2476,-613.1199,1089.9259, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{0084e3}[{FFFFFF}BIRO{0084e3}]\n{FFFFFF}Kucaj {0084e3}/poslovi",0x0084e3FF, 37.0021,123.6579,495.6328, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Vencanje ]\n"BELA"Da zaprosite kucajte /propose",0x9EC73DAA, 2246.7124,-1331.5956,25.0439, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
 	CreateDynamic3DTextLabel(""SRWBOJA"[ Vencanje ]\n"BELA"Da izaberete kuma kucajte /witness",0x9EC73DAA, 2236.4272,-1328.2574,23.9930, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Da zaprosite kucajte /zaprosi",0x9EC73DAA, 2219.9783, -1359.5922, 11.3776, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
 	CreateDynamic3DTextLabel(""SRWBOJA"Da izaberete kuma kucajte /witness",0x9EC73DAA, 2218.4922, -1361.6759, 10.7191, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Da izaberete kumu kucajte /witness",0x9EC73DAA, 2219.0134, -1357.3463, 10.3591, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Vencanje ]\n"BELA"Nakon prosidbe,kucajte yes na chatu",0x9EC73DAA, 2221.3403, -1359.5476, 10.9879, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Tehnicki pregled ]\n"BELA"/tehnicki pregled",0x9EC73DAA, 1596.1346,-2166.5354,13.6591, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Bike Salon ]\n"BELA"Za kupovinu Bicikle kucajte /kupivozilo",0x9EC73DAA, 1376.2202,-1887.8555,13.5506, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
   	CreateDynamic3DTextLabel(""SRWBOJA"(( Gun Shop ))\n"BELA"Ako zelite da kupite oruzije u nasem gunshopu kucajte /kupi",0x9EC73DAA,308.3803,-141.4574,999.6016, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel(""SRWBOJA"(( Gun Shop ))\n"BELA"Da izadjete iz naseg gun shopu pretisni te 'F' ",0x9EC73DAA,315.6914,-143.6608,999.6016, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA"(( Market ))\n"BELA"Ako zelite da kupite nesto u nasem marketu kucajte /kupi",0x9EC73DAA,-30.6746,-28.9990,1003.5573, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[RolePlay Skola]\n"BELA"ENTER",0x9EC73DAA,1416.1619,-1530.6890,15.1169, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ REGISTRACIJA ]\n"BELA"Da registrujete vase vozilo /registracija,/vulkanizer,/tehnickipregled",0x9EC73DAA, 2510.6069,-1542.3040,26.0105, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
   	CreateDynamic3DTextLabel(""SRWBOJA"[ Vencanje ]\n"BELA"Da izaberete kumu kucajte /witness",0x9EC73DAA,2236.4260,-1334.8284,23.9930, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
 	CreateDynamic3DTextLabel(""SRWBOJA"[ Vencanje ]\n"BELA"Nakon kucanja /propose, oboje upisite yes na chatu",0x9EC73DAA, 2242.9880,-1331.8469,24.0729, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    //CreateDynamic3DTextLabel(""SRWBOJA"[Ugradnja tablice ]\n"BELA"Ako zelite da stavite tablice na vozilo \n /tablice",0x9EC73DAA, -241.6919,142.6402,-53.8010, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    //CreateDynamic3DTextLabel(""SRWBOJA"[Slikanje  vozila]\n"BELA"Ako zelite da slikate vozilo \n /uslikajvozilo ",0x9EC73DAA, 1578.3833,-1634.1245,13.5621, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 1",0x9EC73DAA,1814.19995,-1906.09998,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 1",0x9EC73DAA,2021.50000,-1943.59998,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 1",0x9EC73DAA,2259.30005,-1900.69995,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 1",0x9EC73DAA,2517.30005,-1939.00000,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 1",0x9EC73DAA,2765.10010,-2000.80005,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 1",0x9EC73DAA,2455.00000,-1725.09998,13.90000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 1",0x9EC73DAA,1814.69995,-1776.40002,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 2",0x9EC73DAA,1835.90002,-1174.69995,24.10000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 2",0x9EC73DAA,1503.90002,-1024.30005,24.10000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 2",0x9EC73DAA,1238.40002,-922.40002,43.10000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 2",0x9EC73DAA,1190.00000,-1155.69995,24.20000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 2",0x9EC73DAA,1227.40002,-1579.50000,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA">> Autobuska Stanica <<"BELA"\nPricekajte ovde bus ovde prolazi Bus-Linija br. 2",0x9EC73DAA,1451.59998,-1879.30005,13.80000, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Bolnica ]\n"SIVA"Pritisnite 'F' za ulaz u bolnicu",0x9EC73DAA,1105.6128,-1343.3893,12.0644,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Bolnica ]\n"SIVA"Pritisnite 'F' za izlaz iz bolnice",0x9EC73DAA,1126.7598,-1317.1395,4395.3857,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[Los Santos Police Department]\n"BELA"Lift - Zgrade",0x9EC73DAA,-240.0658,129.9189,-53.8010,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Prodaja voce ]\n"BELA"Da prodas voce /prodajvoce",0x9EC73DAA,1023.7318,-1892.2452,12.7871,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Kupovina drveta ]\n"BELA"Da kupis seme /kupidrvo",0x9EC73DAA,1023.8461,-1880.8121,12.8099,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ NARGILA ]\n"BELA"Da bi ste kupili nargilu kucajte\n/kupinargilu",0x9EC73DAA, 1099.8223,-1024.5493,32.4045, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
   	CreateDynamic3DTextLabel(""SRWBOJA"[ NARGILA ]\n"BELA"/nargila",0x9EC73DAA, 1101.6172,-1022.7809,32.4045, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ NARGILA ]\n"BELA"/nargila",0x9EC73DAA, 1105.0488,-1022.7778,32.4045, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
 	CreateDynamic3DTextLabel(""SRWBOJA"[ NARGILA ]\n"BELA"/nargila",0x9EC73DAA, 1109.0168,-1022.7797,32.4045, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
 	CreateDynamic3DTextLabel(""SRWBOJA"[ NARGILA ]\n"BELA"/nargila",0x9EC73DAA, 1114.3191,-1025.9022,32.4045, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{0072FF}[ GRANICA ]\n{FFFFFF}/granica",0x9EC73DAA,1806.38, 815.78, 10.48, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{0072FF}[ GRANICA ]\n{FFFFFF}/granica",0x9EC73DAA,1788.28, 814.73, 10.50, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{0072FF}[ GRANICA ]\n{FFFFFF}/granica",0x9EC73DAA,46.28, -1537.96, 4.74, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{0072FF}[ GRANICA ]\n{FFFFFF}/granica",0x9EC73DAA,54.87, -1524.36, 4.59, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{0072FF}[ LOS SANTOS BUTIK ]\n{FFFFFF}/butik",0x9EC73DAA,690.9766,-1607.1813,14.5957, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Loca Cartel ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA,0.6561,-1937.6566,4.2854,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"[ Loca Cartel ]\n"BELA"Pritisnite 'F' za izlaz iz bazu",0x9EC73DAA,937.6559,97.4642,1001.2659,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Pokretanje sverca ]\n"BELA"Kucajte '/sverc' da svercate",0x9EC73DAA, -2132.6167,-247.8245,35.3265, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Narco Cartel Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, -2174.5754,-265.4722,36.5156, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ RAZVOD ]\n"BELA"Da razvedete\n/razvedi",0x9EC73DAA,2250.2136,-1326.1591,25.8217,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Russian Mafia  ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA,2004.4977,-2210.7734,13.5469,10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    //CreateDynamic3DTextLabel(""SRWBOJA"varadero "BELA"KUCA"SRWBOJA" OGC\n"SRWBOJA">"BELA" Version: "SRWBOJA"v1.6\n"SRWBOJA">"BELA" Community Developers: "SRWBOJA"Stretch\n"SRWBOJA">"BELA" Community Owners:"SRWBOJA" Saiyan & Zlaja\n"SRWBOJA">"BELA" TeamSpeak: "SRWBOJA"ts3.uk-ogc.com\n"SRWBOJA">"BELA" Web:"SRWBOJA" www.varadero-samp.com\n"SRWBOJA">"BELA" Â© "SRWBOJA"UK "BELA"OGC "SRWBOJA"2020",0x9EC73DAA, 1002.5555,-1197.4241,16.7497, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SPLAVA"[ TBB ULAZ ]\n"BELA"Pritisnite 'F' za ulaz",0x9EC73DAA,-618.4529,-1581.2063,24.6269,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SPLAVA"[ TBB IZLAZ ]\n"BELA"Pritisnite 'F' za izlaz",0x9EC73DAA,1445.7311,1186.4653,-45.9757,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 1377.7511,-1427.0215,13.5459, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Da naspete gorivo kucajte /gorivo\nCena litre: 8$\nDa kupite kanticu kucajte /kupikanticu",0x9EC73DAA, 1375.8279,-1419.7325,13.5454, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA""SRWBOJA"[ TUNING ]\n"BELA"Da tunirate vase vozilo /tunecar\nDa skinete tuning /skinitune",0x9EC73DAA, 2534.0623,-1552.2810,25.5523, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
   	CreateDynamic3DTextLabel(""SRWBOJA"[ Pokretanje sverca ]\n"BELA"Kucajte '/sverc' da svercate",0x9EC73DAA, 56.8383,-1935.5956,4.2434, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ LC Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 956.5885,103.8902,1001.2659, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Da trenirate kucajte /streljana",0x9EC73DAA, 300.3409,-134.1194,1004.0625, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Da udjete pritisnite 'F'",0x9EC73DAA, 305.3554,-141.9046,1004.0625, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"Da izadjete pritisnite 'F'",0x9EC73DAA, 304.0642,-142.0297,1004.0625, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ TBB Sef ]\n"BELA"Pritisnite 'SPACE' da otvorite sef",0x9EC73DAA, 1470.0063,1180.0138,-45.9757, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Black Cobra Corporation ]\n"BELA"Pritisnite 'F' za ulaz u bazu",0x9EC73DAA, 2368.7058,577.3232,8.4156, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""ZELENA"[ Auto Salon ]\n"BELA"Za kupovinu auta kucajte /kupiauto",0x9EC73DAA, 2172.9819,1400.6012,11.0625, 10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SRWBOJA"[ Pokretanje sverca ]\n"BELA"Kucajte '/sverc' da svercate",0x9EC73DAA, 249.7753,-718.2834,45.9990, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	new brzs[200];
	format(brzs, sizeof(brzs), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d \nProdajna Cena Zlata: %d ", KupovnaCena, ProdajnaCena);
	berza = CreateDynamic3DTextLabel(brzs, 0x00FFF9FF, 299.9264,1416.3710,727.4360,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
	
	CreateDynamic3DTextLabel(""SPLAVA"[ VLA ULAZ ]\n"BELA"Pritisnite 'F' za ulaz",0x9EC73DAA,2650.4563,-2021.6121,14.1766,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel(""SPLAVA"[ VLA IZLAZ ]\n"BELA"Pritisnite 'F' za izlaz",0x9EC73DAA,2651.5322,-2010.2905,-23.0830,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);

	new brzss[200];
	format(brzss, sizeof(brzss), "{F3FF02}DRZAVNI SEF\n\nUkupno novca u drzavnom sefu: %d$ ", OrgInfo[DrzavaNovac]);
	dsef = CreateDynamic3DTextLabel(brzss, 0x00FFF9FF, -227.6720,1111.8702,-10.4333,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
	////////////////////////////////////////////PICKUPS///////////////////////////////
    CreateDynamicPickup(19133, 1, 1109.6980,1052.3937,-19.9389); //Izlaz iz Banke
   	CreateDynamicPickup(19132, 1, 308.3803,-141.4574,999.6016); //gunshop /kupi
	CreateDynamicPickup(19132, 1, 315.6914,-143.6608,999.6016); //gunshop /izlaz
    CreateDynamicPickup(19133, 1, 64.3019,123.1929,495.6328); //Izlaz iz Opstina
    CreateDynamicPickup(19133, 1, 1477.1902,-1742.2083,13.5747); //Opstina ulaz
    CreateDynamicPickup(19133, 1, 1460.8344,-1022.5966,23.8276); //banka ulaz
	CreateDynamicPickup(19132, 1, -30.6746,-28.9990,1003.5573); // Market /kupi
	//-- Za Trafike
	CreateDynamicPickup(1239, 1, 1105.6128,-1343.3893,12.0644); //bolnica ulaz
	CreateDynamicPickup(1239, 1, 1163.2476,-613.1199,1089.9259); //Rpskola
	CreateDynamicPickup(19133, 1, 1799.5747,-1862.2520,13.5765);
    CreateDynamicPickup(1239, 1, 1101.6172,-1022.7809,32.4045); //YH NARGILA 1
    CreateDynamicPickup(1239, 1, 1105.0488,-1022.7778,32.4045); //YH NARGILA 2
    CreateDynamicPickup(1239, 1, 1109.0168,-1022.7797,32.4045); //YH NARGILA 3
    CreateDynamicPickup(1239, 1, 1114.3191,-1025.9022,32.4045); //YH NARGILA 4
	////////////////////////////////////////////////////////////////////////////
	CreateDynamicPickup(1247, 1, 1554.4662,-1675.6755,16.1953);//LSPD ulaz :D
	CreateDynamicPickup(1239, 1, 2257.5688,-1449.7758,25.8391); //karting
    lspdlift = CreateDynamicPickup(1239, 1, -240.2622,129.9185,-53.8010); // LSPDLIFT
    tvforuzije = CreateDynamicPickup(1239, 1, 2145.6873,-2269.3774,13.2998); //tvf masina (za oruzije)
    bdtoruzije = CreateDynamicPickup(1239, 1, 1258.9980,-785.4474,92.0302); //bdt oruzaonica
    pbusvozac = CreateDynamicPickup(1274, 1, 1752.8291,-1894.0505,13.5573); //posao bus vozac LS
    pbusvozac2 = CreateDynamicPickup(1274, 1, 1879.1913,2290.6455,10.9799); //posao bus vozac LV
    pkosactrave = CreateDynamicPickup(1274, 1, 1961.1292,-1244.8138,19.9714); //posao kosac trave
    pmehanicar = CreateDynamicPickup(1274, 1, 1821.8009, -1444.2721, 13.5947); //posao mehanicar
    ppostar = CreateDynamicPickup(1274, 1, 986.7067,-1251.8522,16.9844); //posao postar
    pkomunalac = CreateDynamicPickup(1274, 1, 1569.8850,-1552.9240,13.5536); //posao komunalac
    pgradjevinar = CreateDynamicPickup(1274, 1, 1882.0570,-1596.7355,13.5595); //posao gradjevinar
    pdrvoseca = CreateDynamicPickup(1274, 1, 106.9812,1106.2389,13.6094); //posao drvoseca
    pbolnicar = CreateDynamicPickup(1274, 1, 1145.5222,-1294.5692,13.6356); //posao bolnicar
    pgrobar = CreateDynamicPickup(1274, 1, 940.5929,-1085.7225,24.2962); //posao grobar
    pdzeparos = CreateDynamicPickup(1274, 1, 2351.9797,-1170.0458,28.0445); //posao dzeparos
    pfarmer = CreateDynamicPickup(1274, 1, -38.5563,56.3204,3.1172); //posao farmer
    pmasinovodja = CreateDynamicPickup(1274, 1, 1743.0222,-1943.9714,13.5683); //posao masinovodja
	pdostavljac = CreateDynamicPickup(1274, 1, 1628.9937,-1848.0186,13.5378); //posao dostavljac
	pkamiondzija = CreateDynamicPickup(1274, 1, 1811.3263,-2066.6699,13.5541); //posao kamiondzija
	ppilot = CreateDynamicPickup(1274, 1, 1892.8370,-2328.5259,13.5469); //posao pilot
	pelektricar = CreateDynamicPickup(1274, 1, 1083.2322,-1226.7747,15.8203); //posao elektricar
	pvodoinstalater = CreateDynamicPickup(1274, 1, 1804.4381,-1694.5592,13.7140); //posao vodoinstalater
	prudar = CreateDynamicPickup(1274, 1, 588.1840,877.5150,-42.4973); //posao rudar
	pcoca = CreateDynamicPickup(1274, 1, -539.9475,-518.3316,-23.5380); //posao rudar
    ///////////////////////////////////////MAP ICON////////////////////////////////////////////
    CreateDynamicMapIcon(817.5587,-1345.0061,13.5267, 38, -1, 0, 0, -1, 200.0); //SPAWN
	CreateDynamicMapIcon(2487.7295,-1668.2070,13.3438, 62, -1, 0, 0, -1, 200.0); //GROVE
	CreateDynamicMapIcon(1549.6624,-2244.8799,13.5469, 55, -1, 0, 0, -1, 200.0); //AUTO SKOLA
	CreateDynamicMapIcon(1461.5784,-1023.4968,23.8331, 52, -1, 0, 0, -1, 200.0); //BANKA
	CreateDynamicMapIcon(1546.5433,-1675.4541,13.5625, 30, -1, 0, 0, -1, 200.0); //LSPD
	CreateDynamicMapIcon(1183.0211,-1323.8278,13.5780, 22, -1, 0, 0, -1, 200.0); //BOLNICA
    CreateDynamicMapIcon(2191.9529,-2268.5972,13.5469, 23, -1, 0, 0, -1, 200.0); //TVF
    CreateDynamicMapIcon(1273.1383,-801.1609,88.3151, 23, -1, 0, 0, -1, 200.0); //BDT
    CreateDynamicMapIcon(-1094.4377,-1647.8151,76.3739, 16, -1, 0, 0, -1, 200.0); //BDT MESTO ZA DROGU
    CreateDynamicMapIcon(2000.1547,-1114.0616,27.1250, 59, -1, 0, 0, -1, 200.0); //BALLAS
    CreateDynamicMapIcon(1940.5697,-1984.3297,13.5469, 37, -1, 0, 0, -1, 200.0); //MESTO KUPOVINE SJEMENA
    CreateDynamic3DTextLabel(""SIVA"[ >> BUTIK << ]\n"SRWBOJA"Da kupite novo odelo /kupiodelo2",0x9EC73DAA,161.4428,-83.3799,1001.8047,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SIVA"[ >> BUTIK << ]\n"SRWBOJA"Da kupite novo odelo /kupiodelo",0x9EC73DAA,1548.6238,-1415.6609,-7.9110,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel(""SIVA"[ >> BUTIK << ]\n"SRWBOJA"Da kupite novo odelo /kupiodelo1",0x9EC73DAA,1551.0977,-1403.4491,-7.9110,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	////////////////////////////////PODESAVANJA I VARIJABLE///////////////////////////////////
	EnableStuntBonusForAll(0); 
	DisableInteriorEnterExits();
	ShowPlayerMarkers(false);  
	SetNameTagDrawDistance(30); 
	AllowInteriorWeapons(1);
	UsePlayerPedAnims();
	SetGameModeText("Varadero by bunta"); SendRconCommand("mapname Cuba"); SendRconCommand("language Balkan");
	SendRconCommand("weburl www.varadero-samp.com"); 
	new s, m, se; gettimeEx(s, m, se); 
	SetWorldTime(s); 
	SendRconCommand("rcon_password hlkugdrhgk478d45jkh38");
    PozvaoPojacanje = -1; toglas = 0; autokatalog = 0; Berza(); OpstinaSef(); UcitajGVozila(); LoadCameras();
    onlinepl=Konektovano();
    DosadasnjiRekord();
	//
    BankaKvar = 
    OpstinaKvar = 
    KolodvorKvar = 
    GroweKvar = 
    Ventil = 
    Kvar1 =
    bilbas = 0;
	//////////////////////////////TIMERI/////////////////////////////////////////////////////
	SetTimer("UpdateCameras", CAMERA_UPDATE_INTERVAL, true);
    SetTimer("necuupdate", 1000, true);
    SetTimer("PayPoeni", 60000, true);
	SetTimer("Lesevi", 300000, true);   
    SetTimer("VremeTimer", 1000, true);
    SetTimer("GameMode", 400000, true);
    SetTimer("GorivoDole", 90000, true);
    SetTimer("SpremiKorisnike", 500000, true);
    SetTimer("xReactionTest", TIME, true);
    SetTimer("Pozar", 600000, true);
	SetTimer("Pay", 100, true);
    SetTimer("ChatDouble", 30000, true); 
    SetTimer("WLProvera", 600000, true);
    SetTimer("Drvo", 60000, true);
    SetTimer("SendMSG", 80000, true);
    SetTimer("Odbrojavanja", 1000, true);
    SetTimer("ZonaTimer", 30000, true);
    SetTimer("matematikaUsranaGlupa", 1200000, true);
    //SetTimer("SyncTime", 60000, true);
    SetTimer("RandomPoruke", 12000, 1);
    SetTimer("PovecajDutyTime", 60000, true );
	
    VozilaProtect();
    printf("strimer tickrate = %d", Streamer_GetTickRate());
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
	return 1;
}

ptask updateZlatoITakoTo[2000](playerid) 
{
	if(UlogovanProvera[playerid])
	{		
		new zlatoString[10+10];
		format(zlatoString, sizeof(zlatoString),"ZLATO:_%dg",PlayerInfo[playerid][pZlato]);
		PlayerTextDrawSetString(playerid, NwnEditor_PTD[playerid][10], zlatoString);		

		new bankaString[10+20];
		format(bankaString, sizeof(bankaString),"Banka:_%d$",PlayerInfo[playerid][pNovacBanka]);
		PlayerTextDrawSetString(playerid, NwnEditor_PTD[playerid][9], bankaString);		

		new stringlevel[9+5];
		format(stringlevel, sizeof(stringlevel),"Level:_%d",PlayerInfo[playerid][pLevel]);	
		PlayerTextDrawSetString(playerid, NwnEditor_PTD[playerid][11], stringlevel);			
	}
}
task vremeTimer[60000]() 
{
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);

	if(tmphour == 8) DailyRecord = Iter_Count(Player);
	if(tmpminute == 0) 
	{				
		va_SendClientMessageToAll(0x0084e3aa, "[ Varadero ] Trenutno je "BELA"%02d:%02d, a vi igrate na "SRWBOJA"Varadero RPG "BELA"Serveru, uzivajte u igri", tmphour, tmpminute);
		va_SendClientMessageToAll(0x0084e3aa, "[ Varadero ] Danasnji rekord igraca je {FFFFFF}%d.", DailyRecord);
		SetWorldTime(tmphour+2);
		if(tmphour == 19)
		{
			SetWeather(10);
		}
		else if(tmphour == 8)
		{
			SetWeather(1);
		}
	}
}
forward SaveAttach(playerid);
public SaveAttach(playerid)
{
    new string[15];
	new INI:File = INI_Open(Attacher(playerid));

	INI_SetTag(File, "Informacije");

	for(new i = 0; i < MAX_ATTACHS; i++)
	{
		format(string, sizeof(string), "Index%d", i);
		INI_WriteInt(File, string, AttachInfo[playerid][i][attIndex]);
		format(string, sizeof(string), "Model%d", i);
		INI_WriteInt(File, string, AttachInfo[playerid][i][attModel]);
		format(string, sizeof(string), "Bone%d", i);
		INI_WriteInt(File, string, AttachInfo[playerid][i][attBone]);
		format(string, sizeof(string), "FOffsetX%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFOffsetX]);
		format(string, sizeof(string), "FOffsetY%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFOffsetY]);
		format(string, sizeof(string), "FOffsetZ%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFOffsetZ]);
		format(string, sizeof(string), "FRotX%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFRotX]);
		format(string, sizeof(string), "FRotY%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFRotY]);
		format(string, sizeof(string), "FRotZ%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFRotZ]);
		format(string, sizeof(string), "FScaleX%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFScaleX]);
		format(string, sizeof(string), "FScaleY%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFScaleY]);
		format(string, sizeof(string), "FScaleZ%d", i);
		INI_WriteFloat(File, string, AttachInfo[playerid][i][attFScaleZ]);
		format(string, sizeof(string), "Status%d", i);
		INI_WriteInt(File, string, AttachInfo[playerid][i][attStatus]);
	}
	INI_Close(File);
	return true;
}

forward LoadAttach(playerid, name[], value[]);
public LoadAttach(playerid, name[], value[])
{
	new string[15];
    for(new i = 0; i < MAX_ATTACHS; i++)
	{
		format(string, sizeof(string), "Index%d", i);
		INI_Int(string, AttachInfo[playerid][i][attIndex]);
		format(string, sizeof(string), "Model%d", i);
		INI_Int(string, AttachInfo[playerid][i][attModel]);
		format(string, sizeof(string), "Bone%d", i);
		INI_Int(string, AttachInfo[playerid][i][attBone]);
		format(string, sizeof(string), "FOffsetX%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFOffsetX]);
		format(string, sizeof(string), "FOffsetY%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFOffsetY]);
		format(string, sizeof(string), "FOffsetZ%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFOffsetZ]);
		format(string, sizeof(string), "FRotX%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFRotX]);
		format(string, sizeof(string), "FRotY%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFRotY]);
		format(string, sizeof(string), "FRotZ%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFRotZ]);
		format(string, sizeof(string), "FScaleX%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFScaleX]);
		format(string, sizeof(string), "FScaleY%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFScaleY]);
		format(string, sizeof(string), "FScaleZ%d", i);
		INI_Float(string, AttachInfo[playerid][i][attFScaleZ]);
		format(string, sizeof(string), "Status%d", i);
		INI_Int(string, AttachInfo[playerid][i][attStatus]);
    }
    return 1;
}


///////////////////////////////////////////////////////
public OnGameModeExit()
{
	foreach(new i : Player)
	{
		KillTimer(g_freeze[i]);
		KillTimer(utovar[i]);
		//KillTimer(KapijeTimer[i]);
		SavePlayer(i);
    }
	for(new i; i < GetMaxPlayers(); ++i)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(GetPVarInt(i, "Alarm"))
	    {
	  		SetPVarInt(i, "Alarm", 0);
	        PlayerPlaySound(i, 3402, 0.0, 0.0, 0.0);
		}

	    ClearAnimations(i, 1);
        ResetRobbery(i, 1);
	}
	mysql_close(SQL);
    TextDrawDestroy(SPORUKE[0]);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
OrgPoruka(orgid, boja, string[])
{
	foreach(new i : Player) {
    if( PlayerInfo[ i ][ pClan ] == orgid || PlayerInfo[ i ][ pLider ] == orgid ) 	{
    if(GetPVarInt( i, "ToggedFR") == 0) {
   	SCM( i, boja, string ); } } }
	return true;
}
ResetPlayer(playerid)
{
    ResetWarStatistics( playerid );
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	PlayerInfo[playerid][pDesertSkill] = 0; PlayerInfo[playerid][pSilenSkill] = 0; PlayerInfo[playerid][pPistSkill] = 0; PlayerInfo[playerid][pShotgSkill] = 0; PlayerInfo[playerid][pCombSkill] = 0;
	PlayerInfo[playerid][pSawnSkill] = 0; PlayerInfo[playerid][pUziSkill] = 0; PlayerInfo[playerid][pSmgSkill] = 0; PlayerInfo[playerid][pAkSkill] = 0; PlayerInfo[playerid][pM4Skill] = 0;
    Pismeni[playerid] = 0; Tazer[playerid] = 0; AdminDuty[playerid] = 0; GMDuty[playerid] = 0; saduty[playerid] = 0; SvercUlja[playerid] = 0; SvercDroge[playerid] = 0;
	KopacZlata[playerid] = 0; PozvaoTaxi[playerid] = 0; UlogovanProvera[playerid] = 0; hPomoc[playerid] = 0; tDuznostVreme[playerid] = 0; NewNew[playerid] = 0; SvercOruzija[playerid] = 0; IgracKojimSaljes[playerid] = -1;
	LoginPokusaji[playerid] = 0; StavljeneLisice[playerid] = 0; KladionicaBroj[playerid] = 0; PlayerInfo[playerid][pDme] = 0; PlayerInfo[playerid][pRPE] = 0;
    OpljackajZlataru[playerid] = 0; OpljackajBanku[playerid] = 0; zonaid[playerid] = -1; zonatime[playerid] = -1; flyon[playerid] = 0;
    gKomanda[playerid] = 0; gLeader[playerid] = 0; IgracTazovan[playerid] = 0; IgracOboren[playerid] = 0; PolicajacNaDuznosti[playerid] = 0; OpljackajOpstinu[playerid] = 0;
	KaznuNapisao[playerid] = -1; hReport[playerid] = 0; mLocate[playerid] = 0; CenaKazne[playerid] = 0; Kaucija[playerid] = 0; Lociranje[playerid] = 0; SjemeDrogeGrove[playerid] = 0; Poligon[playerid] = 0; KazneniPoeni[playerid] = 0;
	SvercMaterijala[playerid] = 0; UsaoFirma[playerid] = -1; Posadjena[playerid] = 0; IgracKrvari[playerid] = 0; MDC[playerid] = 0; togv[playerid] = 0; Prisustvuje[playerid] = false;
	Naocare[playerid] = false; gPlayerAnimLibsPreloaded[playerid] = 0; gPlayerUsingLoopingAnim[playerid] = 0; Napada[playerid] = 0;
    KoristiDrogu[playerid] = 0; SmeceSakuplja[playerid] = 0; CistiUlice[playerid] = 0; Kockica[playerid] = 0; Marama[playerid] = 0; Muteg[playerid] = 0; Mutel[playerid] = 0;
	AdminVozilo[playerid] = -1; PromoterVozilo[playerid] = -1; Prepreka1Kreirana[playerid] = false; Prepreka2Kreirana[playerid] = false; Prepreka3Kreirana[playerid] = false; Prepreka4Kreirana[playerid] = false;
	KioskKupovina[playerid] = -1; VuceIgraca[playerid] = -1; Vucen[playerid] = -1; DobioPay[playerid] = 0; BranjeDroge[playerid] = 0; PricauIntervju[playerid] = 255; AFKDetekcija[playerid] = 0;
	IntervjuGotov[playerid] = 999; UsaoZgrada[playerid] = -1; PuniGorivo[playerid] = false; PrikazanTextDraw[playerid] = 0; BusLinija[playerid] = 0; KosenjeTrave[playerid] = 0; RCONPokusaji[playerid] = 0;
	Ribari[playerid] = 0; PosaoGPS[playerid] = 0; PonudioPopravku[playerid] = -1; CenaPopravke[playerid] = 0; PonudioGorivo[playerid] = -1; UsingBelt[playerid] = 0; CenaGoriva[playerid] = 0;
	PosaoOprema[playerid] = 0; PostaRaznesi[playerid] = 0; PostaPreuzmi[playerid] = 0; GrobarLinija[playerid] = 0; TextDrawGangZone[playerid] = 0; TelefonRazgovor[playerid] = -1;
	Poziv[playerid] = -1; UpaljenTelefon[playerid] = 0; TelefonZvoni[playerid] = false; KupovinaAuta[playerid] = false; BunnyHop[playerid] = 0; MalterDovozi[playerid] = 0; PoravnaBagerom[playerid] = 0;
	LecenjeOd[playerid] = -1; CenaLecenja[playerid] = 0; Oranje[playerid] = 0; Vrsenje[playerid] = 0; Mleko[playerid] = 0; VozLinija[playerid] = 0; UzeoKutiju[playerid] = 0; TuraSF[playerid] = 0; TuraLV[playerid] = 0;
	LetSF[playerid] = 0; LetLV[playerid] = 0; ProcesReganja[playerid] = 0; ElektricarKvar[playerid] = 0; RadioAktiviran[playerid] = 0; CijenaProdaje[playerid] = 0; KomeProdaje[playerid] = -1; PonudioIgrac[playerid] = -1;
	DrvaPrevoz[playerid] = 0; UsaoAutoProdaja[playerid] = -1; UsaoMotorProdaja[playerid] = -1; KacigaStavljena[playerid] = 0; Screenoff[playerid] = 0; UsaoAvionProdaja[playerid] = -1; Povez[playerid] = 0;
	eData[playerid] = -1; BankomatMeni[playerid] = -1; UsaoPloviloProdaja[playerid] = -1; Zeton[playerid] = 0; GotProposedBy[playerid] = 999; ClearMarriage(playerid); Zavezan[playerid] = 0; IzmenaFirme[playerid] = -1;
	VatraEquip[playerid] = 0; ProposeOffer[playerid] = 999; RegistriraVozilo[playerid] = 0; MarryWitnessOffer[playerid] = 999; DivorceOffer[playerid] = 999; MarryWitness[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999;
	KillTimer( TutorialTimer[ playerid ] ); AfkCount[playerid] = 0; PlayerInfo[playerid][pNargila] = 0; Dostavicolu[playerid] = 0; PlayerInfo[playerid][pPrivilegija] = 0;
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	PlayerInfo[playerid][pZatvor] = 0; PlayerInfo[playerid][pJailed] = 0; PlayerInfo[playerid][pPozvan] = 0; PlayerInfo[playerid][pPrislusk] = 0; PlayerInfo[playerid][pPrisluskivanje] = 0; PlayerInfo[playerid][pAdmin] = 0; PlayerInfo[playerid][pSkripter] = 0; PlayerInfo[playerid][pDvaV] = 0;
    PlayerInfo[playerid][pDiploma] = 0; PlayerInfo[playerid][pVabjuzer] = 0; PlayerInfo[playerid][pRPucitelj] = 0; PlayerInfo[playerid][pPismeni] = 0; PlayerInfo[playerid][pVlidera] = 0;
    PlayerInfo[playerid][pAbjuzer] = 0; PlayerInfo[playerid][pPasos] = 0; PlayerInfo[playerid][pKzlato] = 0; PlayerInfo[playerid][pKopac] = 0;  PlayerInfo[playerid][pWar] = 0; PlayerInfo[playerid][pNarucen] = 0;
	PlayerInfo[playerid][pGM] = 0; PlayerInfo[playerid][pNemas] = 0; PlayerInfo[playerid][pGPS] = 0; PlayerInfo[playerid][pGoto] = 0; PlayerInfo[playerid][pPomocnik] = 0; PlayerInfo[playerid][pCmarenje] = 0;
    PlayerInfo[playerid][pChatF] = 0; PlayerInfo[playerid][pPozicioner] = 0; PlayerInfo[playerid][pVip] = 0; PlayerInfo[playerid][pRadi] = 0;
    PlayerInfo[playerid][pSmrti] = 0; PlayerInfo[playerid][pMuteg] = 0; PlayerInfo[playerid][pMutel] = 0;  PlayerInfo[playerid][pDonate] = 0; PlayerInfo[playerid][pLevel] = 0; PlayerInfo[playerid][pGodine] = 0; PlayerInfo[playerid][pDrzava] = 0; PlayerInfo[playerid][pSex] = 0;
    PlayerInfo[playerid][pTutorial] = 0; PlayerInfo[playerid][pLider] = 0; PlayerInfo[playerid][pClan] = 0; PlayerInfo[playerid][pRank] = 0; PlayerInfo[playerid][pWarn] = 0; PlayerInfo[playerid][pZatvor] = 0;
	PlayerInfo[playerid][pZatvorenVreme] = 0; PlayerInfo[playerid][pMutiranVreme] = 0; PlayerInfo[playerid][pExp] = 0; PlayerInfo[playerid][pTrazeniLevel] = 0; fudbaltim[playerid] = 0;
	PlayerInfo[playerid][pUhapsenPuta] = 0; PlayerInfo[playerid][pDroga] = 0; PlayerInfo[playerid][pOrgUgovor] = 0; PlayerInfo[playerid][pMats] = 0; UpaljenGPS[playerid] = 0;
	PlayerInfo[playerid][pPayDayPoeni] = 0; PlayerInfo[playerid][pSatiIgre] = 0; PlayerInfo[playerid][pIznosRate] = 0; PlayerInfo[playerid][pIznosKredita] = 0;PlayerInfo[playerid][pPreostaloZaOtplatu] = 0;
	PlayerInfo[playerid][pADozvola] = 0; PlayerInfo[playerid][pPosedovanjeAuta] = -1; PlayerInfo[playerid][pPosedovanjeAuta2] = -1; PlayerInfo[playerid][pKamionDozvola] = 0; PlayerInfo[playerid][pAvionDozvola] = 0;
	PlayerInfo[playerid][pMotorDozvola] = 0; PlayerInfo[playerid][pPosedovanjeMotora] = -1; PlayerInfo[playerid][pBrodDozvola] = 0; PlayerInfo[playerid][pGunDozvola] = 0; PlayerInfo[playerid][pBonus] = 0;
	PlayerInfo[playerid][pPosedovanjeFirme] = -1; PlayerInfo[playerid][pDzeparosVreme] = 0; PlayerInfo[playerid][pRobbankVreme] = 0; PlayerInfo[playerid][pKonopacVreme] = 0;
	PlayerInfo[playerid][pElektricarVreme] = 0; GaddafiTime[playerid] = 0; PlayerInfo[playerid][pBorbeniStil] = 4; PlayerInfo[playerid][pSat] = 0; PlayerInfo[playerid][pPovezVreme] = 0;
	PlayerInfo[playerid][pMobilni] = 0; PlayerInfo[playerid][pKartica] = 0; PlayerInfo[playerid][pImenik] = 0; PlayerInfo[playerid][pMobKredit] = 0; PlayerInfo[playerid][pCigare] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;  PlayerInfo[playerid][pUpaljac] = 0; PlayerInfo[playerid][pKanap] = 0; PlayerInfo[playerid][pNaocare] = 0; PlayerInfo[playerid][pKaciga] = -1;
	PlayerInfo[playerid][pBorbeniStil] = 0; PlayerInfo[playerid][pPosao] = 0; PlayerInfo[playerid][pPosedovanjeStana] = -1; PlayerInfo[playerid][pProveraSpawna] = 0;
	PlayerInfo[playerid][pPosedovanjeKuce] = -1; PlayerInfo[playerid][pRent] = -1; PlayerInfo[playerid][pPosedovanjeVikendice] = -1; PlayerInfo[playerid][pPovez] = 0; PrihvataGoto[ playerid ] = -1;
    AntiIBV[playerid] = 0; AntiIBVCounter[playerid] = 0; AntiIBVActive[playerid] = 0; PlayerInfo[playerid][pKruska] = 0; PlayerInfo[playerid][pSljiva] = 0;
    PlayerInfo[playerid][pVA] = 0; PlayerInfo[playerid][pProbaj] = 0; PlayerInfo[playerid][pDutyTime ] = 0; PlayerInfo[playerid][pPromoter] = 0; PlayerInfo[playerid][pMinus] = 0; PlayerInfo[playerid][pPlus] = 0;
    PlayerInfo[playerid][pVGM] = 0; PlayerInfo[ playerid ][ pSpecating ] = 0; PlayerInfo[playerid][pSkinuto] = 0;
    PlayerInfo[playerid][pTurcin] = 0; PlayerInfo[playerid][pSpecteam] = 0;
    PlayerInfo[playerid][pTestAdmin] = 0;
    PlayerInfo[playerid][pDrvoSljiva] = 0; PlayerInfo[playerid][pDrvoJabuka] = 0; PlayerInfo[playerid][pDrvoKruska] = 0; PlayerInfo[playerid][pPosedovanjeImanja] = -1; PlayerInfo[playerid][pJabuka] = 0;
	PlayerInfo[playerid][pPosedovanjeBicikla] = -1; PlayerInfo[playerid][pPosedovanjeAviona] = -1; PlayerInfo[playerid][pPosedovanjePlovila] = -1; HelpMessages[playerid] = 1; PlayerInfo[playerid][pDisarmVreme] = 0; //Mrtav[playerid] = 0;
	strmid(PlayerInfo[playerid][pLastSeen], "Nikada", 0, strlen("Nikada"), 255);
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    strmid(ZlocinInfo[playerid][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[playerid][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[playerid][zZlocin], "Nema", 0, strlen("Nema"), 255);
}
CreatePlayerTextDraws( playerid )
		{
			NwnEditor_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 502.800048, 417.887390, "");
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][0], 114.000000, 82.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][0], 1);
			PlayerTextDrawBackgroundColor(playerid,NwnEditor_PTD[playerid][0], 0x000000);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][0], 1902160895);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][0], 0);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][0], 5);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][0], 0);
			PlayerTextDrawSetPreviewModel(playerid, NwnEditor_PTD[playerid][0], 1318);
			PlayerTextDrawSetPreviewRot(playerid, NwnEditor_PTD[playerid][0], 0.000000, 180.000000, 90.000000, 1.000000);
			

			NwnEditor_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 562.499877, 429.487457, "box");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][1], 0.000000, 2.999994);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][1], 700.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][1], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][1], -1);
			PlayerTextDrawUseBox(playerid, NwnEditor_PTD[playerid][1], 1);
			PlayerTextDrawBoxColor(playerid, NwnEditor_PTD[playerid][1], 1902160895);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][1], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][1], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][1], 1);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][1], 1);

			NwnEditor_PTD[playerid][2] = CreatePlayerTextDraw(playerid, 26.099992, 418.187408, "");
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][2], 114.000000, 82.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][2], 1);
			PlayerTextDrawBackgroundColor(playerid,NwnEditor_PTD[playerid][2], 0x000000);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][2], 1902160895);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][2], 0);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][2], 5);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][2], 0);
			PlayerTextDrawSetPreviewModel(playerid, NwnEditor_PTD[playerid][2], 1318);
			PlayerTextDrawSetPreviewRot(playerid, NwnEditor_PTD[playerid][2], 0.000000, 180.000000, 90.000000, 1.000000);
			

			NwnEditor_PTD[playerid][3] = CreatePlayerTextDraw(playerid, -62.500000, 429.399871, "box");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][3], 0.000000, 2.999994);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][3], 81.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][3], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][3], -1);
			PlayerTextDrawUseBox(playerid, NwnEditor_PTD[playerid][3], 1);
			PlayerTextDrawBoxColor(playerid, NwnEditor_PTD[playerid][3], 1902160895);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][3], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][3], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][3], 1);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][3], 1);

			NwnEditor_PTD[playerid][4] = CreatePlayerTextDraw(playerid, 87.500000, 427.599975, "Particle:lamp_shad_64");
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][4], 467.000000, 18.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][4], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][4], 1902160753);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][4], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][4], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][4], 4);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][4], 0);

			NwnEditor_PTD[playerid][5] = CreatePlayerTextDraw(playerid, 84.500000, 429.537353, "box");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][5], 0.000000, -0.150003);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][5], 571.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][5], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][5], -1);
			PlayerTextDrawUseBox(playerid, NwnEditor_PTD[playerid][5], 1);
			PlayerTextDrawBoxColor(playerid, NwnEditor_PTD[playerid][5], 1902160895);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][5], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][5], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][5], 1);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][5], 1);

			NwnEditor_PTD[playerid][6] = CreatePlayerTextDraw(playerid, 373.699676, 415.112487, "BUMTA_FUJIWARAKARAKARA");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][6], 0.114999, 0.742497);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][6], 161.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][6], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][6], -1094795521);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][6], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][6], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][6], 2);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][6], 1);

			NwnEditor_PTD[playerid][7] = CreatePlayerTextDraw(playerid, 359.699951, 413.724822, "box");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][7], 0.000000, -0.150003);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][7], 871.200195, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][7], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][7], -1);
			PlayerTextDrawUseBox(playerid, NwnEditor_PTD[playerid][7], 1);
			PlayerTextDrawBoxColor(playerid, NwnEditor_PTD[playerid][7], 1902160895);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][7], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][7], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][7], 1);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][7], 1);

			NwnEditor_PTD[playerid][8] = CreatePlayerTextDraw(playerid, 390.500000, 395.524993, "");
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][8], 139.000000, 112.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][8], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][8], -1);
			PlayerTextDrawBackgroundColor(playerid,NwnEditor_PTD[playerid][8], 0x000000);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][8], 0);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][8], 5);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][8], 0);
			PlayerTextDrawSetPreviewModel(playerid, NwnEditor_PTD[playerid][8], GetPlayerSkin(playerid));
			PlayerTextDrawSetPreviewRot(playerid, NwnEditor_PTD[playerid][8], 0.000000, 0.000000, 0.000000, 1.000000);

			NwnEditor_PTD[playerid][9] = CreatePlayerTextDraw(playerid, 478.199676, 414.674987, "Banka:20.000.000$");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][9], 0.114999, 0.742497);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][9], 161.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][9], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][9], -1094795521);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][9], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][9], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][9], 2);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][9], 1);

			NwnEditor_PTD[playerid][10] = CreatePlayerTextDraw(playerid, 540.999877, 415.012481, "ZLATO:500g");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][10], 0.114999, 0.742497);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][10], 161.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][10], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][10], -1094795521);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][10], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][10], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][10], 2);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][10], 1);

			NwnEditor_PTD[playerid][11] = CreatePlayerTextDraw(playerid, 586.400146, 415.212493, "PIVO:500l");
			PlayerTextDrawLetterSize(playerid, NwnEditor_PTD[playerid][11], 0.114999, 0.742497);
			PlayerTextDrawTextSize(playerid, NwnEditor_PTD[playerid][11], 161.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, NwnEditor_PTD[playerid][11], 1);
			PlayerTextDrawColor(playerid, NwnEditor_PTD[playerid][11], -1094795521);
			PlayerTextDrawSetShadow(playerid, NwnEditor_PTD[playerid][11], 0);
			PlayerTextDrawBackgroundColor(playerid, NwnEditor_PTD[playerid][11], 255);
			PlayerTextDrawFont(playerid, NwnEditor_PTD[playerid][11], 2);
			PlayerTextDrawSetProportional(playerid, NwnEditor_PTD[playerid][11], 1);
		     //======================================================================//
		    SpecTextDraw[ playerid ] = CreatePlayerTextDraw(playerid,270.000000, 330.000000, "~y~ID: ~w~241 ~n~~y~Ime: ~w~Harry_Winston ~n~~y~Novac: ~w~123536$ ~n~~y~Health: ~w~100");
			PlayerTextDrawBackgroundColor(playerid,SpecTextDraw[ playerid ], 255);
			PlayerTextDrawFont(playerid,SpecTextDraw[ playerid ], 2);
			PlayerTextDrawLetterSize(playerid,SpecTextDraw[ playerid ], 0.300000, 1.000000);
			PlayerTextDrawColor(playerid,SpecTextDraw[ playerid ], -1);
			PlayerTextDrawSetOutline(playerid,SpecTextDraw[ playerid ], 0);
			PlayerTextDrawSetProportional(playerid,SpecTextDraw[ playerid ], 1);
			PlayerTextDrawSetShadow(playerid,SpecTextDraw[ playerid ], 1);
			PlayerTextDrawSetSelectable(playerid,SpecTextDraw[ playerid ], 0);
			//////////////////////////////////////////////////////////////////////////
		 	//WARTD
			WARTextDraw[ playerid ][ 0 ] = CreatePlayerTextDraw(playerid,640.000000, 220.000000, "          ");
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 0 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 0 ], 1);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 0 ], 0.500000, 1.000000);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 0 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 0 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 0 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 0 ], 1);
			PlayerTextDrawUseBox(playerid,WARTextDraw[ playerid ][ 0 ], 1);
			PlayerTextDrawBoxColor(playerid,WARTextDraw[ playerid ][ 0 ], 150);
			PlayerTextDrawTextSize(playerid,WARTextDraw[ playerid ][ 0 ], 500.000000, 40.000000);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 0 ], 0);

			WARTextDraw[ playerid ][ 1 ] = CreatePlayerTextDraw(playerid,567.000000, 220.000000, "WAR");
			PlayerTextDrawAlignment(playerid,WARTextDraw[ playerid ][ 1 ], 2);
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 1 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 1 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 1 ], 0.419999, 0.899999);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 1 ], 0xFFF1CF0E );
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 1 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 1 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 1 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 1 ], 0);

			WARTextDraw[ playerid ][ 2 ] = CreatePlayerTextDraw(playerid,568.000000, 227.000000, "-");
			PlayerTextDrawAlignment(playerid,WARTextDraw[ playerid ][ 2 ], 2);
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 2 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 2 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 2 ], 12.080010, 0.899999);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 2 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 2 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 2 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 2 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 2 ], 0);

			WARTextDraw[ playerid ][ 3 ] = CreatePlayerTextDraw(playerid,527.000000, 234.000000, "TIM 1");
			PlayerTextDrawAlignment(playerid,WARTextDraw[ playerid ][ 3 ], 2);
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 3 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 3 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 3 ], 0.360000, 0.899999);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 3 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 3 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 3 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 3 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 3 ], 0);

			WARTextDraw[ playerid ][ 4 ] = CreatePlayerTextDraw(playerid,608.000000, 234.000000, "TIM 2");
			PlayerTextDrawAlignment(playerid,WARTextDraw[ playerid ][ 4 ], 2);
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 4 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 4 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 4 ], 0.360000, 0.899999);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 4 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 4 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 4 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 4 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 4 ], 0);

			WARTextDraw[ playerid ][ 5 ] = CreatePlayerTextDraw(playerid,506.000000, 248.000000, "Ubistva: 100~n~Smrti: 100~n~Igraci: 10");
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 5 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 5 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 5 ], 0.230000, 0.899999);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 5 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 5 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 5 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 5 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 5 ], 0);

			WARTextDraw[ playerid ][ 6 ] = CreatePlayerTextDraw(playerid,573.000000, 248.000000, "Ubistva: 100~n~Smrti: 100~n~Igraci: 10");
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 6 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 6 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 6 ], 0.230000, 0.899999);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 6 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 6 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 6 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 6 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 6 ], 0);

			WARTextDraw[ playerid ][ 7 ] = CreatePlayerTextDraw(playerid,568.000000, 275.000000, "-");
			PlayerTextDrawAlignment(playerid,WARTextDraw[ playerid ][ 7 ], 2);
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 7 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 7 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 7 ], 12.080010, 0.899999);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 7 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 7 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 7 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 7 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 7 ], 0);

			WARTextDraw[ playerid ][ 8 ] = CreatePlayerTextDraw(playerid,567.000000, 284.000000, "10:00");
			PlayerTextDrawAlignment(playerid,WARTextDraw[ playerid ][ 8 ], 2);
			PlayerTextDrawBackgroundColor(playerid,WARTextDraw[ playerid ][ 8 ], 255);
			PlayerTextDrawFont(playerid,WARTextDraw[ playerid ][ 8 ], 2);
			PlayerTextDrawLetterSize(playerid,WARTextDraw[ playerid ][ 8 ], 0.459999, 1.300000);
			PlayerTextDrawColor(playerid,WARTextDraw[ playerid ][ 8 ], -1);
			PlayerTextDrawSetOutline(playerid,WARTextDraw[ playerid ][ 8 ], 0);
			PlayerTextDrawSetProportional(playerid,WARTextDraw[ playerid ][ 8 ], 1);
			PlayerTextDrawSetShadow(playerid,WARTextDraw[ playerid ][ 8 ], 1);
			PlayerTextDrawSetSelectable(playerid,WARTextDraw[ playerid ][ 8 ], 0);
	        //======================================================================//
	        GunTD[playerid][0] = CreatePlayerTextDraw(playerid, 200.058807, 153.250015, "LD_SPAC:white");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][0], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][0], 238.000000, 128.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][0], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][0], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][0], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][0], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][0], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][0], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][0], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][0], 0);

		    GunTD[playerid][1] = CreatePlayerTextDraw(playerid, 201.941131, 155.000000, "LD_SPAC:white");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][1], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][1], 234.000000, 124.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][1], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][1], 255);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][1], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][1], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][1], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][1], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][1], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][1], 0);

		    GunTD[playerid][2] = CreatePlayerTextDraw(playerid, 249.941085, 148.583328, "ld_beat:chit");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][2], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][2], 26.000000, 30.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][2], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][2], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][2], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][2], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][2], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][2], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][2], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][2], 0);

		    GunTD[playerid][3] = CreatePlayerTextDraw(playerid, 201.470642, 154.416625, "LD_SPAC:white");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][3], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][3], 62.000000, 19.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][3], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][3], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][3], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][3], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][3], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][3], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][3], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][3], 0);

		    GunTD[playerid][4] = CreatePlayerTextDraw(playerid, 209.999984, 155.000015, "Deagle");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][4], 0.304941, 1.483333);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][4], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][4], 255);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][4], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][4], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][4], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][4], 2);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][4], 1);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][4], 0);

		    GunTD[playerid][5] = CreatePlayerTextDraw(playerid, 364.294158, 147.999969, "ld_beat:chit");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][5], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][5], 26.000000, 30.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][5], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][5], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][5], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][5], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][5], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][5], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][5], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][5], 0);

		    GunTD[playerid][6] = CreatePlayerTextDraw(playerid, 375.588409, 153.833282, "LD_SPAC:white");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][6], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][6], 62.000000, 19.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][6], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][6], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][6], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][6], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][6], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][6], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][6], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][6], 0);

		    GunTD[playerid][7] = CreatePlayerTextDraw(playerid, 375.647125, 155.000015, "Cena:_5000$");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][7], 0.217411, 1.541666);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][7], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][7], 255);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][7], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][7], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][7], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][7], 2);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][7], 1);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][7], 0);

		    GunTD[playerid][8] = CreatePlayerTextDraw(playerid, 219.823547, 139.833328, "");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][8], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][8], 162.000000, 152.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][8], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][8], -1);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][8], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][8], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][8], 1090519040);
		    PlayerTextDrawFont(playerid, GunTD[playerid][8], 5);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][8], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][8], 0);
		    PlayerTextDrawSetPreviewModel(playerid, GunTD[playerid][8], 355);
		    PlayerTextDrawSetPreviewRot(playerid, GunTD[playerid][8], 0.000000, 0.000000, 180.000000, 3.000000);

		    GunTD[playerid][9] = CreatePlayerTextDraw(playerid, 236.764755, 206.916595, "ld_beat:left");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][9], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][9], 18.000000, 13.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][9], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][9], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][9], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][9], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][9], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][9], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][9], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][9], 0);
		    PlayerTextDrawSetSelectable(playerid, GunTD[playerid][9], true);

		    GunTD[playerid][10] = CreatePlayerTextDraw(playerid, 382.646972, 206.916610, "ld_beat:right");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][10], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][10], 18.000000, 13.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][10], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][10], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][10], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][10], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][10], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][10], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][10], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][10], 0);
		    PlayerTextDrawSetSelectable(playerid, GunTD[playerid][10], true);

		    GunTD[playerid][11] = CreatePlayerTextDraw(playerid, 262.647125, 255.916641, "ld_beat:chit");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][11], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][11], 26.000000, 30.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][11], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][11], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][11], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][11], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][11], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][11], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][11], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][11], 0);

		    GunTD[playerid][12] = CreatePlayerTextDraw(playerid, 343.588104, 255.916641, "ld_beat:chit");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][12], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][12], 26.000000, 30.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][12], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][12], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][12], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][12], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][12], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][12], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][12], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][12], 0);

		    GunTD[playerid][13] = CreatePlayerTextDraw(playerid, 274.411804, 261.166625, "LD_SPAC:white");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][13], 0.000000, 0.000000);
		    PlayerTextDrawTextSize(playerid, GunTD[playerid][13], 83.000000, 19.000000);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][13], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][13], SERVERBOJA);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][13], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][13], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][13], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][13], 4);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][13], 0);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][13], 0);
		    PlayerTextDrawSetSelectable(playerid, GunTD[playerid][13], true);

		    GunTD[playerid][14] = CreatePlayerTextDraw(playerid, 287.646881, 263.500030, "]_KUPI_]");
		    PlayerTextDrawLetterSize(playerid, GunTD[playerid][14], 0.304941, 1.483333);
		    PlayerTextDrawAlignment(playerid, GunTD[playerid][14], 1);
		    PlayerTextDrawColor(playerid, GunTD[playerid][14], 255);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][14], 0);
		    PlayerTextDrawSetOutline(playerid, GunTD[playerid][14], 0);
		    PlayerTextDrawBackgroundColor(playerid, GunTD[playerid][14], 255);
		    PlayerTextDrawFont(playerid, GunTD[playerid][14], 2);
		    PlayerTextDrawSetProportional(playerid, GunTD[playerid][14], 1);
		    PlayerTextDrawSetShadow(playerid, GunTD[playerid][14], 0);

	        //======================================================================//
			klecanjetd[playerid] = CreatePlayerTextDraw(playerid, 491.000000, 410.000000, "REGISTRACIJA: 60");
			PlayerTextDrawBackgroundColor(playerid, klecanjetd[playerid], 255);
			PlayerTextDrawFont(playerid, klecanjetd[playerid], 2);
			PlayerTextDrawLetterSize(playerid, klecanjetd[playerid], 0.230000, 1.500000);
			PlayerTextDrawColor(playerid, klecanjetd[playerid], -1);
			PlayerTextDrawSetOutline(playerid, klecanjetd[playerid], 0);
			PlayerTextDrawSetProportional(playerid, klecanjetd[playerid], 1);
			PlayerTextDrawSetShadow(playerid, klecanjetd[playerid], 0);
			PlayerTextDrawSetSelectable(playerid, klecanjetd[playerid], 0);
			//======================================================================//
			RegisterTD[playerid][0] = CreatePlayerTextDraw(playerid, -3.888887, 157.986740, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][0], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][0], 649.000000, 132.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][0], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][0], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][0], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][0], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][0], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][0], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][0], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][0], 0);

			RegisterTD[playerid][1] = CreatePlayerTextDraw(playerid, 7.222216, 181.086700, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][1], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][1], 74.000000, 79.590126);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][1], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][1], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][1], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][1], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][1], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][1], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][1], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][1], 0);

			RegisterTD[playerid][2] = CreatePlayerTextDraw(playerid, 44.555572, 194.324493, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][2], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][2], 180.000000, 52.830028);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][2], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][2], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][2], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][2], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][2], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][2], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][2], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][2], 0);

			RegisterTD[playerid][3] = CreatePlayerTextDraw(playerid, 185.422119, 180.989044, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][3], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][3], 74.000000, 79.770164);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][3], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][3], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][3], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][3], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][3], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][3], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][3], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][3], 0);

			RegisterTD[playerid][4] = CreatePlayerTextDraw(playerid, 9.288790, 182.882431, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][4], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][4], 71.000000, 76.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][4], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][4], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][4], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][4], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][4], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][4], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][4], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][4], 0);

			RegisterTD[playerid][5] = CreatePlayerTextDraw(playerid, 44.555572, 195.524566, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][5], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][5], 178.000000, 50.529911);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][5], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][5], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][5], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][5], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][5], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][5], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][5], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][5], 0);

			RegisterTD[playerid][6] = CreatePlayerTextDraw(playerid, 186.622116, 182.882431, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][6], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][6], 71.000000, 76.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][6], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][6], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][6], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][6], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][6], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][6], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][6], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][6], 0);

			RegisterTD[playerid][7] = CreatePlayerTextDraw(playerid, 136.077758, 204.040039, "varadero");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][7], 0.491110, 1.913600);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][7], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][7], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][7], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][7], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][7], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][7], 3);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][7], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][7], 0);

			RegisterTD[playerid][8] = CreatePlayerTextDraw(playerid, 135.777740, 217.989059, "ONLINE_GAMING_COMMUNITY");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][8], 0.377333, 1.490489);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][8], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][8], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][8], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][8], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][8], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][8], 3);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][8], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][8], 0);

			RegisterTD[playerid][9] = CreatePlayerTextDraw(playerid, 135.333297, 233.522415, "]_]_]_]_]_]_]_]_]_]_]_]_]_]_]_]_]_]_]_]");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][9], 0.204222, 0.664178);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][9], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][9], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][9], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][9], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][9], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][9], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][9], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][9], 0);

			RegisterTD[playerid][10] = CreatePlayerTextDraw(playerid, 299.522674, 182.189041, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][10], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][10], 69.000000, 74.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][10], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][10], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][10], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][10], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][10], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][10], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][10], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][10], 0);

			RegisterTD[playerid][11] = CreatePlayerTextDraw(playerid, 301.022583, 184.191421, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][11], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][11], 66.000000, 70.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][11], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][11], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][11], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][11], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][11], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][11], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][11], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][11], 0);

			RegisterTD[playerid][12] = CreatePlayerTextDraw(playerid, 303.800750, 186.682571, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][12], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][12], 60.000000, 65.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][12], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][12], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][12], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][12], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][12], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][12], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][12], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][12], 0);

			RegisterTD[playerid][13] = CreatePlayerTextDraw(playerid, 305.644989, 188.780410, "LD_BEAT:CHIT");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][13], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][13], 56.000000, 61.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][13], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][13], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][13], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][13], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][13], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][13], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][13], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][13], 0);

			RegisterTD[playerid][14] = CreatePlayerTextDraw(playerid, 334.599761, 211.417968, "V");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][14], 0.628000, 1.709508);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][14], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][14], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][14], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][14], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][14], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][14], 3);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][14], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][14], 0);

			RegisterTD[playerid][15] = CreatePlayerTextDraw(playerid, 323.333526, 207.422210, "]");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][15], 0.165333, 0.659199);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][15], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][15], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][15], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][15], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][15], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][15], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][15], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][15], 0);

			RegisterTD[playerid][16] = CreatePlayerTextDraw(playerid, 331.389312, 203.940048, "]");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][16], 0.165333, 0.659199);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][16], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][16], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][16], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][16], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][16], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][16], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][16], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][16], 0);

			RegisterTD[playerid][17] = CreatePlayerTextDraw(playerid, 338.889465, 207.422195, "]");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][17], 0.165333, 0.659199);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][17], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][17], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][17], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][17], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][17], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][17], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][17], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][17], 0);

			RegisterTD[playerid][18] = CreatePlayerTextDraw(playerid, 333.855895, 226.626541, "varadero");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][18], 0.226666, 0.873243);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][18], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][18], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][18], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][18], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][18], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][18], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][18], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][18], 0);

			RegisterTD[playerid][19] = CreatePlayerTextDraw(playerid, 455.222290, 172.920013, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][19], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][19], 80.000000, 17.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][19], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][19], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][19], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][19], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][19], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][19], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][19], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][19], 0);

			RegisterTD[playerid][20] = CreatePlayerTextDraw(playerid, 455.511199, 192.831176, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][20], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][20], 80.000000, 17.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][20], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][20], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][20], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][20], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][20], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][20], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][20], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][20], 0);

			RegisterTD[playerid][21] = CreatePlayerTextDraw(playerid, 455.222381, 212.742340, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][21], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][21], 80.000000, 17.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][21], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][21], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][21], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][21], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][21], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][21], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][21], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][21], 0);

			RegisterTD[playerid][22] = CreatePlayerTextDraw(playerid, 455.222381, 232.653457, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][22], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][22], 80.000000, 17.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][22], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][22], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][22], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][22], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][22], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][22], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][22], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][22], 0);

			RegisterTD[playerid][23] = CreatePlayerTextDraw(playerid, 455.222381, 252.564575, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][23], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][23], 80.000000, 17.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][23], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][23], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][23], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][23], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][23], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][23], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][23], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][23], 0);

			RegisterTD[playerid][24] = CreatePlayerTextDraw(playerid, 456.111297, 173.915649, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][24], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][24], 78.140029, 15.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][24], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][24], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][24], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][24], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][24], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][24], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][24], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][24], 0);

			RegisterTD[playerid][25] = CreatePlayerTextDraw(playerid, 456.111267, 193.826721, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][25], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][25], 78.140029, 15.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][25], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][25], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][25], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][25], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][25], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][25], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][25], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][25], 0);

			RegisterTD[playerid][26] = CreatePlayerTextDraw(playerid, 456.111267, 213.737808, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][26], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][26], 78.140029, 15.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][26], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][26], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][26], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][26], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][26], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][26], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][26], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][26], 0);

			RegisterTD[playerid][27] = CreatePlayerTextDraw(playerid, 456.166839, 233.648895, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][27], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][27], 78.140029, 15.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][27], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][27], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][27], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][27], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][27], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][27], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][27], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][27], 0);

			RegisterTD[playerid][28] = CreatePlayerTextDraw(playerid, 456.122406, 253.559967, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][28], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, RegisterTD[playerid][28], 78.140029, 15.000000);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][28], 1);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][28], 255);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][28], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][28], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][28], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][28], 4);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][28], 0);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][28], 0);

			RegisterTD[playerid][29] = CreatePlayerTextDraw(playerid, 496.133850, 177.048812, "LOZINKA");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][29], 0.226666, 0.873243);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][29], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][29], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][29], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][29], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][29], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][29], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][29], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][29], 0);
			PlayerTextDrawSetSelectable(playerid, RegisterTD[playerid][29], true);

			RegisterTD[playerid][30] = CreatePlayerTextDraw(playerid, 496.133850, 196.750015, "GODINE");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][30], 0.226666, 0.873243);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][30], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][30], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][30], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][30], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][30], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][30], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][30], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][30], 0);
			PlayerTextDrawSetSelectable(playerid, RegisterTD[playerid][30], true);

			RegisterTD[playerid][31] = CreatePlayerTextDraw(playerid, 496.133850, 216.751235, "DRZAVA");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][31], 0.226666, 0.873243);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][31], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][31], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][31], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][31], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][31], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][31], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][31], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][31], 0);
			PlayerTextDrawSetSelectable(playerid, RegisterTD[playerid][31], true);

			RegisterTD[playerid][32] = CreatePlayerTextDraw(playerid, 496.133850, 236.652450, "E-MAIL");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][32], 0.226666, 0.873243);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][32], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][32], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][32], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][32], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][32], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][32], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][32], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][32], 0);
			PlayerTextDrawSetSelectable(playerid, RegisterTD[playerid][32], true);

			RegisterTD[playerid][33] = CreatePlayerTextDraw(playerid, 497.022735, 256.553649, "SPOL");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][33], 0.226666, 0.873243);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][33], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][33], -1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][33], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][33], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][33], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][33], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][33], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][33], 0);
			PlayerTextDrawSetSelectable(playerid, RegisterTD[playerid][33], true);

			RegisterTD[playerid][34] = CreatePlayerTextDraw(playerid, 535.245300, 273.584747, "NASTAVITE_->");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][34], 0.163111, 0.763732);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][34], 3);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][34], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][34], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][34], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][34], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][34], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][34], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][34], 0);
			PlayerTextDrawSetSelectable(playerid, RegisterTD[playerid][34], true);

			RegisterTD[playerid][35] = CreatePlayerTextDraw(playerid, 333.311065, 250.728775, "www.varadero-samp.com");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][35], 0.177777, 0.923022);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][35], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][35], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][35], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][35], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][35], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][35], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][35], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][35], 0);

			RegisterTD[playerid][36] = CreatePlayerTextDraw(playerid, 333.311065, 257.229156, "discord.varadero-samp.com");
			PlayerTextDrawLetterSize(playerid, RegisterTD[playerid][36], 0.177777, 0.923022);
			PlayerTextDrawAlignment(playerid, RegisterTD[playerid][36], 2);
			PlayerTextDrawColor(playerid, RegisterTD[playerid][36], 7783167);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][36], 0);
			PlayerTextDrawSetOutline(playerid, RegisterTD[playerid][36], 0);
			PlayerTextDrawBackgroundColor(playerid, RegisterTD[playerid][36], 255);
			PlayerTextDrawFont(playerid, RegisterTD[playerid][36], 2);
			PlayerTextDrawSetProportional(playerid, RegisterTD[playerid][36], 1);
			PlayerTextDrawSetShadow(playerid, RegisterTD[playerid][36], 0);
		    //======================================================================/
			// login
	        LoginTD[playerid][0] = CreatePlayerTextDraw(playerid, -42.500000, -3.666666, "LD_SPAC:white");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][0], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][0], 991.000000, 101.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][0], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][0], 255);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][0], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][0], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][0], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][0], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][0], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][0], 0);

	        LoginTD[playerid][1] = CreatePlayerTextDraw(playerid, 288.899932, 19.666667, "LD_POOL:BALL");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][1], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][1], 68.000000, 57.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][1], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][1], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][1], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][1], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][1], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][1], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][1], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][1], 0);

	        LoginTD[playerid][2] = CreatePlayerTextDraw(playerid, 290.500030, 21.366674, "LD_POOL:BALL");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][2], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][2], 65.000000, 53.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][2], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][2], 255);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][2], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][2], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][2], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][2], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][2], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][2], 0);

	        LoginTD[playerid][3] = CreatePlayerTextDraw(playerid, 290.500030, 22.566679, "LD_POOL:BALL");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][3], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][3], 65.000000, 53.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][3], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][3], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][3], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][3], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][3], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][3], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][3], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][3], 0);

	        LoginTD[playerid][4] = CreatePlayerTextDraw(playerid, 294.600280, 23.766683, "LD_POOL:BALL");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][4], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][4], 57.000000, 50.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][4], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][4], 255);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][4], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][4], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][4], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][4], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][4], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][4], 0);

	        LoginTD[playerid][5] = CreatePlayerTextDraw(playerid, 323.750000, 31.333324, "V");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][5], 0.959375, 2.918334);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][5], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][5], -1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][5], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][5], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][5], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][5], 3);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][5], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][5], 0);

	        LoginTD[playerid][6] = CreatePlayerTextDraw(playerid, 323.125000, 24.849981, "]");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][6], 0.229999, 0.882500);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][6], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][6], -1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][6], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][6], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][6], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][6], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][6], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][6], 0);

	        LoginTD[playerid][7] = CreatePlayerTextDraw(playerid, 313.324401, 27.949993, "]");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][7], 0.229999, 0.882500);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][7], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][7], -1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][7], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][7], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][7], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][7], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][7], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][7], 0);

	        LoginTD[playerid][8] = CreatePlayerTextDraw(playerid, 332.425567, 27.949993, "]");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][8], 0.229999, 0.882500);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][8], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][8], -1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][8], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][8], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][8], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][8], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][8], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][8], 0);

	        LoginTD[playerid][9] = CreatePlayerTextDraw(playerid, 323.325622, 56.766643, "varadero");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][9], 0.229999, 0.882500);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][9], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][9], -1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][9], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][9], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][9], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][9], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][9], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][9], 0);

	        LoginTD[playerid][10] = CreatePlayerTextDraw(playerid, 3.125000, 18.500003, "LD_BEAT:CHIT");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][10], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][10], 83.000000, 66.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][10], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][10], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][10], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][10], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][10], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][10], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][10], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][10], 0);

	        LoginTD[playerid][11] = CreatePlayerTextDraw(playerid, 161.300613, 18.500003, "LD_BEAT:CHIT");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][11], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][11], 83.000000, 66.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][11], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][11], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][11], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][11], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][11], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][11], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][11], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][11], 0);

	        LoginTD[playerid][12] = CreatePlayerTextDraw(playerid, 45.675613, 29.950002, "LD_SPAC:WHITE");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][12], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][12], 160.000000, 43.109981);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][12], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][12], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][12], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][12], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][12], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][12], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][12], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][12], 0);

	        LoginTD[playerid][13] = CreatePlayerTextDraw(playerid, 4.424998, 18.500003, "LD_BEAT:CHIT");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][13], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][13], 83.000000, 66.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][13], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][13], 255);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][13], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][13], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][13], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][13], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][13], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][13], 0);

	        LoginTD[playerid][14] = CreatePlayerTextDraw(playerid, 159.600509, 18.500003, "LD_BEAT:CHIT");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][14], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][14], 83.000000, 66.000000);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][14], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][14], 255);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][14], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][14], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][14], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][14], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][14], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][14], 0);

	        LoginTD[playerid][15] = CreatePlayerTextDraw(playerid, 45.675613, 30.650005, "LD_SPAC:WHITE");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][15], 0.000000, 0.000000);
	        PlayerTextDrawTextSize(playerid, LoginTD[playerid][15], 160.000000, 42.150142);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][15], 1);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][15], 255);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][15], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][15], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][15], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][15], 4);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][15], 0);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][15], 0);

	        LoginTD[playerid][16] = CreatePlayerTextDraw(playerid, 123.750000, 32.500003, "varadero");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][16], 0.467500, 1.827499);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][16], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][16], -1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][16], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][16], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][16], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][16], 3);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][16], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][16], 0);

	        LoginTD[playerid][17] = CreatePlayerTextDraw(playerid, 122.500000, 46.500003, "ONLINE_COMMUNITY");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][17], 0.372500, 1.407499);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][17], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][17], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][17], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][17], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][17], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][17], 3);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][17], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][17], 0);

	        LoginTD[playerid][18] = CreatePlayerTextDraw(playerid, 122.400001, 61.083332, "]]]]]]]]]]]]]]]]]]]]]]]]]]");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][18], 0.173750, 0.631666);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][18], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][18], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][18], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][18], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][18], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][18], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][18], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][18], 0);

	        LoginTD[playerid][19] = CreatePlayerTextDraw(playerid, 511.250000, 28.999992, "DOBRODOSLI_NA_VARADERO_RPG_SAMP_SERVER..~n~DA_NASTAVITE_IGRU_MORATE_SE_ULOGOVATI,~N~ISPOD_U_DIALOG_UNESITE_VASU_TACNU_LOZINKU_!");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][19], 0.223125, 0.946666);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][19], 2);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][19], -1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][19], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][19], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][19], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][19], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][19], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][19], 0);

	        LoginTD[playerid][20] = CreatePlayerTextDraw(playerid, 539.375000, 58.166656, "-_WWW.~w~varadero-samp");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][20], 0.223125, 0.946666);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][20], 3);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][20], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][20], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][20], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][20], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][20], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][20], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][20], 0);

	        LoginTD[playerid][21] = CreatePlayerTextDraw(playerid, 566.925292, 58.166660, ".COM_-");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][21], 0.223125, 0.946666);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][21], 3);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][21], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][21], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][21], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][21], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][21], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][21], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][21], 0);

	        LoginTD[playerid][22] = CreatePlayerTextDraw(playerid, 566.425415, 67.883171, ".COM_-");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][22], 0.223125, 0.946666);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][22], 3);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][22], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][22], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][22], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][22], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][22], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][22], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][22], 0);

	        LoginTD[playerid][23] = CreatePlayerTextDraw(playerid, 539.375000, 67.766510, "-_discord.~W~varadero-rpg");
	        PlayerTextDrawLetterSize(playerid, LoginTD[playerid][23], 0.223125, 0.946666);
	        PlayerTextDrawAlignment(playerid, LoginTD[playerid][23], 3);
	        PlayerTextDrawColor(playerid, LoginTD[playerid][23], 275363071);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][23], 0);
	        PlayerTextDrawSetOutline(playerid, LoginTD[playerid][23], 0);
	        PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][23], 255);
	        PlayerTextDrawFont(playerid, LoginTD[playerid][23], 2);
	        PlayerTextDrawSetProportional(playerid, LoginTD[playerid][23], 1);
	        PlayerTextDrawSetShadow(playerid, LoginTD[playerid][23], 0);
		    //======================================================================//
		    return 1;
}

//////////////////////////////////////////////////////////////////////////

ConvertToMinutes(time)
{
    // http://forum.sa-mp.com/showpost.php?p=3223897&postcount=11
    new string[15];//-2000000000:00 could happen, so make the string 15 chars to avoid any errors
    format(string, sizeof(string), "%02d:%02d", time / 60, time % 60);
    return string;
}
ResetRobbery(playerid, destroy = 0)
{
	if(RobberyTimer[playerid] != -1) KillTimer(RobberyTimer[playerid]);
    RobberyTimer[playerid] = -1;
    RobberyCounter[playerid] = 0;
    RobberyType[playerid] = 0;
    if(destroy)
    {
		if(IsValidDynamicCP(RobberyEscape[playerid])) DestroyDynamicCP(RobberyEscape[playerid]);
		RobberyEscape[playerid] = -1;
		RobberyCash[playerid] = 0;
	}

	return 1;
}

GetClosestDeposit(playerid, Float: range = 2.0)
{
	new id = -1, Float: dist = range, Float: tempdist;
	for(new i; i < sizeof(DepositCoords); ++i)
	{
	    tempdist = GetPlayerDistanceFromPoint(playerid, DepositCoords[i][0], DepositCoords[i][1], DepositCoords[i][2]);
		if(tempdist > range) continue;
		if(tempdist <= dist)
		{
			dist = tempdist;
			id = i;
			break;
		}
	}

	return id;
}

RandomEx(min, max)
	return random(max - min) + min;

TriggerAlarm(reason = 0)
{
	if(BankControls[Alarm]) return 1;
    for(new i; i < GetMaxPlayers(); ++i)
	{
		if(!IsPlayerConnected(i)) continue;
		if(RobberyType[i] == 1)
		{
			ResetRobbery(i);
			ClearAnimations(i, 1);
		}

		if(!GetPVarInt(i, "InsideBank")) continue;
		SetPVarInt(i, "Alarm", 1);
        PlayerPlaySound(i, 3401, 0.0, 0.0, 0.0);
	}

	SetTimer("DisableAlarm", 120000, false);
	BankControls[Alarm] = true;
    SendClientMessageToAll(-1, (reason == 1) ? ("Bankarska bezbednost cula je eksploziju u trezorskoj sobi!") : ("Bankarska bezbednost cula je eksploziju u trezorskoj sobi!"));
	return 1;
}
Zadnjiputvidjen(playername[]) {
    foreach(new i : Player) {
        if(IsPlayerConnected(i)) {
            new playername2[MAX_PLAYER_NAME] ;
            GetPlayerName(i, playername2, sizeof( playername2));
            if(strcmp(playername2, playername, true, strlen(playername)) == 0)
            {
                return i;
            }
        }
    }
    return INVALID_PLAYER_ID;
}
forward Vulkanizer(playerid);
forward Vulkanizer1(playerid);
public Vulkanizer(playerid)
{
    new lights, doors, panels, tires;
	GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, tires);
	UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, encode_tires(0, 0, 0, 0));
	SetTimerEx("Vulkanizer1",4500,0,"ii",playerid, 1);
	return 1;
}

public Vulkanizer1(playerid)
{
    GivePlayerMoney(playerid, -200);
    TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	SCM(playerid, -1, "Promenili ste gume, promena guma kosta 200$");
	return 1;
}
forward matematikaUsranaGlupa();
public matematikaUsranaGlupa() {
	if(!isnow)
		switch(random(RAND)) {
		    case 0: {
				rezultat = (numberss[0]=random(1000)) + (numberss[1]=random(840));
				format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ]"BELA" - Novi zadatak iz matematike: "SRWBOJA"%d"BELA" + "SRWBOJA"%d"BELA" = ?",numberss[0], numberss[1]);
				SendClientMessageToAll(-1, strajt);
				isnow = true;
			}
			case 1: {
				do
			    {
			     rezultat = (numberss[0]=random(500)) - (numberss[1]=random(500));
			    } while(numberss[0] < numberss[1]);
				format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ]"BELA" - Novi zadatak iz matematike: "SRWBOJA"%d"BELA" - "SRWBOJA"%d"BELA" = ?",numberss[0], numberss[1]);
				SendClientMessageToAll(-1, strajt);
				isnow = true;
			}
			case 2: {
				rezultat = (numberss[0]=random(100)) * (numberss[1]=random(80));
				format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ]"BELA" - Novi zadatak iz matematike: "SRWBOJA"%d"BELA" * "SRWBOJA"%d"BELA" = ?",numberss[0], numberss[1]);
				SendClientMessageToAll(-1, strajt);
				isnow = true;
			}
			case 3: {
				do
			    {
			     rezultat = (numberss[0]=random(1000)+1) / (numberss[1]=random(600)+1);
			    } while(numberss[0] % numberss[1]);
			    format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ]"BELA" - Novi zadatak iz matematike: "SRWBOJA"%d"BELA" / "SRWBOJA"%d"BELA" = ?",numberss[0], numberss[1]);
			    SendClientMessageToAll(-1, strajt);
			    isnow = true;//jesi tu
			}
			case 4: { // exponentiation
  				rezultat = (numberss[0]=random(10)+1) * numberss[0];
			    format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ]"BELA""BELA" - Novi zadatak iz matematike: Kvadrat od "SRWBOJA"%d"BELA" = ?",numberss[0]);
			    SendClientMessageToAll(-1, strajt);
			    isnow = true;
			}
			case 5: { // exponentiation
  				rezultat = (numberss[0]=random(10)+1) * numberss[0] * numberss[0];
			    format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ]"BELA" - Novi zadatak iz matematike: kub na treci "SRWBOJA"%d"BELA" = ?",numberss[0]);
			    SendClientMessageToAll(-1, strajt);
			    isnow = true;
			}
			case 6: { // roots
			    new rand = random(sizeof(Roots));
 				rezultat = Roots[rand][1];
			    format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ]"BELA" - Novi zadatak iz matematike: Koren iz "SRWBOJA"%d"BELA" = ?",Roots[rand][0]);
			    SendClientMessageToAll(-1, strajt);
			    isnow = true;
			}
		}
	else {
	    isnow = false;
	    format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ] - "BELA"Niko nije pogodio test iz matematike. (rezultat: "SRWBOJA"%d"BELA")",rezultat);
		SendClientMessageToAll(-1, strajt);
	}
	return 1;
}
forward WarTimeR();
public WarTimeR()
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pWar] > 0)
		{
			new Float: oldpos[4], oldint;
			TextDrawHideForPlayer(i, TDwar0);
			TextDrawHideForPlayer(i, TDwar1);
			TextDrawHideForPlayer(i, TDwar2);
			TextDrawHideForPlayer(i, TDwar3);
			TextDrawHideForPlayer(i, TDwar4);
			TextDrawHideForPlayer(i, TDwar5);
			TextDrawHideForPlayer(i, TDwar6);
			oldpos[0] = GetPVarFloat(i, PVAR_TAG"oldX");
			oldpos[1] = GetPVarFloat(i, PVAR_TAG"oldY");
			oldpos[2] = GetPVarFloat(i, PVAR_TAG"oldZ");
			oldpos[3] = GetPVarFloat(i, PVAR_TAG"oldR");
			oldint = GetPVarInt(i, PVAR_TAG"oldInt");
			SetPlayerPos(i, oldpos[0], oldpos[1], oldpos[2]);
			SetPlayerFacingAngle(i, oldpos[3]);
			SetPlayerInterior(i, oldint);
			DeletePVar(i, PVAR_TAG"oldX");
			DeletePVar(i, PVAR_TAG"oldY");
			DeletePVar(i, PVAR_TAG"oldZ");
			DeletePVar(i, PVAR_TAG"oldR");
			DeletePVar(i, PVAR_TAG"oldInt");
			ResetPlayerWeapons(i);
			SetPlayerVirtualWorld(i, 0);
			Update_Skin(i, PlayerInfo[i][pSkin]);
			PlayerInfo[i][pWar] = 0;
			WarZapocet = 0;
			KillTimer(wartd);
		}
	}
	new string[256];
	format(string,sizeof(string),""BELA"[V:WAR] "SPLAVA"War je zavrsen rezultatom "BELA"| Tim 1 : "SPLAVA"%d "BELA"|| Tim 2 : "SPLAVA"%d "BELA"|",WarBrojanje1,WarBrojanje2);
	SCMTA(-1,string);
	WarBrojanje1 = 0;
	WarBrojanje2 = 0;
	return 1;
}
forward LottoIzvlacenje();
public LottoIzvlacenje()
{
	Number = random(99)+1;
	new string[128];
	format(string, sizeof(string), ""SPLAVA"Lotto | "BELA"Izabran je redni broj: %d.", Number);
	SCMTA(-1,string);
	new sterasmicu[300];
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pLottoNr] == Number)
		{
			randlottopare[i] = random(3500)+1000000;
			g_NovacPlus(i, randlottopare[i]);
			format(sterasmicu,sizeof(sterasmicu),"* Drzavna lutrija [V:RPG] Dobili ste $%d! ;) Cestitamo.",randlottopare[i]);
			SCM(i, GREEN, sterasmicu);
		}
		PlayerInfo[i][pLottoNr] = 0;
	}
}
//----------------------------------------------------------------------------//
UlicaLabelIPickup( b )
{
	new string[ 256 ];
	DestroyDynamic3DTextLabel( LabelcicUlica[b] );
	DestroyDynamicPickup( PickupUlicee[b] );
	format( string, sizeof( string ),"================================\n\n"BELA"ULICA ID %d\nMemorijal: "esco_boja"%s\n"BELA"Vlasnik: "esco_boja"%s\n"BELA"Za vise informacija "esco_boja"/info\n\n"BELA"================================",b , UI[ b ][ uIme ], UI[ b ][ uVlasnik ] );
 	LabelcicUlica[b] = CreateDynamic3DTextLabel( string , -1, UI[ b ][ uUlicaX ], UI[ b ][ uUlicaY ], UI[ b ][ uUlicaZ ], 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0);
	PickupUlicee[b] = CreateDynamicPickup( 1314, 1, UI[ b ][ uUlicaX ], UI[ b ][ uUlicaY ], UI[ b ][ uUlicaZ ] );
	return 1;
}
function: _SQLLoadUlice()
{
	if(cache_num_rows()) 
	{
		new string[200];
		for(new b; b < cache_num_rows(); b++)
		{
			cache_get_value_name_int(b, "uSQLID", UI[b][uSQLID]);
			cache_get_value_name_float(b, "uUlicaX",UI[ b ][ uUlicaX ] );
			cache_get_value_name_float(b, "uUlicaY",UI[ b ][ uUlicaY ] );
			cache_get_value_name_float(b, "uUlicaZ",UI[ b ][ uUlicaZ ] );
			cache_get_value_name_int(b,"uPostavljena",UI[ b ][ uPostavljena ] );
			cache_get_value_name(b, "uText",UI[ b ][ uText ],64 );
			cache_get_value_name(b, "uIme",UI[ b ][ uIme ],64 );
			cache_get_value_name(b, "uVlasnik",UI[ b ][ uVlasnik ],64 );

			if( UI[ b ][ uPostavljena ] == 1 )
			{
			    format( string, sizeof( string ),"================================\n\n"BELA"ULICA ID %d\nMemorijal: "esco_boja"%s\n"BELA"Vlasnik: "esco_boja"%s\n"BELA"Za vise informacija "esco_boja"/info\n\n"BELA"================================",b , UI[ b ][ uIme ], UI[ b ][ uVlasnik ] );
			    LabelcicUlica[ b ] = CreateDynamic3DTextLabel( string , -1, UI[ b ][ uUlicaX ], UI[ b ][ uUlicaY ], UI[ b ][ uUlicaZ ], 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0);
				PickupUlicee[ b ] = CreateDynamicPickup( 1314, 1, UI[ b ][ uUlicaX ], UI[ b ][ uUlicaY ], UI[ b ][ uUlicaZ ] );				
			}
		}
	}
	printf("[ Sistem ] Ulice: Uctano je %d ulica, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	return true;
}

SacuvajUlicu( idulice ) 
{
	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `ulice` SET `uUlicaX` = '%f', `uUlicaY` = '%f', `uUlicaZ` = '%f', `uPostavljena` = '%d', `uIme` = '%s' , `uText` = '%s', `uVlasnik` = '%s' WHERE `uSQLID` = '%d' LIMIT 1",
	UI[ idulice ][ uUlicaX ],
	UI[ idulice ][ uUlicaY ],
	UI[ idulice ][ uUlicaZ ],
	UI[ idulice ][ uPostavljena ],
	UI[ idulice ][ uIme ],
	UI[ idulice ][ uText ],
	UI[ idulice ][ uVlasnik ],
	UI[ idulice ][ uSQLID ]);
	mysql_tquery(SQL, q);
	return true;
}
//============================================================================//



/////////////////////////////////////////////////////////////////////////////
forward ChatDouble();
public ChatDouble()
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pNaglavu] == 0)
		{
		if(PlayerInfo[i][pGM] == 1)
		{
			SetPlayerChatBubble(i, "[ GAMEMASTER ]", 0x33CCFFAA, 30.0,60000);
		}
		if(PlayerInfo[i][pGM] == 2)
		{
			SetPlayerChatBubble(i, "[ VODJA GM ]", 0x33CCFFAA, 30.0,60000);
		}
		if(PlayerInfo[i][pRPE] == 1)
		{
			SetPlayerChatBubble(i, "[ RPE ]", 0xC2A2DAAA, 20.0,60000);
		}
		if(PlayerInfo[i][pDme] == 1)
		{
			SetPlayerChatBubble(i, "[ DME ]", 0xC2A2DAAA, 25.0,60000);
		}
		if(PlayerInfo[i][pAdmin] > 0)
		{
			format(updatewarntd, sizeof(updatewarntd), "%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~%s", AdminWarns[ 0 ][ Text ], AdminWarns[ 1 ][ Text ], AdminWarns[ 2 ][ Text ], AdminWarns[ 3 ][ Text ], AdminWarns[ 4 ][ Text ], AdminWarns[ 5 ][ Text ], AdminWarns[ 6 ][ Text ], AdminWarns[ 7 ][ Text ]);
			TextDrawSetString(WarnTD, updatewarntd);
		}
		if(PlayerInfo[i][pPromoter] == 1)
		{
			SetPlayerChatBubble(i, ""ORANGE"[ PROMOTER LEVEL 1 ]", -1, 30.0,60000);
  		}
		if(PlayerInfo[i][pPromoter] == 2)
		{
			SetPlayerChatBubble(i, ""ORANGE"[ PROMOTER LEVEL 2 ]", -1, 30.0,60000);
		}
		if(PlayerInfo[i][pPromoter] == 3)
		{
			SetPlayerChatBubble(i, ""ORANGE"[ PROMOTER LEVEL 3 ]", -1, 30.0,60000);
		}
		if(PlayerInfo[i][pSpecteam] == 1)
		{
			SetPlayerChatBubble(i, "[ SPEC-TEAM ]", 0xFFC801C8, 30.0,60000);
		}
		if(PlayerInfo[i][pTrazeniLevel] >= 1)
		{
			GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~r~Trazeni ste~n~Juri vas ~b~POLICIJA~n~~r~/dosije~n~", 5000, 3);
		}
		if(PlayerInfo[i][pAdmin] == 1)
		{
			SetPlayerChatBubble(i, "[ ADMIN LEVEL 1 ]", 0x000000ff, 30.0,60000);
		}
		if(PlayerInfo[i][pAdmin] == 2)
		{
			SetPlayerChatBubble(i, "[ ADMIN LEVEL 2 ]", 0x000000ff, 30.0,60000);
		}
	    if(PlayerInfo[i][pAdmin] == 3)
		{
			SetPlayerChatBubble(i, "[ ADMIN LEVEL 3 ]", 0x000000ff, 30.0,60000);
		}
	    if(PlayerInfo[i][pAdmin] == 4)
		{
			SetPlayerChatBubble(i, "[ ADMIN LEVEL 4 ]", 0x000000ff, 30.0,60000);
		}
	    if(PlayerInfo[i][pAdmin] == 5)
		{
			SetPlayerChatBubble(i, "[ HEAD-ADMIN ]", 0x000000ff, 30.0,60000);
		}
		if(PlayerInfo[i][pAdmin] == 6)
		{
			SetPlayerChatBubble(i, "[ DIREKTOR ]", 0x000000ff, 30.0,60000);
		}
	    if(PlayerInfo[i][pAdmin] == 7)
		{
			SetPlayerChatBubble(i, "[ VLASNIK ]", 0x000000ff, 30.0,60000);
		}
	    if(PlayerInfo[i][pAdmin] == 8)
		{
			SetPlayerChatBubble(i, "[ DEVELOPER ]", 0x000000ff, 30.0,60000);
		}
		if(PlayerInfo[i][pVip] == 1)
		{
			SetPlayerChatBubble(i, "[ VIP LEVEL 1 ]", 0xAA3333AA, 30.0,60000);
		}
		if(PlayerInfo[i][pVip] == 2)
		{
			SetPlayerChatBubble(i, "[ VIP LEVEL 2 ]", 0xAA3333AA, 30.0,60000);
		}
		if(PlayerInfo[i][pVip] == 3)
		{
			SetPlayerChatBubble(i, "[ VIP LEVEL 3 ]", 0xAA3333AA, 30.0,60000);
		}
		if(PlayerInfo[i][pVip] == 4)
		{
			SetPlayerChatBubble(i, "[ VIP LEVEL 4 ]", 0xAA3333AA, 30.0,60000);
		}
		if(PlayerInfo[i][pVip] == 5)
		{
			SetPlayerChatBubble(i, "[ Master Donator ]", 0xAA3333AA, 30.0,60000);
		}
		if(PlayerInfo[i][pVip] == 6)
		{
			SetPlayerChatBubble(i, "[ Elite Donator ]", 0xAA3333AA, 30.0,60000);
		}
		if(PlayerInfo[i][pAbjuzer] == 1)
		{
			SetPlayerChatBubble(i, "(( ABJUZER ))", 0xFFC801C8, 30.0,60000);
		}
		else if(PlayerInfo[i][pVabjuzer] == 1)
		{
			SetPlayerChatBubble(i, "(( TATA IGRE ))", 0xFFC801C8, 30.0,60000);
		}
		else if(PlayerInfo[i][pNemas] == 2)
		{
			SetPlayerChatBubble(i, "(( AFKER ))", 0xFFC801C8, 30.0,60000);
		}
		else if(PlayerInfo[i][pNemas] == 3)
		{
			SetPlayerChatBubble(i, "(( PAJSER ))", 0xFFC801C8, 30.0,60000);
		}
		else if(PlayerInfo[i][pNemas] == 4)
		{
			SetPlayerChatBubble(i, "(( INDIJANAC ))", 0xFFC801C8, 30.0,60000);
		}
		else if(PlayerInfo[i][pNemas] == 5)
		{
			SetPlayerChatBubble(i, "(( TURCIN ))", 0xFFC801C8, 30.0,60000);
		}
		else if(PlayerInfo[i][pNemas] == 1)
		{
			SetPlayerChatBubble(i, "(( COME TO PAPA ))", 0xFFC801C8, 30.0,60000);
		}
		else if(PlayerInfo[i][pNemas] == 2)
		{
			SetPlayerChatBubble(i, "(( AFKER ))", 0xFFC801C8, 30.0,60000);
		}
     }
   }
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
forward Restart();
public Restart()
{
	SendRconCommand("gmx");
	return 1;
}
forward Pljacka0(playerid);
public Pljacka0(playerid)
{
	if(PljackaVrijeme[playerid] >= 1)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, 29.7447,136.0314,495.6298))
		{
			PljackaVrijeme[playerid] = -1;
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Napustili ste mesto pljacke opstine!");
		}
		else
		{
			new string[128];
			PljackaVrijeme[playerid] --;
			format(string, sizeof(string), "~w~Ostani na ~r~mestu ~n~~w~jos ~r~%d ~w~sekundi", PljackaVrijeme[playerid]);
			GameTextForPlayer(playerid, string, 1000, 5);
			SetTimerEx("Pljacka0",1000, false, "i", playerid);
		}
	}
	else
	{
		new novac;
		SavePlayer(playerid);
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Cestitamo opljackao si Opstinu!");
		novac = (600000 + random(600000));
		g_NovacPlus(playerid, novac);
		SavePlayer(playerid);
		SetPlayerColor(playerid, COLOR_RED);
		PostaviWanted(playerid, "Pljacka Opstine", "LS Opstina", 6);
		SetPlayerAttachedObject( playerid, VRECA_SLOT, 1550, 1, -0.008714, -0.188819, -0.026564, 159.138153, 86.558647, 0.000000, 1.005565, 0.984468, 1.014210 );
	}
}
forward Pljacka1(playerid);
public Pljacka1(playerid)
{
	if(PljackaVrijeme[playerid] >= 1)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, 286.9147,1425.9718,727.4360))
		{
			PljackaVrijeme[playerid] = -1;
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Napustili ste mesto pljacke zlataru!");
		}
		else
		{
			new string[128];
			PljackaVrijeme[playerid] --;
			format(string, sizeof(string), "~w~Ostani na ~r~mestu ~n~~w~jos ~r~%d ~w~sekundi", PljackaVrijeme[playerid]);
			GameTextForPlayer(playerid, string, 1000, 5);
			SetTimerEx("Pljacka1",1000, false, "i", playerid);
		}
	}
	else
	{
		SavePlayer(playerid);
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Cestitamo opljackao si Zlataru Dobio si 8 Grama zlato!");
		PlayerInfo[playerid][pZlato] += 5;
		SavePlayer(playerid);
		SetPlayerColor(playerid, COLOR_RED);
		PostaviWanted(playerid, "Pljacka Zlataru", "LS Zlatare", 6);
		SetPlayerAttachedObject( playerid, VRECA_SLOT, 1550, 1, -0.008714, -0.188819, -0.026564, 159.138153, 86.558647, 0.000000, 1.005565, 0.984468, 1.014210 );
	}
}
//----------------------------------------------------------------------------//
forward Warcic(playerid);
public Warcic(playerid)
{
    // ------------- [ war ] -------------- //
	    if( WARPInfo[ playerid ][ warID ] != -1 ) {
	    new w = WARPInfo[ playerid ][ warID ];

		SetPlayerVirtualWorld( playerid, w );
		SetPlayerHealth( playerid, 99 );
		SetPlayerArmour(playerid, 99.0);
		if( WARInfo[ w ][ warMap ] == 1 ) {
		    new rand1 = random( sizeof( warMap1Team1 ) );
		    new rand2 = random( sizeof( warMap1Team2 ) );
		    if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap1Team1[ rand1 ][ 0 ], warMap1Team1[ rand1 ][ 1 ],warMap1Team1[ rand1 ][ 2 ] ); }
		    else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap1Team2[ rand2 ][ 0 ], warMap1Team2[ rand2 ][ 1 ],warMap1Team2[ rand2 ][ 2 ] ); }
			SetPlayerInterior( playerid, 0 );
		}
		else if( WARInfo[ w ][ warMap ] == 2 ) {
		    new rand1 = random( sizeof( warMap2Team1 ) );
		    new rand2 = random( sizeof( warMap2Team2 ) );
		    if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap2Team1[ rand1 ][ 0 ], warMap2Team1[ rand1 ][ 1 ],warMap2Team1[ rand1 ][ 2 ] ); }
		    else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap2Team2[ rand2 ][ 0 ], warMap2Team2[ rand2 ][ 1 ],warMap2Team2[ rand2 ][ 2 ] ); }
			SetPlayerInterior( playerid, 10 );
		}
		else if( WARInfo[ w ][ warMap ] == 3 ) {
		    new rand1 = random( sizeof( warMap3Team1 ) );
		    new rand2 = random( sizeof( warMap3Team2 ) );
		    if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap3Team1[ rand1 ][ 0 ], warMap3Team1[ rand1 ][ 1 ],warMap3Team1[ rand1 ][ 2 ] ); }
		    else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap3Team2[ rand2 ][ 0 ], warMap3Team2[ rand2 ][ 1 ],warMap3Team2[ rand2 ][ 2 ] ); }
            SetPlayerInterior( playerid, 0 );
		}
		else if( WARInfo[ w ][ warMap ] == 4 ) {
		    new rand1 = random( sizeof( warMap4Team1 ) );
		    new rand2 = random( sizeof( warMap4Team2 ) );
		    if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap4Team1[ rand1 ][ 0 ], warMap4Team1[ rand1 ][ 1 ], warMap4Team1[ rand1 ][ 2 ] ); }
		    else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap4Team2[ rand2 ][ 0 ], warMap4Team2[ rand2 ][ 1 ], warMap4Team2[ rand2 ][ 2 ] ); }
            SetPlayerInterior( playerid, 0 );
		}
		else if( WARInfo[ w ][ warMap ] == 5 ) {
		    new rand1 = random( sizeof( warMap5Team1 ) );
		    new rand2 = random( sizeof( warMap5Team2 ) );
		    if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap5Team1[ rand1 ][ 0 ], warMap5Team1[ rand1 ][ 1 ],warMap5Team1[ rand1 ][ 2 ] ); }
		    else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap5Team2[ rand2 ][ 0 ], warMap5Team2[ rand2 ][ 1 ],warMap5Team2[ rand2 ][ 2 ] ); }
		    SetPlayerInterior( playerid, 0 );
		}
		GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 0 ], 300 );
		GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 1 ], 300 );
		GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 2 ], 300 );
		GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 3 ], 300 );
		return true;
    	}
    	return 1;
}
////////////////////////////////////////////////////////////////////////////
forward UcitajTune(id, name[], value[]);
public UcitajTune(id, name[], value[])
{
	new string[10];
	for(new i = 0; i <= 17; i++)
	{
		format(string, sizeof(string), "Tune[%i]", i);
		INI_Int(string, VoziloInfo[id][vMod][i]);
	}
    return 1;
}
////////////////////////////////////////////////////////////////////////////
forward eventcount4();
forward eventcount3();
forward eventcount2();
forward eventcount1();
forward eventcountgo();
public eventcount4()
{
	foreach(new i:Player)
	{
		if(ecp[i] == 1 || ecp[i] == 2 || ecp[i] == 3 || ecp[i] == 4 || ecp[i] == 5 || ecp[i] == 6 || ecp[i] == 7 || ecp[i] == 8 || ecp[i] == 9 || ecp[i] == 10 || ecp[i] == 11 || ecp[i] == 12 || ecp[i] == 13 || ecp[i] == 14 || ecp[i] == 15 || ecp[i] == 16 || ecp[i] == 17 || ecp[i] == 18 || ecp[i] == 19 || ecp[i] == 20 || ecp[i] == 21 || ecp[i] == 22)
		{
			GameTextForPlayer(i,"~n~~g~-~y~ 4 ~g~-",1000,3);
		}
   	}
}
public eventcount3()
{
	foreach(new i:Player)
	{
		if(ecp[i] == 1 || ecp[i] == 2 || ecp[i] == 3 || ecp[i] == 4 || ecp[i] == 5 || ecp[i] == 6 || ecp[i] == 7 || ecp[i] == 8 || ecp[i] == 9 || ecp[i] == 10 || ecp[i] == 11 || ecp[i] == 12 || ecp[i] == 13 || ecp[i] == 14 || ecp[i] == 15 || ecp[i] == 16 || ecp[i] == 17 || ecp[i] == 18 || ecp[i] == 19 || ecp[i] == 20 || ecp[i] == 21 || ecp[i] == 22)
		{
	   		GameTextForPlayer(i,"~n~~g~-~y~ 3 ~g~-",1000,3);
		}
   	}
}
public eventcount2()
{
	foreach(new i:Player)
	{
		if(ecp[i] == 1 || ecp[i] == 2 || ecp[i] == 3 || ecp[i] == 4 || ecp[i] == 5 || ecp[i] == 6 || ecp[i] == 7 || ecp[i] == 8 || ecp[i] == 9 || ecp[i] == 10 || ecp[i] == 11 || ecp[i] == 12 || ecp[i] == 13 || ecp[i] == 14 || ecp[i] == 15 || ecp[i] == 16 || ecp[i] == 17 || ecp[i] == 18 || ecp[i] == 19 || ecp[i] == 20 || ecp[i] == 21 || ecp[i] == 22)
		{
	   		GameTextForPlayer(i,"~n~~g~-~y~ 2 ~g~-",1000,3);
		}
   	}
}
public eventcount1()
{
	foreach(new i:Player)
	{
		if(ecp[i] == 1 || ecp[i] == 2 || ecp[i] == 3 || ecp[i] == 4 || ecp[i] == 5 || ecp[i] == 6 || ecp[i] == 7 || ecp[i] == 8 || ecp[i] == 9 || ecp[i] == 10 || ecp[i] == 11 || ecp[i] == 12 || ecp[i] == 13 || ecp[i] == 14 || ecp[i] == 15 || ecp[i] == 16 || ecp[i] == 17 || ecp[i] == 18 || ecp[i] == 19 || ecp[i] == 20 || ecp[i] == 21 || ecp[i] == 22)
		{
	   		GameTextForPlayer(i,"~n~~g~-~y~ 1 ~g~-",1000,3);
		}
   	}
}
public eventcountgo()
{
	foreach(new i:Player)
	{
		if(ecp[i] == 1 || ecp[i] == 2 || ecp[i] == 3 || ecp[i] == 4 || ecp[i] == 5 || ecp[i] == 6 || ecp[i] == 7 || ecp[i] == 8 || ecp[i] == 9 || ecp[i] == 10 || ecp[i] == 11 || ecp[i] == 12 || ecp[i] == 13 || ecp[i] == 14 || ecp[i] == 15 || ecp[i] == 16 || ecp[i] == 17 || ecp[i] == 18 || ecp[i] == 19 || ecp[i] == 20 || ecp[i] == 21 || ecp[i] == 22 )
		{
			mjesta = 0;
        	vorcp[i] = 0;
	   		GameTextForPlayer(i,"~n~~g~-~y~]~g~-~g~START~g~-~y~]~g~-",1000,3);
			DestroyDynamicObject(lsdok[2]); DestroyDynamicObject(ddrive[4]); DestroyDynamicObject(ddrive[5]); DestroyDynamicObject(beachhell[1]); DestroyDynamicObject(beachhell[2]); DestroyDynamicObject(ddrive[0]); DestroyDynamicObject(srace[3]); DestroyDynamicObject(KartO[0]); DestroyDynamicObject(Relly1[0]);
			TogglePlayerControllable(i, 1);
		}
		if(ecp[i] == 22)
		{
	          SetPlayerRaceCheckpoint(i,2,-2925.4790,-551.3060,3.8676,-2925.4790,-551.3060,3.8676,10);
		}
		if(ecp[i] == 18)
		{
			PlayerInfo[i][pCistacX] = gNRG[NGRTRKA[i]][0];
			PlayerInfo[i][pCistacY] = gNRG[NGRTRKA[i]][1];
			PlayerInfo[i][pCistacZ] = gNRG[NGRTRKA[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        NGRTRKA[i] = NGRTRKA[i]+1;
		}
		if(ecp[i] == 17)
		{
			PlayerInfo[i][pCistacX] = gSacnchez2[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gSacnchez2[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gSacnchez2[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 16)
		{
			PlayerInfo[i][pCistacX] = gMorski[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gMorski[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gMorski[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 15)
		{
			MoveDynamicObject(vratakapija, 4195.9180, 1776.5142, 58.8862, 2.0);
	        SetPlayerRaceCheckpoint(i,2,4329.0850, 1780.8180, 50.1147,4329.0850, 1780.8180, 50.1147,10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 14)
		{
			PlayerInfo[i][pCistacX] = gKART[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gKART[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gKART[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 13)
		{
			PlayerInfo[i][pCistacX] = gQUAD2[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gQUAD2[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gQUAD2[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 12)
		{
			PlayerInfo[i][pCistacX] = gQUAD[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gQUAD[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gQUAD[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 11)
		{
			PlayerInfo[i][pCistacX] = gRelly2[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gRelly2[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gRelly2[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 10)
		{
			PlayerInfo[i][pCistacX] = gRelly[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gRelly[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gRelly[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 9)
		{
			PlayerInfo[i][pCistacX] = gJETMAX[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gJETMAX[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gJETMAX[vorcp[i]][2];
			SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 8)
		{
			PlayerInfo[i][pCistacX] = gRACE[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gRACE[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gRACE[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 7)
		{
			PlayerInfo[i][pCistacX] = gDRIFT2[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gDRIFT2[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gDRIFT2[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 6)
		{
			PlayerInfo[i][pCistacX] = gDRIFT1[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gDRIFT1[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gDRIFT1[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 5)
		{
			PlayerInfo[i][pCistacX] = gVORTEX[vorcp[i]][0];
			PlayerInfo[i][pCistacY] = gVORTEX[vorcp[i]][1];
			PlayerInfo[i][pCistacZ] = gVORTEX[vorcp[i]][2];
	        SetPlayerRaceCheckpoint(i,2,PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],PlayerInfo[i][pCistacX], PlayerInfo[i][pCistacY],PlayerInfo[i][pCistacZ],10);
	        vorcp[i] = vorcp[i]+1;
		}
		if(ecp[i] == 4)
		{
			SetPlayerRaceCheckpoint(i,2,-2443.6187,-574.5956,129.1409,-2443.6187,-574.5956,129.1409,10.0);
	       	eecp[i] = 53;
		}
		if(ecp[i] == 3)
		{
		    SetPlayerRaceCheckpoint(i,2,-325.1706,-2248.8979,33.5046,-325.1706,-2248.8979,33.5046,10);
	       	eecp[i] = 36;
		}
		if(ecp[i] == 2)
		{
		    SetPlayerRaceCheckpoint(i,2,-464.9647,2590.2058,50.2128,-464.9647,2590.2058,50.2128,10);
	       	eecp[i] = 11;
		}
	}
}
forward GorivoDole();
public GorivoDole()
{
	foreach(new i : Player) {
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(GetPlayerVehicleID(i), engine, lights, alarm, doors, bonnet, boot, objective);
		if(engine == 1)
		{
	        Fuel[GetPlayerVehicleID(i)] --;
			if(Fuel[GetPlayerVehicleID(i)] < 1)
			{
				Fuel[GetPlayerVehicleID(i)] = 0;
			    SetVehicleParamsEx(GetPlayerVehicleID(i), 0, lights, alarm, doors, bonnet, boot, objective);
				GameTextForPlayer(i, "~w~Nema vise ~r~goriva ~w~u vozilu!", 5000, 3);
				SCM(i,-1,""SIVA"Nema vise goriva u vozilu, pa ga ne mozete upaliti!");
			}
		}
		new string[128];
		format(string, sizeof(string), "~w~GORIVO:_%d_L", Fuel[GetPlayerVehicleID(i)]);
		PlayerTextDrawSetString(i, Brzinomer[i][8], string);
	}
	return 1;
}
forward RandomPoruke();
public RandomPoruke()
{
	TextDrawSetString(NwnEditor_TD[7], RandomSPoruke[random(sizeof(RandomSPoruke))]);
	return 1;
}
//////////////////////////////////////////////////////////////////////////
function: _SQLLoadActors()
{
	if(cache_num_rows()) 
	{
		for(new id; id < cache_num_rows(); id++)
		{
			cache_get_value_name_int(id,"ActorSQLID", ActorInfo[id][ActorSQLID]);
			cache_get_value_name_int(id,"ActorSkinID", ActorInfo[id][ActorSkinID]);
			cache_get_value_name_int(id,"ActorAnimID", ActorInfo[id][ActorAnimID]);
			cache_get_value_name_float(id,"ActorPos_X", ActorInfo[id][ActorPos_X]);
			cache_get_value_name_float(id,"ActorPos_Y", ActorInfo[id][ActorPos_Y]);
			cache_get_value_name_float(id,"ActorPos_Z", ActorInfo[id][ActorPos_Z]);
			cache_get_value_name_float(id,"ActorRotation", ActorInfo[id][ActorRotation]);

			ActorSkin[id] = CreateActor(ActorInfo[id][ActorSkinID], ActorInfo[id][ActorPos_X], ActorInfo[id][ActorPos_Y], ActorInfo[id][ActorPos_Z], ActorInfo[id][ActorRotation]);
           	if(ActorInfo[id][ActorAnimID] == 0) 
           	{ 
           		ClearActorAnimations(id); 
           	}
           	else if(ActorInfo[id][ActorAnimID] == 1) 
           	{ 
           		ApplyActorAnimation(id, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); }
           	else if(ActorInfo[id][ActorAnimID] == 2) 
           	{ 
           		ApplyActorAnimation(id, "RAPPING", "RAP_A_Loop", 4.0, 1, 0, 0, 0, 0); 
           	}
           	SetActorInvulnerable(id, true);
           	AkterLabelAnim();
        }
        printf("[ Sistem ] Aktori: Uctano je %d aktora, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
    }
	return 1;
}
// -- //
function: SacuvajActore(id)
{
	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `aktori` SET `ActorSkinID` = '%d', `ActorAnimID` = '%d', `ActorPos_X` = '%f', `ActorPos_Y` = '%f', `ActorPos_Z` = '%f', `ActorRotation` = '%f' WHERE `ActorSQLID` = '%d' LIMIT 1",
	ActorInfo[id][ActorSkinID],
	ActorInfo[id][ActorAnimID],
	ActorInfo[id][ActorPos_X],
	ActorInfo[id][ActorPos_Y],
	ActorInfo[id][ActorPos_Z],
	ActorInfo[id][ActorRotation],

	ActorInfo[id][ActorSQLID]);
	mysql_tquery(SQL, q);

	return 1;
}
forward AkterLabelAnim();
public AkterLabelAnim()
{	
	return 1;
}
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//
CMD:staffstats(playerid, params[])
{
	////#pragma unused help
	//#pragma unused params
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"Nisi ulogovan.");
    if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pSpecteam] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
    StaffStats(playerid,playerid);
	}
	return 1;
}
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//
CMD:proveristaff(playerid, params[])
{
    ////#pragma unused help
    if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pSpecteam] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
		new id;
		if(sscanf(params, "u", id)) return SCM(playerid,-1,""ZELENA"[HELP]: "BELA"/chackstaffstats [ID/Ime_Prezime]");
		if(!IsPlayerConnected(id)) return SCM(playerid,-1,""ZELENA"[HELP]: "BELA"Taj igrac nije na serveru.");
	    StaffStats(playerid,id);
	}
	return 1;
}
StaffStats(playerid,id)
{
	if(IsPlayerConnected(id))
	{
  		new satis = PlayerInfo[id][pSatiIgreS];
  		new lpodg = PlayerInfo[id][pLPodg];
  		new banbroj = PlayerInfo[id][pBrojBanned];
  		new warnbroj = PlayerInfo[id][pBrojWarn];
  		new jailbroj = PlayerInfo[id][pBrojJail];
  		new mutebroj = PlayerInfo[id][pBrojMute];
		new bbok[3500];
		format(bbok,3500,"Hvala ti sto si deo Staff Teama!\nUkupno sati u staffu: %d\nUkupno odgovorenih pitanja(/lp): %d\nUkupno banova: %d\nUkupno warnova: %d\nUkupno jail: %d\nUkupno Mutea: %d",satis,lpodg,banbroj,warnbroj,jailbroj,mutebroj);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX,"Provera Dialog",bbok,"OK","");
	}
	return 1;
}
// lider sys komande by eksepted
CMD:orgpanel(playerid, params[])
{
	if(PlayerInfo[playerid][pLider] == 0) return SCM(playerid,-1,""SRWBOJA"V -"CRVENA" #ERROR:"BELA" Samo Lideri.");
	if(PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pLider] == 17 ||
	PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pLider] == 20 ||
	PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pLider] == 19 ||
	PlayerInfo[playerid][pLider] == 21)
	{
	    if(PlayerInfo[playerid][pLider] == 2)
	    {
			if(ClanSverc2 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\tOFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			if(ClanSverc2 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\tON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
	    }
	    if(PlayerInfo[playerid][pLider] == 3)
	    {
			if(ClanSverc3 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc3 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
	    if(PlayerInfo[playerid][pLider] == 22)
	    {
			if(ClanSverc22 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc22 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
	    if(PlayerInfo[playerid][pLider] == 17)
	    {
			if(ClanSverc17 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc17 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
	    if(PlayerInfo[playerid][pLider] == 5)
	    {
			if(ClanSverc5 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc5 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
	    if(PlayerInfo[playerid][pLider] == 9)
	    {
			if(ClanSverc9 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc9 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
	    if(PlayerInfo[playerid][pLider] == 11)
	    {
			if(ClanSverc11 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc11 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
    	if(PlayerInfo[playerid][pLider] == 20)
	    {
			if(ClanSverc20 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc20 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
    	if(PlayerInfo[playerid][pLider] == 13)
	    {
			if(ClanSverc13 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc13 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
    	if(PlayerInfo[playerid][pLider] == 12)
	    {
			if(ClanSverc12 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc12 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
    	if(PlayerInfo[playerid][pLider] == 15)
	    {
			if(ClanSverc15 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc15 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1]\tRespawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
		if(PlayerInfo[playerid][pLider] == 19)
	    {
			if(ClanSverc19 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc19 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
  		}
		if(PlayerInfo[playerid][pLider] == 21)
	    {
			if(ClanSverc21 == 0)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{F81414}OFF",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
			else if(ClanSverc21 == 1)
			{
 				SPD(playerid, 3322, DST, "{FF0000}Org System",
				"[1] Respawn vozila\n\
				[2] Sverc\t{6EF83C}ON",
				"{33AA33}Izaberi", "{FF0000}izlaz");
			}
	 	}
	}
	else if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pLider] == 7 ||
	PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pLider] == 16 ||
	PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pLider] == 23)
	{
		SPD(playerid, 3322, DST, "{FF0000}Org System",
		"[1]\tRespawn vozila",
		"{33AA33}Izaberi", "{FF0000}izlaz");
	}
	return (true);
}
fDialog(3322)
{
	if(!response) return (true);
	switch(listitem)
	{
		case 0:
		{
		    if(PlayerInfo[playerid][pLider] == 1)
		    {
		        RTC(policecar[0]);
		        RTC(policecar[1]);
		        RTC(policecar[2]);
		        RTC(policecar[3]);
		        RTC(policecar[4]);
		        RTC(policecar[5]);
		        RTC(policecar[6]);
		        RTC(policecar[7]);
		        RTC(policecar[8]);
		        RTC(policecar[9]);
		        RTC(policecar[10]);
		        RTC(policecar[11]);
		        RTC(policecar[12]);
		        RTC(policecar[13]);
		        RTC(policecar[14]);
		        RTC(policecar[15]);
		        RTC(policecar[16]);
		        RTC(policecar[17]);
		        RTC(policecar[18]);
		        RTC(policecar[19]);
		        RTC(policecar[20]);
		        RTC(policecar[21]);
		        RTC(policecar[22]);
		        RTC(policecar[23]);
		        RTC(policecar[24]);
		        RTC(policecar[25]);
		        RTC(policecar[26]);
		        RTC(policecar[27]);
		        RTC(policecar[28]);
		        RTC(policecar[29]);
		        RTC(policecar[30]);
		        RTC(policecar[31]);
		    }
		    if(PlayerInfo[playerid][pLider] == 2)
		    {
		    	RTC(tvf[0]);
		    	RTC(tvf[1]);
		    	RTC(tvf[2]);
		    	RTC(tvf[3]);
		    	RTC(tvf[4]);
		    	RTC(tvf[5]);
		    	RTC(tvf[6]);
		    	RTC(tvf[7]);
		    	RTC(tvf[8]);
		    	RTC(tvf[9]);
		    	RTC(tvf[10]);
		    	RTC(tvf[11]);
		    	RTC(tvf[12]);
		    	RTC(tvf[13]);
		    	RTC(tvf[14]);
		    	RTC(tvf[15]);
		    	RTC(tvf[16]);
	  		}
		    if(PlayerInfo[playerid][pLider] == 3)
		    {
		        RTC(tbt[0]);
		        RTC(tbt[1]);
		        RTC(tbt[2]);
		        RTC(tbt[3]);
		        RTC(tbt[4]);
		        RTC(tbt[5]);
		        RTC(tbt[6]);
		        RTC(tbt[7]);
		        RTC(tbt[8]);
		        RTC(tbt[9]);
		        RTC(tbt[10]);
		        RTC(tbt[11]);
		        RTC(tbt[12]);
		        RTC(tbt[13]);
		        RTC(tbt[14]);
		        RTC(tbt[15]);
		        RTC(tbt[16]);
		        RTC(tbt[17]);
		        RTC(tbt[18]);
	  		}
		    if(PlayerInfo[playerid][pLider] == 4)
		    {
		    	RTC(grove[0]);
		        RTC(grove[1]);
		        RTC(grove[2]);
		        RTC(grove[3]);
		        RTC(grove[4]);
		        RTC(grove[5]);
		        RTC(grove[6]);
		        RTC(grove[7]);
		        RTC(grove[8]);
		        RTC(grove[9]);
		        RTC(grove[10]);
		        RTC(grove[11]);
		        RTC(grove[12]);
		        RTC(grove[13]);
		        RTC(grove[14]);
		        RTC(grove[15]);
	  		}
		    if(PlayerInfo[playerid][pLider] == 5)
		    {
		    	RTC(vballas[0]);
		        RTC(vballas[1]);
		        RTC(vballas[2]);
		        RTC(vballas[3]);
		        RTC(vballas[4]);
		        RTC(vballas[5]);
		        RTC(vballas[6]);
		        RTC(vballas[7]);
		        RTC(vballas[8]);
		        RTC(vballas[9]);
		        RTC(vballas[10]);
		        RTC(vballas[11]);
		        RTC(vballas[12]);
		        RTC(vballas[13]);
		        RTC(vballas[14]);
		        RTC(vballas[15]);
		        RTC(vballas[16]);
		        RTC(vballas[17]);
		        RTC(vballas[18]);
	  		}
		    if(PlayerInfo[playerid][pLider] == 7)
		    {
		    	RTC(lvpdvozila[0]);
		        RTC(lvpdvozila[1]);
		        RTC(lvpdvozila[2]);
		        RTC(lvpdvozila[3]);
		        RTC(lvpdvozila[4]);
		        RTC(lvpdvozila[5]);
		        RTC(lvpdvozila[6]);
		        RTC(lvpdvozila[7]);
		        RTC(lvpdvozila[8]);
		        RTC(lvpdvozila[9]);
		        RTC(lvpdvozila[10]);
		        RTC(lvpdvozila[11]);
		        RTC(lvpdvozila[12]);
		        RTC(lvpdvozila[13]);
		        RTC(lvpdvozila[14]);
		        RTC(lvpdvozila[15]);
		        RTC(lvpdvozila[16]);
		        RTC(lvpdvozila[17]);
		        RTC(lvpdvozila[18]);
		        RTC(lvpdvozila[19]);
		        RTC(lvpdvozila[20]);
		        RTC(lvpdvozila[21]);
		        RTC(lvpdvozila[22]);
		        RTC(lvpdvozila[23]);
		        RTC(lvpdvozila[24]);
		        RTC(lvpdvozila[25]);
		        RTC(lvpdvozila[26]);
		        RTC(lvpdvozila[27]);
	  		}
	    	if(PlayerInfo[playerid][pLider] == 8)
		    {
		    	RTC(parkingcar[0]);
		        RTC(parkingcar[1]);
		        RTC(parkingcar[2]);
		        RTC(parkingcar[3]);
		        RTC(parkingcar[4]);
		        RTC(parkingcar[5]);
		        RTC(parkingcar[6]);
	  		}
	    	if(PlayerInfo[playerid][pLider] == 9)
		    {
		    	RTC(condorcar[0]);
		        RTC(condorcar[1]);
		        RTC(condorcar[2]);
		        RTC(condorcar[3]);
		        RTC(condorcar[4]);
		        RTC(condorcar[5]);
		        RTC(condorcar[6]);
		        RTC(condorcar[7]);
		        RTC(condorcar[8]);
		        RTC(condorcar[9]);
		        RTC(condorcar[10]);
		        RTC(condorcar[11]);
		        RTC(condorcar[12]);
		        RTC(condorcar[13]);
		        RTC(condorcar[14]);
	  		}
	    /*	if(PlayerInfo[playerid][pLider] == 10)
		    {
		    	RTC(hitmancar[0]);
		        RTC(hitmancar[1]);
		        RTC(hitmancar[2]);
		        RTC(hitmancar[3]);
		        RTC(hitmancar[4]);
		        RTC(hitmancar[5]);
		        RTC(hitmancar[6]);
		        RTC(hitmancar[7]);
		        RTC(hitmancar[8]);
		        RTC(hitmancar[9]);
		        RTC(hitmancar[10]);
		        RTC(hitmancar[11]);
		        RTC(hitmancar[12]);
		        RTC(hitmancar[13]);
		        RTC(hitmancar[14]);
		        RTC(hitmancar[15]);
		        RTC(hitmancar[16]);
	  		}
  */
	    	if(PlayerInfo[playerid][pLider] == 11)
		    {
		    	RTC(pocar[0]);
		        RTC(pocar[1]);
		        RTC(pocar[2]);
		        RTC(pocar[3]);
		        RTC(pocar[4]);
		        RTC(pocar[5]);
		        RTC(pocar[6]);
		        RTC(pocar[7]);
		        RTC(pocar[8]);
		        RTC(pocar[9]);
		        RTC(pocar[10]);
		        RTC(pocar[11]);
		        RTC(pocar[12]);
		        RTC(pocar[13]);
		        RTC(pocar[14]);
		        RTC(pocar[15]);
		        RTC(pocar[16]);
		        RTC(pocar[17]);
		        RTC(pocar[18]);
		        RTC(pocar[19]);
		        RTC(pocar[20]);
		        RTC(pocar[21]);
		        RTC(pocar[22]);
	  		}
    		if(PlayerInfo[playerid][pLider] == 12)
		    {
		    	RTC(po2car[0]);
		        RTC(po2car[1]);
		        RTC(po2car[2]);
		        RTC(po2car[3]);
		        RTC(po2car[4]);
		        RTC(po2car[5]);
		        RTC(po2car[6]);
		        RTC(po2car[7]);
		        RTC(po2car[8]);
		        RTC(po2car[9]);
		        RTC(po2car[10]);
		        RTC(po2car[11]);
		        RTC(po2car[12]);
		        RTC(po2car[13]);
		        RTC(po2car[14]);
  	  		}
    		if(PlayerInfo[playerid][pLider] == 13)
		    {
		    	RTC(po3car[0]);
		        RTC(po3car[1]);
		        RTC(po3car[2]);
		        RTC(po3car[3]);
		        RTC(po3car[4]);
		        RTC(po3car[5]);
		        RTC(po3car[6]);
		        RTC(po3car[7]);
		        RTC(po3car[8]);
		        RTC(po3car[9]);
		        RTC(po3car[10]);
		        RTC(po3car[11]);
		        RTC(po3car[12]);
	  		}
    		if(PlayerInfo[playerid][pLider] == 14)
		    {
		    	RTC(taxicar[0]);
		        RTC(taxicar[1]);
		        RTC(taxicar[2]);
		        RTC(taxicar[3]);
		        RTC(taxicar[4]);
		        RTC(taxicar[5]);
		        RTC(taxicar[6]);
		        RTC(taxicar[7]);
	  		}
   			if(PlayerInfo[playerid][pLider] == 15)
		    {
		    	RTC(basecar[0]);
		        RTC(basecar[1]);
		        RTC(basecar[2]);
		        RTC(basecar[3]);
		        RTC(basecar[4]);
		        RTC(basecar[5]);
		        RTC(basecar[6]);
		        RTC(basecar[7]);
		        RTC(basecar[8]);
		        RTC(basecar[9]);
		        RTC(basecar[10]);
		        RTC(basecar[11]);
		        RTC(basecar[12]);
		        RTC(basecar[13]);
		        RTC(basecar[14]);
		        RTC(basecar[15]);
		        RTC(basecar[16]);
		        RTC(basecar[17]);
		        RTC(basecar[18]);
		        RTC(basecar[19]);
		        RTC(basecar[20]);
		        RTC(basecar[21]);
		        RTC(basecar[22]);
		        RTC(basecar[23]);
		        RTC(basecar[24]);
		        RTC(basecar[25]);
		        RTC(basecar[26]);
		        RTC(basecar[27]);
	  		}
   			if(PlayerInfo[playerid][pLider] == 16)
		    {
		    	RTC(fbicar[0]);
		        RTC(fbicar[1]);
		        RTC(fbicar[2]);
		        RTC(fbicar[3]);
		        RTC(fbicar[4]);
		        RTC(fbicar[5]);
		        RTC(fbicar[6]);
		        RTC(fbicar[7]);
		        RTC(fbicar[8]);
		        RTC(fbicar[9]);
		        RTC(fbicar[10]);
		        RTC(fbicar[11]);
	  		}
   			if(PlayerInfo[playerid][pLider] == 17)
		    {
		    	RTC(rbcar[0]);
		        RTC(rbcar[1]);
		        RTC(rbcar[2]);
		        RTC(rbcar[3]);
		        RTC(rbcar[4]);
		        RTC(rbcar[5]);
		        RTC(rbcar[6]);
		        RTC(rbcar[7]);
		        RTC(rbcar[8]);
		        RTC(rbcar[9]);
          		RTC(rbcar[10]);
		        RTC(rbcar[11]);
		        RTC(rbcar[12]);
		        RTC(rbcar[13]);
		        RTC(rbcar[14]);
		        RTC(rbcar[15]);
		        RTC(rbcar[16]);
		        RTC(rbcar[17]);
		        RTC(rbcar[18]);
		        RTC(rbcar[19]);
		        RTC(rbcar[20]);
		        RTC(rbcar[21]);
		        RTC(rbcar[22]);
		        RTC(rbcar[23]);
		        RTC(rbcar[24]);
		        RTC(rbcar[25]);
		        RTC(rbcar[26]);
		        RTC(rbcar[27]);
		        RTC(rbcar[28]);
		        RTC(rbcar[29]);
		        RTC(rbcar[30]);
		        RTC(rbcar[31]);
		        RTC(rbcar[32]);
		        RTC(rbcar[33]);
	  		}
  			if(PlayerInfo[playerid][pLider] == 18)
		    {
		    	RTC(vatra[0]);
		        RTC(vatra[1]);
		        RTC(vatra[2]);
		        RTC(vatra[3]);
		        RTC(vatra[4]);
		        RTC(vatra[5]);
		        RTC(vatra[6]);
		        RTC(vatra[7]);
		        RTC(vatra[8]);
		        RTC(vatra[9]);
	            RTC(vatra[10]);
		        RTC(vatra[11]);
	  		}
  			if(PlayerInfo[playerid][pLider] == 19)
		    {
		    	RTC(pocar3[0]);
		        RTC(pocar3[1]);
		        RTC(pocar3[2]);
		        RTC(pocar3[3]);
		        RTC(pocar3[4]);
		        RTC(pocar3[5]);
		        RTC(pocar3[6]);
		        RTC(pocar3[7]);
		        RTC(pocar3[8]);
		        RTC(pocar3[9]);
		        RTC(pocar3[10]);
		        RTC(pocar3[11]);
		        RTC(pocar3[12]);
		        RTC(pocar3[13]);
		        RTC(pocar3[14]);
		        RTC(pocar3[15]);
		        RTC(pocar3[16]);
	  		}
  			if(PlayerInfo[playerid][pLider] == 20)
		    {
		    	RTC(po4car[0]);
		        RTC(po4car[1]);
		        RTC(po4car[2]);
		        RTC(po4car[3]);
		        RTC(po4car[4]);
		        RTC(po4car[5]);
		        RTC(po4car[6]);
		        RTC(po4car[7]);
		        RTC(po4car[8]);
		        RTC(po4car[9]);
		        RTC(po4car[10]);
		        RTC(po4car[11]);
		        RTC(po4car[12]);
		        RTC(po4car[13]);
		        RTC(po4car[14]);
		        RTC(po4car[15]);
		        RTC(po4car[16]);
		        RTC(po4car[17]);
		        RTC(po4car[18]);
		        RTC(po4car[19]);
		        RTC(po4car[20]);
		        RTC(po4car[21]);
		        RTC(po4car[22]);
		        RTC(po4car[23]);
		        RTC(po4car[24]);
		        RTC(po4car[25]);
	  		}
  			if(PlayerInfo[playerid][pLider] == 21)
		    {
		    	RTC(TECcar[0]);
		        RTC(TECcar[1]);
		        RTC(TECcar[2]);
		        RTC(TECcar[3]);
		        RTC(TECcar[4]);
		        RTC(TECcar[5]);
		        RTC(TECcar[6]);
		        RTC(TECcar[7]);
		        RTC(TECcar[8]);
		        RTC(TECcar[9]);
		        RTC(TECcar[10]);
		        RTC(TECcar[11]);
	  		}
  			if(PlayerInfo[playerid][pLider] == 22)
		    {
		    	RTC(Locacar[0]);
		        RTC(Locacar[1]);
		        RTC(Locacar[2]);
		        RTC(Locacar[3]);
		        RTC(Locacar[4]);
		        RTC(Locacar[5]);
		        RTC(Locacar[6]);
		        RTC(Locacar[7]);
		        RTC(Locacar[8]);
                RTC(Locacar[9]);
		        RTC(Locacar[10]);
		        RTC(Locacar[11]);
		        RTC(Locacar[12]);
		        RTC(Locacar[13]);
		        RTC(Locacar[14]);
		        RTC(Locacar[15]);
		        RTC(Locacar[16]);
	  		}
  			if(PlayerInfo[playerid][pLider] == 23)
		    {
		    	RTC(TECcar[0]);
		        RTC(TECcar[1]);
		        RTC(TECcar[2]);
		        RTC(TECcar[3]);
		        RTC(TECcar[4]);
		        RTC(TECcar[5]);
		        RTC(TECcar[6]);
		        RTC(TECcar[7]);
		        RTC(TECcar[8]);
		        RTC(TECcar[9]);
		        RTC(TECcar[10]);
		        RTC(TECcar[11]);
	  		}///////////
		}
		case 1:
		{
     		if(PlayerInfo[playerid][pLider] == 2)
		    {
				if(ClanSverc2 == 0)
				{
				    ClanSverc2 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc2 == 1)
				{
				    ClanSverc2 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}

		    }
		    if(PlayerInfo[playerid][pLider] == 3)
		    {
  				if(ClanSverc3 == 0)
				{
				    ClanSverc3 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc3 == 1)
				{
				    ClanSverc3 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
		    if(PlayerInfo[playerid][pLider] == 22)
		    {
				if(ClanSverc22 == 0)
				{
				    ClanSverc22 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc22 == 1)
				{
				    ClanSverc22 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
		    if(PlayerInfo[playerid][pLider] == 17)
		    {
				if(ClanSverc17 == 0)
				{
				    ClanSverc17 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc17 == 1)
				{
				    ClanSverc17 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
		    if(PlayerInfo[playerid][pLider] == 5)
		    {
				if(ClanSverc5 == 0)
				{
				    ClanSverc5 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc5 == 1)
				{
				    ClanSverc5 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
		    if(PlayerInfo[playerid][pLider] == 9)
		    {
				if(ClanSverc9 == 0)
				{
				    ClanSverc9 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc9 == 1)
				{
				    ClanSverc9 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
		    if(PlayerInfo[playerid][pLider] == 11)
		    {
				if(ClanSverc11 == 0)
				{
				    ClanSverc11 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc11 == 1)
				{
				    ClanSverc11 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
	    	if(PlayerInfo[playerid][pLider] == 20)
		    {
				if(ClanSverc20 == 0)
				{
				    ClanSverc20 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc20 == 1)
				{
				    ClanSverc20 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
	    	if(PlayerInfo[playerid][pLider] == 13)
		    {
				if(ClanSverc13 == 0)
				{
				    ClanSverc13 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc13 == 1)
				{
				    ClanSverc13 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
	    	if(PlayerInfo[playerid][pLider] == 12)
		    {
				if(ClanSverc12 == 0)
				{
				    ClanSverc12 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc12 == 1)
				{
				    ClanSverc12 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
	    	if(PlayerInfo[playerid][pLider] == 15)
		    {
				if(ClanSverc15 == 0)
				{
				    ClanSverc15 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc15 == 1)
				{
				    ClanSverc15 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
    		if(PlayerInfo[playerid][pLider] == 19)
		    {
				if(ClanSverc19 == 0)
				{
				    ClanSverc19 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc19 == 1)
				{
				    ClanSverc19 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
    		if(PlayerInfo[playerid][pLider] == 21)
		    {
				if(ClanSverc21 == 0)
				{
				    ClanSverc21 = 1;
			  		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Ukljucio si sverc za svoju organizaciju.");
				}
				else if(ClanSverc21 == 1)
				{
				    ClanSverc21 = 0;
			   		SCM(playerid,-1,""SRWBOJA"[ Varadero ] - "BELA"Iskljucio si sverc za svoju organizaciju.");
				}
	  		}
		}
	}
	return(true);
}
fDialog(3321)
{
	if(response)
	{
        if( listitem == 0 ) { SPD( playerid, 3325, DSI, "DAVANJE PRIVILEGIJE", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" ); }
        if( listitem == 1 ) { SPD( playerid, 3326, DSI, "SKIDANJE PRIVILEGIJE", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" ); }
	}
}
fDialog(3325)
{
	if(response)
	{
		new player;
		if( sscanf( inputtext, "u", player ) ) return SPD( playerid, 3325, DSI, "Koristite iskljucivo ID-ove", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" );
		{
		    if(PlayerInfo[playerid][pLider] != PlayerInfo[player][pClan]) return SCM(playerid, -1,"#ERROR: "BELA"Igrac je clan neke druge organizacije.");
		    {
				if(PlayerInfo[player][pClan] == 1)
				{
			    	PlayerInfo[player][pPrivilegija] = 1;
				}
				if(PlayerInfo[player][pClan] == 2)
				{
			    	PlayerInfo[player][pPrivilegija] = 2;
				}
				if(PlayerInfo[player][pClan] == 3)
				{
			    	PlayerInfo[player][pPrivilegija] = 3;
				}
				if(PlayerInfo[player][pClan] == 4)
				{
			    	PlayerInfo[player][pPrivilegija] = 4;
				}
				if(PlayerInfo[player][pClan] == 5)
				{
			    	PlayerInfo[player][pPrivilegija] = 5;
				}
				if(PlayerInfo[player][pClan] == 6)
				{
			    	PlayerInfo[player][pPrivilegija] = 6;
				}
				if(PlayerInfo[player][pClan] == 7)
				{
			    	PlayerInfo[player][pPrivilegija] = 7;
				}
				if(PlayerInfo[player][pClan] == 8)
				{
			    	PlayerInfo[player][pPrivilegija] = 8;
				}
				if(PlayerInfo[player][pClan] == 9)
				{
			    	PlayerInfo[player][pPrivilegija] = 9;
				}
				if(PlayerInfo[player][pClan] == 10)
				{
			    	PlayerInfo[player][pPrivilegija] = 10;
				}
				if(PlayerInfo[player][pClan] == 11)
				{
			    	PlayerInfo[player][pPrivilegija] = 11;
				}
				if(PlayerInfo[player][pClan] == 12)
				{
			    	PlayerInfo[player][pPrivilegija] = 12;
				}
				if(PlayerInfo[player][pClan] == 13)
				{
			    	PlayerInfo[player][pPrivilegija] = 13;
				}
				if(PlayerInfo[player][pClan] == 14)
				{
			    	PlayerInfo[player][pPrivilegija] = 14;
				}
				if(PlayerInfo[player][pClan] == 15)
				{
			    	PlayerInfo[player][pPrivilegija] = 15;
				}
				if(PlayerInfo[player][pClan] == 16)
				{
			    	PlayerInfo[player][pPrivilegija] = 16;
				}
				if(PlayerInfo[player][pClan] == 17)
				{
			    	PlayerInfo[player][pPrivilegija] = 17;
				}
				if(PlayerInfo[player][pClan] == 18)
				{
			    	PlayerInfo[player][pPrivilegija] = 18;
				}
				if(PlayerInfo[player][pClan] == 19)
				{
			    	PlayerInfo[player][pPrivilegija] = 19;
				}
				if(PlayerInfo[player][pClan] == 20)
				{
			    	PlayerInfo[player][pPrivilegija] = 20;
				}
				if(PlayerInfo[player][pClan] == 21)
				{
			    	PlayerInfo[player][pPrivilegija] = 21;
				}
				if(PlayerInfo[player][pClan] == 22)
				{
			    	PlayerInfo[player][pPrivilegija] = 22;
				}
				if(PlayerInfo[player][pClan] == 23)
				{
			    	PlayerInfo[player][pPrivilegija] = 23;
				}
				SavePlayer(player);
			}
		}
	}
	return(true);
}
fDialog(3326)
{
	if(response)
	{
		new player;
		if( sscanf( inputtext, "u", player ) ) return SPD( playerid, 3326, DSI, "Koristite iskljucivo ID-ove", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" );
		{
		    if(PlayerInfo[playerid][pLider] != PlayerInfo[player][pClan]) return SCM(playerid, -1,"#ERROR: "BELA"Igrac je clan neke druge organizacije.");
		    {
				if(PlayerInfo[player][pClan] == 1)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 2)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 3)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 4)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 5)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 6)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 7)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 8)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 9)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 10)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 11)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 12)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 13)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 14)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 15)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 16)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 17)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 18)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 19)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 20)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 21)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 22)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 23)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 24)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				if(PlayerInfo[player][pClan] == 25)
				{
			    	PlayerInfo[player][pPrivilegija] = 0;
				}
				SavePlayer(player);
			}
		}
	}
	return(true);
}

/////////////////////////////////////////////////////////
CMD:aprodajsve(playerid, params[])
{
    new string[200];
    new string1[200];
    new string2[200];
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pAdmin] < 6)  return SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Niste ovlasceni!");
    format(string,sizeof(string),"[V:RPG] "SRWBOJA"(( Trenutno se vrsi proces prodavanja svih kuca,stanova,firmi i vikendica. ))");
	SCMTA(-1,string);
	format(string1,sizeof(string1),"[V:RPG] "SRWBOJA"(( Koriscenje komandi bice vam omoguceno za nekoliko minuta ;). ))");
	SCMTA(-1,string1);
    //kuce
    for(new k = 0; k < sizeof(KucaInfo); k++)
    {
    KucaInfo[k][kProveraVlasnika] = 0; KucaInfo[k][kFrizder] = 0; KucaInfo[k][kOruzije] = -1; KucaInfo[k][kOdjeca] = 0;
    KucaInfo[k][kNovac] = 0; KucaInfo[k][kZatvoreno] = 1; KucaInfo[k][kZvono] = 0; KucaInfo[k][kDroga] = 0;
    KucaInfo[k][kMunicija] = 0; KucaInfo[k][kRent] = 0; KucaInfo[k][kMats] = 0; KuceLP(k);
    strmid(KucaInfo[k][kVlasnik],"Niko",0,strlen("Niko"),255);  SacuvajKucu(k);
    }
    //stanovi
    for(new s = 0; s < sizeof(StanInfo); s++)
    {
    StanInfo[s][sProveraVlasnika] = 0; StanInfo[s][sOruzije] = -1; StanInfo[s][sNovac] = 0; StanInfo[s][sZatvoreno] = 1; StanInfo[s][sMunicija] = 0; StanLP(s);
    strmid(StanInfo[s][sVlasnik],"Niko",0,strlen("Niko"),255); SacuvajStan(s);
	}
	//vikendice
	for(new vi = 0; vi < sizeof(VikendiceInfo); vi++)
	{
	VikendiceInfo[vi][viProveraVlasnika] = 0; VikendiceInfo[vi][viDroga] = 0; VikendiceInfo[vi][viMats] = 0; VikendiceInfo[vi][viZatvoreno] = 1; VikendicaLP(vi);
    strmid(VikendiceInfo[vi][viVlasnik],"Niko",0,strlen("Niko"),255); SacuvajVikendicu(vi);
	}
	//firme
	for(new b = 0; b < sizeof(FirmaInfo); b++)
	{
	for(new i=0; i<MAX_PLAYERS; i++)
    {
	FirmaInfo[b][fImaVlasnika] = 0;
	FirmaInfo[b][fKasa] = 0;
	FirmaInfo[b][fZatvoreno] = 0;
	strmid(FirmaInfo[b][fVlasnik], "Niko", 0, strlen("Niko"), 255);
	strmid(FirmaInfo[b][fIznuda], "Niko", 0, strlen("Niko"), 255);
	PlayerInfo[i][pPosedovanjeFirme] = -1;
	FirmaLabelIPickup(b);
	SacuvajFirmu(b);
	}
	}
	SCM(playerid,-1,"[V:RPG] "SRWBOJA"(( Prodao si sve firme,kuce,stanove i vikendice! ))");
	format(string2,sizeof(string2),"[V:RPG] "SRWBOJA"(( Kuce,stanovi,vikendice i firme su prodane od strane Vlasnika,"ZELENA"komande su omogucene. ))");
	SCMTA(-1,string2);
	return 1;
}
CMD:fly(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(flyon[playerid] == 0)
		{
		    StartFly(playerid);
			flyon[playerid] = 1;
			return 1;
  		}
		if(flyon[playerid] == 1)
		{
		    StopFly(playerid);
			flyon[playerid] = 0;
			return 1;
		}
	}
    else SCM(playerid,-1,""SRWBOJA"(("BELA" Varadero "SRWBOJA")) "SIVA"Samo Staff!!");
	return 1;
}
CMD:attach(playerid, params[])
	{
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""CRVENA"[ERROR] Moras biti na serveru da bi koristo ovu komandu!");
	new askini[224];
 	if(sscanf(params, "s[224]", askini))
	{
		SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"/attach OPCIJE: [Edit / Dodaj]");
		return 1;
	}
	if(!strcmp(askini, "edit", true)){
	new string[50];
    new attch1 = PlayerInfo[playerid][pAttach1]; new attch2 = PlayerInfo[playerid][pAttach2]; new attch3 = PlayerInfo[playerid][pAttach3]; new attch4 = PlayerInfo[playerid][pAttach4];
    new attch5 = PlayerInfo[playerid][pAttach5]; new attch6 = PlayerInfo[playerid][pAttach6]; new attch7 = PlayerInfo[playerid][pAttach7]; new attch8 = PlayerInfo[playerid][pAttach8]; new attch9 = PlayerInfo[playerid][pAttach9];
    format(string, sizeof(string), "0. [%d]\n1. [%d]\n2. [%d]\n3. [%d]\n4. [%d]\n5. [%d]\n6. [%d]\n7. [%d]\n8. [%d]", attch1,attch2,attch3,attch4,attch5,attch6,attch7,attch8,attch9);
    SPD(playerid,14000,DIALOG_STYLE_LIST, "{FF0000}Attach", string, "Izaberi", "Izadji");
	}
	else if(!strcmp(askini, "dodaj", true)){
	new string[50];
    new attch1 = PlayerInfo[playerid][pAttach1]; new attch2 = PlayerInfo[playerid][pAttach2]; new attch3 = PlayerInfo[playerid][pAttach3]; new attch4 = PlayerInfo[playerid][pAttach4];
    new attch5 = PlayerInfo[playerid][pAttach5]; new attch6 = PlayerInfo[playerid][pAttach6]; new attch7 = PlayerInfo[playerid][pAttach7]; new attch8 = PlayerInfo[playerid][pAttach8]; new attch9 = PlayerInfo[playerid][pAttach9];
    format(string, sizeof(string), "0. [%d]\n1. [%d]\n2. [%d]\n3. [%d]\n4. [%d]\n5. [%d]\n6. [%d]\n7. [%d]\n8. [%d]", attch1,attch2,attch3,attch4,attch5,attch6,attch7,attch8,attch9);
    SPD(playerid,14010,DIALOG_STYLE_LIST, "{FF0000}Biranje Dodataka", string, "Izaberi", "Izadji");
	}
	else return SCM(playerid,-1,""CRVENA"[ERROR] "BELA"Nepostojeci kod attach-a.");
	return 1;
}
CMD:startlotto(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 5)  return SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Niste ovlasceni!");
	Number = random(99)+1;
	new string[45];
	format(string, sizeof(string), ""BELA"LOTTO: Izvucen je broj %d.", Number);
	SCMTA(-1,string);
	new sterasmicu[300];
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pLottoNr] == Number)
		{
			randlottopare[i] = random(3500)+1000000;
			g_NovacPlus(i, randlottopare[i]);
			format(sterasmicu,sizeof(sterasmicu),""BELA"LOTTO: Dobili ste %d novca od lotoa!",randlottopare[i]);
			SCM(i, -1, sterasmicu);
		}
		PlayerInfo[i][pLottoNr] = 0;
	}
	return 1;
}
////////////////////////////////////////////////////
CMD:posao(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pLevel] >= 55) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Vi ste penzioner!");
	if(PlayerInfo[playerid][pPosao] != 0) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Vec imas posao moras prvo dati otkaz (/otkaz)!");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 1752.8291,-1894.0505,13.5573))
	{
	    if(PlayerInfo[playerid][pLevel] < 1) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 1 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_BUSVOZAC;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao bus vozac!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/linija /prekiniposao");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1879.1913,2290.6455,10.9799))
	{
	    if(PlayerInfo[playerid][pLevel] < 1) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 1 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_BUSVOZAC;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao bus vozac!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/linija /prekiniposao");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1961.1292,-1244.8138,19.9714))
	{
	    if(PlayerInfo[playerid][pLevel] < 1) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 1 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_KOSACTRAVE;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao kosac trave!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/kositravu /prekiniposao");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1821.8009, -1444.2721, 13.5947))
	{
	    if(PlayerInfo[playerid][pLevel] < 2) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 2 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_MEHANICAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao mehanicar!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"CTRL da zakacite/otkacite vozilo | /popravi | /napuni");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 986.7067,-1251.8522,16.9844))
	{
	    if(PlayerInfo[playerid][pLevel] < 2) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 2 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_POSTAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao postar!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/posta /prekiniposao");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1569.8850,-1552.9240,13.5536))
	{
	    if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 3 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_KOMUNALAC;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO]"SIVA"Uspesno ste se zaposlili kao komunalac!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/komunalno /prekiniposao");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1882.0570,-1596.7355,13.5595))
	{
	    if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 3 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_GRADJEVINAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao gradjevinar!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/malter /poravnaj /prekiniposao");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1145.5222,-1294.5692,13.6356))
	{
	    if(PlayerInfo[playerid][pLevel] < 4) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 4 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_BOLNICAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao bolnicar!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/izleci /oprema");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 940.5929,-1085.7225,24.2962))
	{
	    if(PlayerInfo[playerid][pLevel] < 4) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 4 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_GROBAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 3;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao grobar!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/grobar /oprema");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2900.0557,-1994.0992,8.36321111))
	{
	    if(PlayerInfo[playerid][pLevel] < 10) return SCM(playerid, -1, ""CRVENA"ERROR: "BELA"Moras biti level 10 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_RIBAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 0;
	    SCM(playerid, -1, ""BELA"[POSAO] "BELA"Uspesno ste se zaposlili kao ribar!");
	    SCM(playerid, -1, ""SIVA"JOB(HINT): "BELA"/ribari");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2351.9797,-1170.0458,28.0445))
	{
	    if(PlayerInfo[playerid][pLevel] < 5) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 5 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_DZEPAROS;
	    PlayerInfo[playerid][pPosaoUgovor] = 4;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao dzeparos!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/ukradi");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, -38.5563,56.3204,3.1172))
	{
	    if(PlayerInfo[playerid][pLevel] < 5) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 5 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_FARMER;
	    PlayerInfo[playerid][pPosaoUgovor] = 4;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao farmer!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/mleko /oranje /vrsenje");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1743.0222,-1943.9714,13.5683))
	{
	    if(PlayerInfo[playerid][pLevel] < 6) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 6 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_MASINOVODJA;
	    PlayerInfo[playerid][pPosaoUgovor] = 4;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao masinovodja!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/voz");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1628.9937,-1848.0186,13.5378))
	{
	    if(PlayerInfo[playerid][pLevel] < 6) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 6 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_DOSTAVLJAC;
	    PlayerInfo[playerid][pPosaoUgovor] = 4;
	    SCM(playerid, -1, ""HZELENA"[POSAO]"SIVA"Uspesno ste se zaposlili kao dostavljac!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/uzmikutiju /utovari /istovari");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1811.3263,-2066.6699,13.5541))
	{
	    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 7 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_KAMIONDZIJA;
	    PlayerInfo[playerid][pPosaoUgovor] = 5;
	    SCM(playerid, -1, ""HZELENA"[POSAO]"SIVA"Uspesno ste se zaposlili kao kamiondzija!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/tura /oprema");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1892.8370,-2328.5259,13.5469))
	{
	    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 7 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_PILOT;
	    PlayerInfo[playerid][pPosaoUgovor] = 5;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao pilot!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/let");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1083.2322,-1226.7747,15.8203))
	{
	    if(PlayerInfo[playerid][pLevel] < 8) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 8 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_ELEKTRICAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 5;
	    SCM(playerid, -1, ""HZELENA"[V:RPG] "SIVA"Uspesno ste se zaposlili kao elektricar!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/kvar /oprema");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1804.4381,-1694.5592,13.7140))
	{
	    if(PlayerInfo[playerid][pLevel] < 8) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 8 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_VODOINSTALATER;
	    PlayerInfo[playerid][pPosaoUgovor] = 5;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao vodoinstalater!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/pronadjikvar /oprema /zatvoriventil /popravikvar");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 588.1840,877.5150,-42.4973))
	{
	    if(PlayerInfo[playerid][pLevel] < 10) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 10 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_RUDAR;
	    PlayerInfo[playerid][pPosaoUgovor] = 5;
	    SCM(playerid, -1, ""HZELENA"[POSAO]"SIVA"Uspesno ste se zaposlili kao rudar!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/kopajzlato /predajzlato /utovarizlato /istovarizlato");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 110.4038,1106.6428,13.6094))
	{
	    if(PlayerInfo[playerid][pLevel] < 10) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 10 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_DRVOSECA;
	    PlayerInfo[playerid][pPosaoUgovor] = 5;
	    SCM(playerid, -1, ""HZELENA"[POSAO]"SIVA"Uspesno ste se zaposlili kao drvoseca!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/drva /oprema");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, -539.9475,-518.3316,-23.5380))
	{
	    if(PlayerInfo[playerid][pLevel] < 10) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Moras biti level 10 da bi mogao raditi taj posao!");
	    PlayerInfo[playerid][pPosao] = POSAO_COCA;
	    PlayerInfo[playerid][pPosaoUgovor] = 5;
	    SCM(playerid, -1, ""HZELENA"[POSAO] "SIVA"Uspesno ste se zaposlili kao Dostavljac coca cole!");
	    SCM(playerid, -1, ""HZELENA"[KOMANDE]"SIVA"/dostavicolu /oprema");
	}
	else return SCM(playerid, -1, ""SPLAVA"[V:RPG] : "BELA"Niste na mestu zaposljavanja!");
	return 1;
}
///////////////////////////////////////////////////////
forward Odbrojavanja();
public Odbrojavanja()
{
		    foreach(new i : Player)
		    {
			if(PlayerInfo[i][pAdmin] > 0)
			{
			format(updatewarntd, sizeof(updatewarntd), "%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~%s", AdminWarns[ 0 ][ Text ], AdminWarns[ 1 ][ Text ], AdminWarns[ 2 ][ Text ], AdminWarns[ 3 ][ Text ], AdminWarns[ 4 ][ Text ], AdminWarns[ 5 ][ Text ], AdminWarns[ 6 ][ Text ], AdminWarns[ 7 ][ Text ]);
			TextDrawSetString(WarnTD, updatewarntd);
			}
			if(PlayerInfo[i][pDzeparosVreme] > 0) PlayerInfo[i][pDzeparosVreme] --;
			if(PlayerInfo[i][pElektricarVreme] > 0) PlayerInfo[i][pElektricarVreme] --;
			if(PlayerInfo[i][pKonopacVreme] > 0) PlayerInfo[i][pKonopacVreme] --;
			if(PlayerInfo[i][pPovezVreme] > 0) PlayerInfo[i][pPovezVreme] --;
			if(PlayerInfo[i][pZatvorenVreme] > 0) PlayerInfo[i][pZatvorenVreme]--;
			if(PlayerInfo[i][pMutiranVreme] > 0) PlayerInfo[i][pMutiranVreme]--;
			if(PlayerInfo[i][pRobbankVreme] > 0) PlayerInfo[i][pRobbankVreme]--;
			if(PlayerInfo[i][pZatvorenVreme] == 0 && PlayerInfo[i][pZatvor] > 0)
		    {
			PlayerInfo[i][pZatvor] = 0; PlayerInfo[i][pZatvorenVreme] = 0;
			SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000);
			SetPlayerInterior(i, 0); SetPlayerVirtualWorld(i, 0);
			SetPlayerPos(i, 1802.7881, -1577.6869, 13.4119);
			SetPlayerFacingAngle(i, 281.0); SetCameraBehindPlayer(i);
			SCM(i,-1,""BELA"<<< "ZELENA"[ ZATVOR ] Pusteni ste iz zatvora, nemojte vise praviti zlocine... "BELA">>>");
			GameTextForPlayer(i, "~G~Pusteni ste iz zatvora...", 5000, 3); SavePlayer(i);
		    }
		    if(PlayerInfo[i][pMutiran] == 1 && PlayerInfo[i][pMutiranVreme] == 0) {
			PlayerInfo[i][pMutiran] = 0;
			SCM(i,-1,""BELA"<<< "ZELENA"[ MUTIRAN ] Niste vise mutirani, pazite sledeci put na svoj govor... "BELA">>>");
	        }
	        }
	        foreach(new i : Player)
            {
	        if(PlayerInfo[i][pDisarmVreme] > 0) PlayerInfo[i][pDisarmVreme]--;
	        if(PlayerInfo[i][pDisarm] == 1 && PlayerInfo[i][pDisarmVreme] == 0)
	        {
	            PlayerInfo[i][pDisarm] = 0;
	            SCM(i,-1,""BELA"<<< "ZELENA"[ DISARM ] Niste vise disarmovani, sledeci put ne DMajte... "BELA">>>");
	        }
            }
		    foreach(new i : Player)
	        {
 		    if(IsPlayerPaused(i))
		    {
		    new str[128];
		    if(afkSec[i] < 10 && afkMin[i] < 10)
			{
			    format(str, sizeof(str), "(( AFK - 0%d:0%d ))", afkMin[i],afkSec[i]);
			}
			else if(afkSec[i] < 10 && afkMin[i] > 10)
			{
			    format(str, sizeof(str), "(( AFK - %d:0%d ))", afkMin[i],afkSec[i]);
			}
			else if(afkSec[i] > 10 && afkMin[i] < 10)
			{
			    format(str, sizeof(str), "(( AFK - 0%d:%d ))", afkMin[i],afkSec[i]);
			}
			else
			{
		    	format(str, sizeof(str), "(( AFK - %d:%d ))", afkMin[i],afkSec[i]);
		    }
			SetPlayerChatBubble(i, str, 16711935, 100.0, 1000);
			afkSec[i]++;
			if(afkSec[i] >=60)
			{
			    afkMin[i]++;
			    afkSec[i]=0;
			}
		    }
		    else
		    {
		    afkMin[i]=0;
		    afkSec[i]=0;
		    }
	        }
	        return 1;
}
//----------------------------------------------------------------------------//
public OnPlayerPause(playerid)
{
    AFKDetekcija[playerid] = 1;
	if(StavljeneLisice[playerid] == 1)
	{
		new string[256];
		format(string, 256, "~r~AC - ~w~Igrac %s je otisao AFK sa lisicama na rukama.", GetName(playerid));
		DodajWarnRed(string);
	}
	if(IgracTazovan[playerid] == 1)
	{
		new string[256];
		format(string, 256, "~r~AC - ~w~Igrac %s je otisao AFK dok je tazovan.", GetName(playerid));
		DodajWarnRed(string);
	}
	if(AdminDuty[playerid] == 1)
	{
		new string[256];
		format(string, 256, "~r~AC - ~w~Admin %s je otisao AFK na duznosti.", GetName(playerid));
		DodajWarnRed(string);
	}
	if(GMDuty[playerid] == 1)
	{
		new string[256];
		format(string, 256, "~r~AC - ~w~GameMaster %s je otisao AFK na duznosti.", GetName(playerid));
		DodajWarnRed(string);
	}
	if(saduty[playerid] == 1)
	{
		new string[256];
		format(string, 256, "~r~AC - ~w~Spec-Team %s je otisao AFK na duznosti.", GetName(playerid));
		DodajWarnRed(string);
	}
	return 1;
}
//----------------------------------------------------------------------------//
public OnPlayerUnPause(playerid)
{
	AFKDetekcija[playerid] = 0;
    return 1;
}
//----------------------------------------------------------------------------//
public OnPlayerConnect(playerid)
{
    SpawnovaoVozilo[playerid] = 0;
    if(UlogovanProvera[playerid] == 1)
    {
		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
		{
			DestroyVehicle(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID]);
			SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta]);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
		{
			DestroyVehicle(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID]);
			SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta2]);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeMotora] != -1)
		{
			DestroyVehicle(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mID]);
			SacuvajMotor(PlayerInfo[playerid][pPosedovanjeMotora]);
			MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeAviona] != -1)
		{
			DestroyVehicle(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avID]);
			SacuvajAvione(PlayerInfo[playerid][pPosedovanjeAviona]);
			AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjePlovila] != -1)
		{
			DestroyVehicle(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plID]);
			SacuvajPlovila(PlayerInfo[playerid][pPosedovanjePlovila]);
			PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plID] = -1;
		}
	}
    if(IsValidDynamicObject(GetPVarInt(playerid, "BoomboxObject"))) DestroyDynamicObject(GetPVarInt(playerid, "BoomboxObject"));
    va_SendClientMessage(playerid, -1, ""ORANGE2"#!: Dobro dosli %s, molimo vas sacekajte !", GetName(playerid));
	zonaid[playerid] = -1; zonatime[playerid] = -1; dodajezonu[playerid] = -1;
	SetPVarInt(playerid, "WarpHack",0);
	
	//-------------------------------//
	//new buffer[144];
   // static country[64];
    //GetPlayerCountry(playerid, country, 64);
	//GetPlayerName(playerid, buffer, 24 + 1);
	//format(buffer, sizeof buffer, "Ime Igraca %s: ID: %d - "CRVENA"%s", buffer, playerid, country);
	//printf(buffer);
    //SendAdminMessage(0xFFFF80C8, buffer);
	//-------------------------------//
    Delete3DTextLabel(avehl[playerid]);
    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
    ///////////////////////////////////////////////////////////////////////////////////////
    PlayerInfo[playerid][pAttach1] = 
	PlayerInfo[playerid][pAttach2] = 
	PlayerInfo[playerid][pAttach3] = 
	PlayerInfo[playerid][pAttach4] = 
	PlayerInfo[playerid][pAttach5] = 
	PlayerInfo[playerid][pAttach6] = 
	PlayerInfo[playerid][pAttach7] = 
	PlayerInfo[playerid][pAttach8] = 
	PlayerInfo[playerid][pAttach9] = 
   	PlayerInfo[playerid][pBone1] = 
	PlayerInfo[playerid][pBone2] = 
	PlayerInfo[playerid][pBone3] = 
	PlayerInfo[playerid][pBone4] = 
	PlayerInfo[playerid][pBone5] = 
	PlayerInfo[playerid][pBone6] = 
	PlayerInfo[playerid][pBone7] = 
	PlayerInfo[playerid][pBone8] = 
	PlayerInfo[playerid][pBone9] = -1;
	AttachObjectRemove(playerid);
    PUAttach[playerid] = -1;
    UseAttach1[playerid] = 
    UseAttach2[playerid] = 
    UseAttach3[playerid] = 
    UseAttach4[playerid] = 
    God[playerid] = 
    UseAttach5[playerid] = 
    UseAttach6[playerid] = 
    UseAttach7[playerid] = 
    UseAttach8[playerid] = 
    UseAttach9[playerid] = 
   	PlayerInfo[playerid][pSatiIgreS] = 
	PlayerInfo[playerid][pLPodg] = 
	PlayerInfo[playerid][pBrojBanned] = 
	PlayerInfo[playerid][pBrojWarn] = 
	PlayerInfo[playerid][pBrojMute] = 
	PlayerInfo[playerid][pBrojJail] = 0;
	/////////////////////////////////////////////////////////////////////////////////////////
	OcistiChat(playerid,16); 
	ObrisiObjekte(playerid); 
	ResetPlayer(playerid); 
	InitFly(playerid);
	KillTimer(GroveDrogaTimer[playerid]); 
	BelaBojaIgraca(playerid); 
	KillTimer(VuciTimer[playerid]);
	KreirajTextDrawe(playerid); 
	SetPlayerHealth(playerid, 100); 
	KillTimer( zeton[playerid] );
	// ovo
	CreatePlayerTextDraws( playerid ); // ovo
	InputPassword[ playerid ] = false; // ovo
	ChoseCountry[ playerid ] = false; // ovo
	InputAge[ playerid ] = false; // ovo
	InputMail[ playerid ] = false; // ovo
	RegSex[ playerid ] = 0; NargilaOpet[playerid] = false;
    Rentano[playerid] = 299;
	/////////////////////////////////////////////////////////////////////////////////////////
	positionvw[playerid] = 0;
	positionint[playerid] = 0;
	positionx[playerid] = 816.9719;
	positiony[playerid] = -1352.4008;
	positionz[playerid] = -0.5078;
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	new banfile[100]; format(banfile,sizeof(banfile),BAN_FOLDER,GetName(playerid));
	
	if(fexist(banfile))
	{
		StatusKonekta(playerid, 1);
		return 1;
	}
    /////////////////////////////////////////////////////////////////////////////////////////
	new q[124];			
	mysql_format(SQL, q, sizeof(q), "SELECT `Password`, `Admin`, `Adminpin` FROM `players` WHERE `Name` = '%e' LIMIT 1", GetName(playerid));
	mysql_tquery(SQL, q, "_sqlCheckPlayerData", "i", playerid);

	//SetTimerEx( "Login", 100, false, "d", playerid ); // salje na login :/
   
    return 1;
}

forward _sqlCheckPlayerData(playerid);
public _sqlCheckPlayerData(playerid) 
{
	new rows;
	cache_get_row_count(rows);
	if(rows > 0) 
	{
		cache_get_value_name(0, "Password", PlayerInfo[playerid][pPassword], 65);
		cache_get_value_int(0, "Admin", PlayerInfo[playerid][pAdmin]);
		cache_get_value_int(0, "Adminpin", PlayerInfo[playerid][pAdminpin]);		
		Login(playerid);
	}
	else 
	{
		if(!ProveraRPImena(playerid))
		{
			StatusKonekta(playerid, 2);
			return 1;
		}
		TutorialTimer[playerid] = SetTimerEx( "LogReg", 100, false, "d", playerid);
	}
	return (true);
}


forward Login( playerid ); // ovo
public Login( playerid ) 
{ // ovo

		new loginstring[300];
		new loginname[126];
        InterpolateCameraPos(playerid, -1105.053466, 1103.306396, 43.850109, -1212.080688, 950.024536, 126.005386, 10000);
        InterpolateCameraLookAt(playerid, -1109.020751, 1100.617553, 45.275379, -1216.923095, 948.864562, 126.459098, 10000);
		GetPlayerName(playerid,loginname,sizeof(loginname));
	    format(loginstring,sizeof(loginstring),""BELA"Dobro dosao "SRWBOJA"%s "BELA"na "SRWBOJA"Varadero RPG Server.\n"BELA"Upisite vasu lozinku kako bi nastavili sa igrom\nUkoiliko pogresite lozinku 4 puta bicete kikovani.\n\n"SRWBOJA"* Imate 2 minuta da unesete tacnu lozinku.",loginname);
  		SPD(playerid, 2, DIALOG_STYLE_PASSWORD, "LOGIN", loginstring, "Login", "Izlaz");
        for(new i = 0; i < 24; i ++) 
        {
			PlayerTextDrawShow(playerid, LoginTD[playerid][i]); 
		}
	    return 1;
}
forward Tutorijal( playerid, izbor );
public Tutorijal( playerid, izbor ) {
	    if( izbor == 1 ) {
	    KillTimer( TutorialTimer[ playerid ] );
        SetCameraBehindPlayer(playerid);
		new string[128]; PlayerInfo[playerid][pTutorial] = 1;
	    format(string, sizeof(string), ""SRWBOJA"'%s', "BELA"dobro dosao u Los Santos !", ProveraImenaBDC(playerid));
	    SCM(playerid, -1, string);
	    TogglePlayerControllable(playerid, 1); 
	    TogglePlayerSpectating( playerid, false ); 
	    SetPlayerVirtualWorld(playerid, 0); 
	    SetPlayerInterior(playerid, 0);
	    if(PlayerInfo[playerid][pSex] == 1) 
	    	{ 
	    		Update_Skin(playerid, 240); 
	    		PlayerInfo[playerid][pSkin] = 240; 
	    	}
		if(PlayerInfo[playerid][pSex] == 2) 
			{ 
				Update_Skin(playerid, 93); 
				PlayerInfo[playerid][pSkin] = 93; 
			}
		UlogovanProvera[playerid] = 1;
		new rand = random(sizeof(RandomSpawn2));
		SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], RandomSpawn2[rand][0], RandomSpawn2[rand][1], RandomSpawn2[rand][2], 1.0, -1, -1, -1, -1, -1, -1);

        SavePlayer(playerid); 
        SpawnPlayer(playerid);

	    new dan,mjesec,godina;
		new sat,minuta,sekunda;
		new ip[128];
		new name[MAX_PLAYER_NAME];
	 	getdate(godina, mjesec, dan);
	 	gettimeEx(sat, minuta, sekunda);
	 	GetPlayerIp(playerid, ip,sizeof(ip));
	 	GetPlayerName(playerid, name,sizeof(name));

	    format(string, sizeof(string), ""SRWBOJA"#AC: Novi igrac se upravo Registrovao !");
		AdminGameMaster(-1, string);
	 	format(string, sizeof(string), ""SIVA"Ime: "SRWBOJA"%s | "SIVA"IP: "SRWBOJA"%s.", name, ip);
		AdminGameMaster(-1, string);
		format(string, sizeof(string), ""SIVA"Datum: "SRWBOJA"%d/%d/%d | "SIVA"Vreme: "SRWBOJA"%d:%d:%d", dan,mjesec,godina,sat,minuta,sekunda);
		AdminGameMaster(-1, string);
		format(string, sizeof(string), ""SIVA"ID Igraca: "SRWBOJA"%d",playerid);
		AdminGameMaster(-1, string);

		}
	    return 1;
}
////////////////////////////////////////////////////////
forward LogReg(playerid);
public LogReg(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(ServerInfo[isRegistracija] == 1)
		{
			StatusKonekta(playerid, 5);
		}
		else if(ServerInfo[isRegistracija] != 1)
		{
			new info[2048];
	        strcat(info, ""BELA"Dobro dosli na Varadero RPG Server. Nadamo se da cete uzivati.\n\n", sizeof(info));
			strcat(info, ""BELA"Forum: www.varadero-samp.com\n", sizeof(info));
			strcat(info, ""BELA"Discord: discord.varadero-samp.com\n", sizeof(info));
			ShowPlayerDialog(playerid, 45, DIALOG_STYLE_MSGBOX, "WELCOME", info, "Dalje", "");
		}
	}
	return 1;
}
forward StvorioVozilo(playerid);
public StvorioVozilo(playerid)
{
	SpawnovaoVozilo[playerid] = 0;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////
public OnPlayerDisconnect(playerid, reason)
{
    SavePlayer(playerid);
    SpawnovaoVozilo[playerid] = 0;
    if(zonatime[playerid] > 0)
	{
    	new id = zonaid[playerid];
		GangZoneStopFlashForAll(ZonaID[id]);
		PlayerTextDrawHide(playerid,
		klecanjetd[playerid]);
		zonaid[playerid] -= 1;
   		zonatime[playerid] -= 1;
    	KillTimer(zonatimer[playerid]); 
	}
    KillTimer(Timer[playerid]);
	SavePlayer(playerid);
    lastcommand[playerid]=0;
    KillTimer( TutorialTimer[ playerid ] );
    Delete3DTextLabel(avehl[playerid]);
   	ResetWarStatistics( playerid ); //war
 	CreatingWAR[ playerid ] = -1; //war 	
    onlinepl--;
    ResetRobbery(playerid, 1);
    AttachObjectRemove(playerid);
    SaveAttach(playerid);
	//========================================================================//
    PlayerTextDrawDestroy( playerid, SpecTextDraw[ playerid ] );
	SpecTextDraw[ playerid ] = PlayerText:INVALID_TEXT_DRAW;
    DisablePlayerCheckpoint(playerid);
	PosaoGPS[playerid] = 0;
	new Float:x;
    new Float:y;
    new Float:z;
   	GetPlayerPos(playerid,x,y,z);
 	positionx[playerid] = x;
	positiony[playerid] = y;
	positionz[playerid] = z;
	positionint[playerid] = GetPlayerInterior(playerid);
	positionvw[playerid] = GetPlayerVirtualWorld(playerid);
	new string3[64];
	new d,m,yy,h,mi,s;
	getdate(yy,m,d);
	gettimeEx(h,mi,s);
	format(string3, sizeof(string3), "%d/%d/%d at %d:%d:%d",d,m,yy,h,mi,s);
	strmid(PlayerInfo[playerid][pLastSeen], string3, 0, strlen(string3), 255);
 	SavePlayer(playerid);
    if(playerid == -1) return 1;
    if(AdminVozilo[playerid] != -1) DestroyVehicle(AdminVozilo[playerid]), AdminVozilo[playerid] = -1;
    if(PromoterVozilo[playerid] != -1) DestroyVehicle(PromoterVozilo[playerid]), PromoterVozilo[playerid] = -1;
    if(GetPVarType(playerid, "BoomboxObject"))
    {
    DestroyDynamicObject(GetPVarInt(playerid, "BoomboxObject"));
    if(GetPVarType(playerid, "bboxareaid"))
        {
    foreach(new i : Player)
         {
     if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "bboxareaid")))
        {
    StopAudioStreamForPlayer(i);
    SendClientMessage(i, COLOR_GREY, " Boombox kreator se diskonektovao sa servera.");
        }
        }
        }
  	    }
    if(UlogovanProvera[playerid] == 1)
    {
		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
		{
			DestroyVehicle(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID]);
			SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta]);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
		{
			DestroyVehicle(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID]);
			SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta2]);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeMotora] != -1)
		{
			DestroyVehicle(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mID]);
			SacuvajMotor(PlayerInfo[playerid][pPosedovanjeMotora]);
			MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeAviona] != -1)
		{
			DestroyVehicle(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avID]);
			SacuvajAvione(PlayerInfo[playerid][pPosedovanjeAviona]);
			AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjePlovila] != -1)
		{
			DestroyVehicle(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plID]);
			SacuvajPlovila(PlayerInfo[playerid][pPosedovanjePlovila]);
			PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plID] = -1;
		}
	}
    //========================================================================//
	PlayerInfo[playerid][pRadi] = 0;
	if(PlayerInfo[playerid][pWar] > 0)
	{
		PlayerInfo[playerid][pWar] = 0;
		TextDrawHideForPlayer(playerid, TDwar0);
		TextDrawHideForPlayer(playerid, TDwar1);
		TextDrawHideForPlayer(playerid, TDwar2);
		TextDrawHideForPlayer(playerid, TDwar3);
		TextDrawHideForPlayer(playerid, TDwar4);
		TextDrawHideForPlayer(playerid, TDwar5);
		TextDrawHideForPlayer(playerid, TDwar6);
	}
    //========================================================================//
	if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) {
        format( globalstring, sizeof( globalstring ), ""BELA"WAR | "COL_TEAM1"%s: "BELA"je napustio WAR i server.", GetName( playerid ) );
        WARMessage( WARPInfo[ playerid ][ warID ], -1, globalstring );
        WARInfo[ WARPInfo[ playerid ][ warID ] ][ warTeamMembers ][ 0 ]--;
    }
    if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) {
        format( globalstring, sizeof( globalstring ), ""BELA"WAR | "COL_TEAM2"%s: "BELA"je napustio WAR i server.", GetName( playerid ) );
        WARMessage( WARPInfo[ playerid ][ warID ], -1, globalstring );
        WARInfo[ WARPInfo[ playerid ][ warID ] ][ warTeamMembers ][ 1 ]--;
    }
	//========================================================================//
    AttachObjectRemove(playerid);
    if(Rentano[playerid] != 299) { RTC(Rentano[playerid]); Rentano[playerid] = 299; }
	//========================================================================//
	if(Prepreka1Kreirana[playerid] == true) DestroyDynamicObject(Prepreka1[playerid]); if(Prepreka2Kreirana[playerid] == true) DestroyDynamicObject(Prepreka2[playerid]);
	if(Prepreka3Kreirana[playerid] == true) DestroyDynamicObject(Prepreka3[playerid]); if(Prepreka4Kreirana[playerid] == true) DestroyDynamicObject(Prepreka4[playerid]);
	if(KupovinaAuta[playerid] == true) autokatalog = 0; PlayerInfo[playerid][pBonus] = 0;
	DestroyDynamicObject(GetPVarInt(playerid, "neon")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon1")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon2")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
 	DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon4")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon5")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon6")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
	DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon8")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon9")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon10")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon12")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon13")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon14")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon15"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon16")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon17")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon18")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon19"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon20")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon21")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon22")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon23"));
	DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon24")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon25")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon26")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon27"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon28")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon29")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon30")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon31"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon32")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon33")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon34")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon35"));
	//========================================================================//
    if(StavljeneLisice[playerid] > 0 || Zavezan[playerid] > 0 || IgracTazovan[playerid] > 0)
	{
		PlayerInfo[playerid][pZatvor] = 2;
	    SetPlayerPos(playerid, 107.2300,1920.6311,18.5208);
		SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453);
		SetPlayerInterior(playerid,0);
		SetPlayerColor(playerid, BELA2);
		KillTimer(VuciTimer[playerid]);
	}
	if(VuceIgraca[playerid] != -1)
	{
		KillTimer(VuciTimer[playerid]); Vucen[VuceIgraca[playerid]] = -1; VuceIgraca[playerid] = -1;
	}
	if(Vucen[playerid] != -1)
	{
		KillTimer(VuciTimer[Vucen[playerid]]); VuceIgraca[Vucen[playerid]] = -1; Vucen[playerid] = -1;
	}
	//========================================================================//
	if(Zavezan[playerid] >= 1) { g_NovacMinus(playerid, 20000); Zavezan[playerid] = 0; }
	//========================================================================//
 
	//========================================================================//
	if(TelefonRazgovor[playerid] != -1)
	{
		SCM(TelefonRazgovor[playerid], -1, "[V:RPG] Telecom | "SRWBOJA"Igrac sa kojim ste pricali je izasao sa servera!");
		SetPlayerSpecialAction(TelefonRazgovor[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(TelefonRazgovor[playerid], TELEFON_SLOT);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, TELEFON_SLOT);
		Poziv[playerid] = -1;
		Poziv[TelefonRazgovor[playerid]] = 0;
        TelefonRazgovor[TelefonRazgovor[playerid]] = -1;
		TelefonRazgovor[playerid] = -1;
	}
	//========================================================================//
	new rstring[120];
	switch(reason)
	{
		case 0: format(rstring, sizeof(rstring), ""SIVA"Igrac {FFFFFF}%s"SIVA" se diskonektovao sa servera. ("BELA" Crash "SIVA")", GetName(playerid));
		case 1: format(rstring, sizeof(rstring), ""SIVA"Igrac {FFFFFF}%s"SIVA" se diskonektovao sa servera. ("BELA" Svojevoljno "SIVA")", GetName(playerid));
  		case 2: format(rstring, sizeof(rstring), ""SIVA"Igrac {FFFFFF}%s"SIVA" se diskonektovao sa servera. ("SRWBOJA" Kick/Ban "SIVA")", GetName(playerid));
 	}
	e_RadiusMSG(30.0, playerid, HEX_PROX, rstring);
	//========================================================================//
	if(Posadjena[playerid] >= 1 || BranjeDroge[playerid] >= 1)
	{
		KillTimer(GroveDrogaTimer[playerid]); BranjeDroge[playerid] = 0; Posadjena[playerid] = 0;
	    DestroyPlayerObject(playerid, SadjenjeDrogeGrove[0][playerid]); DestroyPlayerObject(playerid, SadjenjeDrogeGrove[1][playerid]);
		DestroyPlayerObject(playerid, SadjenjeDrogeGrove[2][playerid]); DestroyPlayerObject(playerid, SadjenjeDrogeGrove[3][playerid]);
	}
	if(taxicena[playerid] > 0)
	{
		KillTimer(taxit[playerid]);
		vozact[playerid] = -1;
		taxicena[playerid] = 0;
	}
	foreach(new i : Player)
	{
		if(vozact[i] == playerid)
		{
			KillTimer(taxit[i]);
			vozact[i] = -1;
			taxicena[i] = 0;
		}
	}
	//========================================================================//
	SavePlayer(playerid);
	//========================================================================//
	UlogovanProvera[playerid] = 0;
    return 1;
}
///////////////////////////////////////////
public OnPlayerSpawn(playerid)
{
    SpawnovaoVozilo[playerid] = 0;
    for(new i=0; i < sizeof(GZ); i++)
	{
	if(GZ[i][zonaTeam] == 1)	//<<<<----The Vinci Family
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xe80d0dEE);
	}
	if(GZ[i][zonaTeam] == 2)    //<<<<----BDT
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xF5DEB3FF);
	}
	if(GZ[i][zonaTeam] == 3)    //<<<<----Groove Street Family
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0x06e006DD);
	}
	if(GZ[i][zonaTeam] == 4)    //<<<<----Ballas
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0x800080FF);
	}
	if(GZ[i][zonaTeam] == 5)    //<<<<----Condor
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xFFDD48EE);
	}
	if(GZ[i][zonaTeam] == 6)    //<<<<----Hitman
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0x729b1aDD);
	}
	if(GZ[i][zonaTeam] == 7)    //<<<<----Blue Lagoon
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0x0000BBDD);
	}
	if(GZ[i][zonaTeam] == 8)    //<<<<----La Cosa Nostra
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0x33CCFFAA);
	}
	if(GZ[i][zonaTeam] == 9)    //<<<<----Da Naga Boys
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xB8860BAA);
	}
	if(GZ[i][zonaTeam] == 10)    //<<<<----Yakuza
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xFF8040EE);
	}
	if(GZ[i][zonaTeam] == 11)    //<<<<----Black Cobra Corporation
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0x000000EE);
	}
	if(GZ[i][zonaTeam] == 12)    //<<<<----DeathRow
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0x872424EE);
	}
	if(GZ[i][zonaTeam] == 13)    //<<<<----The Russia Mafia
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xFF9AFFEE);
	}
	if(GZ[i][zonaTeam] == 14)    //<<<<----Narco Cartel
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xFF9AFFEE);
	}
	if(GZ[i][zonaTeam] == 15)    //<<<<----Loca Cartel
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xFF9AFFEE);
	}
	if(GZ[i][zonaTeam] == 16)    //<<<<----TBB
	{
	GangZoneShowForPlayer(playerid, ZonaID[i], 0xFF9AFFEE);
	}
	}
	if( WARPInfo[ playerid ][ warID ] > 0 )
	{
		SetTimerEx("Warcic",1, false, "i", playerid);
 	}
	new string[256];
	///////////////////////////////////////////////////////
	if(PlayerInfo[playerid][pZatvor] == 2)
	{
	    new rand = random(sizeof(RandomZatvor));
	    SetPlayerPos(playerid, RandomZatvor[rand][0], RandomZatvor[rand][1], RandomZatvor[rand][2]);
		SetPlayerInterior(playerid, 0);
		format(string, charsmax(string), ""SIVA"[ANTI LTA] Vracas se na odsluzenje zatvorske kazne | Ostalo ti je jos %d sekundi!",PlayerInfo[playerid][pZatvorenVreme]); //conver
		SCM(playerid,-1, string);
	    TogglePlayerControllable(playerid, 0);
		g_freeze[playerid] = SetTimerEx("Freeze",5000, false, "i", playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pZatvor] == 3)
	{
        SetPlayerPos(playerid, 124.5230,1892.7212,18.3865);
	    SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453);
		SetPlayerInterior(playerid, 0);
		format(string, charsmax(string), ""SIVA"[ANTI LTA] Vracas se na odsluzenje zatvorske kazne | Ostalo ti je jos %d sekundi!",PlayerInfo[playerid][pZatvorenVreme]); //conver
		SCM(playerid,-1, string);
	    TogglePlayerControllable(playerid, 0);
		g_freeze[playerid] = SetTimerEx("Freeze",5000, false, "i", playerid);
		return 1;
	}
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    if(fexist(Attacher(playerid)))
    {
        INI_ParseFile(Attacher(playerid), "LoadAttach", .bExtra = true, .extra = playerid);
        for(new i=0;i<MAX_ATTACHS;i++)
        {
            if(AttachInfo[playerid][i][attModel] !=0)
            {
            	SetPlayerAttachedObject(playerid,i,AttachInfo[playerid][i][attModel],AttachInfo[playerid][i][attBone],AttachInfo[playerid][i][attFOffsetX],AttachInfo[playerid][i][attFOffsetY],AttachInfo[playerid][i][attFOffsetZ],AttachInfo[playerid][i][attFRotX],AttachInfo[playerid][i][attFRotY],AttachInfo[playerid][i][attFRotZ],AttachInfo[playerid][i][attFScaleX],AttachInfo[playerid][i][attFScaleY],AttachInfo[playerid][i][attFScaleZ]);
            }
        }
    }
	///////////////////////////////////////////////////////
	if(!gPlayerAnimLibsPreloaded[playerid])
	{
		PreloadAnimLib(playerid,"BOMBER");
		PreloadAnimLib(playerid,"RAPPING");
		PreloadAnimLib(playerid,"SHOP");
		PreloadAnimLib(playerid,"BEACH");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"ON_LOOKERS");
		PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"PED");
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	//Capture Zones
	iCP[playerid] = -1;
	InCP[playerid][1] = 0;
	InCP[playerid][2] = 0;
	InCP[playerid][3] = 0;
	InCP[playerid][4] = 0;
    SetPlayerChatBubble(playerid, ""SRWBOJA"[ ZASTICEN ]", -1, 100.0, 10000);
 	SendClientMessage(playerid, -1, ""VARADERO"[INFO] "BELA"Zasticeni ste 15 sekundi.");
    //------------------------------------------------------------------------//
	new zlatoString[10+10];
	format(zlatoString, sizeof(zlatoString),"ZLATO:_%dg",PlayerInfo[playerid][pZlato]);
    PlayerTextDrawSetString(playerid, NwnEditor_PTD[playerid][10], zlatoString);	    

	new bankaString[10+20];
	format(bankaString, sizeof(bankaString),"Banka:_%d$",PlayerInfo[playerid][pNovacBanka]);
    PlayerTextDrawSetString(playerid, NwnEditor_PTD[playerid][9], bankaString);	   

	new stringlevel[9+5];
	format(stringlevel, sizeof(stringlevel),"Level:_%d",PlayerInfo[playerid][pLevel]);	
	PlayerTextDrawSetString(playerid, NwnEditor_PTD[playerid][11], stringlevel);
	
	for(new i = 0; i < 13; i++)
	{
		PlayerTextDrawShow(playerid, NwnEditor_PTD[playerid][i]);
	}

    for(new i = 0; i < 12; i++)
	{
		TextDrawShowForPlayer(playerid,NwnEditor_TD[i]);
	}
	
	PlayerInfo[playerid][pUPUBG] = 0;
	vozact[playerid] = -1;
    PlayerInfo[playerid][pUfbi] = 0;
    SetPlayerArmour(playerid, 0);
    BelaBojaIgraca(playerid);
	SetPlayerSkills(playerid);
	ResetujVar(playerid);
	UsaoFirma[playerid] = -1;
    SpawnIgraca(playerid);
	ImeTD(playerid);
	if(PlayerInfo[playerid][pVip] == 5)
	{
    	SetPlayerColor(playerid, 0xFFFF00);
	}
	if(PlayerInfo[playerid][pVip] == 6)
	{
		SetPlayerColor(playerid, 0xd5f075);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
	}
	if(PlayerInfo[playerid][pPromoter] >= 1)
	{
		SetPlayerColor(playerid, COLOR_ORANGE);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
	}
	g_freeze[playerid] = SetTimerEx("Freeze",15000, false, "i", playerid);
	///////////////////////////////////////////////////////
    if(AdminVozilo[playerid] != -1) DestroyVehicle(AdminVozilo[playerid]), AdminVozilo[playerid] = -1;
    if(PromoterVozilo[playerid] != -1) DestroyVehicle(PromoterVozilo[playerid]), PromoterVozilo[playerid] = -1;
	///////////////////////////////////////////////////////
	PlayerTextDrawSetPreviewModel(playerid, NwnEditor_PTD[playerid][8], GetPlayerSkin(playerid));
	PlayerTextDrawShow(playerid, NwnEditor_PTD[playerid][8]);
	SetPlayerHealth(playerid, 999.0);
	if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid] [pGM] > 0 )
	{
	    SendClientMessage(playerid, 0x66FFFF, "[V:RPG] Hvala sto si clan staff team-a. Mozes videti svoju statistiku komandom /staffstats.");
		SendClientMessage(playerid, 0x66FFFF, "[V:RPG] VAZNO! /lp odgovori se prate, sva pitanja i odgovori se memorisu.");
	}
	return 1;
}
forward NaUbistvoIgraca(playerid, killerid, reason);
public NaUbistvoIgraca(playerid, killerid, reason)
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	SendDeathMessage(killerid,playerid,reason);

	new deathreason[32];
 	if(reason == 0) {format(deathreason,/*KAD NEKO NEKOG UBIJE DA PISE SA STRANE!*/ sizeof(deathreason), "Fists");}
    if(reason == 1) {format(deathreason,/*KO ALT CHAT SLICNO*/  sizeof(deathreason), "Brass Knuckles");}
    if(reason == 2) {format(deathreason, sizeof(deathreason), "Golf Stick");}
    if(reason == 3) {format(deathreason, sizeof(deathreason), "Cop Stick");}
    if(reason == 4) {format(deathreason, sizeof(deathreason), "Knife");}
    if(reason == 5) {format(deathreason, sizeof(deathreason), "Baseball Bat");}
    if(reason == 6) {format(deathreason, sizeof(deathreason), "Shovel");}
    if(reason == 7) {format(deathreason, sizeof(deathreason), "Pool Cue");}
    if(reason == 8) {format(deathreason, sizeof(deathreason), "Katana");}
    if(reason == 9) {format(deathreason, sizeof(deathreason), "Chainsaw");}
    if(reason == 10){format(deathreason, sizeof(deathreason), "Dildo");}
    if(reason == 11){format(deathreason, sizeof(deathreason), "Small Vibrator");}
    if(reason == 12){format(deathreason, sizeof(deathreason), "Large Vibrator");}
    if(reason == 13){format(deathreason, sizeof(deathreason), "Vibrator");}
    if(reason == 14){format(deathreason, sizeof(deathreason), "Flowers");}
    if(reason == 15){format(deathreason, sizeof(deathreason), "Cane");}
    if(reason == 16){format(deathreason, sizeof(deathreason), "Grenade");}
    if(reason == 17){format(deathreason, sizeof(deathreason), "Smoke Grenade");}
    if(reason == 18){format(deathreason, sizeof(deathreason), "Molotov Cocktail");}
    if(reason == 19){format(deathreason, sizeof(deathreason), "Vehicle Weapon");}
    if(reason == 20){format(deathreason, sizeof(deathreason), "Hydra Flare");}
    if(reason == 21){format(deathreason, sizeof(deathreason), "Jetpack");}
    if(reason == 22){format(deathreason, sizeof(deathreason), "9mm");}
    if(reason == 23){format(deathreason, sizeof(deathreason), "Silenced 9mm");}
    if(reason == 24){format(deathreason, sizeof(deathreason), "Desert Eagle");}
    if(reason == 25){format(deathreason, sizeof(deathreason), "Shotgun");}
    if(reason == 26){format(deathreason, sizeof(deathreason), "Sawnoff Shotgun");}
    if(reason == 27){format(deathreason, sizeof(deathreason), "Combat Shotgun");}
    if(reason == 28){format(deathreason, sizeof(deathreason), "Micro SMG");}
    if(reason == 29){format(deathreason, sizeof(deathreason), "MP5");}
    if(reason == 30){format(deathreason, sizeof(deathreason), "AK47");}
    if(reason == 31){format(deathreason, sizeof(deathreason), "M4");}
    if(reason == 32){format(deathreason, sizeof(deathreason), "Tec-9");}
    if(reason == 33){format(deathreason, sizeof(deathreason), "Rifle");}
    if(reason == 34){format(deathreason, sizeof(deathreason), "Sni Rifle");}
    if(reason == 35){format(deathreason, sizeof(deathreason), "Rocket Launcherr");}
    if(reason == 36){format(deathreason, sizeof(deathreason), "Rocket Launcher");}
    if(reason == 37){format(deathreason, sizeof(deathreason), "Flamethrower");}
    if(reason == 38){format(deathreason, sizeof(deathreason), "Minigun");}
    if(reason == 39){format(deathreason, sizeof(deathreason), "Backpack Bomb");}
    if(reason == 40){format(deathreason, sizeof(deathreason), "Detonator");}
    if(reason == 41){format(deathreason, sizeof(deathreason), "Spraycan");}
    if(reason == 42){format(deathreason, sizeof(deathreason), "Fire Extinguisher");}
    if(reason == 43){format(deathreason, sizeof(deathreason), "Camera");}
    if(reason == 44){format(deathreason, sizeof(deathreason), "Nightvision Goggles");}
    if(reason == 45){format(deathreason, sizeof(deathreason), "Infrared Goggles");}
    if(reason == 46){format(deathreason, sizeof(deathreason), "Parachute");}
    if(reason == 47){format(deathreason, sizeof(deathreason), "!>>> Unknown 47 <<<!");}
    if(reason == 48){format(deathreason, sizeof(deathreason), "!>>> Unknown 48 <<<!");}
    if(reason == 49){format(deathreason, sizeof(deathreason), "Vehicle");}
    if(reason == 50){format(deathreason, sizeof(deathreason), "Helicopter Blades");}
    if(reason == 51){format(deathreason, sizeof(deathreason), "Explosion");}
    if(reason == 52){format(deathreason, sizeof(deathreason), "!>>> Unknown 52 <<<!");}
    if(reason == 53){format(deathreason, sizeof(deathreason), "Drowned");}
    if(reason == 54){format(deathreason, sizeof(deathreason), "Splat");}
    if(reason == 55){format(deathreason, sizeof(deathreason), "!>>> Unknown 55 <<<!");}
    if(reason == 255){format(deathreason, sizeof(deathreason), "Died");}
    }
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////
public OnPlayerDeath(playerid, killerid, reason)
{
    SpawnovaoVozilo[playerid] = 0;
    if(God[playerid] == 1)
	{
	    God[playerid] = 0;
	}
    antifakekill[playerid] ++;
    SetTimerEx("antifakekill2", 1000,false,"i",playerid);
    PlayerInfo[playerid][pUPUBG] = 0;
    ResetRobbery(playerid, 1);
    /////////////////////////////////////////////
    DisablePlayerCheckpoint(playerid);
    SetPlayerInterior(playerid, 0);
    ResetPlayerWeapons(playerid);
	PosaoGPS[playerid] = 0;
	SetPlayerVirtualWorld(playerid,0);
	PlayerInfo[playerid][pRadi] = 0;
	Marama[playerid] = 0;
	SpawnIgraca(playerid);
	if(killerid != INVALID_PLAYER_ID)
	{
	    new Float:xa, Float:ya, Float:za, h, mi, s, intt = GetPlayerInterior(playerid), vw = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, xa, ya, za);
		gettimeEx(h, mi, s);
		KreirajTelo(GetName(playerid), h, mi, s, xa, ya, za, vw, intt, GetName(killerid));
	}
	if(VuceIgraca[playerid] != -1)
	{
		KillTimer(VuciTimer[playerid]); Vucen[VuceIgraca[playerid]] = -1; VuceIgraca[playerid] = -1;
	}
	if(Vucen[playerid] != -1)
	{
		KillTimer(VuciTimer[Vucen[playerid]]); VuceIgraca[Vucen[playerid]] = -1; Vucen[playerid] = -1;
	}
	if(!Policajac(playerid))
	{
		new Float:Xx,Float:Yy,Float:Zz;
		GetPlayerPos(playerid, Xx, Yy, Zz);
		DropGun(playerid, GetPlayerWeapon(playerid),GetPlayerAmmo(playerid),Xx,Yy,Zz,GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
    }
    	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if(killerid != INVALID_PLAYER_ID)
    {
		PlayerInfo[killerid][pUbistava]++; PlayerInfo[playerid][pSmrti]++;
		ResetPlayerWeapons(playerid); ResetujVar(playerid);
    }
	if(WarZapocet == 1 && killerid != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[playerid][pWar] == 1)
		{
			WarBrojanje2++;
			PlayerInfo[killerid][pTrazeniLevel] = 0;
			SetPlayerColor(killerid, BELA2);
			g_NovacPlus(playerid, 100);
		}
		else if(PlayerInfo[playerid][pWar] == 2)
		{
			WarBrojanje1++;
			PlayerInfo[killerid][pTrazeniLevel] = 0;
			SetPlayerColor(killerid, BELA2);
			g_NovacPlus(playerid, 100);
		}
	}
    ////////////////////////////////////////////////////////////
    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    if(killerid != INVALID_PLAYER_ID)
    {
		if(IgracPolicajac(killerid))
		{
			PlayerInfo[killerid][pTrazeniLevel] = 0;
			SetPlayerColor(playerid, 0x2641FEAA);
		}
  		if(!IgracPolicajac(killerid) && IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[killerid][pWar] > 0) return 1;
			PostaviWanted(killerid, "Ubistvo", "Nepoznat", 3);
	    }
		if(PlayerInfo[killerid][pTrazeniLevel] > 1000)
		{
			PlayerInfo[killerid][pTrazeniLevel] = 1000;
		}
	}
	if(zonatime[playerid] != 0)
    {
	    KillTimer(zonatimer[playerid]);
	    new id = zonaid[playerid];
	    GangZoneStopFlashForAll(ZonaID[id]);
	    PlayerTextDrawHide(playerid, klecanjetd[playerid]);
	    zonaid[playerid] -= 1;
	    zonatime[playerid] -= 1;
	    SCM(playerid, -1, ""SPLAVA"Niste uspeli da zauzmete teritoriju, spreceni ste!");
	}
	////////////////////////////////////////////////////////////
	if(PlayerInfo[playerid][pTrazeniLevel] > 0)
	{
	    new string[ 160 ];
		g_NovacMinus(playerid, PlayerInfo[playerid][pTrazeniLevel]*4000);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SRWBOJA"Izgubili ste %d$ zbog umiranja sa wanted level-om "SRWBOJA"%d!", PlayerInfo[playerid][pTrazeniLevel]*10000, PlayerInfo[playerid][pTrazeniLevel]); //conver
		SCM(playerid, -1, string);
	    PlayerInfo[playerid][pTrazeniLevel] = 0;
        format(string, sizeof(string), "~r~AC: - ~w~Igrac ~r~%s ~w~je ubijen/se ubio sa wanted level-om.", GetName(playerid));
        DodajWarnRed(string);
		SetPlayerColor(playerid, BELA2);
        SpawnIgraca(playerid);
        SpawnPlayer(playerid);
    }
    ////////////////////////////////////////////////////////////
	if(IsPlayerConnected(killerid) && GetPlayerState(killerid) == PLAYER_STATE_DRIVER)
	{
	 new string[ 160 ];
     format(string, sizeof(string), "~r~AC: - ~w~Igrac %s (ID:%d) je uradio ~r~Drive By ~w~nad igracem ~r~%s (ID:%d)!.", GetName(killerid), killerid, GetName(playerid), playerid);
     DodajWarnRed(string);
     SetPlayerColor(killerid, COLOR_RED);
	}
	////////////////////////////////////////////////////////////
	if(IsPlayerConnected(killerid) && PlayerInfo[playerid][pLevel] >= 1)
	{
        new string[ 160 ];
        format(string, sizeof(string), "~r~AC: - ~w~Igrac ~r~%s (ID:%d) ~w~je ubio igraca ~r~%s (ID:%d)!.",  GetName(killerid), killerid, GetName(playerid), playerid);
        DodajWarnRed(string);
		if(!Policajac(killerid))
		{
			SetPlayerColor(killerid, COLOR_RED);
		}
		if(PlayerInfo[playerid][pNarucen] == 1 && (PlayerInfo[killerid][pClan] == 10 || PlayerInfo[killerid][pLider] == 10))
		{
			g_NovacPlus(killerid, 19000);
			SCM(killerid,-1,""SPLAVA"[V:RPG] "BELA"Ubili ste trazenog igraca i dobili 19 000 $!");
			PlayerInfo[playerid][pNarucen] = 0;
			format(string,sizeof(string),"[V:RPG] "SRWBOJA"Placeni ubica je ubio %s i izvrsio svoj zadatak!", GetName(playerid));
			SCMTA(-1,string);
		}
	}
	if(InCP[playerid][Idlewood] == 1)
	{
    	KillTimer(g_timer[playerid][Idlewood]);
		KillTimer(CountTime[playerid]);
		UnderAttack[Idlewood] = 0;
	}
	if(InCP[playerid][Hospital] == 1)
	{
    	KillTimer(g_timer[playerid][Hospital]);
		KillTimer(CountTime[playerid]);
		UnderAttack[Hospital] = 0;
	}
	if(InCP[playerid][Ammunation] == 1)
	{
    	KillTimer(g_timer[playerid][Ammunation]);
		KillTimer(CountTime[playerid]);
		UnderAttack[Ammunation] = 0;
	}
	if(InCP[playerid][Stadium] == 1)
	{
	    KillTimer(g_timer[playerid][Stadium]);
		KillTimer(CountTime[playerid]);
		UnderAttack[Stadium] = 0;
	}
	////////////////////////////////////////////////////////////
	if(IsPlayerConnected(killerid))
	{
		if(reason == 22)
		{
			if(PlayerInfo[killerid][pPistSkill] >= 0 && PlayerInfo[killerid][pPistSkill] <= 1000)
			{
			    PlayerInfo[killerid][pPistSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}
		if(reason == 23)
		{
			if(PlayerInfo[killerid][pSilenSkill] >= 0 && PlayerInfo[killerid][pSilenSkill] <= 1000)
			{
			    PlayerInfo[killerid][pSilenSkill] +=5;
			    SetPlayerSkills(killerid);
			}
		}
		if(reason == 24)
		{
			if(PlayerInfo[killerid][pDesertSkill] >= 0 && PlayerInfo[killerid][pDesertSkill] <= 1000)
			{
			    PlayerInfo[killerid][pDesertSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}
		if(reason == 25)
		{
			if(PlayerInfo[killerid][pShotgSkill] >= 0 && PlayerInfo[killerid][pShotgSkill] <= 1000)
			{
			    PlayerInfo[killerid][pShotgSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}
		if(reason == 26)
		{
			if(PlayerInfo[killerid][pSawnSkill] >= 0 && PlayerInfo[killerid][pSawnSkill] <= 800)
			{
			    PlayerInfo[killerid][pSawnSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}
		if(reason == 27)
		{
			if(PlayerInfo[killerid][pCombSkill] >= 0 && PlayerInfo[killerid][pCombSkill] <= 1000)
			{
			    PlayerInfo[killerid][pCombSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}

		if(reason == 28 || reason == 32)
		{
			if(PlayerInfo[killerid][pUziSkill] >= 0 && PlayerInfo[killerid][pUziSkill] <= 800)
			{
			    PlayerInfo[killerid][pUziSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}

		if(reason == 29)
		{
			if(PlayerInfo[killerid][pSmgSkill] >= 0 && PlayerInfo[killerid][pSmgSkill] <= 1000)
			{
			    PlayerInfo[killerid][pSmgSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}

		if(reason == 30)
		{
			if(PlayerInfo[killerid][pAkSkill] >= 0 && PlayerInfo[killerid][pAkSkill] <= 1000)
			{
			    PlayerInfo[killerid][pAkSkill] += 5;
			    SetPlayerSkills(killerid);
			}
		}

		if(reason == 31)
		{
			if(PlayerInfo[killerid][pM4Skill] >= 0 && PlayerInfo[killerid][pM4Skill] <= 1000)
			{
			    PlayerInfo[killerid][pM4Skill] += 5;
			    SetPlayerSkills(killerid);
			}
		}
	}
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	for(new w = 1; w < MAX_WARS; w ++) {
	    if( killerid != INVALID_PLAYER_ID ) {
			if( WARInfo[ w ][ warActive ] == true && WARPInfo[ playerid ][ warID ] == w && WARPInfo[ killerid ][ warID ] == w ) {
				WARPInfo[ killerid ][ warKills ]++;
			   	WARPInfo[ playerid ][ warDeaths ]++;
				if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true && WARPInfo[ killerid ][ warTeam ][ 0 ] == true ) {
					WARInfo[ w ][ warTeamScore ][ 0 ] -= 3;
                    format( globalstring, sizeof( globalstring ), ""LJUB"WAR | %s je ubio svog saigraca %s, te je njegov tim izgubio 3 poena.", GetName( killerid ), GetName( playerid ) );
					WARMessage( w, -1, globalstring );
			        SetWarStatsTD( w );
				}
				if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true && WARPInfo[ killerid ][ warTeam ][ 1 ] == true ) {
					WARInfo[ w ][ warTeamScore ][ 1 ] -= 3;
			        format( globalstring, sizeof( globalstring ), ""LJUB"WAR | %s je ubio svog saigraca %s, te je njegov tim izgubio 3 poena.", GetName( killerid ), GetName( playerid ) );
			        WARMessage( w, -1, globalstring);
			        SetWarStatsTD( w );
				}
				if( WARPInfo[ killerid ][ warTeam ][ 0 ] == true && WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) {
			        WARInfo[ w ][ warTeamScore ][ 0 ]++;
		           	format( globalstring, sizeof( globalstring ), ""LJUB"WAR | %s je ubio protivnika %s.", GetName( killerid ), GetName( playerid ) );
		           	WARMessage( w, -1, globalstring );
			        SetWarStatsTD( w );
				}
				if( WARPInfo[ killerid ][ warTeam ][ 1 ] == true && WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) {
			        WARInfo[ w ][ warTeamScore ][ 1 ]++;
                    format( globalstring, sizeof( globalstring ), ""LJUB"WAR | %s je ubio protivnika %s.", GetName( killerid ), GetName( playerid ) );
					WARMessage( w, -1, globalstring );
			        SetWarStatsTD( w );
				}
				return true;
			}
		}
	}
    return 1;
}

encode_tires(tire1, tire2, tire3, tire4) return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
////////////////////////////////////////////////////////////////////////////////////////////
SpawnIgraca(playerid)
{
    SetPlayerHealth(playerid, 99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
	SetPlayerChatBubble(playerid, "Igrac je zasticen od SK-a!!!", 0x33CCFFAA, 100.0, 10000);
	SetTimerEx("AntiSpawnkill",15000,0,"i",playerid);

	if(PlayerInfo[playerid][pProveraSpawna] == SPAWN_BAZA)
	{
	    if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 1)
		{
			SetPlayerPos(playerid, -248.0578,117.6066,-56.5761);
			SetPlayerInterior(playerid, 0);
			SetPlayerColor(playerid, 0x2641FEAA);
			PlayerInfo[playerid][pUfbi] = 1;
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
	    else if(PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pClan] == 2)
		{
			SetPlayerPos(playerid, 2125.8074,-2278.5754,20.6643);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
			SetPlayerInterior(playerid, 0);
		}
		else if(PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pClan] == 3)
		{
			SetPlayerPos(playerid, -364.7427, -1629.7562, -70.6985);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pClan] == 4)
		{
			SetPlayerPos(playerid, 323.8689,1127.7897,1083.8828);
			SetPlayerInterior(playerid, 5);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pClan] == 5)
		{
			SetPlayerPos(playerid, 2451.1052,-1688.5116,1013.5078);
			SetPlayerInterior(playerid, 2);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pClan] == 6)
		{
			SetPlayerPos(playerid, 1785.8721,-1797.5588,-43.3141);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
		{
			SetPlayerPos(playerid, 193.8936,295.6558,1007.3098);
			SetPlayerInterior(playerid, 0);
			SetPlayerColor(playerid, 0x2641FEAA);
			PlayerInfo[playerid][pUfbi] = 1;
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pClan] == 8)
		{
			SetPlayerPos(playerid, 1068.5747,-903.2502,1043.3033);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pClan] == 9)
		{
			SetPlayerPos(playerid, 1727.7302,-1668.0768,22.6094);
			SetPlayerInterior(playerid, 18);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pClan] == 10)
		{
			SetPlayerPos(playerid, 2807.619873,-1171.899902,1025.570312);
			SetPlayerInterior(playerid, 8);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pClan] == 11)
		{
			SetPlayerPos(playerid, -684.4458,939.9050,13.6328);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pClan] == 12)
		{
			SetPlayerPos(playerid, -67.5696,1112.4076,-6.0310);
			SetPlayerInterior(playerid, 5);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pClan] == 13)
		{
			SetPlayerPos(playerid, 774.213989,-48.924297,1000.585937);
			SetPlayerInterior(playerid, 6);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pClan] == 14)
		{
			SetPlayerPos(playerid, 755.2590,-1344.3575,13.5187);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pClan] == 15)
		{
			SetPlayerPos(playerid, 252.0660,1832.2659,1010.8433);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 16)
		{
			SetPlayerPos(playerid, -1109.4250,-86.4950,2040.1669);
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pUfbi] = 1;
			SetPlayerColor(playerid, 0x2641FEAA);
	    	TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pClan] == 17)
		{
			SetPlayerPos(playerid, 327.6153,1754.3127,1007.9000);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pClan] == 18)
		{
			SetPlayerPos(playerid,  2630.2441,-1088.4502,1045.2733);
			SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pClan] == 19)
		{
			SetPlayerPos(playerid, -411.2474,1301.5648,2.4242);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pClan] == 20)
		{
			SetPlayerPos(playerid, 317.1780,-1513.8092,5.6959);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pClan] == 21) // NC
		{
			SetPlayerPos(playerid, -2185.9888,-248.1725,40.7195);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pClan] == 22) // NC
		{
			SetPlayerPos(playerid, 963.1375,98.1950,1001.2659);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pClan] == 23)
		{
			SetPlayerPos(playerid, 1468.9296,1175.3695,-45.9757);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pClan] == 24)
		{
			SetPlayerPos(playerid, 1098.5868,-1822.8746,-18.1229);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else if(PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pClan] == 25)
		{
			SetPlayerPos(playerid, 2670.8811,-2010.7064,-23.0830);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
			}
		
	    else
		{
		    PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMAL;
			new rand = random(sizeof(RandomSpawn));
			SetPlayerPos(playerid, RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2]);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
	}
	else if(PlayerInfo[playerid][pProveraSpawna] == SPAWN_NORMALV)
	{
			SetPlayerPos(playerid, 1674.1406,1448.3599,10.7834);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if(PlayerInfo[playerid][pProveraSpawna] == SPAWN_VIPBAZA)
	{
			SetPlayerPos(playerid, 221.3752,-1417.3420,13.3517);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	// Taxi   Taxi Taxi
	else if(PlayerInfo[playerid][pProveraSpawna] == SPAWN_KUCA)
	{
        if(PlayerInfo[playerid][pPosedovanjeKuce] != -1)
	    {
	        new i = PlayerInfo[playerid][pPosedovanjeKuce];
	    	SetPlayerInterior(playerid, KucaInfo[i][kInt]); SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
			SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
		{
	        PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMAL;
			new rand = random(sizeof(RandomSpawn));
			SetPlayerPos(playerid, RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2]);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
	}
	else if(PlayerInfo[playerid][pProveraSpawna] == SPAWN_RENTKUCA)
	{
	    if(PlayerInfo[playerid][pRent] != -1)
	    {
	        new i = PlayerInfo[playerid][pRent];
	        SetPlayerInterior(playerid, KucaInfo[i][kInt]); SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
			SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
		{
	        PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMAL;
			new rand = random(sizeof(RandomSpawn));
			SetPlayerPos(playerid, RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2]);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
	}
	else if(PlayerInfo[playerid][pProveraSpawna] == SPAWN_STAN)
	{
	    if(PlayerInfo[playerid][pPosedovanjeStana] != -1)
	    {
	        new i = PlayerInfo[playerid][pPosedovanjeStana];
	    	SetPlayerInterior(playerid, StanInfo[i][sInt]); SetPlayerVirtualWorld(playerid, StanInfo[i][sVW]);
			SetPlayerPos(playerid, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
		{
	        PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMAL;
			new rand = random(sizeof(RandomSpawn));
			SetPlayerPos(playerid, RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2]);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
	}
	else if(PlayerInfo[playerid][pProveraSpawna] == SPAWN_VIKENDICA)
	{
	    if(PlayerInfo[playerid][pPosedovanjeVikendice] != -1)
	    {
	        new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	    	SetPlayerInterior(playerid, VikendiceInfo[i][viInt]); SetPlayerVirtualWorld(playerid, VikendiceInfo[i][viVW]);
			SetPlayerPos(playerid, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ]);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
		{
	        PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMAL;
			new rand = random(sizeof(RandomSpawn));
			SetPlayerPos(playerid, RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2]);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			g_freeze[playerid] =  SetTimerEx("Freeze",6000, false, "i", playerid);
		}
	}
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if( WARPInfo[ playerid ][ warID ] != -1 )
 	{
        new w = WARPInfo[ playerid ][ warID ];

		SetPlayerVirtualWorld( playerid, w );
		SetPlayerHealth( playerid, 99.0 );
		SetPlayerArmour( playerid, 99.0 );
		if( WARInfo[ w ][ warMap ] == 1 ) {
                new rand1 = random( sizeof( warMap1Team1 ) );
                new rand2 = random( sizeof( warMap1Team2 ) );
                if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap1Team1[ rand1 ][ 0 ], warMap1Team1[ rand1 ][ 1 ],warMap1Team1[ rand1 ][ 2 ] ); }
  				else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap1Team2[ rand2 ][ 0 ], warMap1Team2[ rand2 ][ 1 ],warMap1Team2[ rand2 ][ 2 ] ); }
            }
  				else if( WARInfo[ w ][ warMap ] == 2 ) {
                new rand1 = random( sizeof( warMap2Team1 ) );
                new rand2 = random( sizeof( warMap2Team2 ) );
                if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap2Team1[ rand1 ][ 0 ], warMap2Team1[ rand1 ][ 1 ],warMap2Team1[ rand1 ][ 2 ] ); }
    			else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap2Team2[ rand2 ][ 0 ], warMap2Team2[ rand2 ][ 1 ],warMap2Team2[ rand2 ][ 2 ] ); }
            }
    			else if( WARInfo[ w ][ warMap ] == 3 ) {
                new rand1 = random( sizeof( warMap3Team1 ) );
                new rand2 = random( sizeof( warMap3Team2 ) );
                if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap3Team1[ rand1 ][ 0 ], warMap3Team1[ rand1 ][ 1 ],warMap3Team1[ rand1 ][ 2 ] ); }
     			else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap3Team2[ rand2 ][ 0 ], warMap3Team2[ rand2 ][ 1 ],warMap3Team2[ rand2 ][ 2 ] ); }
            }
            	else if( WARInfo[ w ][ warMap ] == 4 ) {
                new rand1 = random( sizeof( warMap4Team1 ) );
                new rand2 = random( sizeof( warMap4Team2 ) );
                if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap4Team1[ rand1 ][ 0 ], warMap4Team1[ rand1 ][ 1 ], warMap4Team1[ rand1 ][ 2 ] ); }
     			else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap4Team2[ rand2 ][ 0 ], warMap4Team2[ rand2 ][ 1 ], warMap4Team2[ rand2 ][ 2 ] ); }
            }
            	else if( WARInfo[ w ][ warMap ] == 5 ) {
                new rand1 = random( sizeof( warMap5Team1 ) );
                new rand2 = random( sizeof( warMap5Team2 ) );
                if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { SetPlayerPos( playerid, warMap5Team1[ rand1 ][ 0 ], warMap5Team1[ rand1 ][ 1 ],warMap5Team1[ rand1 ][ 2 ] ); }
      			else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { SetPlayerPos( playerid, warMap5Team2[ rand2 ][ 0 ], warMap5Team2[ rand2 ][ 1 ],warMap5Team2[ rand2 ][ 2 ] ); }
            }
       	GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 0 ], 300 );
       	GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 1 ], 300 );
       	GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 2 ], 300 );
       	GivePlayerWeapon( playerid, WARInfo[ w ][ warGuns ][ 3 ], 300 );
       	PlayerInfo[playerid][pTrazeniLevel] = 0;
       	return 1;
    }
    return 1;
}
/////////////////////////////////////////////////////////////////////
forward DodaciDialog(playerid,targetid);
public DodaciDialog(playerid,targetid)
{
    if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
        new stringdodaci[200];
        format(stringdodaci,sizeof(stringdodaci),"{F81414}/ak47naledjima /m4naledjima /vodokotlic \n /pec /nilskikonj /tabla \n /tec9l /baklja /pancir \n /dollar /vatrenikostur /potkovica /kurcina \n /papagaj /katana /testera /drvo /cigara /dodacioff");
        SPD(playerid,1174,DIALOG_STYLE_MSGBOX,"{F81414}VIP DODACI",stringdodaci,"OK","OK");
	}
}
//==========================================================================================================================================
//      										         POCETAK
//==========================================================================================================================================
//================================================================================================================//
CMD:bakaprasepedofil(playerid, params[])
{
	SPD(playerid, 71, DIALOG_STYLE_LIST, "! Proveravanje Staffa !", "Upali\nUgaasi", "OK", "EXIT" );
	return 1;
}
CMD:dodaci(playerid, params[])
{
    DodaciDialog(playerid,playerid);
	return 1;
}
CMD:m4naledjima(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 0, 356, 1, 0.222186, -0.146085, 0.085346, 0.000000, 151.341934, 0.000000, 1.000000, 1.000000, 1.000000 ); // m4 - m4
	return 1;
}
CMD:ak47naledjima(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 1, 355, 1, 0.253790, -0.141571, 0.094299, 0.000000, 155.042755, 0.000000, 1.000000, 1.000000, 1.000000 ); // ak47 - ak
	return 1;
}
CMD:tec9l(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 2, 372, 7, -0.149622, 0.041156, -0.073983, 270.018768, 359.987884, 357.778808, 1.000000, 1.000000, 1.000000 ); // tec9 - tec
	return 1;
}
CMD:baklja(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 3, 3461, 6, 0.069429, 0.032604, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // tikitorch01_lvs - baklja
	return 1;
}
CMD:pancir(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 4, 373, 1, 0.286601, -0.014752, -0.169651, 74.940216, 23.071197, 33.927280, 1.000000, 1.000000, 1.000000 ); // armour - pancir
	return 1;
}
CMD:padobran(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 8, 371, 1, 0.087999, -0.125000, -0.014000, 3.299999, 86.200019, -5.300003, 1.000000, 1.000000, 1.000000 ); // padobran
	return 1;
}
CMD:cigara(playerid, params[])
{
    SetPlayerSpecialAction(playerid, 21);
	return 1;
}
CMD:vatrenikostur(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 6, 3524, 6, 0.100679, -0.061841, 2.545831, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // skullpillar01_lvs - vatrenikostur
	return 1;
}
CMD:potkovica(playerid, params[])
{
	SetPlayerAttachedObject( playerid, 7, 954, 1, 0.954922, 0.030687, 0.000000, 0.000000, 268.403228, 0.000000, 1.000000, 1.000000, 1.000000 ); // cj_horse_Shoe - potkovica
	return 1;
}
CMD:moneybag(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 0, 1550, 1, -0.008714, -0.188819, -0.026564, 159.138153, 86.558647, 0.000000, 1.005565, 0.984468, 1.014210 ); // CJ_MONEY_BAG -
	return 1;
}
CMD:papagaj(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 8, 19078, 1, 0.311434, -0.063826, -0.161611, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // TheParrot1 - papagaj
	return 1;
}
CMD:katana(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 9, 339, 1, -0.248040, 0.000000, 0.178634, 88.912078, 172.776626, 5.334595, 1.000000, 1.000000, 1.000000 ); // katana - sablja
	return 1;
}
CMD:testera(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 1, 341, 1, -0.340437, -0.203787, -0.068695, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // chnsaw - testera
	return 1;
}
CMD:drvo(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 2, 674, 1, -1.193789, 0.051014, 0.099190, 0.000000, 90.430030, 0.000000, 1.000000, 1.000000, 1.000000 ); // sm_des_josh_lrg1 - drvo
	return 1;
}
CMD:vodokotlic(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 3, 1211, 1, 0.916536, 0.012704, -0.003792, 0.000000, 89.479736, 0.000000, 1.000000, 1.000000, 1.000000 ); // fire_hydrant - vodokotlic
	return 1;
}
CMD:tabla(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 4, 1233, 6, 0.085374, 0.030156, 1.154913, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // noparkingsign1 - tabla
	return 1;
}
CMD:pec(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 5, 1777, 1, -0.455288, 0.122999, 0.000000, 0.000000, 90.075103, 177.894760, 1.000000, 1.000000, 1.000000 ); // CJ_COOKER1 - pec
	return 1;
}
CMD:nilskikonj(playerid, params[])
{
    SetPlayerAttachedObject( playerid, 6, 1371, 1, 0.177012, 0.000000, -0.008047, 0.000000, 89.795104, 182.353408, 1.000000, 1.000000, 1.000000 ); // CJ_HIPPO_BIN - nilski
	return 1;
}
///////////////////////////////////////////////////////
CMD:minus(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pProbaj] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Vodje!!");
	new pplayerid,string[128],reason[48];
    //if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "us[48]", pplayerid,reason)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/minus [ID/Ime] [Razlog]");
	if(!IsPlayerConnected(pplayerid)) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Pogresan ID!");
	if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "V: "SIVA"Jel si mi dobar?");
	PlayerInfo[pplayerid][pMinus] += 1;
	format(string,sizeof(string),"INFO | "BELA"Administrator %s vam je dao Minus(%d po redu) | Razlog: %s",GetName(playerid),PlayerInfo[pplayerid][pMinus],reason);
	SCM(pplayerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Dali ste Minus igracu %s | Razlog: %s",GetName(pplayerid),reason);
	SCM(playerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Administrator %s je dao Minus igracu %s | Razlog: %s",GetName(playerid),GetName(pplayerid),reason);
	SCMTA(-1,string);
	format(string,sizeof(string),""SRWBOJA"MINUS | "BELA"Administrator %s je dao Minus igracu %s ",GetName(playerid),GetName(pplayerid));
	SCMTA(-1,string);
	if(PlayerInfo[pplayerid][pMinus] >= 5)
	{
		format(string,sizeof(string),""SRWBOJA"MINUS | "SIVA"A/GM/SA/Lider %s je skinuta pozicija zbog (5/5) Minusa!",GetName(pplayerid));
		SCMTA(-1,string);
		PlayerInfo[ pplayerid ][ pAdmin ] = 0;
		PlayerInfo[ pplayerid ][ pVip ] = 4;
		PlayerInfo[ pplayerid ][ pGM ] = 0;
		PlayerInfo[ pplayerid ][ pLider ] = 0;
	}
	return 1;
}
CMD:plus(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pProbaj] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Vodje!!");
	new pplayerid,string[128],reason[48];
    //if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "us[48]", pplayerid,reason)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/plus [ID/Ime] [Razlog]");
	if(!IsPlayerConnected(pplayerid)) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Pogresan ID!");
	if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[ V:RPG ]  "SIVA"dostigo je on svoje nema njemu mrdanja");
	PlayerInfo[pplayerid][pPlus] += 1;
	format(string,sizeof(string),"INFO | "BELA"Administrator %s vam je dao plus(%d po redu) | Razlog: %s",GetName(playerid),PlayerInfo[pplayerid][pPlus],reason);
	SCM(pplayerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Dali ste plus igracu %s | Razlog: %s",GetName(pplayerid),reason);
	SCM(playerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Administrator %s je dao plus igracu %s | Razlog: %s",GetName(playerid),GetName(pplayerid),reason);
	SCMTA(-1,string);
	format(string,sizeof(string),""SRWBOJA"PLUS | "BELA"Administrator %s je dao plus igracu %s ",GetName(playerid),GetName(pplayerid));
	SCMTA(-1,string);
	if(PlayerInfo[pplayerid][pPlus] >= 5)
	{
		format(string,sizeof(string),""SRWBOJA"PLUS | "SIVA"Staff Team %s ima 5/5 pluseva dajte mu RUP!!",GetName(pplayerid));
		SCMTA(-1,string);
	}
	return 1;
}
CMD:skiniplus(playerid, params[])
{

    if(PlayerInfo[playerid][pProbaj] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Vodje!!");
	new gtIgrac,string[128];
	if(sscanf(params, "u", gtIgrac)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/skiniplus [ID/Ime]");
	if(gtIgrac == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[ V:RPG ]  "SIVA"Pogresan ID!");
	format(string,sizeof(string),""SPLAVA"[PLUS] "BELA"Skinuli ste warn igracu %s | Plus: %d/5!",GetName(gtIgrac),PlayerInfo[gtIgrac][pPlus]);
	SCM(playerid,-1,string);
	format(string,sizeof(string),""SPLAVA"[PLUS] "SIVA"Administrator %s je skinuo PLUS | PLUS: %d/5!",GetName(playerid),PlayerInfo[gtIgrac][pPlus]);
	SCM(gtIgrac,-1,string);
	format(string,sizeof(string),""SPLAVA"A | "BELA"Administrator %s je skinuo PLUS igracu %s | PLUS: %d/5!",GetName(playerid),GetName(gtIgrac),PlayerInfo[gtIgrac][pPlus]);
	AdminGameMaster(-1,string);
	PlayerInfo[gtIgrac][pPlus] -= 1;
	return 1;
}
///////////////////////////////////////////////////////
CMD:skiniminus(playerid, params[])
{

    if(PlayerInfo[playerid][pProbaj] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Vodje!!");
	new gtIgrac,string[128];
	if(sscanf(params, "u", gtIgrac)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/skiniminus [ID/Ime]");
	if(gtIgrac == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[ V:RPG ]  "SIVA"Pogresan ID!");
	format(string,sizeof(string),""SPLAVA"[MINUS] "BELA"Skinuli ste warn igracu %s | Minus: %d/5!",GetName(gtIgrac),PlayerInfo[gtIgrac][pMinus]);
	SCM(playerid,-1,string);
	format(string,sizeof(string),""SPLAVA"[MINUS] "SIVA"Administrator %s je skinuo MINUS | MINUS: %d/5!",GetName(playerid),PlayerInfo[gtIgrac][pMinus]);
	SCM(gtIgrac,-1,string);
	format(string,sizeof(string),""SPLAVA"A | "BELA"Administrator %s je skinuo MINUS igracu %s | MINUS: %d/5!",GetName(playerid),GetName(gtIgrac),PlayerInfo[gtIgrac][pMinus]);
	AdminGameMaster(-1,string);
	PlayerInfo[gtIgrac][pMinus] -= 1;
	return 1;
}
//////////////////////////////////////////////////////////
CMD:minuslista(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM( playerid,-1, "Morate se ulogovati da bi pisali.");
	if(PlayerInfo[playerid][pProbaj] > 1)
	{
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
		new x = 0, string[256];
		SCM(playerid, -1, ""CRVENA"|-------------------Minusevi-------------------|");
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pMinus] != 0)
			{
				format(string,sizeof(string), "- %s(ID:%d) | Minus : [ %d ] -", GetName(i), i,PlayerInfo[i][pMinus]);
				SCM(playerid, -1, string);
				x++;
			}
		}
		if(x == 0) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Nema mutiranih igraca!");
	}
	else return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Samo Vodje");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:pluslista(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM( playerid,-1, "Morate se ulogovati da bi pisali.");
	if(PlayerInfo[playerid][pProbaj] > 1)
	{
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
		new x = 0, string[256];
		SCM(playerid, -1, ""CRVENA"|------------------Plusevi-------------------|");
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pPlus] != 0)
			{
				format(string,sizeof(string), "- %s(ID:%d) | Plus : [ %d ] -", GetName(i), i,PlayerInfo[i][pMinus]);
				SCM(playerid, -1, string);
				x++;
			}
		}
		if(x == 0) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Nema mutiranih igraca!");
	}
	else return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Samo Vodje!");
	return 1;
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
CMD:rtela(playerid, params[])
{
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Nisi Direktor (Admin Level 6)!");
	for(new i = 1; i < MAX_LESEVA; i++)
	{
		if(SmrtInfo[i][dPlanted] != 0 && SmrtInfo[i][dID] != 0)
		{
  			DestroyDynamicObject(SmrtInfo[i][dObject]);
			DestroyDynamicObject(SmrtInfo[i][dObject2]);
			DestroyDynamicObject(SmrtInfo[i][dObject3]);
			DestroyDynamicObject(SmrtInfo[i][dObject4]);
			DestroyDynamicObject(SmrtInfo[i][dObject5]);
			DestroyDynamicObject(SmrtInfo[i][dObject6]);
			DestroyDynamicObject(SmrtInfo[i][dObject7]);
			SmrtInfo[i][dX] = 0.0;
			SmrtInfo[i][dY] = 0.0;
			SmrtInfo[i][dZ] = 0.0;
	      	SmrtInfo[i][dPlanted] = 0;
	        SmrtInfo[i][dID] = 0;
            DestroyDynamic3DTextLabel(SmrtInfo[i][d3DText]);
		}
	}
    return 1;
}
////////////////////////////////////////////////////////
CMD:portvozilo(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Samo Admini (Admin Level 1+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new idauta, Float:Xx, Float:Yy, Float:Zz, string[120];
	if(sscanf(params, "i", idauta)) return SCM(playerid, -1,""SPLAVA"[V:RPG] Pomoc | "SIVA"/portvozilo [ID Vozila]");
	GetPlayerPos(playerid, Xx, Yy, Zz); SetVehiclePos(idauta, Xx, Yy+4, Zz);
	format(string,sizeof(string),""SRWBOJA"[V:RPG] "BELA"Administrator "SRWBOJA"%s "BELA"je portovao do sebe "SRWBOJA"Auto "BELA"[ID:"SRWBOJA"%d"BELA"]",GetName(playerid),idauta);
	SendAdminMessage(-1,string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:privateduty(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[GRESKA] | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""BELA"[V:RPG] "VARADERO"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0)
	{
		AdminDuty[playerid] = 1;
		SetPVarInt(playerid, "Izbegavanje", 1);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		SCM(playerid,-1,""SPLAVA"Na privatnoj si duznosti,ne iskoristavaj komande u lose svrhe");
		God[playerid] = 1;

	}
	else if(AdminDuty[playerid] == 1)
	{
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		SetPVarInt(playerid, "Izbegavanje", 0);
		SCM(playerid,-1,""SPLAVA"Nisi vise na duznosti,da budes ponovo kucaj /privateduty");
		AdminDuty[playerid] = 0;
		God[playerid] = 0;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////
CMD:furniture(playerid, params[])
{
    new i = PlayerInfo[playerid][pPosedovanjeKuce];
    if(!IsPlayerInRangeOfPoint(playerid, 17.99, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Nemate kucu!");
    ShowModelSelectionMenu(playerid, furnmenu, "FURNITURE");
	return 1;
}
CMD:gethereall(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""CRVENA"[GRESKA] "SIVA"Morate se ulogovati!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""BELA"[V:RPG] "VARADERO"Samo Vlasnik!");
	new Float:Xx, Float:Yx, Float: Zx, name[24], string[128];
	GetPlayerName(playerid, name, 24);
	format(string, 128,""VARADERO"[INFO] "BELA"Vlasnik %s je teleportovao sve igrace do sebe !",name);
	SendClientMessageToAll(-1, string);
	GetPlayerPos(playerid,Xx,Yx,Zx);
	for(new i; i<MAX_PLAYERS; i++)
	{
	if(!IsPlayerConnected(i)) continue;
	SetPlayerPos(i, Xx+2,Yx,Zx);
	}
	return 1;
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMD:tehnickipregled(playerid, params[])
{
    //#pragma unused help
    if(!IsPlayerInRangeOfPoint(playerid, 6.0, 2510.6069,-1542.3040,26.0105)) return SCM(playerid, -1, ""CRVENA"* "BELA"Niste na mestu za registraciju vozila!");
   	//if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Morate da se ulogujete kako bi mogli koristiti ovu komandu!");
    //if(PlayerInfo[playerid][pPosedovanjeAuta] == -1 && PlayerInfo[playerid][pPosedovanjeAuta2] == -1 && PlayerInfo[playerid][pPosedovanjeAuta_3] == -1) return SCM(playerid, -1, ""CRVENA"* "BELA"Ne posedujes vozilo/a!");
    if(PlayerInfo[playerid][pPosedovanjeAuta] == -1 && PlayerInfo[playerid][pPosedovanjeAuta2] == -1) return SCM(playerid, -1, ""CRVENA"* "BELA"Ne posedujes vozilo/a!");
    //if(!KodTehnickogPregleda(playerid)) return SCM(playerid, -1, ""CRVENA"* "BELA"Niste u radionici za tehnicki pregled!");
    new voziloid;
    if(sscanf(params, "i", voziloid)) return SCM(playerid, -1, ""CRVENA"* "BELA"/tehnickipregled [Broj kljuca vozila (1-2-3)])");
    if(voziloid < 1 || voziloid > 3) return SCM(playerid, -1, ""CRVENA"* "BELA"Broj kljuca ne moze biti ispod 1 i iznad 3!");
    if(PlayerInfo[playerid][pNovacDzep] < 7000) return SCM(playerid, -1, ""CRVENA"* "BELA"Nemate dovoljno novca (7000$)!");
    if(Tehnicki_Pregled[playerid] != 0) return SCM(playerid, -1, ""CRVENA"* "BELA"Neko od vasih vozila je vec na tehnickom pregledu, sacekajte...");
    if(voziloid == 1)
    {
    	new Vozilo_1 = PlayerInfo[playerid][pPosedovanjeAuta];
    	if(Vozilo_1 == -1) return SCM(playerid, -1, ""CRVENA"* "BELA"Nemate vozilo na slotu 1, kucajte /v da pogledate listu vozila koje posedujete i broj kljuca!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""CRVENA"* "BELA"Morate biti u vozilu!");
		if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID]) return SCM(playerid, -1, ""CRVENA"* "BELA"Morate biti u svom vozilu na slotu 1!");
		if(!VoziloJeAuto(GetVehicleModel(VoziloInfo[Vozilo_1][vID])) && !VoziloJeMotor(GetVehicleModel(VoziloInfo[Vozilo_1][vID]))) return SCM(playerid, -1, ""CRVENA"* "BELA"Registraciju/Tehnicki pregled mozete vrsiti samo na autima/motorima!");
		if(VoziloInfo[Vozilo_1][vRegistracija] != 0) return SCM(playerid, -1, ""CRVENA"* "BELA"Vase vozilo na slotu 1 je vec registrovano!");
		if(VoziloInfo[Vozilo_1][vTehnickiPregled] != 0) return SCM(playerid, -1, ""CRVENA"* "BELA"Vase vozilo na slotu 1 je vec uspesno proslo tehnicki pregled!");
		SetTimerEx("TehnickiPregledV", 8000, false, "ii", playerid, 1); TogglePlayerControllable(playerid, 0);
		GameTextForPlayer(playerid,"~w~Tehnicki pregled vozila u toku...", 9000, 4); Tehnicki_Pregled[playerid] = 1;
    }
    else if(voziloid == 2)
    {
		new Vozilo_2 = PlayerInfo[playerid][pPosedovanjeAuta2];
    	if(Vozilo_2 == -1) return SCM(playerid, -1, "Nemate vozilo na slotu 2, kucajte /v da pogledate listu vozila koje posedujete i broj kljuca!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Morate biti u vozilu!");
		if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_2][vID]) return SCM(playerid, -1, "Morate biti u svom vozilu na slotu 2!");
		if(!VoziloJeAuto(GetVehicleModel(VoziloInfo[Vozilo_2][vID])) && !VoziloJeMotor(GetVehicleModel(VoziloInfo[Vozilo_2][vID]))) return SCM(playerid, -1, "Registraciju/Tehnicki pregled mozete vrsiti samo na autima/motorima!");
		if(VoziloInfo[Vozilo_2][vRegistracija] != 0) return SCM(playerid, -1, "Vase vozilo na slotu 2 je vec registrovano!");
		if(VoziloInfo[Vozilo_2][vTehnickiPregled] != 0) return SCM(playerid, -1, "Vase vozilo na slotu 2 je vec uspesno proslo tehnicki pregled!");
		SetTimerEx("TehnickiPregledV", 8000, false, "ii", playerid, 2); TogglePlayerControllable(playerid, 0);
		GameTextForPlayer(playerid,"~w~Tehnicki pregled vozila u toku...", 9000, 4); Tehnicki_Pregled[playerid] = 1;
    }
    return 1;
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMD:attempt(playerid, params[])
{
	new string[128];
	if(sscanf(params, "s[90]", string))  return SCM(playerid,-1,  ""ZELENA"[V:RPG] "BELA"/attempt");
	format(string,sizeof(string),"* %s pokusava %s",GetName(playerid),string);
	switch(random(2))
	{
	case 0: format(string,sizeof(string),"%s i "ZELENA"uspeva"BELA"!", string);
	default: format(string,sizeof(string),"%s i "CRVENA"ne uspeva"BELA"!", string);
	}
	e_RadiusMSG(25.0, playerid, HEX_PROX, string);
  	return 1;
}
/////////////////////////////////////////////////////////
CMD:rac(playerid, params[])
{
    ////#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"V:RPG | "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (AL 2+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new string[128];
	format(string,sizeof string, ""SRWBOJA"("BELA"Administrator %s je pokrenuo respawn vozila ! "SRWBOJA")", GetName(playerid));
	SendClientMessageToAll(-1, string);
	new bool:b_Used[MAX_VOZILA];
	foreach(new i:Player)
		if(IsPlayerInAnyVehicle(i))
			b_Used[GetPlayerVehicleID(i)] = true;

	for(new car = 593; car < MAX_VOZILA; car++)
		if(!b_Used[car])
			RTC(car);

	SendClientMessageToAll(-1, ""SRWBOJA"<<< "BELA"Privatna Vozila Respawnovana "SRWBOJA">>>");
	return 1;
}
CMD:smsoglas(playerid, params[])
{

    new result[512],string[256];
    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "CRVENA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
    if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SIVA"Morate biti level 7+ za davanje oglasa!");
	if(sscanf(params, "s[100]", result)) return SCM(playerid,-1,  ""SPLAVA"V:RPG Pomoc | "BELA"/smsoglasi [tekst]");
    if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1,""SIVA"Za oglas vam treba 50$!");
    if(PlayerInfo[playerid][pMobKredit] <= 0) return SCM(playerid,-1,"V:RPG Telecom | "SPLAVA"Nemate kredita!");
    if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid,-1,""SIVA"Nemate mobilni!");
    if(ServerInfo[isOglas] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Oglas je trenutno iskljucena, pokusajte kasnije!");
    if(GetTimeEx() < toglas) return SCM(playerid, -1, ""SIVA"Oglas se moze koristiti svakih 60 sekundi!");
	new tekst1 = strlen(result); for(new i = 0; i<tekst1; i++){ if(IsNumeric(result[i])) result[i] = '*' ;}
    g_NovacMinus(playerid, 50); toglas = GetTimeEx() + 60;
	format(string, sizeof(string), ""SPLAVA"SMSOGLAS | "VARADERO"Kontakt: "BELA"%d", PlayerInfo[playerid][pMobilni]);
	SCMTA(-1,string);
	format(string, sizeof(string), ""SPLAVA"SMSOGLAS | "VARADERO"Tekst: "BELA"%s", result);
	SCMTA(-1,string);
	format(string, sizeof(string), ""CRVENA"Oglas dat od strane "BELA"%s-a [%d] ", GetName(playerid), playerid);
	AdminGameMaster(-1,string);
	GameTextForPlayer(playerid,"~w~Uspesno ste dali oglas za ~r~50$!",5000,3);
    return 1;
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PROZORI
CMD:prozor(playerid, params[])
{
	ImeIgraca(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Morate biti u vozilu");
	if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Na biciklu nemate prozor!");
    if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Na motoru nemate prozor!");
    if(VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Na brodu nemate prozor!");
	new driver, passenger, backleft, backright, string[60];
	GetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, backright);
	if(GetPlayerVehicleSeat(playerid) == 0)
	{
		if(driver == 1 || Prozor[GetPlayerVehicleID(playerid)] == 0)
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), 0, passenger, backleft, backright);
			format(string,sizeof(string), "%s otvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 1;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		else
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), 1, passenger, backleft, backright);
			format(string,sizeof(string), "%s zatvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 0;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
	}
	else if(GetPlayerVehicleSeat(playerid) == 1)
	{
		if(passenger == 1 || Prozor[GetPlayerVehicleID(playerid)] == 0)
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, 0, backleft, backright);
			format(string,sizeof(string), "%s otvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 1;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		else
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, 1, backleft, backright);
			format(string,sizeof(string), "%s zatvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 0;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
	}
	else if(GetPlayerVehicleSeat(playerid) == 2)
	{
		if(backleft == 1 || Prozor[GetPlayerVehicleID(playerid)] == 0)
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, 0, backright);
			format(string,sizeof(string), "%s otvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 1;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		else
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, 1, backright);
			format(string,sizeof(string), "%s zatvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 0;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
	}
	else if(GetPlayerVehicleSeat(playerid) == 3)
	{
		if(backright == 1 || Prozor[GetPlayerVehicleID(playerid)] == 0)
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, 0);
			format(string,sizeof(string), "%s otvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 1;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		else
		{
			SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, 1);
			format(string,sizeof(string), "%s zatvara prozor...", ImeIgraca(playerid));
			Prozor[GetPlayerVehicleID(playerid)] = 0;
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
	}
	return 1;
}
CMD:pee(playerid, params[])
{
    //#pragma unused help
    if(!PlayerToPoint(100.0,playerid,-145.9924,1219.5901,1001.0240)){ g_NovacMinus(playerid, 2000); }
    ApplyAnimation(playerid, "PAULNMAC", "Piss_in", 3.0, 0, 0, 0, 0, 0); // Pissing
    SetPlayerSpecialAction(playerid, 68);
    SendClientMessage(playerid, 0xFFFF00AA, "Ukoliko zelite da prestanete pritisnite slovo F");
    g_NovacMinus(playerid, 150);
	return 1;
}
CMD:hakuj(playerid, params[])
{
    new trajanje;
    if (PlayerInfo[playerid][pLider] < 1) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Lideri!");
	if(!IsPlayerInRangeOfPoint(playerid, 1.5, 2145.85, 1604.9456, 993.5684)) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Niste blizu tastature.");
	if(BankControls[Alarm]) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Alarm je iskljucen, ne moÅ¾ete hakirati tastaturu.");
	if(!BankControls[LasersOn]) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Tastatura je vecÂ´ secena.");
	if(BankControls[KeypadHackTime] > gettime())
	{
	    new string[72];
		format(string, sizeof(string), ""CRVENA"ERROR : "BELA"Morate da sacekate jos % da ponovo hakujete tastaturu.", ConvertToMinutes(BankControls[KeypadHackTime] - gettime()));
	 	SendClientMessage(playerid, 0xE74C3CFF, string);
		return 1;
	}

	ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 0, 0);
	SetTimerEx("ChatAnimacija", trajanje, false, "d", playerid);
	BankControls[KeypadHackTime] = gettime() + 600;
	RobberyType[playerid] = 1;
	PlayerInfo[playerid][pTrazeniLevel] += 2;
	SetPlayerColor(playerid, COLOR_RED);
	RobberyCounter[playerid] = 20;
	RobberyTimer[playerid] = SetTimerEx("RobberyUpdate", 1000, true, "i", playerid);
	return 1;
}

CMD:postavibombu(playerid, params[])
{
    if (PlayerInfo[playerid][pLider] < 1) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Lideri!");
    if(!IsPlayerInRangeOfPoint(playerid, 1.5, 2144.1624, 1626.25, 993.6882)) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Nisi blizu vrata trezora.");
	if(BankControls[VaultDoorState] != 0) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Vrata trezora su vecÂ´ otvorena.");
	if(BankControls[DoorInteractionTime] > gettime())
	{
	    new string[72];
		format(string, sizeof(string), "ERROR: {FFFFFF}Morate da sacekate jos % da ponovo otvorite vrata trezora.", ConvertToMinutes(BankControls[DoorInteractionTime] - gettime()));
	 	SendClientMessage(playerid, 0xE74C3CFF, string);
		return 1;
	}

	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0);
	BankControls[DoorInteractionTime] = gettime() + 600;
	BankControls[VaultDoorState] = 1; // opening
	SetTimerEx("OpenVaultDoor", 1000, false, "ii", 2, 6);
	SendClientMessage(playerid, -1, "Bomba je postavljena i eksplodiracÂ´e za 6 sekundi. Uzmi zaklon!");
	return 1;
}

CMD:timelock(playerid, params[])
{
    if (PlayerInfo[playerid][pLider] < 1) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Lideri!");
    if(!IsPlayerInRangeOfPoint(playerid, 1.5, 2140.2610, 1626.25, 993.6882)) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Nisi blizu vremenske brave.");
	if(BankControls[Alarm]) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Vremensko zakljucavanje je onemogucÂ´eno zbog alarma.");
	if(BankControls[VaultDoorState] != 0) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Vrata trezora su vecÂ´ otvorena ");
	if(BankControls[DoorInteractionTime] > gettime())
	{
	    new string[72];
		format(string, sizeof(string), "ERROR: {FFFFFF}Morate da sacekate jos % da ponovo otvorite vrata trezora.", ConvertToMinutes(BankControls[DoorInteractionTime] - gettime()));
	 	SendClientMessage(playerid, 0xE74C3CFF, string);
		return 1;
	}

	BankControls[DoorInteractionTime] = gettime() + 600;
	BankControls[VaultDoorState] = 1; // opening
	SetTimerEx("OpenVaultDoor", 1000, false, "ii", 3, 30);
	SendClientMessage(playerid, -1, "Pokrenuli ste vremensku bravu, vrata trezora cÂ´e se otvoriti za 30 sekundi.");
	return 1;
}

CMD:isprazni(playerid, params[])
{
    if (PlayerInfo[playerid][pLider] < 1) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Lideri!");
    if(BankControls[VaultDoorState] < 2) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Ne moÅ¾ete da ispraznite kutije kada vrata trezora nisu otvorena.");
	new id = GetClosestDeposit(playerid);
	if(id == -1) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Ti nisi blizu polica.");
	if(DepositRobbed[id]) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}Kutije koje pokusavate da opljackate vecÂ´ su opljackane.");
	DepositRobbed[id] = true;
	Streamer_SetIntData(STREAMER_TYPE_3D_TEXT_LABEL, InsideVaultLabels[id], E_STREAMER_COLOR, 0xE74C3CFF);
	ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 0, 0);
	RobberyType[playerid] = 2;
	RobberyCounter[playerid] = 10;
	RobberyTimer[playerid] = SetTimerEx("RobberyUpdate", 1000, true, "i", playerid);
	return 1;
}
CMD:lastseen(playerid, params[]) 
{
        //#pragma unused help
        new imeigraca[32];
        if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1, "Morate se ulogovati da bi koristili komandu!");
        if(sscanf(params, "s[32]", imeigraca)) return SCM(playerid,-1,""VARADERO"[KORISCENJE] "BELA"/lastseen [Ime_Prezime]");
                
        new query[54 + 32];
		mysql_format(SQL, query, sizeof query, "SELECT LastSeen FROM `players` WHERE `Name` = '%e'", imeigraca);
		mysql_tquery(SQL, query, "_sqlLastSeen", "is", playerid, imeigraca);	

        if(IsPlayerConnected(Zadnjiputvidjen(imeigraca))) 
        {        	
        	va_SendClientMessage(playerid, -1, ""VARADERO"[INFO] "BELA"Igrac %s je "ZELENA"online.",imeigraca);
            return 1;
        }
        return 1;
}


//OVO IZNAD LOADUSER

forward _sqlLastSeen(playerid, imedebila[]);
public _sqlLastSeen(playerid, imedebila[]) 
{
  
	new rows, vidjen[64];
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid,-1,""ORANGE2"#!: Taj igrac ne postoji u bazi podataka.");
	else
	{
		cache_get_value_name(0, "LastSeen", vidjen, 64);
		va_SendClientMessage(playerid, -1, ""VARADERO"[INFO] "BELA"Igrac %s je zadnji put vidjen %s.",imedebila, vidjen);
	}
    return 1;
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ WAR KOMANDE
CMD:wp( playerid, params[] ) {
	new text[ 64 ];
	if( WARPInfo[ playerid ][ warID ] == -1 ) return SendClientMessage( playerid, -1, "Nisi u WARu." );
 	if( sscanf( params, "s[64]", text ) ) return SendClientMessage( playerid, -1, "KORISTI: /wp [ text ]" );
	if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) {
		format( globalstring, sizeof( globalstring ), ""BELA"WAR | "COL_TEAM1"%s: "BELA"%s", GetName( playerid ), text );
	}
	if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) {
		format( globalstring, sizeof( globalstring ), ""BELA"WAR | "COL_TEAM2"%s: "BELA"%s", GetName( playerid ), text );
	}
	WARMessage( WARPInfo[ playerid ][ warID ], -1, globalstring );
	return true;
}
CMD:warnapusti( playerid, params[] )
{
    new player, w = WARPInfo[ playerid ][ warID ];
 	if( WARPInfo[ playerid ][ warID ] == -1 ) return SendClientMessage( playerid, -1, ""BELA"[ V:RPG ]  "SRWBOJA"Nisi u waru.");
	WARPInfo[ playerid ][ warID ] = -1;
 	SetPlayerHealth( playerid, 100 );

	SetPlayerPos( playerid, WARPInfo[ playerid ][ LastPosition ][ 0 ], WARPInfo[ playerid ][ LastPosition ][ 1 ],  WARPInfo[ playerid ][ LastPosition ][ 2 ] );
 	SetPlayerVirtualWorld( playerid, WARPInfo[ playerid ][ LastVirtualWorld ] );
  	SetPlayerInterior( playerid, WARPInfo[ playerid ][ LastInterior ] );
	ResetPlayerWeapons( playerid );

	ResetWarStatistics( playerid );
 	if( WARPInfo[ player ][ warTeam ][ 0 ] == true ) { WARInfo[ w ][ warTeamMembers ][ 0 ]--; }
	if( WARPInfo[ player ][ warTeam ][ 1 ] == true ) { WARInfo[ w ][ warTeamMembers ][ 1 ]--; }

    SCM( playerid, -1, "Izasao si iz wara." );

	for( new i = 0; i < 9; i ++ )
	{
			PlayerTextDrawHide( playerid, WARTextDraw[ playerid ][ i ]);
	}
	return true;
}
CMD:warstart( playerid, params[] )
{
    if(PlayerInfo[playerid][pLider] == 0) return SendClientMessage( playerid, -1, "Samo lideri mogu koristiti ovu komandu." );
    if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 6 || PlayerInfo[playerid][pLider] == 6
	|| PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 8 || PlayerInfo[playerid][pLider] == 8
	|| PlayerInfo[playerid][pClan] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16
	|| PlayerInfo[playerid][pClan] == 18 || PlayerInfo[playerid][pLider] == 18) return SendClientMessage(playerid, -1, "Drzavne organizacije ne mogu pokretati war medjusobno");
	SPD( playerid, 3000, DSL, "War System", "Kreiraj WAR\nUbaci igraca\nIzbaci igraca", "Ok", "Odustani" );
	return true;
}
//----------------------------------------------------------------------------//
CMD:kreirajjelku(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""CRVENA"[GRESKA]"BELA"Nisi ovlascen!");
    
    new q[128], idJelka;
	mysql_format(SQL, q, sizeof q, "INSERT INTO `jelke` SET `Postavljena` = '1'");		
	mysql_tquery(SQL, q, "_sqlInsertJelka", "dd", idJelka, playerid);
   
   
    return 1;
}
function: _sqlInsertJelka(idJelka, playerid)
{
	idJelka = cache_insert_id();
	JI[idJelka][jSQLID] = idJelka;
	new Float:Angle;
    GetPlayerPos(playerid,X,Y,Z); 
    GetPlayerFacingAngle(playerid, Angle);
    JI[idJelka][zPostavljena] = 1; 
    JI[idJelka][zAngle] = Angle;
    JI[idJelka][zX] = X; 
    JI[idJelka][zY] = Y; 
    JI[idJelka][zZ] = Z;
    JI[idJelka][aInt] = GetPlayerInterior(playerid); 
    JI[idJelka][aVW] = GetPlayerVirtualWorld(playerid);
    KreirajJelku(idJelka); 
    SacuvajJelku(idJelka); 
    SCM( playerid, -1,""SRWBOJA"INFO: "BELA"Uspesno ste napravili jelku mozete je premestati (/ejelku)" );
}
//______________________________________________________________________________

CMD:ejelku(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""CRVENA"[GRESKA]"BELA"Nisi ovlascen!");
    new idJelka;
    if(sscanf(params, "i",idJelka)) return SCM( playerid, -1,""SRWBOJA"KORISTI: "BELA"/ejelku [ID]" );
    
    if(!IsValidDynamicObject(JI[idJelka][zObjekat])) return SCM( playerid, -1, ""SRWBOJA"GRESKA: "BELA" Unesen id jelke ne postoji!" );
    if(!IsPlayerInRangeOfPoint(playerid, 3.0, JI[idJelka][zX], JI[idJelka][zY], JI[idJelka][zZ])) return SCM(playerid,-1,"Niste u blizini je jelke!");
    eData[playerid] = idJelka; EditDynamicObject(playerid,JI[idJelka][zObjekat]);
    return 1;
}
//______________________________________________________________________________

CMD:portjelka(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""CRVENA"[GRESKA]"BELA"Nisi ovlascen!");
    new idJelka;
    if(sscanf(params, "i",idJelka)) return SCM( playerid, -1,""SRWBOJA"KORISTI: "BELA"/portjelka [ID]" );
    
    if(!IsValidDynamicObject(JI[idJelka][zObjekat])) return SCM( playerid,-1, ""SRWBOJA"GRESKA: "BELA"Unesen id jelke ne postoji!" );
    SetPlayerPos(playerid,JI[idJelka][zX], JI[idJelka][zY], JI[idJelka][zZ]);
    SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
    return 1;
}
////--
CMD:nlo(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"kada izadjee ako ostanu objekti na vas kucajte /dodacioff");
	SetPlayerAttachedObject(playerid,0,3515,1,-0.609999,0.000000,-0.003999,0.000000,90.900000,0.000000,0.832001,0.818000,0.553001);
	SetPlayerAttachedObject(playerid,1,18843,1,-0.712000,0.000000,0.000000,0.000000,0.000000,0.000000,0.014000,0.015000,0.016000);
	SetPlayerAttachedObject(playerid,2,3515,1,0.133001,-0.011000,0.017000,0.000000,-90.000000,0.000000,0.818000,0.772001,0.359001);
	SetPlayerAttachedObject(playerid,3,18843,1,0.074999,-0.017000,0.026999,0.000000,0.000000,0.000000,0.019000,0.020000,0.020000);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
	}
	return 1;
}
////////////
////--
CMD:balon(playerid, params[]) //19335
{
    //#pragma unused help
    #pragma unused params
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	SCM(playerid,-1,""SRWBOJA"(("BELA"V"SRWBOJA")):"BELA" Kada izadjete iz balona (enter) ako ostanu objekti na vas kucajte /dodacioff");
	SetPlayerAttachedObject(playerid,0,19335,1,-0.609999,0.000000,-0.003999,0.000000,90.900000,0.000000,0.832001,0.818000,0.553001);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
	}
	return 1;
}
//============================================================================//
CMD:granica(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"{F5052D}[ERROR] {FFFFFF}Morate biti u vozilu.");
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1806.38, 815.78, 10.48))
	{
        MoveDynamicObject(rampazalvot, 1809.94458, 819.34558, 10.45770 + 0.0001, 0.0001, 0.00000, 0.00000, 0.00000);
        SetTimerEx("ZatvoriGranice", 5000, false, "i", 1);
  		g_NovacMinus(playerid, 200);
	    SCM(playerid,-1,"Platili ste cariniku 200$ za prolazak!");
    }
    else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1788.28, 814.73, 10.50))
	{
	 	MoveDynamicObject(rampazalsot, 1791.66272, 810.52039, 10.64000 + 0.0001, 0.0001, 0.00000, 0.00000, 0.00000);
	    SetTimerEx("ZatvoriGranice", 5000, false, "i", 2);
		g_NovacMinus(playerid, 200);
	    SCM(playerid,-1,"Platili ste cariniku 200$ za prolazak!");
    }
    else if(IsPlayerInRangeOfPoint(playerid, 5.0, 46.28, -1537.96, 4.74))
	{
        MoveDynamicObject(rampazasfot, 49.939498, -1534.832397, 4.821100 + 0.0001, 0.0001, 0.000000, 0.000000, -96.480003);
	    SetTimerEx("ZatvoriGranice", 5000, false, "i", 3);
		g_NovacMinus(playerid, 200);
	    SCM(playerid,-1,"Platili ste cariniku 200$ za prolazak!");
    }
    else if(IsPlayerInRangeOfPoint(playerid, 5.0, 54.87, -1524.36, 4.59))
	{
        MoveDynamicObject(rampazalsott, 50.616279, -1527.437255, 4.821100 + 0.0001, 0.0001, 0.000000, 0.000000, 83.519973);
	    SetTimerEx("ZatvoriGranice", 5000, false, "i", 4);
		g_NovacMinus(playerid, 200);
	    SCM(playerid,-1,"Platili ste cariniku 200$ za prolazak!");
    }
    else return SendClientMessage(playerid,-1,"{F5052D}[ERROR] {FFFFFF}Morate biti kod naplatne rampe.");
	return 1;
}
//============================================================================//
private ZatvoriGranice(broj)
{
	if(broj == 1)
	{
	    MoveDynamicObject(rampazalvot, 1809.94458, 819.34558, 10.45770, 0.0001,  0.00000, 270.00000, 0.00000);
	}
	else if(broj == 2)
	{
		MoveDynamicObject(rampazalsot, 1791.66272, 810.52039, 10.64000, 0.0001,  0.00000, 270.00000, 0.00000);
	}
	else if(broj == 3)
	{
		MoveDynamicObject(rampazasfot, 49.939498, -1534.832397, 4.821100, 0.0001,  0.000000, 90.000000, -96.480003);
	}
	else if(broj == 4)
	{
	    MoveDynamicObject(rampazalsott, 50.616279, -1527.437255, 4.821100, 0.0001,  0.000000, 90.000000, 83.519973);
	}
	return 1;
}
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
CMD:vipmenu(playerid, params[])
{
      //#pragma unused help
   	  #pragma unused params
   	  if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pVip] < 5 && PlayerInfo[playerid][pPromoter] < 1) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo A/VIP!");
	  if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Imate wanted level pa ne mozete /vipmenu");
	  if( PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Zatvoreni ste ne moze ova komandu da koristite!");
	  if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"U Event Si bre !!");
	  if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Ne mozes to u vozilu si");
	  SPD(playerid,4576,DIALOG_STYLE_LIST, "VIP MENU", "AK47 ($ 11k) [300ammo]\nM4 ($ 12k) [300ammo]\nTec9 ($ 13k) [200ammo]\nUzi ($ 14k) [200ammo]\nShotgun ($ 10k) [200ammo]\nDeagle ($ 10k) [70ammo]\nPancir ($ 50k)", "OK", "Izadji");
	  return 1;
}
CMD:promenibroj(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""ORANGE"*** Morate se ulogovati!");
	if(PlayerInfo[playerid][pVip] == 6)
 	{
		new broj, vrsta;
		if(sscanf(params, "d,i", broj,vrsta)) return SendClientMessage(playerid, -1, ""ORANGE"*** /promenibroj [broj] [ vrsta telefona[1-6] ]");
		if(broj < 1 || broj > 999999) return SCM(playerid, -1, ""ORANGE"***Moras imati 6 cifri u broju!");
		PlayerInfo[playerid][pMobilni] = broj;
		SCMF(playerid,-1,""ORANGE"* Promenili ste broj vaseg telefona u %d",broj);
		SavePlayer(playerid);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""ORANGE"*** Samo VIP 6!");
	}
	return 1;
}
///////////////////////////////////////////////////////
fDialog(1312)
{
    if(UlogovanProvera[playerid] == 1)
    {
		//------------------------------ / IMOVINA NEAKTIVNOST / ---------------------------------//
		if(PlayerInfo[playerid][pPosedovanjeFirme] != -1)
					{					    
						if(strcmp(FirmaInfo[PlayerInfo[playerid][pPosedovanjeFirme]][fVlasnik], GetName(playerid), true))
						{
							SCM(playerid,-1,""SRWBOJA"[IMOVINA]: "BELA"Firma koja se nalazila u Vasem nalogu nije vise u Vasem vlasnistvu!");
							PlayerInfo[playerid][pPosedovanjeFirme] = -1;
							SavePlayer(playerid);
						}
						else
						{
							FirmaInfo[PlayerInfo[playerid][pPosedovanjeFirme]][fNeaktivnost] = 0;
							Firme_Neaktivnost(PlayerInfo[playerid][pPosedovanjeFirme]);
							SacuvajFirmu(PlayerInfo[playerid][pPosedovanjeFirme]);
						}						
					}
		if(PlayerInfo[playerid][pPosedovanjeKuce] != -1)
					{			    
				        	 			
						if(strcmp(KucaInfo[PlayerInfo[playerid][pPosedovanjeKuce]][kVlasnik], GetName(playerid), true))
						{
							SCM(playerid,-1,""SRWBOJA"[IMOVINA]: "BELA"Kuca koja se nalazi u Vasem nalogu nije vise u Vasem vlasnistvu!");
							PlayerInfo[playerid][pPosedovanjeKuce] = -1;
							SavePlayer(playerid);
						}
						else
						{
							KucaInfo[PlayerInfo[playerid][pPosedovanjeKuce]][kNeaktivnost] = 0;
							Kuce_Neaktivnost(PlayerInfo[playerid][pPosedovanjeKuce]);
							SacuvajKucu(PlayerInfo[playerid][pPosedovanjeKuce]);
						}						
					}
		if(PlayerInfo[playerid][pPosedovanjeStana] != -1)
					{					    
						if(strcmp(StanInfo[PlayerInfo[playerid][pPosedovanjeStana]][sVlasnik], GetName(playerid), true))
						{
							SCM(playerid,-1,""SRWBOJA"[IMOVINA]: "BELA"Stan koji se nalazi u Vasem nalogu nije vise u Vasem vlasnistvu!");
							PlayerInfo[playerid][pPosedovanjeStana] = -1;
							SavePlayer(playerid);
						}
						else
						{
							StanInfo[PlayerInfo[playerid][pPosedovanjeStana]][sNeaktivnost] = 0;
							Stan_Neaktivnost(PlayerInfo[playerid][pPosedovanjeStana]);
							SacuvajStan(PlayerInfo[playerid][pPosedovanjeStana]);
						}
						
					}
    }
    return 1;
}
//----------------------------------------------------------------------------//
forward ANagrade(playerid);
public ANagrade(playerid)
{
    if(PlayerInfo[playerid][pSatiIgre] == 70)
	{
	    new string[256];
	    PlayerInfo[playerid][pVip] = 5;
		format(string, 256, ""VARADERO"[INFO] "BELA"Dobili ste Vip Level 5 (Premium) zbog 70 sati igranja.");
		SendClientMessage(playerid, -1, string);
	    SavePlayer(playerid);
	}
	if(PlayerInfo[playerid][pSatiIgre] == 140)
	{
	    new string[256];
	    PlayerInfo[playerid][pVip] = 6;
		format(string, 256, ""VARADERO"[INFO] "BELA"Dobili ste Vip Level 6 (Elite) zbog 150 sati igranja.");
		SendClientMessage(playerid, -1, string);
	    SavePlayer(playerid);
	}
	return 1;
}
//>>>>>>>>>>>>>>>>>>>>>>>>>>>> DODAVANJE NEAKTIVNOSTI <<<<<<<<<<<<<<<<<<<<<<<<//
forward Neaktivnosti();
public Neaktivnosti()
{
    DodajNeaktivnostKuca();
    DodajNeaktivnostFirmi();
    DodajNeaktivnostStanova();
}
forward DodajNeaktivnostFirmi();
public DodajNeaktivnostFirmi()
{
	for(new fID = 0; fID < sizeof(FirmaInfo); fID++)
    {
        if(FirmaInfo[fID][fImaVlasnika] == 1)
		{
			if(!IsPlayerConnected(GetPlayerID(FirmaInfo[fID][fVlasnik])))
			{
				FirmaInfo[fID][fNeaktivnost] += 1;
				Firme_Neaktivnost(fID);
				SacuvajFirmu(fID);
			}
			else
			{
				FirmaInfo[fID][fNeaktivnost] = 0;
				Firme_Neaktivnost(fID);
				SacuvajFirmu(fID);
			}
			if(FirmaInfo[fID][fNeaktivnost] > 500)
			{
			    FirmaInfo[fID][fImaVlasnika] = 0;
				FirmaInfo[fID][fKasa] = 0;
				FirmaInfo[fID][fZatvoreno] = 1;
				FirmaInfo[fID][fNeaktivnost] = 0;
				strmid(FirmaInfo[fID][fIznuda],"Niko",0,strlen("Niko"),255);
				strmid(FirmaInfo[fID][fVlasnik], "Niko", 0, strlen("Niko"), 255);
				FirmaLabelIPickup(fID);
				SacuvajFirmu(fID);
				new stringgger[256];
				format(stringgger, 128, "[ Nekretnine ]{FFFFFF} Trenutno je na raspolaganju nova firma na adresi %s %d, po ceni od %d$!", fID, UlicaFirme(fID), FirmaInfo[fID][fCena]);
				SCMTA(SVETLOPLAVA, stringgger);
			}
		}
	}
	return 1;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
UlicaKuce(h)
{
	new imeulice[MAX_ZONE_NAME];
   	UlicaKuce2D(h,imeulice,sizeof(imeulice));
   	return imeulice;
}
UlicaKuce2D(h, zone[], len)
{
	new Float:x22, Float:y22;
	x22 = KucaInfo[h][kUlazX]; y22 = KucaInfo[h][kUlazY];
	for(new i = 0; i != sizeof(gSAZones); i++ )
	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
UlicaStana(h)
{
	new imeulice[MAX_ZONE_NAME];
   	UlicaStana2D(h,imeulice,sizeof(imeulice));
   	return imeulice;
}
UlicaStana2D(s, zone[], len)
{
	new Float:x22, Float:y22;
	x22 = StanInfo[s][sUlazX]; y22 = StanInfo[s][sUlazY];
	for(new i = 0; i != sizeof(gSAZones); i++ )
	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
UlicaFirme(f)
{
	new imeulice[MAX_ZONE_NAME];
   	UlicaFirme2D(f,imeulice,sizeof(imeulice));
   	return imeulice;
}
UlicaFirme2D(f, zone[], len)
{
	new Float:x22, Float:y22;
	x22 = FirmaInfo[f][fUlazX]; y22 = FirmaInfo[f][fUlazY];
	for(new i = 0; i != sizeof(gSAZones); i++ )
	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
forward DodajNeaktivnostKuca();
public DodajNeaktivnostKuca()
{
	for(new kID = 0; kID < sizeof(KucaInfo); kID++)
    {
        if(KucaInfo[kID][kProveraVlasnika] == 1)
		{
			if(!IsPlayerConnected(GetPlayerID(KucaInfo[kID][kVlasnik])))
			{
				KucaInfo[kID][kNeaktivnost] += 1;
				Kuce_Neaktivnost(kID);
				SacuvajKucu(kID);
			}
			else
			{
				KucaInfo[kID][kNeaktivnost] = 0;
				Kuce_Neaktivnost(kID);
				SacuvajKucu(kID);
			}
			if(KucaInfo[kID][kNeaktivnost] > 500)
			{
			    strmid(KucaInfo[kID][kVlasnik],"Niko",0,strlen("Niko"),255);
			    KucaInfo[kID][kProveraVlasnika] = 0;
				KucaInfo[kID][kFrizder] = 0;
				KucaInfo[kID][kOruzije] = -1;
				KucaInfo[kID][kOdjeca] = 0;
			    KucaInfo[kID][kNovac] = 0;
				KucaInfo[kID][kZatvoreno] = 1;
				KucaInfo[kID][kZvono] = 0;
			    KucaInfo[kID][kMunicija] = 0;
				KucaInfo[kID][kRent] = 0;
				KucaInfo[kID][kMats] = 0;
				KucaInfo[kID][kDroga] = 0;
				KucaInfo[kID][kNeaktivnost] = 0;
				KuceLP(kID);
				SacuvajKucu(kID);
				new stringgger[256];
				format(stringgger, 128, "[ Nekretnine ]{FFFFFF} Trenutno je na raspolaganju nova kuca na adresi %d, po ceni od %d$!", kID, KucaInfo[kID][kCena]);
				SCMTA(SVETLOPLAVA, stringgger);
			}
		}
	}
	return 1;
}
forward DodajNeaktivnostStanova();
public DodajNeaktivnostStanova()
{
	for(new sID = 0; sID < sizeof(StanInfo); sID++)
    {
        if(StanInfo[sID][sProveraVlasnika] == 1)
		{
			if(!IsPlayerConnected(GetPlayerID(StanInfo[sID][sVlasnik])))
			{
				StanInfo[sID][sNeaktivnost] += 1;
				Stan_Neaktivnost(sID);
				SacuvajStan(sID);
			}
			else
			{
				StanInfo[sID][sNeaktivnost] = 0;
				Stan_Neaktivnost(sID);
				SacuvajStan(sID);
			}
			if(StanInfo[sID][sNeaktivnost] > 500)
			{
			    StanInfo[sID][sNeaktivnost] = 0;
				StanInfo[sID][sProveraVlasnika] = 0;
				StanInfo[sID][sNovac] = 0;
				StanInfo[sID][sOruzije] = -1;
				StanInfo[sID][sMunicija] = 0;
				StanInfo[sID][sZatvoreno] = 1;
				strmid(StanInfo[sID][sVlasnik], "Niko", 0, strlen("Niko"), 255);
			    SacuvajStan(sID);
				StanLP(sID);
				new stringgger[256];
				format(stringgger, 128, "[ Nekretnine ]{FFFFFF} Trenutno je na raspolaganju novi stan na adresi %s %d, po ceni od %d$!", sID, UlicaStana(sID), StanInfo[sID][sCena]);
				SCMTA(SVETLOPLAVA, stringgger);
			}
		}
	}
	return 1;
}
fDialog(4576)
{
	if(response)
	{
		if(listitem == 0)
		{
			if(PlayerInfo[playerid][pNovacDzep] < 11000) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Nemate novca !");
			GivePlayerWeapon(playerid, 30, 300);
			g_NovacMinus(playerid, 11000);
		}
		if(listitem == 1)
		{
			if(PlayerInfo[playerid][pNovacDzep] < 12000) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Nemate novca !");
			GivePlayerWeapon(playerid, 31, 300);
			g_NovacMinus(playerid, 13000);
		}
		if(listitem == 2)
		{
			if(PlayerInfo[playerid][pNovacDzep] < 13000) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Nemate novca !");
			GivePlayerWeapon(playerid, 32, 200);
			g_NovacMinus(playerid, 14000);
		}
		if(listitem == 3)
		{
			if(PlayerInfo[playerid][pNovacDzep] < 14000) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Nemate novca !");
			GivePlayerWeapon(playerid, 28, 200);
			g_NovacMinus(playerid, 14000);
		}
		if(listitem == 4)
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10000) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Nemate novca !");
			GivePlayerWeapon(playerid, 25, 200);
			g_NovacMinus(playerid, 10000);
		}
		if(listitem == 5)
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10000) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Nemate novca !");
			GivePlayerWeapon(playerid, 24, 200);
			g_NovacMinus(playerid, 10000);
		}
		if(listitem == 6)
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10000) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Nemate novca !");
			SetPlayerArmour(playerid, 100);
			g_NovacMinus(playerid, 50000);
		}
	}
	return 1;
}
CMD:rtcvozilo(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"| Varadero | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""SIVA"[V:RPG] | Samo Admini (AL 1+)!");
	new string[128],idvoz;
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "i", idvoz)) return SCM(playerid, -1, ""SPLAVA"[V:RPG] Pomoc | "BELA"/rtcvozilo ID");
	if(idvoz > 0 || idvoz < 2000)
	{
		format(string,sizeof(string),""BELA"[V:RPG] "VARADERO"Administrator %s je respawnovo vozilo ID:%d!",GetName(playerid),idvoz);
		SendAdminMessage(-1,string);
		RTC(idvoz);
	}
	else
	{
        SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Ne mozete ispod 0 i iznad 2000!");
	}
	return 1;
}
CMD:kreirajaktora(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"| varadero |"BELA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Nisi ovlascen!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    SPD(playerid, 564, DSI, "Actor Menu:", "Upisite ID skina za Actor-a:", "OK", "ZATVORI");
    //SPD(playerid,564,DSL,"" ",""SPLAVA"- "BELA"Dozvola z","Odaberi","Izadji");
	return 1;
}
CMD:obrisiaktora(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"| varadero |"BELA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Nisi ovlascen!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    SPD(playerid, 566, DSI, "Actor Menu:", "Upisite ID actor-a kojeg Å¾elite obrisati:", "OK", "ZATVORI");
    return 1;
}
CMD:aktorinfo(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"| varadero |"BELA"Moras se ulogovati da bi koristio ovu komandu!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new i = -1;
	for(new x; x < MAX_ACTOR; x++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1.0, ActorInfo[x][ActorPos_X], ActorInfo[x][ActorPos_Y], ActorInfo[x][ActorPos_Z]))
		{
			i = x;
			break;
		}
	}
	if(i == -1) return SCM(playerid, -1, ""SRWBOJA"| Varadero | "SIVA"Niste kod actora!");
	new id, stefankidara[128];
	format(stefankidara, sizeof(stefankidara), ""SRWBOJA"| Varadero | "BELA"Aktor ID: %d !", id);
	SCM(playerid, -1, stefankidara);
	return 1;
}
fDialog(564)
{
		if(!response) return 1;
		if(response)
		{
		    if(strval(inputtext) <= 0 && strval(inputtext) > 311) return SPD(playerid, 564, DSI, "Actor Menu:", "Upisite ID skina za Actor-a:", "OK", "ZATVORI");
			
			new q[128], aktorid, skin;
			skin = strval(inputtext);
			mysql_format(SQL, q, sizeof q, "INSERT INTO `aktori` SET `ActorSkinID` = '%d'", skin);		
			mysql_tquery(SQL, q, "_sqlInsertActor", "ddd", aktorid, playerid, skin);			
		}
		return 1;
}
function: _sqlInsertActor(aktorid, playerid, skin)
{
	aktorid = cache_insert_id();
	ActorInfo[aktorid][ActorSQLID] = aktorid;

	new Float:rot;
	
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, rot);
	ActorInfo[aktorid][ActorPos_X] = X; 
	ActorInfo[aktorid][ActorPos_Y] = Y; 
	ActorInfo[aktorid][ActorPos_Z] = Z; 
	ActorInfo[aktorid][ActorRotation] = rot;
	ActorInfo[aktorid][ActorSkinID] = skin;
	SacuvajActore(aktorid);
	SPD(playerid, 565, DSI, "Actor Menu:", "Upisite ID animacije za Actor-a:\n\nPomoc:\n0: Nista\n1: Stav\n2: Rep", "OK", "ZATVORI");
}
//===============================================================================================================//
fDialog(565)
{
	    if(!response) return 1;
	    if(response)
	    {
			if(strval(inputtext) < 0 || strval(inputtext) > 2) return SPD(playerid, 565, DSI, "Actor Menu:", "Upisite ID animacije za Actor-a:\n\nPomoc:\n0: Nista\n1: Stav\n2: Rep", "OK", "ZATVORI");
	        for(new id = 0; id < MAX_ACTOR; id++)
			{
			    IsPlayerInRangeOfPoint(playerid, 1.0, ActorInfo[id][ActorPos_X], ActorInfo[id][ActorPos_Y], ActorInfo[id][ActorPos_Z]);
				{
		            ActorInfo[id][ActorAnimID] = strval(inputtext);
		            
		  			ActorSkin[id] = CreateActor(ActorInfo[id][ActorSkinID], ActorInfo[id][ActorPos_X], ActorInfo[id][ActorPos_Y], ActorInfo[id][ActorPos_Z], ActorInfo[id][ActorRotation]);
		           	SetActorInvulnerable(id, true);
		           	AkterLabelAnim();
		           	SacuvajActore(id);
		    		if(ActorInfo[id][ActorAnimID] == 0) { ClearActorAnimations(id); }
		           	else if(ActorInfo[id][ActorAnimID] == 1) { ApplyActorAnimation(id, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); }
		           	else if(ActorInfo[id][ActorAnimID] == 2) { ApplyActorAnimation(id, "RAPPING", "RAP_A_Loop", 4.0, 1, 0, 0, 0, 0); }		     		
				}

			}
			SCM(playerid,-1, "Zavrsili ste kreiranje Actor-a.");
		   
	    }
		return 1;
}
fDialog(566)
{
	    if(!response) return 1;
		if(response)
		{
		    new q[64];
		    new tetkamoja = strval(inputtext);
			mysql_format( SQL, q, sizeof(q), "SELECT * FROM `aktori` where `ActorSQLID` = '%d'", tetkamoja);
			mysql_tquery( SQL, q, "_sqlDeleteActor", "ii", playerid, tetkamoja);
		
			
			for(new i; ActorsData:i < ActorsData; i++) 
			{ 
				ActorInfo[tetkamoja][ActorsData:i] = -1; 		
			}
			
            DestroyActor(tetkamoja);
    		Delete3DTextLabel(Actor3DText[tetkamoja]);						
		}
		return 1;
}
function: _sqlDeleteActor(playerid, id)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID tog aktora nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `aktori` WHERE `ActorSQLID` = '%d'", id);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, "Obrisali ste aktora id: %d", id);
		va_SendClientMessageToAll(-1 , "Administrator: %s je obrisao Aktora ID: (%d).", GetName(playerid), id);
	}
	return 1;
}
CMD:muzika(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Nisi ovlascen!");
	SPD(playerid, 13460, DIALOG_STYLE_LIST, "MUSIC", "Maya Berovic  - BALMAIN\nMaya Berovic - V.I.P.\nMaya Berovic  - Pravo vreme\nMaya Berovic - Sama\nMaya Berovic - Neka Stvar\nMaya Berovic - Nacisto\nMaya Berovic - Ljubomora\nMaya Berovic - Harem\nMaya Berovic - BROJ\nMaya Berovic - Delo\nBaka Prase - Balksanska Scena 2\nMarlon - Borba\nSrbi Devedesetih\nSladja Allergo Bataljon\nCoby 4 - 4 Strane Sveta\nJala Brat - Glamur\nMarlon - Juice \nLudi Srbi - Crna Glava\nKlinac - Sneg\nLudi Srbi - Diskoteka\nMia Borisavljevic - Pricaju po Gradu\nJala Brat - Mia\nLudi Srbi - Plave Ruskinje\nLudi srbi - Mene ne radi\nMUSIC = OFF", "OK", "EXIT" );
	return 1;
}
fDialog(13460)
{
	if(response)
	{
		foreach(new i : Player)
		{
			if(listitem == 0)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/sjqonnp5bh/Maya_Berovi_feat._Jala_BratF_and_Buba_Corelli_-_BALMAIN_OFFICIAL_ARTWORK_2017_.mp3"); // Semso Opasna !!
				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic feat. Jala Brat & Buba Corelli - BALMAIN "SZELENA"(/stopmusic)");
			}
			if(listitem == 1)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/58njwbajku/Maya_Berovi_feat._Jala_Brat_-_V.I.P._Official_Video_.mp3.");
				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic feat. Jala Brat - V.I.P. "SZELENA"(/stopmusic)");
			}
			if(listitem == 2)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/ap0slkpa49/Maya_Berovi_feat._Buba_Corelli_-_Pravo_vreme_Official_Video_.mp3");
				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic feat. Buba Corelli - Pravo vreme "SZELENA"(/stopmusic)");
			}
			if(listitem == 3)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/s6zd5nec45/Maya_Berovi_-_Sama_Official_Video_.mp3");
				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic - Sama "SZELENA"(/stopmusic)");
			}
			if(listitem == 4)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/y07vlhai9l/Maya_Berovi_-_Sahara_Official_Video_.mp3"); // IN VIVO - Zauvjek Mladi
				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic - Sahara "SZELENA"(/stopmusic)");
			}
			if(listitem == 5)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/orbpq4oqm4/Maya_Berovi_-_Neka_Stvar_Official_Video_.mp3");
				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz  Maya Berovic - Neka Stvar "SZELENA"(/stopmusic)");
			}
			if(listitem == 6)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/dlimfd8qnp/Maya_Berovi_-_Na_isto_Official_Video_.mp3"); //IN VIVO - Gazda
				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic - Nacisto "SZELENA"(/stopmusic)");
			}
			if(listitem == 7)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/ep8xzn2zmu/Maya_Berovi_-_Ljubomora_Official_Video_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic - Ljubomora  "SZELENA"(/stopmusic)");
			}
			if(listitem == 8)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/kz0fa6x59c/Maya_Berovi_-_HAREM_OFFICIAL_ARTWORK_2017_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic - HAREM "SZELENA"(/stopmusic)");
			}
			if(listitem == 9)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/3y7r46q5ub/Maya_Berovi_-_BROJ_OFFICIAL_ARTWORK_2017_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Maya Berovic - BROJ "SZELENA"(/stopmusic)");
			}
			if(listitem == 10)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/e8ahybjd8r/LJUPKA_STEVIC_-_DELO_OFFICIAL_VIDEO_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Ljubka Stevic - Delo "SZELENA"(/stopmusic)");
			}
			if(listitem == 11)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/zvef84jxtr/BAKAPRASE_X_LAZIC_-_BALKANSKA_SCENA_2.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Baka Prase x Lazic - Balkansa scena "SZELENA"(/stopmusic)");
			}
			if(listitem == 12)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/ci3lmaeynn/MARLON_BRUTAL_-_BORBA_Official_Video_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Marlon Brutal  - Borba "SZELENA"(/stopmusic)");
			}
			if(listitem == 13)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/xb2tvkbadf/Srbi_Devedesetih_-_Crni_Spid_Lprime_remix_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Ludi srbi - Devedesetih "SZELENA"(/stopmusic)");
			}
			if(listitem == 14)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/6jxje9rkqa/Sladja_Allegro_-_Bataljon_Official_Video_2018_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Sladja Allegro - Bataljon "SZELENA"(/stopmusic)");
			}
			if(listitem == 15)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/p3dsp7jxxm/Coby_x_Senidah_-_4_Strane_Sveta.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Coby X Senidah - 4 strane sveta "SZELENA"(/stopmusic)");
			}
			if(listitem == 16)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/ja1i1lcrte/Jala_Brat_-_Glamur_Official_Concert_Video_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Jala Brat - Glamur "SZELENA"(/stopmusic)");
			}
			if(listitem == 17)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/5hv7v9m6ma/Marlon_Brutal_x_Juice_-_Ma_e_Official_Video_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Marlon x Brutal x Juice Ma_e_o "SZELENA"(/stopmusic)");
			}
			if(listitem == 18)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/b9ppk547ti/Ludi_Srbi_-_Crna_Glava.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Ludi Srbi - Crna Glava "SZELENA"(/stopmusic)");
			}
			if(listitem == 19)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/idygeylkmf/Klinac_-_Sneg.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Klinac - Sneg "SZELENA"(/stopmusic)");
			}
			if(listitem == 20)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/5hgckxqixd/Ludi_Srbi_-_Dskoteka_2016_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Ludi Srbi Diskoteka "SZELENA"(/stopmusic)");
			}
			if(listitem == 21)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/nqzdx4lrpr/MIA_BORISAVLJEVIC_-_PRICAJU_PO_GRADU_OFFICIAL_VIDEO_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Mia Borisavljevic - Pricaju Po GRADU "SZELENA"(/stopmusic)");
			}
			if(listitem == 22)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/3hra8hgo2i/Jala_Brat_and_Buba_Corelli_-_Mila_Official_Video_.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Buba Corelli - Mila "SZELENA"(/stopmusic)");
			}
			if(listitem == 23)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/f3q2s7tmdw/Ludi_Srbi_x_Jovica_Dobrica_-_Plave_Ruskinje.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Ludi Srbi_x_Jovica_Dobrica - Plave_Ruskinje "SZELENA"(/stopmusic)");
			}
			if(listitem == 24)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, "http://k007.kiwi6.com/hotlink/ufd73l05fx/Ludi_Srbi_-_Mene_Ne_Radi.mp3");

				SendClientMessage(i, -1, ""SZELENA"(V MUSIC) "SIVA"A sada zabava uz Ludi_Srbi_-_Mene_Ne_Radi "SZELENA"(/stopmusic)");
			}
			if(listitem == 25)
			{
				StopAudioStreamForPlayer(i);
			}
		}
	}
	return 1;
}
CMD:bogati(playerid, params[])
{
     if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Nisi ovlascen!");
     {
     new string[126];
     SendClientMessage(playerid, -1, ""SRWBOJA"Najbogatiji online:");
     foreach(new i:Player)
     {
     if(PlayerInfo[i][pNovacDzep] >= 10000000 || PlayerInfo[i][pNovacBanka] >= 50000000)
     {
     format(string, 256, "%s (%d) - Dzep: $%d | Banka: $%d", GetName(i), i, PlayerInfo[i][pNovacDzep], PlayerInfo[i][pNovacBanka], PlayerInfo[i]);
     SendClientMessage(playerid, COLOR_RED, string);
     }
     }
     }
     return 1;
}
CMD:offon(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Nisi ovlascen!");
 	
	new str[512], global[22], admin[22], staff[22], lider[22];
	if((noooc)) global = ""CRVENA"OFF";
	else if ((!noooc)) global = ""ZELENA"ON";
	if((achat)) admin = ""CRVENA"OFF";
	else if ((!achat)) admin = ""ZELENA"ON";
	if((gachat)) staff = ""CRVENA"OFF";
	else if ((!gachat)) staff = ""ZELENA"ON";
	if((lchat)) lider = ""CRVENA"OFF";
	else if ((!lchat)) lider = ""ZELENA"ON";

	format(str, 512, "#\tOdobrenje\tStatus\n[1]\tGlobal (/g) chat:\t\t%s\n[2]\tAdmin (/a) chat:\t\t%s\n[3]\tStaff (/ga) chat:\t\t%s\n[4]\tLider (/l) chat:\t\t%s\n[5]\tUpali/Ugasi sve chatove", global, admin, staff, lider);
	SPD(playerid, 99, DIALOG_STYLE_TABLIST_HEADERS, "KONTROLISANJE CHATOVA", str, D_ODABERI, D_ODUSTANI);
	return 1;
}
fDialog(99)
{
    if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Zatvoren meni.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
	        if(PlayerInfo[playerid][pAdmin] >= 1 && (!noooc))
			{
			    new string[256];
				noooc = 1;
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Administrator %s je ugasio Global (/g) chat.",GetName(playerid));
				SCMTA(-1,string);
			}
			else if(PlayerInfo[playerid][pAdmin] >= 1 && (noooc))
			{
			    new string[256];
				noooc = 0;
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Administrator %s je upalio Global (/g) chat.",GetName(playerid));
				SCMTA(-1,string);
			}
		}
		case 1:
		{
	        if(PlayerInfo[playerid][pAdmin] >= 7 && (!achat))
			{
				achat = 1;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je ugasio Admin (/a) chat.", GetName(playerid));
			    SendAdminMessage(-1,string);
			}
			else if(PlayerInfo[playerid][pAdmin] >= 7 && (achat))
			{
				achat = 0;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je upalio Admin (/a) chat.", GetName(playerid));
			    SendAdminMessage(-1,string);
			}
		}
		case 2:
		{
	        if (PlayerInfo[playerid][pAdmin] >= 6 && (!gachat))
			{
				gachat = 1;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je ugasio Staff (/ga) chat.", GetName(playerid));
			    AdminGameMasterSpec(-1,string);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 6 && (gachat))
			{
				gachat = 0;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je upalio Staff (/ga) chat.", GetName(playerid));
			    AdminGameMasterSpec(-1,string);
			}
		}
  		case 3:
		{
	       	if (PlayerInfo[playerid][pAdmin] >= 6 && (!lchat))
			{
				lchat = 1;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je ugasio Lider (/l) chat.", GetName(playerid));
			    Lider(-1,string);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 6 && (lchat))
			{
				lchat = 0;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je upalio Lider (/l) chat.", GetName(playerid));
			    Lider(-1,string);
			}
  		}
  		case 4:
		{
	       	if(PlayerInfo[playerid][pAdmin] >= 7 && (!noooc) && (!achat) && (!gachat) && (!lchat))
			{
				noooc = 1;
				achat = 1;
				gachat = 1;
				lchat = 1;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je ugasio sve chatove.", GetName(playerid));
			    SendAdminMessage(-1,string);
			}
			else if(PlayerInfo[playerid][pAdmin] >= 7 && (noooc) && (achat) && (gachat) && (lchat))
			{
				noooc = 0;
				achat = 0;
				gachat = 0;
				lchat = 0;
				new string [256];
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je upalio sve chatove.", GetName(playerid));
			    SendAdminMessage(-1,string);
			}
  		}
	}
	new str[512], global[22], admin[22], staff[22], lider[22];
	if((noooc)) global = ""CRVENA"OFF";
	else if ((!noooc)) global = ""ZELENA"ON";
	if((achat)) admin = ""CRVENA"OFF";
	else if ((!achat)) admin = ""ZELENA"ON";
	if((gachat)) staff = ""CRVENA"OFF";
	else if ((!gachat)) staff = ""ZELENA"ON";
	if((lchat)) lider = ""CRVENA"OFF";
	else if ((!lchat)) lider = ""ZELENA"ON";

	format(str, 512, "#\tOdobrenje\tStatus\n[1]\tGlobal (/g) chat:\t\t%s\n[2]\tAdmin (/a) chat:\t\t%s\n[3]\tStaff (/ga) chat:\t\t%s\n[4]\tLider (/l) chat:\t\t%s\n[5]\tUpali/Ugasi sve chatove", global, admin, staff, lider);
	SPD(playerid, 99, DIALOG_STYLE_TABLIST_HEADERS, ""SRWBOJA"KONTROLISANJE CHATOVA", str, D_ODABERI, D_ODUSTANI);
	return 1;
}
CMD:streljana(playerid, params[])
{
	if(GetTimeEx() < Streljana[playerid]) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Ovu komandu mozete koristiti svakih 2 minuta!");
	if(!PlayerToPoint(5.0,playerid,300.3409,-134.1194,1004.0625)){ SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF}Niste na mestu za budzenje skilla !");return 1;}
	SPD(playerid, 123, DIALOG_STYLE_LIST, ""SPLAVA"Streljana", "Dezert\nPistolj\nShotGun\nAK47\nM4", "Odaberi", "Nazad");
	Streljana[playerid] = GetTimeEx() + 120;
	return 1;
}
fDialog(123)
{
    if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Zatvoren meni.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
           SetTimerEx("Dezert",60000,0,"i",playerid);
           TogglePlayerControllable(playerid, 0);
 	       SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA"Poceli ste da budzite skill, frezovani ste!");
 	       GivePlayerWeapon(playerid, 24, 200);
		}
		case 1:
		{
            SetTimerEx("Pistolj",60000,0,"i",playerid);
            TogglePlayerControllable(playerid, 0);
            SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA"Poceli ste da budzite skill, frezovani ste!");
            GivePlayerWeapon(playerid, 23, 500);
		}
		case 2:
		{
            SetTimerEx("ShotGun",60000,0,"i",playerid);
            TogglePlayerControllable(playerid, 0);
            SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA"Poceli ste da budzite skill, frezovani ste!");
            GivePlayerWeapon(playerid, 25, 500);
		}
		case 3:
		{
            SetTimerEx("AK",60000,0,"i",playerid);
            TogglePlayerControllable(playerid, 0);
            SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA"Poceli ste da budzite skill, frezovani ste!");
            GivePlayerWeapon(playerid, 30, 500);
		}
		case 4:
		{
            SetTimerEx("M",60000,0,"i",playerid);
            TogglePlayerControllable(playerid, 0);
            SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA"Poceli ste da budzite skill, frezovani ste!");
            GivePlayerWeapon(playerid, 31, 500);
		}
	}
	return 1;
}
forward Dezert(playerid);
public Dezert(playerid)
{
	PlayerInfo[playerid][pDesertSkill] +=25;
	SetPlayerSkills(playerid);
	TogglePlayerControllable(playerid, 1);
	ResetPlayerWeapons(playerid);
	return 1;
}
forward Pistolj(playerid);
public Pistolj(playerid)
{
	PlayerInfo[playerid][pPistSkill] +=25;
	SetPlayerSkills(playerid);
	ResetPlayerWeapons(playerid);
	TogglePlayerControllable(playerid, 1);
	return 1;
}
forward ShotGun(playerid);
public ShotGun(playerid)
{
	PlayerInfo[playerid][pShotgSkill] +=25;
	SetPlayerSkills(playerid);
	ResetPlayerWeapons(playerid);
	TogglePlayerControllable(playerid, 1);
	return 1;
}
forward AK(playerid);
public AK(playerid)
{
	PlayerInfo[playerid][pAkSkill] +=25;
	TogglePlayerControllable(playerid, 1);
	SetPlayerSkills(playerid);
	ResetPlayerWeapons(playerid);
	return 1;
}
forward M(playerid);
public M(playerid)
{
	PlayerInfo[playerid][pM4Skill] +=25;
	SetPlayerSkills(playerid);
	TogglePlayerControllable(playerid, 1);
	ResetPlayerWeapons(playerid);
	return 1;
}
CMD:resetaltchat(playerid, params[])
{
	new string[256];
	if(PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid, -1, "Samo Vlasnik.");
	for(new i = 0; i < sizeof(AdminWarns); i++) // Warnovi u TD
	{
		strmid(AdminWarns[ i ][ Text ], "Nema", 0, strlen("Nema"), 255);
	}
	format(string, 256, "~w~Vlasnik ~p~%s (%d) ~w~je restartovao altchat.", GetName(playerid), playerid);
	DodajWarnRed(string);
	return 1;
}
//----------------------------------------------------------------------------//
CMD:postavirpe(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Morate se ulogovati !");
	if(PlayerInfo[playerid][pRPucitelj] >= 7 || PlayerInfo[playerid][pDozvola4] == 1)
	{
		new play, level, string[256];
		if(sscanf(params, "ud", play, level)) return SendClientMessage(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/postavirpe [ID/Ime] [Level (0/1)]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1, "Pogresan ID !");
		if(level < 0 || level > 1) return SCM(playerid, -1, "Level ne moze biti manji od 0, a veci od 1 !");
		PlayerInfo[play][pRPE] = level;
		if(level == 0)
		{
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Vlasnik %s vam je skinuo RP Enforcera.", GetName(playerid));
			SendClientMessage(play, -1, string);
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste skinuli RP Enforcera.", GetName(play), play);
			SendClientMessage(playerid, -1, string);
		}
		else if(level >= 1)
		{
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Vlasnik %s vam je postavio RP Enforcera.", GetName(playerid));
			SendClientMessage(play, -1, string);
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste postavili RP Enforcera.", GetName(play), play);
			SendClientMessage(playerid, -1, string);
		}
		SavePlayer(play);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Samo RPG Ucitelj!");
	}
	return 1;
}
CMD:pokrenivatromet(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, "Niste ovlasceni !");
 	if(FireworkTotal == 0)
  	{
		SCM(playerid, -1, ""CRVENA"[ERROR] "BELA"Nemate nijedan vatromet!");
  		return 1;
  	}
   	if(Fired == 1)
   	{
    	SCM(playerid, -1, ""CRVENA"[ERROR] "BELA"Vec si ispalio!");
     	return 1;
    }
    for(new i = 0; i < FireworkTotal; i++)
    {
    	CreateExplosion(rx6[i] ,ry6[i], rz6[i], 12, 5);
     	new time = MoveDynamicObject(Rocket[i], rx6[i] ,ry6[i], rz6[i] + RocketHeight, 10);
      	MoveDynamicObject(RocketLight[i], rx6[i] ,ry6[i], rz6[i] + 2 + RocketHeight, 10);
       	MoveDynamicObject(RocketSmoke[i], rx6[i] ,ry6[i], rz6[i] + RocketHeight, 10);
        SetTimerEx("Firework", time, 0, "i", i);
    }
    new krkic[200];
    format(krkic,200,""CRVENA"A | "BELA"%s je ispalio vatromet!",GetName(playerid));
    AdminGameMaster(-1, krkic);
    Fired = 1;
    return 1;
}

CMD:postavivatromet(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan/a!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""CRVENA"[GRESKA]"BELA"Nisi ovlascen!");
 	if(FireworkTotal == MAX_LAUNCH) { SCM(playerid, -1, ""CRVENA"[GRESKA]"BELA"Predjen je maksimum!"); return 1; }
    if(Fired == 1) { SCM(playerid, -1, ""CRVENA"[GRESKA]"BELA"Prvo sacekaj da se ispali vatromet!"); return 1; }
    new krkic[200];
    format(krkic,200,""CRVENA"A | "BELA"%s je postavio vatromet!",GetName(playerid));
    AdminGameMaster(-1, krkic);
    new Float:x, Float:y, Float:z, Float:a;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerFacingAngle(playerid, a);
    x += (2 * floatsin(-a, degrees));
    y += (2 * floatcos(-a, degrees));
    Rocket[FireworkTotal] = CreateDynamicObject(3786, x, y, z, 0, 90, 0);
    RocketLight[FireworkTotal] = CreateDynamicObject(354, x, y, z + 1, 0, 90, 0);
    RocketSmoke[FireworkTotal] = CreateDynamicObject(18716, x, y, z - 4, 0, 0, 0);
    rx6[FireworkTotal] = x;
    ry6[FireworkTotal] = y;
    rz6[FireworkTotal] = z;
    RocketExplosions[FireworkTotal] = 0;
    FireworkTotal++;
    return 1;
}
//============================================================================//
CMD:racc(playerid, params[])
{
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1, "Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,-1, "Niste ovlasceni!");
	for(new c = 0; c < MAX_VEHICLES; c++)
	{
		new Float:x,Float:y,Float:z;
		GetVehiclePos(c, x, y, z);
		if(IsPlayerInRangeOfPoint(playerid,50, x, y, z))
		{
			if(!IsPlayerInVehicle(playerid, c))
			{
				SetVehicleToRespawn(c);
			}
		}
	}
	SCM(playerid,-1,""SRWBOJA"Uspesno ste respawnovali sva vozila");
	return 1;
}
CMD:fudbalpozovi(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] > 1)
	{
		new str[128], id, tim;
		if(sscanf(params,"ui",id,tim)) return SCM(playerid, -1, "{33F1FF}[V:RPG] {C0C0C0}/fudbalpozovi [Korisnicki ID ili Ime igraca] [Tim(1-2, 0 - izbaci)]");
		if(!IsPlayerConnected(id)) return SCM(playerid, -1, "Taj igrac je offline!");
		if(tim > 2 || tim < 0) return SCM(playerid, -1, "Tim moze biti 1 ili 2, 0 - izbaci!");
		new ime[MAX_PLAYER_NAME]; new igrac[MAX_PLAYER_NAME];
		GetPlayerName(playerid, ime, sizeof(ime)); GetPlayerName(id, igrac, sizeof(igrac));
		format(str, charsmax(str), " Fudbal | Pozvan si na fudbalsku utakmicu od admina %s. | Tim %d",ime, tim);
	    SCM(id, -1, str);
		format(str, charsmax(str), " Fudbal | Pozvao si igraca %s na fudbalsku utakmicu. | Tim %d",igrac, tim);
	    SCM(id, -1, str);
		fudbaltim[id] = tim;
		ResetPlayerWeapons(id);
		if(fudbalon == true)
		{
		    if(fudbaltim[id] == 1) { SetPlayerPos(id, 1348.9005,2115.8665,11.0364);  SetPlayerInterior(id, 0); Update_Skin(id, 170); }
	        else if(fudbaltim[id] == 2) { SetPlayerPos(id, 1348.7242,2184.3674,11.0344); SetPlayerFacingAngle(id, 85); SetPlayerInterior(id, 0); Update_Skin(id, 250); }
		}
	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini");
	return 1;
}
CMD:fudbalpokreni(playerid, params[])
{
	if(fudbalon == true) return SCM(playerid, -1, "Fudbalska utakmica je vec u toku!");
    if(PlayerInfo[playerid][pAdmin] > 1)
    {
		new Vremef;
		if(sscanf(params,"i",Vremef)) return SCM(playerid, -1, "{33F1FF}[V:RPG] {C0C0C0}/fudbalpokreni [Vreme u minutima]");
		else if(Vremef < 1 || Vremef > 20) return SCM(playerid, -1, "Vreme mora biti izmedju 1 i 20 minuta!");
		fudvre = SetTimer("FudbalVreme", Vremef*59999, false);
		gol = SetTimer("GolCount", 499, true);
  		foreach(new i : Player)
	    {
     		if(fudbaltim[i] == 1) { SetPlayerPos(i, 1348.9005,2115.8665,11.0364); SetPlayerInterior(i, 0); Update_Skin(i, 170); }
     		else if(fudbaltim[i] == 2) { SetPlayerPos(i, 1348.7242,2184.3674,11.0344); SetPlayerFacingAngle(i, 180); SetPlayerInterior(i, 0); Update_Skin(i, 250);}
		}
		new str[128]; new ime[MAX_PLAYER_NAME]; GetPlayerName(playerid, ime, MAX_PLAYER_NAME);
        format(str, sizeof(str), "FUDBAL | Fudbalska utakmica je pocela! | Administrator: %s | Vreme: %d min",ime,Vremef);
		AdminGameMaster(-1, str);
		
		format(str, sizeof(str), "FUDBAL |{FFFFFF} Fudbalksa utakmica je pocela! | {FFFF00} Administrator: %s | Vreme: %d min",ime,Vremef);
		FudbalPoruka(-1, str);
		
		lopta = CreateDynamicObject(2114, 1348.4065,2149.4966,10.2, 0, 0, 0);
		SetDynamicObjectMaterial(lopta, 0, 5033, "union_las", "ws_carparkwall2", 0);
		fudbalon = true;
 	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini");
	return 1;
}
CMD:fudbalzaustavi(playerid, params[])
{
    if(fudbalon == false) return SCM(playerid, -1, "Nogmetna utakmica nije u toku!");
    if(PlayerInfo[playerid][pAdmin] > 1)
    {
	    new ime[MAX_PLAYER_NAME]; GetPlayerName(playerid, ime, sizeof(ime));
	    new str[128];
		format(str, sizeof(str), "FUDBAL | Administrator %s je prekinuo fudbalsku utakmicu!",ime);
		FudbalPoruka(-1, str);
		KillTimer(fudvre);
		FudbalVreme();
	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini");
	return 1;
}
///////////////////////////////////////////////////////
CMD:tduznost(playerid, params[])
{

	new string[128];
	if(PlayerInfo[playerid][pClan] != 14) return SendClientMessage(playerid,-1,""SRWBOJA"ERROR: "SIVA"Samo clanovi Taxi-a!");
	if(!IsPlayerInRangeOfPoint(playerid, 10.0,772.7721,-1354.6233,13.3131)) return SendClientMessage(playerid,-1,""SRWBOJA"ERROR: "SIVA"Niste ispred taxi sluzbe!");
	if(GetTimeEx() < tDuznostVreme[playerid]) return SCM(playerid, -1, ""SRWBOJA"Ovu komandu mozete koristiti svakih 2 minute!");
    format(string,sizeof(string),""BELA"[TAXI] "SRWBOJA"Taxista %s je na duznosti || "BELA"/taxi"SRWBOJA" ||",GetName(playerid));
    SCMTA(-1,string);
	tDuznostVreme[playerid] = GetTimeEx() + 180;
	return 1;
}
CMD:skinisavez(playerid, params[])
{
if (PlayerInfo[playerid][pLider] < 1) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Lideri!");
new playa;
if(sscanf(params,"u", playa)) return SCM(playerid, BELA2, "{FFFFFF}[V:RPG] Pomoc | {00C0FF} /savez [ID/Deo Imena]");
return 1;
}
CMD:savez(playerid, params[])
{
    		//#pragma unused help
    		if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Moras se ulogovati da bi koristio ovu komandu!");
			new playa;
            new lider=PlayerInfo[playerid][pLider];
//            new lider2=PlayerInfo[playa][pLider];
            if (lider ==2 || lider==3 || lider==4 || lider==5 || lider==9 || lider==10 || lider==11 || lider==12 || lider==13 || lider==17 || lider==19 || lider==20 || lider==21 || lider==22 || lider==23)
            {
			if(sscanf(params,"u", playa)) return SCM(playerid, BELA2, "{FFFFFF}[V:RPG] Pomoc | {00C0FF} /savez [ID/Deo Imena]");
            if(playa == INVALID_PLAYER_ID) return SCM(playerid,BELA2, "{FFFFFF}[V:RPG] :{F3FF02} Taj igrac je offline!");
            if(playerid == playa) return SCM(playerid,BELA2, "{FFFFFF}[V:RPG] :{F3FF02} Ne mozes sebi ponuditi savez!");
			if(!PlayerToPoint(50.0,playerid,2421.2996,-1228.7535,24.8754))
            {
            SendClientMessage(playerid, BELA2, "Moras biti ispred Pig Bena(oznacen markerom)!");
            SetPlayerCheckpoint(playerid,2421.2996,-1228.7535,24.8754, 3.0);
		    return 1;
            }
			}
            else
            {
            SendClientMessage(playerid, COLOR_GRAD2, "Niste lider bande mafije");
            }
			if (lider ==2 || lider==3 || lider==4 || lider==5 || lider==9 || lider==10 || lider==11 || lider==12 || lider==13 || lider==17 || lider==19 || lider==20 || lider==21 || lider==22 || lider==23)
            {
            ponudio[playa]=playerid;
            new imeband[100];
            if(lider  == 2){imeband="TVF";}
            if(lider  == 3){imeband="BDT";}
            if(lider  == 4){imeband="Grove";}
            if(lider  == 5){imeband="Ballas";}
            if(lider  == 9){imeband="Condor";}
            if(lider  == 10){imeband="Hitman";}
            if(lider  == 11){imeband="BL";}
            if(lider  == 12){imeband="LCN";}
            if(lider  == 13){imeband="DNB";}
            if(lider  == 17){imeband="BCC";}
            if(lider  == 19){imeband="DR";}
            if(lider  == 20){imeband="RM";}
            if(lider  == 21){imeband="NC";}
            if(lider  == 22){imeband="LC";}
            if(lider  == 23){imeband="TBB";}
            new loginname[64];
            GetPlayerName(playerid,loginname,sizeof(loginname));
            new sdasd[1300];
            format(sdasd, sizeof(sdasd), "Lider %s %s vam je ponudio savez",imeband,loginname);
            SPD(playa, 500,DIALOG_STYLE_MSGBOX,"Savez",sdasd,"Prihvati","Odbi");
            SendClientMessage(playerid,BELA2,"Ponudili ste savez!");
            }
            else
            {
            SendClientMessage(playerid, COLOR_GRAD2, "Igrac nije lider bande ili mafije!");
            }
            return 1;
}
////////////////////////////////////////////////////////////////////
CMD:taxi(playerid, params[])
{

    if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste zatvoreni!");
    if(PozvaoTaxi[playerid] != 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Vec si pozvao taxi, sacekaj da dodje taxista!");
	new string[256];
	format(string, sizeof(string), ""SRWBOJA"Igracu %s je potreban taxi, kucaj /prihvati taxi da vidis njegovu lokaciju. Bice zamrznut kada prihvatis poziv 1 minut.", GetName(playerid));
	ChatTaxi(-1,string);
	SCM(playerid,-1,""SRWBOJA"[TAXI] "BELA"Pozvali ste Taxi!");
	PozvaoTaxi[playerid] = 1;
	SetTimerEx("UkloniTaxi", 10000, false, "d", playerid);
	//Task(playerid, "taxi");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:changename(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 7 && PlayerInfo[playerid][pDozvola9] != 1) return SCM(playerid,-1,"Samo Vlasnik !");
	new id, novoime[32], string[512];
	new year, month, day;
	if(sscanf(params, "us[32]", id, novoime)) return SCM(playerid, -1, "/changename [ID][Ime_Prezime]");
	
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, "Pogresan ID.");
	getdate(year, month, day);
    format(string, sizeof(string), "Vlasnik %s je promenio ime igracu %s u %s (%d-%d-%d)", GetName(playerid), GetName(id), novoime, month, day, year);
    printf("%s",  string);
    format(string, charsmax(string),""VARADERO"[INFO] "BELA"Vlasnik %s [%d] je promenio ime igracu %s [%d] u %s.", GetName(playerid), playerid, GetName(id), id, novoime);
    AdminGameMaster(-1, string);
	SavePlayer(id);
	PromeniImeIgracu(novoime, id);
	format(string, charsmax(string), "Vlasnik %s vam je promenio ime u %s. Molimo vas koristite /promenipass kako bi sacuvali lozinku.", GetName(playerid), novoime);
	SCM(id, -1, string);
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:rent(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    if(MotoRent(GetPlayerVehicleID(playerid)) || AutoRent(GetPlayerVehicleID(playerid)))
    {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1, ""SIVA"Morate biti na mestu vozAca!");
	if(Rentano[playerid] != 299) { SCM(playerid,-1,""SIVA"Vec imas rentano vozilo!"); RemovePlayerFromVehicle(playerid); TogglePlayerControllable(playerid, 1); return 1; }
    foreach(new i : Player)
	{
        if(Rentano[i] == GetPlayerVehicleID(playerid))
        {
     		SCM(playerid,-1, ""SPLAVA"[RENT]: "SIVA"To vozilo je vec rentano!");
     		RemovePlayerFromVehicle(playerid); TogglePlayerControllable(playerid, 1);
     		return 1;
       	}
    }
	if(MotoRent(GetPlayerVehicleID(playerid)))
	{
		if(PlayerInfo[playerid][pNovacDzep] < 80) { SCM(playerid,-1,""SIVA"Nemate dovoljno novca "SPLAVA"(80$)"SIVA"!"); RemovePlayerFromVehicle(playerid); TogglePlayerControllable(playerid, 1); return 1; }
		SCM(playerid,-1,""SPLAVA"[INFO]: "BELA"Rentali ste motor za "SPLAVA"80$.");
		g_NovacMinus(playerid,80);
		FirmaNovac(92, 80);
	}
	Rentano[playerid] = GetPlayerVehicleID(playerid);  TogglePlayerControllable(playerid, 1);
	return 1;
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:promenipin(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Morate se ulogovati !");
	if(PlayerInfo[playerid][pAdmin] >= 6)
 	{
		new player, pin, string[256];
		if(sscanf(params, "ud", player, pin)) return SendClientMessage(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/promenipin [ID/Ime] [Brojke]");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "Igrac nije na serveru.");
		if(pin < 1 || pin > 9999) return SCM(playerid, -1, "AdminPin ne moze biti manji od 1, a veci od 9999 [4 cifre]!");
		PlayerInfo[player][pAdminpin] = pin;		
		sql_update_int(player, "Adminpin", PlayerInfo[player][pAdminpin]);
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Vlasnik %s vam je promenio AdminPin u %d !", GetName(playerid), pin);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste promenili AdminPin u %d !", GetName(player), player, pin);
		SendClientMessage(playerid, -1, string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, "Samo Vlasnik !");
	}
	return 1;
}
CMD:kupinargilu(playerid, params[])
{
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pNovacDzep] < 3000) return SCM(playerid,-1,""SRWBOJA"([V:RPG] ) "SIVA"Nemas dovoljno novca da kupis alat!");
	if(PlayerInfo[playerid][pNargila] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vec imas nargilu!");
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, 1099.8223,-1024.5493,32.4045)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"MoraÃ…Â¡ biti na mestu gde se kupuje nargila!");
    SPD(playerid, 339, DIALOG_STYLE_LIST, "Nargila","{FFFFFF}Al Fakher{EEB91B}[50$]\n{FFFFFF}StarBuzz{EEB91B}[120$]\n{FFFFFF}Nakhla{EEB91B}[200$]","Odaberi","Izlaz");
	return 1;
}
CMD:obrisidrvo(playerid, params[])
{
	//#pragma unused help	
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Vlasnik!");
 	{
		new id = 999999;
		for(new x; x < MAX_DRVECE; x++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 3.0, DI[x][dDrvoX], DI[x][dDrvoY], DI[x][dDrvoZ]))
			{
				id = x;
				break;
			}
		}
		if(id == 999999) return SCM(playerid, -1, "Niste kod nekog drveta!");
		if(DI[id][dPostavljeno] == 0) return SCM(playerid, -1, "To drvo nije postavljeno!");
		new q[64];
		mysql_format( SQL, q, sizeof(q), "SELECT * FROM `drvo` where `dSQLID` = '%d'", id);
		mysql_tquery( SQL, q, "_sqlDeleteDrvo", "ii", playerid, id);		
	}
	return 1;
}

function: _sqlDeleteDrvo(playerid, id)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ako vidis ovo nesto se zbagalo jbg!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `drvo` WHERE `dSQLID` = '%d'", id);
		mysql_tquery(SQL, q);
		DestroyDynamicObject(DrvoObject[id]);
		DestroyDynamic3DTextLabel(DrvoLabel[id]);

		DI[id][dDrvoX] = 
	    DI[id][dDrvoY] = 
	    DI[id][dDrvoZ] = 
	    DI[id][dVrsta] = 
	    DI[id][dRast] = 
	    DI[id][dRastVoca] = 
		DI[id][dIDImanja] = 0;

		va_SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] {FFFFFF}Obrisali ste drvo ID:%d!",id);
		
	}
	return 1;
}


CMD:jedivoce(playerid, params[])
{
 	if(IsPlayerConnected(playerid))
  	{
  	    new str1[128], str2[128], str3[128], string[128];
       	format(str1,128,"| Kruska: (%d)",PlayerInfo[playerid][pKruska]);
       	format(str2,128,"| Jabuka: (%d)",PlayerInfo[playerid][pJabuka]);
       	format(str3,128,"| Sljiva: (%d)",PlayerInfo[playerid][pSljiva]);
       	format(string,500,"%s\n%s\n%s",str1,str2,str3);
  	    SPD(playerid, JEDIVOCE, DSL, ""SRWBOJA"Izaberi voce", string, "Izaberi", "Izadji");
	}
	return 1;
}
CMD:prodajvoce(playerid, params[])
{
	//#pragma unused help
    if(PlayerInfo[playerid][pKruska] == 0 && PlayerInfo[playerid][pJabuka] == 0 && PlayerInfo[playerid][pSljiva] == 0) return SCM(playerid, -1, "Nemas voca!");
	new voce[64], kol, string[300];
	if(!PlayerToPoint(5.0,playerid,1023.7318,-1892.2452,12.7871)){ SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF}Niste na mestu za prodaju !");return 1;}
    if(sscanf(params, "s[64]i", voce, kol)) return SCM(playerid,-1, "/prodajvoce (kruska/jabuka/sljiva) (kolicina)");
    if(kol < 1) return SCM(playerid, -1, "Kolicina ne moze biti manja od 1!");
	{
	    if(strcmp(voce,"kruska",true) == 0)
		{
		    if(kol > PlayerInfo[playerid][pKruska]) return SCM(playerid, -1, "Nemas toliko!");
		    g_NovacPlus(playerid, 270*kol);
	   		PlayerInfo[playerid][pKruska] -= kol;
	   		format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Prodali ste %d krusku/i pijaci i zaradili $%d.",kol,kol*270);
		    SCM(playerid, -1, string);
	   		new mrk[128];
		   	format(mrk, sizeof(mrk), "* %s prodaje krusku/e pijaci...", GetName(playerid));
			e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
		}
		else if(strcmp(voce,"jabuka",true) == 0)
		{
		    if(kol > PlayerInfo[playerid][pJabuka]) return SCM(playerid, -1, "Nemas toliko!");
		    g_NovacPlus(playerid, 290*kol);
	   		PlayerInfo[playerid][pJabuka] -= kol;
	   		format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Prodali ste %d jabuku/a pijaci i zaradili $%d.",kol,kol*290);
		    SCM(playerid, -1, string);
	   		new mrk[128];
		   	format(mrk, sizeof(mrk), "* %s prodaje jabuku/e pijaci...", GetName(playerid));
			e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
		}
		else if(strcmp(voce,"sljiva",true) == 0)
		{
		    if(kol > PlayerInfo[playerid][pSljiva]) return SCM(playerid, -1, "Nemas toliko!");
		    g_NovacPlus(playerid, 320*kol);
	   		PlayerInfo[playerid][pSljiva] -= kol;
	   		format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Prodali ste %d sljivu/a pijaci i zaradili $%d.",kol,kol*320);
		    SCM(playerid, -1, string);
	   		new mrk[128];
		   	format(mrk, sizeof(mrk), "* %s prodaje sljivu/e pijaci...", GetName(playerid));
			e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
		}
	}
	return 1;
}
CMD:ukradivoce(playerid, params[])
{
    //#pragma unused help
    new id = PlayerInfo[playerid][pPosedovanjeImanja];
    if(PlayerInfo[playerid][pPosedovanjeKuce] != -1)
	{
		if(IsPlayerInRangeOfPoint(playerid, II[id][iRadius], II[id][iImanjeX], II[id][iImanjeY], II[id][iImanjeZ])) return SCM(playerid, -1, "Ne mozes krasti sa svog imanja!");
	}

	for(new i; i < sizeof(DI); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, DI[i][dDrvoX], DI[i][dDrvoY], DI[i][dDrvoZ]+2))
		{
		    if(DI[i][dRastVoca] > 23)
		    {
		        DI[i][dRastVoca] = 0;
		        SacuvajDrvo(i);
		        DrvoLabelUpdate(i);
                new mrk[128];
		  	  	format(mrk, sizeof(mrk), "* %s krade voce...", GetName(playerid));
    			e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
				KillTimer(KVTimer[playerid]);
				KVTimer[playerid] = SetTimerEx("ResetKradja", 300000, false, "i", playerid);
				PlayerInfo[playerid][pTrazeniLevel] += 3;
				SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Dobili ste 3 Wanted Level-a zbog kradje!");
				SCM(playerid, -1, ""SRWBOJA"[V:RPG] )"BELA"Uspesno ste ukrali voce!");
    			return 1;
			}
		}
	}
	return 1;
}

CMD:oberivoce(playerid, params[])
{
    //#pragma unused help
    new id = PlayerInfo[playerid][pPosedovanjeImanja];
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Ne mozes iz vozila!");
    if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
    if(!IsPlayerInRangeOfPoint(playerid, II[id][iRadius], II[id][iImanjeX], II[id][iImanjeY], II[id][iImanjeZ])) return SCM(playerid, -1, "Nisi na svom imanju!");
	for(new i; i < sizeof(DI); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, DI[i][dDrvoX], DI[i][dDrvoY], DI[i][dDrvoZ]+2))
		{
		    if(DI[i][dRastVoca] > 23)
		    {
		        DI[i][dRastVoca] = 0;
		        SacuvajDrvo(i);
		        DrvoLabelUpdate(i);
       			new mrk[128];
		  	  	format(mrk, sizeof(mrk), "* %s bere voce...", GetName(playerid));
	   			e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
	   			SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Uspesno ste obrali voce!");
		   		return 1;
			}
		}
	}
	return 1;
}

CMD:posadidrvo(playerid, params[])
{
//#pragma unused help
	#pragma unused params
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Ne moze iz vozila!");
		new id = PlayerInfo[playerid][pPosedovanjeImanja];
		if(!IsPlayerInRangeOfPoint(playerid, II[id][iRadius], II[id][iImanjeX], II[id][iImanjeY], II[id][iImanjeZ])) return SCM(playerid, -1, "Nisi u precniku imanja!");
		new lolo = 0;
		for(new b = 0; b < sizeof(DI); b++)
		{
			if(DI[b][dPostavljeno] == 1)
			{
				if(DI[b][dIDImanja] == PlayerInfo[playerid][pPosedovanjeImanja])
				{
					lolo++;
				}			
			}
		}
		if(lolo > II[PlayerInfo[playerid][pPosedovanjeImanja]][iRadius]/2*3) return SCM(playerid,-1, "Ne mozete vise da posadite drva na vasem imanju!");
		SPD(playerid, 510, DSL, ""SRWBOJA"Izaberi drvo", "Kruska\nJabuka\nSljiva", "Izaberi", "Izadji");
	}
	return 1;
}

CMD:kupidrvo(playerid, params[])
{
	if(!PlayerToPoint(5.0,playerid,1023.8461,-1880.8121,12.8099)) return SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF}Niste na mestu za kupovinu !");
	if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
	SPD(playerid, 508, DSL, ""SRWBOJA"Vrsta drveta", "Kruska ($20000)\nJabuka ($21000)\nSljiva ($22000)", "Izaberi", "Izadji");
	return 1;
}
CMD:prodajsvojeimanje(playerid, params[])
{
	//#pragma unused help
	new string[300];
    if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
	new ownvehkey = PlayerInfo[playerid][pPosedovanjeImanja];
	new giveplayerid, cena;
	if(sscanf(params, "ui", giveplayerid, cena)) return SendClientMessage(playerid,-1, "/prodajsvojeimanje (playerid) (cena)");
	if(IsPlayerConnected(giveplayerid))
	{
 		if(giveplayerid != IPI)
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 3, II[ownvehkey][iImanjeX], II[ownvehkey][iImanjeY], II[ownvehkey][iImanjeZ])) return SCM(playerid, -1, "Nisi kod imanja!");
	        if(PlayerInfo[giveplayerid][pPosedovanjeImanja] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] | "SIVA"Vec imas imanje!");
	    	if(ImanjeOffer[giveplayerid] != 999) return SCM(playerid, -1, "Tom gradjaninu je vec neko ponudio!");
		    if(cena < II[ownvehkey][iCena]/2) return SCM(playerid, -1, "Ne mozete ponuditi nize od polovine cene imanje!");
            if(PlayerInfo[giveplayerid][pLevel] < II[ownvehkey][iLevel]) return SCM(playerid, -1, "Taj igrac nema dovoljan level!");
	 		format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Ponudio si %s da kupi tvoje imanje za $%d.", GetName(giveplayerid), cena);
     		SendClientMessage(playerid, -1, string);
     		format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Vlasnik imanja %s ti nudi da kupis njegovo imanje za $%d! (/prihvati imanje)", GetName(playerid), cena);
     		SendClientMessage(giveplayerid, -1, string);
     		ImanjeOffer[giveplayerid] = playerid;
     		ImanjePrice[giveplayerid] = cena;
		}
	}
	return 1;
}
CMD:prodajimanje(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Vlasnik!");
	new kuca, string[80];
	if(sscanf(params, "i", kuca)) return SendClientMessage(playerid,-1, "/prodajimanje (id)");
	II[kuca][iImaVlasnika] = 0;
	II[kuca][iNeakt] = 0;
	strmid(II[kuca][iVlasnik], "Niko", 0, strlen("Niko"), 255);
	SacuvajImanje(kuca);
	ImanjeLabelIPickup(kuca);
	format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Prodali ste imanje ID:%d!",kuca);
	SCM(playerid, -1, string);
    return 1;
}
CMD:obrisiimanje(playerid, params[])
{
	
	new id;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Vlasnik!");
	if(sscanf(params, "i", id)) return SendClientMessage(playerid,-1, "/obrisiimanje (id imanja)");

	

    new q[64];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `imanja` where `iSQLID` = '%d'", id);
	mysql_tquery( SQL, q, "_sqlDeleteImanje", "ii", playerid, id);

	DestroyDynamic3DTextLabel(ImanjeLabel[id]);
    DestroyDynamicPickup(ImanjePickup[id]);
	for(new i; Imanja:i < Imanja; i++) 
	{ 
		II[id][Imanja:i] = -1; 		
	}
 
	for(new x; x < MAX_DRVECE; x++)
	{
	    if(DI[x][dIDImanja] == id)
		{
			DestroyDynamicObject(DrvoObject[x]);
			DestroyDynamic3DTextLabel(DrvoLabel[x]);
			DI[x][dDrvoX] = 
		    DI[x][dDrvoY] = 
		    DI[x][dDrvoZ] = 
		    DI[x][dVrsta] = 
		    DI[x][dRast] = 
		    DI[x][dRastVoca] = 
			DI[x][dIDImanja] = 0;
			
			q[0] = EOS;
			mysql_format( SQL, q, sizeof(q), "DELETE FROM `drvo` WHERE `dSQLID` = '%d'", x);
			mysql_tquery(SQL, q);
			
		}
	}	
	return 1;
}
function: _sqlDeleteImanje(playerid, id)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID tog imanja nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `imanja` WHERE `iSQLID` = '%d'", id);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] {FFFFFF}Obrisali ste imanje ID:%d!",id);
		imanja--;
	}
	return 1;
}
CMD:kreirajimanje(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Vlasnik!");
 	{
		new imid, cena, lvl, radius;
	    if(sscanf(params, "iii", lvl , cena, radius))
		{
			SendClientMessage(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"/kreirajimanje (level) (cena) (precnik)");
			return 1;
		}

		new q[128];
		mysql_format(SQL, q, sizeof q, "INSERT INTO `imanja` SET `iCena` = '%d', `iLevel` = '%d'",cena, lvl);		
		mysql_tquery(SQL, q, "_sqlInsertImanje", "ddddd", imid, playerid, cena, lvl, radius);		
	}
	return 1;
}
function: _sqlInsertImanje(imid, playerid, cena, lvl, radius)
{
	imid = cache_insert_id();
	II[imid][iSQLID] = imid;

	GetPlayerPos(playerid, X,Y,Z);
	II[imid][iCena] = cena;
	II[imid][iLevel] = lvl;
	II[imid][iImanjeX] = X;
	II[imid][iImanjeY] = Y;
	II[imid][iImanjeZ] = Z;
	II[imid][iImaVlasnika] = 0;
	II[imid][iPostavljeno] = 1;
	II[imid][iRadius] = radius;
	strmid(II[imid][iVlasnik],"Niko",0,strlen("Niko"),255);

	new string[300];
	format(string,sizeof(string),"{6EF83C}Imanje na prodaju!\nCena: {FFFFFF}$%d\n{6EF83C}Nivo: {FFFFFF}%d\n{6EF83C}Adresa: {FFFFFF}%d\n{6EF83C}Precnik: {FFFFFF}%dm\n{6EF83C}Za kupovinu /kupiimanje",II[imid][iCena],II[imid][iLevel],imid,II[imid][iRadius]);
	ImanjeLabel[imid] = CreateDynamic3DTextLabel(string ,-1,II[imid][iImanjeX], II[imid][iImanjeY], II[imid][iImanjeZ],15);
	ImanjePickup[imid] = CreateDynamicPickup(1239, 1, II[imid][iImanjeX], II[imid][iImanjeY], II[imid][iImanjeZ]);
	format(string,sizeof(string),""SRWBOJA"[V:RPG] {FFFFFF}Imanje ID:%d je napravljeno.",imid);
	SCM(playerid,-1, string);
	ImanjeLabelIPickup(imid);
	SacuvajImanje(imid);
	imanja++;
}
CMD:eimanje(playerid, params[])
{
    //#pragma unused help
 	{
		new i = 9999;
		if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Vlasnik!");
		for(new x; x < MAX_IMANJA; x++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 3.0, II[x][iImanjeX], II[x][iImanjeY], II[x][iImanjeZ]))
			{
				i = x;
				IzmenaImanja[playerid] = x;
				break;
			}
		}
		if(i == 9999) return SCM(playerid, -1, "Niste kod imanja!");
		new akcija[16],radnja;
		new string[300];
		if(sscanf(params, "s[16]d", akcija,radnja))
	    {
			SendClientMessage(playerid,-1, "/eimanje Level,Cena,Precnik");
			return 1;
		}
		if(!strcmp(akcija, "level", true))
		{
	        II[IzmenaImanja[playerid]][iLevel] = radnja;
			ImanjeLabelIPickup(i);
			SacuvajImanje(i);
			format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Izmenili ste level imanja id: %d u %d!", i, radnja);
			SCM(playerid, -1, string);
			IzmenaImanja[playerid] = 9999;
		}
		else if(!strcmp(akcija, "cena", true))
		{
	        II[IzmenaImanja[playerid]][iCena] = radnja;
			ImanjeLabelIPickup(i);
			SacuvajImanje(i);
			format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Izmenili ste cenu imanja id: %d u %d!", i, radnja);
			SCM(playerid, -1, string);
			IzmenaImanja[playerid] = 9999;
		}
		else if(!strcmp(akcija, "precnik", true))
		{
	        II[IzmenaImanja[playerid]][iRadius] = radnja;
			ImanjeLabelIPickup(i);
			SacuvajImanje(i);
			format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Izmenili ste precnik imanja id: %d u %d!", i, radnja);
			SCM(playerid, -1, string);
			IzmenaImanja[playerid] = 9999;
		}
		else return SCM(playerid, -1, "Netacno uneseno radnja editovanja!");
	}
	return 1;
}

CMD:kupiimanje(playerid, params[])
{
    //#pragma unused help
	for(new i; i < sizeof(II); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5, II[i][iImanjeX], II[i][iImanjeY], II[i][iImanjeZ]))
		{
			if(!strcmp(II[i][iVlasnik], "Niko", true) && II[i][iImaVlasnika] == 0)
			{
				if(PlayerInfo[playerid][pLevel] < II[i][iLevel]) return SCM(playerid, -1, "Nemate dovoljan level za ovo imanje!");
                if(PlayerInfo[playerid][pPosedovanjeImanja] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] | "SIVA"Vec imas imanje!");
				if(GetPlayerMoney(playerid) < II[i][iCena]) return SCM(playerid, -1, "Nemas dovoljno novca za ovo imanje!");
                new send[30];
				GetPlayerName(playerid, send, sizeof(send));
				strmid(II[i][iVlasnik], send, 0, strlen(send), 255);
				II[i][iImaVlasnika] = 1;
				PlayerInfo[playerid][pPosedovanjeImanja] = i;
				SCM(playerid,-1, ""SRWBOJA"[V:RPG] {FFFFFF}Cestitamo, kupili ste imanje!");
				SCM(playerid,-1, "Za komande koristite /imanje!");
				GivePlayerMoney(playerid, -II[i][iCena]);
				ImanjeLabelIPickup(i);
				SacuvajImanje(i);
				return 1;
			}
			else return SCM(playerid, -1, "To imanje se ne prodaje !");
		}
	}
	return 1;
}
CMD:imanje(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
	new imedas[MAX_PLAYER_NAME];
	GetPlayerName(playerid, imedas, sizeof(imedas));
	if(strcmp(II[PlayerInfo[playerid][pPosedovanjeImanja]][iVlasnik], imedas, true)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Niste vlasnik tog imanja!");
    SPD(playerid, 506, DIALOG_STYLE_LIST, ""SPLAVA"Imanje Opcije", "Info\nProdaj imanje drzavi\nLociraj", "Odaberi", "Nazad");
	return 1;
}
CMD:veh(playerid, params[])
{
	if( isnull( params ) ) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Koristite: /veh [ID Modela]");
	if(!IsPlayerConnected(playerid)) return 0;
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(strval(params) < 400 || strval(params) > 611) return SCM(playerid, -1, "{FF6600}AS | {FFFFFF}ID Modela mora biti veci od 399 i manji od 612!");
		new Float:Poz[4];
		GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		GetPlayerFacingAngle(playerid, Poz[3]);
		new v = CreateVehicle(strval(params), Poz[0]+4, Poz[1], Poz[2], Poz[3], 0, 0, 200);
		createdcar[v] = v;
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(CmdString, sizeof CmdString, "{FF6600}Administrator CMD{FFFFFF}: %s je stvorio | Vozilo ID: %d | Model: %s",sendername, v, ImenaVozila[strval(params) - 400]);
		AdminGameMaster( -1, CmdString);
	    new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(v, 1, 1, alarm, doors, bonnet, boot, objective);
		PutPlayerInVehicle(playerid, v, 0);
	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini");
	return 1;
}
CMD:avehdelete(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREY,"{FF6600}* {FFFFFF}Ne mozes ti to!"), PlayerPlaySound(playerid, 1085, 0, 0 , 0);
	if(IsPlayerInAnyVehicle(playerid))
	{
        new sendername[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    new string[256];
	    format(string, 256, "{FFFFFF}[{FF6600}Administrator CMD{FFFFFF}]: %s {FFFFFF}je unistio vozilo: {FF6600}%d.",sendername,GetPlayerVehicleID(playerid));
		AdminGameMaster(-1, string);
	    DestroyVehicle(GetPlayerVehicleID(playerid));
		RemovePlayerFromVehicle(playerid);
	    SendClientMessage(playerid, COLOR_GREY, "{FF6600}* {FFFFFF}Vozilo unisteno!");
	}
	return 1;
}
CMD:ugasialtchat(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >=1 || PlayerInfo[playerid][pSpecteam] >=1 || PlayerInfo[playerid][pTestAdmin] >=1)
 	TextDrawHideForPlayer(playerid, WarnTD);
	return 1;
}
CMD:upalialtchat(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >=1 || PlayerInfo[playerid][pSpecteam] >=1 || PlayerInfo[playerid][pTestAdmin] >=1)
 	TextDrawShowForPlayer(playerid, WarnTD);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:aocistidosije(playerid, params[])
{

	new id;
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (AL 4+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/aocistidosije [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
	PlayerInfo[id][pTrazeniLevel] = 0;
	strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);
	new string[228];
	format(string, charsmax(string), ""CRVENA"A | "BELA"Administrator %s vam je ocistio dosije!",GetName(playerid)); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""CRVENA"A | "BELA"Ocistili ste dosije igracu %s!",GetName(id)); //conver
	SCM(playerid,-1, string);
	format(string, sizeof(string), ""SRWBOJA"Dosije | "BELA"%s "SRWBOJA"je ocistio dosije igracu "BELA"%s",GetName(playerid),GetName(id));
	AdminGameMaster(-1,string);
	SetPlayerColor(id, BELA2);
	return 1;
}
CMD:izbrisigarazu(playerid, params[])
{
    new targetid;
    
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo Vlasnik!");
	if(sscanf(params,"i",targetid)) return SCM(playerid,-1,""SIVA"USE: "BELA"/izbrisigarazu [ID]");	
	
 	new q[64];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `garaze` where `gSQLID` = '%d'", targetid);
	mysql_tquery( SQL, q, "_sqlDeleteGarage", "ii", playerid, targetid);
	DestroyDynamic3DTextLabel(GarageText[targetid]);	
	return 1;
}

function: _sqlDeleteGarage(playerid, gid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID te garaze nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `garaze` WHERE `gSQLID` = '%d'", gid);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, "Obrisali ste garazu id: %d", gid);
		va_SendClientMessageToAll(-1 , ""SRWBOJA"[V:RPG] "CRVENA"Administrator %s je obrisao Garazu sa IDem %d",GetName(playerid), gid);
	}
	return 1;
}

CMD:kreirajgarazu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (AL 6+)!");
	new cena, id;
	if(sscanf(params, "i", cena)) return SCM(playerid, COLOR_WHITE, "/napravigarazu [Cena]");
	
	new q[128];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `garaze` SET `gPrice` = '%d'", cena);		
	mysql_tquery(SQL, q, "_sqlInsertGarage", "ddd", id, playerid, cena);
	return 1;

}

function: _sqlInsertGarage( id, playerid, cena)
{	
	id = cache_insert_id();
	GarageInfo[id][gSQLID] = id;	

    new Float:Pos[3];
	new world;
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	world = GetPlayerVirtualWorld(playerid);
	new Float: A;
	GetPlayerFacingAngle(playerid, A);
	new int = GetPlayerInterior(playerid);	
	GarageInfo[id][gInsideInt] = 0;
	GarageInfo[id][gExitX] = 1643.839843;
	GarageInfo[id][gExitY] = -1514.819580;
	GarageInfo[id][gExitZ] = 13.566620;
	GarageInfo[id][gOwned] = 0;
	GarageInfo[id][gPrice] = cena;
	GarageInfo[id][gType] = 4;
	GarageInfo[id][gEntranceX] = Pos[0];
	GarageInfo[id][gEntranceY] = Pos[1];
	GarageInfo[id][gEntranceZ] = Pos[2];
	GarageInfo[id][gEntranceA] = 180;
	GarageInfo[id][gLocked] = 1;
	GarageInfo[id][gInt] = int;
	GarageInfo[id][gWorld] =world;
	GarageInfo[id][gInsideWorld] = id;
	new string[30];
	format(string, sizeof(string), "None");
	strmid(GarageInfo[id][gName], string, 0, strlen(string), 255);
	new str1[30];
	format(str1, sizeof(str1), "Niko");
	strmid(GarageInfo[id][gOwner], str1, 0, strlen(str1), 255);
	new str[128];
	format(str, sizeof(str), ""SRWBOJA"Garaza "BELA"%s\n"SRWBOJA"Vlasnik: "BELA"Drzava\n"SRWBOJA"Cena: "BELA"%d\n"SRWBOJA"/kupigarazu", GarageInfo[id][gName], GarageInfo[id][gPrice]);
	GarageText[id] = CreateDynamic3DTextLabel(str, 0x008080FF, GarageInfo[id][gEntranceX], GarageInfo[id][gEntranceY], GarageInfo[id][gEntranceZ], 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
	SaveGarage(id);
	return 1;
}

CMD:kupigarazu(playerid, params[])
{
	for(new id; id < 199;id++)
	{
		new ime[MAX_PLAYER_NAME];
		GetPlayerName(playerid, ime, 24);
		if(strcmp(GarageInfo[id][gOwner],ime, true ) == 0) return 0;
		if(IsPlayerInRangeOfPoint(playerid, 4.1, GarageInfo[id][gEntranceX], GarageInfo[id][gEntranceY], GarageInfo[id][gEntranceZ]))
		{
			if(GetPlayerMoney(playerid) < GarageInfo[id][gPrice]) return SCM(playerid, -1, "Nemate dovoljno novca");
			g_NovacMinus(playerid, -GarageInfo[id][gPrice]);
			strmid(GarageInfo[id][gOwner], ime, 0, strlen(ime), 255);
			GarageInfo[id][gOwned] = 1;
			SaveGarage(id);
			SCM(playerid, -1, "Kupili ste garazu, koristite /garaza za ostalu pomoc");
			new str[128];
			format(str, sizeof(str), ""SRWBOJA"Garaza "BELA"%s\n"SRWBOJA"Vlasnik: "BELA"%s\n"SRWBOJA"Space za ulazak", GarageInfo[id][gName], GarageInfo[id][gOwner]);
			UpdateDynamic3DTextLabelText(GarageText[id],-1,str);
		}
	}
	return 1;
}
CMD:garaza(playerid, params[])
{
	for(new id; id < 199; id++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, GarageInfo[id][gEntranceX], GarageInfo[id][gEntranceY], GarageInfo[id][gEntranceZ]))
		{
			new ime[MAX_PLAYER_NAME];
			GetPlayerName(playerid, ime, 24);
			if(strcmp(GarageInfo[id][gOwner],ime, false ) == 0)
			{
				SPD(playerid, 3123, DIALOG_STYLE_LIST, "Garaza", "Ime\nProdaj drzavi\nZakljucaj\nOtkljucaj", "Odaberi", "Odustani");
			}
		}
	}
	return 1;
}
CMD:mreze(playerid, params[])
{
	SPD(playerid, 6423, DIALOG_STYLE_MSGBOX, ""SRWBOJA"SOCIJALNE MREZE", ""BELA"Varadero Forum: "SRWBOJA"www.varadero-samp.com\n"BELA"Varadero Discord: "SRWBOJA"discord.varadero-samp.com\n"BELA"Varadero Facebook: "SRWBOJA"facebook.com/varadero2019\n"BELA"Varadero Instagram: "SRWBOJA"instagram.com/varadero.ogc", "X", "");
    return 1;
}
///////////////////////////////////////////////////////
CMD:apopravi(playerid, params[])
{
	if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, ""SRWBOJA"#!: Morate se ulogovati da bi koristili komande.");
	if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid, -1, "Pridruzeni ste eventu !");
	if(PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
	    new player;
	    if(sscanf(params, "U(-1)", player)) return SCM(playerid, -1, ""SRWBOJA"[KORISCENJE] "BELA"/apopravi [ID/IME]");
	    if(!IsPlayerConnected(player))
	    {
		    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Morate biti u vozilu !");
			SetPVarInt(playerid, "PopravkaVozila", 1);
			RepairVehicle(GetPlayerVehicleID(playerid));
			new aRank[50], string[256];
			if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
            if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
            if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
            if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
            if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
            if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
            if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
            if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
			if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
			if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
			if(PlayerInfo[playerid][pTestAdmin] == 1) { aRank = "Test Admin"; }
			format(string,sizeof(string),""VARADERO"[INFO] "BELA"%s %s je popravio vozilo !", aRank, GetName(playerid));
			AdminGameMaster(-1, string);
			SCM(playerid,-1,""VARADERO"[INFO] "BELA"Popravili ste vozilo !");
		}
		else if(IsPlayerConnected(player))
	    {
	        if(!IsPlayerInAnyVehicle(player)) return SCM(playerid, -1, ""SRWBOJA"* Igrac mora biti u vozilu.");
	     	if(PlayerInfo[player][pTrazeniLevel] >= 1) return SCM(playerid, -1, ""SRWBOJA"* Ne mozes popravljati vozilo igracu koji ima trazeni level.");
			RepairVehicle(GetPlayerVehicleID(player));
			SetVehicleHealth(GetPlayerVehicleID(player), 999.0);
			new buffer[256], aRank[50];
            if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
            if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
            if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
            if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
            if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
            if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
            if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
            if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
			if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
			if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
			if(PlayerInfo[playerid][pTestAdmin] == 1) { aRank = "Test Admin"; }
			format(buffer,sizeof buffer,""VARADERO"[INFO] "BELA"%s %s vam je popravio vozilo.", aRank, GetName(playerid));
			SCM(player, -1, buffer);
			format(buffer,sizeof buffer,""VARADERO"[INFO] "BELA"Igracu %s [%d] ste popravili vozilo.", GetName(player), player);
			SCM(playerid, -1, buffer);
		}
	}
	return 1;
}
CMD:vipvozilo(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pUPUBG] == 1) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Ne Moze da koristite komande na PUBG-U");
    if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "CRVENA"Ne mozete da koristite komande na eventu !!");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Ne mozes to u vozilu si");
    if( PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete koristi ovu komandu jel ste u jail!");
    if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"ERROR | "CRVENA"Des poso bre? Imas Wanted Level pa ne moze prc !!!!");
    if(GetPlayerInterior(playerid) > 0) return SCM(playerid,-1,""CRVENA"ERROR "BELA"Ne mozete koristiti /join dok ste u enterijeru!");
	new Float:Pos[4];
	GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	if(PlayerInfo[playerid][pVip] >= 4)
	{
		if(AdminVozilo[playerid] == -1)
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, alarm, doors, bonnet, boot, objective);
			vozilo4 = CreateVehicle(439,Pos[0],Pos[1],Pos[2],Pos[3],random(1),random(1),500);
			PutPlayerInVehicle(playerid,vozilo4,0);
			AdminVozilo[playerid] = vozilo4;
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Stvorili ste Vip Vozilo.");
		}
		else if(AdminVozilo[playerid] != -1)
		{
			DestroyVehicle(AdminVozilo[playerid]);
			AdminVozilo[playerid] = -1;
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Unistili ste Vip Vozilo.");
		}
	}
	else return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo Vip 4+.");
	return 1;
}
//----------------------------- [ Vip Motor ] ----------------------------------
CMD:vipmotor(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pUPUBG] == 1) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Ne Moze da koristite komande na PUBG-U");
    if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"ERROR | "SPLAVA"Ne mozete koristiti ovu komandu jer ste zatvoreni!");
    if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""CRVENA"ERROR "SIVA"Ti si zavezan ne mozes koristiti ovu komandu!");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA" Ne mozes to u vozilu si");
    if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "CRVENA"Ne mozete da koristite komande na eventu !!");
    if( PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete koristi ovu komandu jel ste u jail!");
    if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"ERROR | "CRVENA"Des poso bre? Imas Wanted Level pa ne moze prc !!!!");
    if(GetPlayerInterior(playerid) > 0) return SCM(playerid,-1,""CRVENA"ERROR "BELA"Ne mozete koristiti /join dok ste u enterijeru!");
   	if(PolicajacNaDuznosti[playerid] == 1) return SendClientMessage(playerid,-1,""VARADERO"[V:RPG] "SIVA"Prvo iskljuci Policisko Duznost!");
	new Float:Pos[4];
	GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	if(PlayerInfo[playerid][pVip] >= 4)
	{
		if(AdminVozilo[playerid] == -1)
		{
			vozilo4 = CreateVehicle(463,Pos[0],Pos[1],Pos[2],Pos[3],random(1),random(1),500);
			PutPlayerInVehicle(playerid,vozilo4,0);
			AdminVozilo[playerid] = vozilo4;
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Stvorili ste Vip motor.");
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
		}
		else if(AdminVozilo[playerid] != -1)
		{
			DestroyVehicle(AdminVozilo[playerid]);
			AdminVozilo[playerid] = -1;
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Unistili ste Vip motor.");
		}
	}
	else return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Samo Vip 4+");
	return 1;
}
///////////////////////////////////////////////////////
CMD:cmarenjeoff(playerid, params[])
{
    //#pragma unused help
	new pplayerid,string[128];
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 2) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo A/GM Level 2+!");
	if(sscanf(params, "us[48]", pplayerid)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/cmarenjeoff [ID/Ime]");
	if(!IsPlayerConnected(pplayerid)) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Pogresan ID!");
	if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Jel si mi dobar?");
	PlayerInfo[pplayerid][pCmarenje] += 1;
	format(string,sizeof(string),"INFO | "BELA"Administrator %s Vas upozoorio za CMARANJE-OFF!(%d /3 po redu)",GetName(playerid),PlayerInfo[pplayerid][pCmarenje]);
	SCM(pplayerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Dali ste Upozorenje igracu za CMARANJE-OFF! %s",GetName(pplayerid));
	SCM(playerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Administrator %s je dao Upozorenje igracu za CMARANJE-OFF! %s",GetName(playerid),GetName(pplayerid));
	SCMTA(-1,string);
	format(string,sizeof(string),""SRWBOJA"CMARANJE-OFF | "BELA"Administrator %s je dao CmaranjeOff igracu %s ",GetName(playerid),GetName(pplayerid));
	SCMTA(-1,string);
	if(PlayerInfo[pplayerid][pCmarenje] >= 3)
	{
		format(string,sizeof(string),""SRWBOJA"JAIL | "SIVA"Igrac %s je zatvoren zbog CMARANJE-OFF broja upozorenje(3/3)",GetName(pplayerid));
		SCMTA(-1,string);
		ResetPlayerWeapons(pplayerid);
		SetPlayerPos(pplayerid, 107.2300,1920.6311,18.5208);
		SetPlayerWorldBounds(pplayerid, 337.5694,101.5826,1940.9759,1798.7453);
		SetPlayerInterior(pplayerid, 0);
		PlayerInfo[pplayerid][pZatvor] = 3;
		PlayerInfo[pplayerid][pZatvorenVreme] = 360;
	}
	return 1;
}

CMD:buygold(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
    new string[64];
    if(!IsPlayerInRangeOfPoint(playerid, 10.0, 299.9264,1416.3710,727.4360)) return SendClientMessage(playerid, COLOR_GREY, "  Niste u zlatari");
	if(PlayerInfo[playerid][pNovacDzep] <= KupovnaCena) return GameTextForPlayer(playerid, "~r~Nemate dovoljno novca", 5000, 1);
	format(string, sizeof(string), "* Kupili ste 1 zlatnik za $%d.", KupovnaCena);
	SendClientMessage(playerid, COLOR_WHITE, string);
	PlayerInfo[playerid][pZlato] += 1;
	KupovnaCena++;
	ProdajnaCena++;
	g_NovacMinus(playerid, KupovnaCena);
	new berzastr[300];
	format(berzastr, sizeof(berzastr), "{0084e3}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ /GOLDHELP ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
    UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
	return 1;
}
CMD:sellgold(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
    new string[64];
    if(!IsPlayerInRangeOfPoint(playerid, 10.0, 299.9264,1416.3710,727.4360)) return SendClientMessage(playerid, COLOR_GREY, "  Niste u zlatari");
	if(PlayerInfo[playerid][pZlato] < 1) return SendClientMessage(playerid, COLOR_GREY, "  Nemate zlata!");
	format(string, sizeof(string), "* Prodali ste 1 zlatnik za $%d.", ProdajnaCena);
	SendClientMessage(playerid, COLOR_WHITE, string);
	PlayerInfo[playerid][pZlato] -= 1;
	ProdajnaCena--;
	KupovnaCena--;
	g_NovacPlus(playerid, ProdajnaCena);
	new berzastr1[300];
	format(berzastr1, sizeof(berzastr1), "{0084e3}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ /GOLDHELP ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
	UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr1);
	return 1;
}
CMD:skills(playerid, params[])
{
    CheckShowSkills(playerid,playerid);
	return 1;
}
////////////////////////////////////////////////////////////////////////////
CMD:skinidisarm(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    new pid,vreme,razlog,str[128];
    if(PlayerInfo[playerid][pAdmin] < 5 ) return SCM(playerid, -1, ""CRVENA"Samo A5+");
    if(AdminDuty[playerid] == 0 ) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    if(sscanf(params, "u", pid,vreme,razlog)) return SCM(playerid,-1,""SIVA"[V:RPG] Pomoc | "BELA"/skinidisarm [id]");
    if(PlayerInfo[pid][pDisarm] == 0) return SCM(playerid,-1,""SIVA"[GRESKA]: Taj igrac nije disarmovan!");
    if(!IsPlayerConnected(pid)) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Pogresan ID!");
    PlayerInfo[pid][pDisarm] = 0;
    PlayerInfo[pid][pDisarmVreme] = 0;
    format(str,sizeof str,""CRVENA"Skinut vam je disarm od strane Admina %s", GetName(playerid));
    SCM(pid,-1,str);
    format(str,sizeof str,""VARADERO"Skinuli ste disarm igraca %s ", GetName(pid));
    SCM(playerid,-1,str);
    return 1;
}
///////////////////////////////////////////////////////
CMD:disarmtime(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pDisarm] == 0) return SCM(playerid,-1,"GRESKA | "VARADERO"Nijesi disarmovan");
    new string[128], sati, minuta; gettime(sati, minuta);
    if(PlayerInfo[playerid][pDisarmVreme] > 0)
    {
        format(string, sizeof(string), "~y~| ~w~%d:%d ~y~|~n~~y~Disarm vrijeme: ~r~%d", sati,minuta, PlayerInfo[playerid][pDisarmVreme]);
    }
    GameTextForPlayer(playerid, string, 5000, 3);
    return 1;
}
CMD:dlista(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
		new x = 0, string[128];
		SCM(playerid, -1, ""SRWBOJA"|-------------------Disarmovani Igraci-------------------|");
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pDisarm] != 0)
			{
				format(string,sizeof(string), "- %s(ID:%d) | Vrijeme : [ %d ] -", GetName(i), i,PlayerInfo[i][pDisarmVreme]);
				SCM(playerid, -1, string);
				x++;
			}
		}
		if(x == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Nema disarmovanih igraca igraca!");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (AL 1+)!");
	return 1;
}
///////////////////////////////////////////////////////
CMD:disarm(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    new pid,vrijeme,razlog[128],str[128];
    if(PlayerInfo[playerid][pAdmin] < 6 ) return SCM(playerid, -1, ""CRVENA"Samo A6+");
    if(AdminDuty[playerid] == 0 ) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    if(sscanf(params, "uis[48]", pid,vrijeme,razlog)) return SCM(playerid,-1,""SIVA"[V:RPG] Pomoc | "BELA"/disarm [id] [vrijeme(minut]] [razlog]");
    if(PlayerInfo[pid][pDisarm] == 1) return SCM(playerid,-1,""SIVA"[GRESKA]: Taj igrac je vec disarmovan!");
    if(!IsPlayerConnected(pid)) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Pogresan ID!");
    PlayerInfo[pid][pDisarm] = 1;
    PlayerInfo[pid][pDisarmVreme] = vrijeme * 60;
    format(str,sizeof str,""CRVENA"Disarmovani ste od strane admina %s | "CRVENA"Razlog: "BELA"%s! | "CRVENA"Vrijeme :"BELA" %d minuta", GetName(playerid),razlog,vrijeme);
    SCM(pid,-1,str);
    format(str,sizeof str,""VARADERO"Disarmovali ste igraca %s | Razlog: %s!", GetName(pid),razlog);
    ResetPlayerWeapons(pid);
    SCM(playerid,-1,str);
    return 1;
}
CMD:glasanje(playerid, params[])
{
	new rezu[128];
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	if(sscanf(params,"s[128]",rezu)) return SCM(playerid, COLOR_RED, ""SRWBOJA"[KORISTENJE] "BELA"/glasanje [pitanje]");
    votetimer = SetTimer("KrajGlasanja",80000,false);
	format(nellys,sizeof(nellys),"[GLASANJE] %s (%d)  %s?, Glasajte sa /da ili /ne",GetName(playerid),playerid,rezu);
	SCMTA(COLOR_RED,nellys);
	votation = 1;
	return 1;
}
CMD:abanka(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
    new targetid;
    if(sscanf(params,"i",targetid)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/abanka [1/0 - Otvorena/Zatvorena]");
    if(targetid == 0)
	{
	g_Settings |= SETTING_BANK_DISABLED;
	}
	else
	{
	g_Settings &= ~SETTING_BANK_DISABLED;
    }
    new string[128];
    format(string,sizeof(string),""CRVENA"A | "BELA"%s je izmenio podesavanja za Banku. Banka je %s",GetName(playerid), (g_Settings & SETTING_BANK_DISABLED) ? (CRVENA"Zatvorena") : (ZELENA"Otvorena"));
    AdminGameMaster(-1, string);
    SendClientMessage(playerid, -1, "Uspesno ste izmenili podesavanja za banku!");
    return 1;
}
CMD:prekiniglasanje(playerid, params[])
{
	new string[124];
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	voteyes = 0; voteno = 0; votation = 0; KillTimer(votetimer);
	format(string,sizeof(string),""SIVA"[INFO] "SZELENA"Administrator %s je ugasio Glasanje!",GetName(playerid));
	SCMTA(-1,string);
	return 1;
}
CMD:da(playerid, params[])
{
	if(votation == 1)
	{
		if(votedrecently[playerid] == 0)
		{
			voteyes ++;
			votedrecently[playerid] = 1;
			SCM(playerid, COLOR_RED, "Glasali ste za.");
			format(nellys,sizeof(nellys),"[REZULTATI] {FFFFFF}(%s) Da %d -- Ne %d",GetName(playerid),voteyes,voteno);
			SCMTA(0x80DD22C8,nellys);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Vec ste iskoristili pravo glasa.");
   			return 1;
		}
	}
	else
	{
		SCM(playerid, COLOR_RED, "Trenutno nije postavljeno nijedno glasanje.");
		return 1;
	}
	return 1;
}
CMD:ne(playerid, params[])
{
	if(votedrecently[playerid] == 0)
	{
		if(votation == 1)
		{
			voteno ++;
			votedrecently[playerid] = 1;
			SCM(playerid, COLOR_RED, "Glasali ste protiv.");
			format(nellys,sizeof(nellys),"[REZULTATI]{FFFFFF} (%s) Da %d -- Ne %d",GetName(playerid),voteyes,voteno);
			SCMTA(0x80DD22C8,nellys);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Trenutno nije postavljeno nijedno glasanje.");
			return 1;
		}
	}
	else
	{
		SCM(playerid, COLOR_RED, "Vec ste iskoristili pravo glasa.");
		return 1;
	}
	return 1;
}
CMD:kupiauto(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pDvaV] == 1)
	{
		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1 && PlayerInfo[playerid][pPosedovanjeAuta2] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes 2 auta!");
	}
	else
	{
		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes auto!");
	}
	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7+ za kupovinu auta!");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 565.0984, -1285.4423, 17.2482) || IsPlayerInRangeOfPoint(playerid, 5.0, 2172.9819,1400.6012,11.0625))
	{
		new string[128];
		if(KupovinaAuta[playerid] == true) return SCM(playerid,-1,""SIVA"Vec gledate katalog vozila!");
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Ne mozete gledati katalog iz vozila!");
		if(ServerInfo[isdozvolakupovine] == 0) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Administrator je zabranio kupovinu auta");
		if(autokatalog != 0) return SCM(playerid,-1,""SIVA"Neko vec pregleda katalog!");
		TogglePlayerControllable(playerid, 0); KupovinaAuta[playerid] = true; PrikaziVozilaTD(playerid); autokatalog = 1;
		format(string,sizeof(string),"%s",ImenaVozila[GetVehicleModel(IzlozbenoAuto) - 400]);
		PlayerTextDrawSetString(playerid,TDProdajaVozila[2][playerid],string);
		format(string,sizeof(string),"Cena: ~g~%d$",AutoSalon[AutoModel][1]);
		PlayerTextDrawSetString(playerid,TDProdajaVozila[3][playerid],string);
		SCM(playerid, -1, "[V:RPG] "ZELENA"VAZNO!!! SISTEM KORISTI VASE TRENUTNE TIPKE, DAKLE AKO STE MENJALI PROCITAJTE!!!");
	    SCM(playerid, -1, "[V:RPG] "ZELENA"Koristite tipke NUMPAD 1-6 ili LEVO/DESNO za listanje vozila!");
		SCM(playerid, -1, "[V:RPG] "ZELENA"Za kupovinu stisnite ENTER ili F! ");
		SCM(playerid, -1, "[V:RPG] "ZELENA"Za izlaz stisnite tipku za skakanje!(SHIFT/SPACE)");
		SetPlayerCameraPos(playerid, 550.461853, -1278.702392, 21.356954);
	    SetPlayerCameraLookAt(playerid, 547.587158, -1274.942382, 19.745004);
    }
    else if(UsaoAutoProdaja[playerid] != -1)
    {
        new i = UsaoAutoProdaja[playerid];
        if(VoziloInfo[i][vImaVlasnika] == 0)
		{
		    new vid = CijeneAuta(GetVehicleModel(GetPlayerVehicleID(playerid)));
		    if(PlayerInfo[playerid][pNovacDzep] < AutoSalon[vid][1]/2) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		    g_NovacMinus(playerid, AutoSalon[vid][1]/2);
   			if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
			{
				PlayerInfo[playerid][pPosedovanjeAuta2] = i;
			}
			else
			{
				PlayerInfo[playerid][pPosedovanjeAuta] = i;
			}
			VoziloInfo[i][vRadio] = 0;
			VoziloInfo[i][vImaVlasnika] = 1; VoziloInfo[i][vZakljucan] = 1;
			VoziloInfo[i][vDroga] = 0; VoziloInfo[i][vMats] = 0;
			VoziloInfo[i][vOruzije] = -1; VoziloInfo[i][vMunicija] = 0;
			strmid(VoziloInfo[i][vVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
  			SacuvajVozilo(i); SavePlayer(playerid); TogglePlayerControllable(playerid, 1);
  			SCMF(playerid,-1,""CRVENA"[V:RPG] | "BELA"Uspesno ste kupili polovan auto za %d$ novca!",AutoSalon[vid][1]/2);
  			UsaoAutoProdaja[playerid] = -1;
		}
		else return SCM(playerid,-1,""CRVENA"[V:RPG] | "SIVA"To vozilo nije na prodaju!");
    }
    return 1;
}

////////////////////////////////////////////////////
CMD:kupivozilo(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 699.4522,-1573.1166,14.2680))
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Ne mozete gledati katalog iz vozila!");
	    if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
	    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7+ za kupovinu motora!");
	    if(ServerInfo[isdozvolakupovine] == 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Saloni rade subotom i nedeljom od 20:00h do 23:00h !");
	    SPD(playerid, 270, DIALOG_STYLE_LIST,"Odabir motora",""BELA"Faggio | "ZELENA"15 000$\n"BELA"Freeway | "ZELENA"150 000$\n"BELA"Sanchez | "ZELENA"125 000$\n"BELA"Quad | "ZELENA"100 000$\n"BELA"FCR-900 | "ZELENA"350 000\n"BELA"NRG-500 | "ZELENA"3 000 000$\n"BELA"BF-400 | "ZELENA"300 000$\n"BELA"Wayfarer | "ZELENA"100 000$", "Odaberi", "Nazad");
	}
	else if(UsaoMotorProdaja[playerid] != -1)
	{
 		new i = UsaoMotorProdaja[playerid];
        if(MotorInfo[i][mImaVlasnika] == 0)
		{
  			if(PlayerInfo[playerid][pNovacDzep] < MotorInfo[i][mCijena]/2) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		    g_NovacMinus(playerid, MotorInfo[i][mCijena]/2);
			MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
			PlayerInfo[playerid][pPosedovanjeMotora] = i;
			strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
			SacuvajMotor(i); SavePlayer(playerid); TogglePlayerControllable(playerid, 1);
			new string[128];
			format(string, charsmax(string), ""VARADERO"[V:RPG] | "BELA"Uspesno ste kupili polovan motor za %d$ novca!",MotorInfo[i][mCijena]/2); //conver
			SCM(playerid,-1, string);
			UsaoMotorProdaja[playerid] = -1;
		}
		else return SCM(playerid,-1,""VARADERO"[V:RPG] | "SIVA"Taj motor nije na prodaju!");
	}
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1376.2202,-1887.8555,13.5506))
	{
	    if(PlayerInfo[playerid][pPosedovanjeBicikla] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes biciklo!");
    	if(ServerInfo[isdozvolakupovine] == 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Saloni rade subotom i nedeljom od 20:00h do 23:00h !");
    	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7+ za kupovinu bicikla!");
 	    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Ne mozete gledati katalog iz vozila!");
 	    SPD(playerid, 286, DIALOG_STYLE_LIST, "Odabir bicikla","Bike | "ZELENA"500$\nBmx | "ZELENA"1000$\nMountain Bike | "ZELENA"3000$", "Odaberi", "Nazad");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 286.0556, -1900.6504, 2.107))
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Ne mozete gledati katalog iz vozila!");
    	if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes plovilo!");
	    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7+ za kupovinu motora!");
	    if(ServerInfo[isdozvolakupovine] == 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Saloni rade subotom i nedeljom od 20:00h do 23:00h !");
	    SPD(playerid, 322, DIALOG_STYLE_LIST,"Odabir plovila","Squallo | "ZELENA"450000$\nSpeeder | "ZELENA"250000$\nTropic | "ZELENA"700000$\nDinghy | "ZELENA"150000$\nJetmax | "ZELENA"550000$", "Odaberi", "Nazad");
	}
	else if(UsaoPloviloProdaja[playerid] != -1)
	{
 		new i = UsaoPloviloProdaja[playerid];
        if(PlovilaInfo[i][plImaVlasnika] == 0)
		{
  			if(PlayerInfo[playerid][pNovacDzep] < PlovilaInfo[i][plCijena]/2) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		    g_NovacMinus(playerid, PlovilaInfo[i][plCijena]/2);
			PlovilaInfo[i][plImaVlasnika] = 1; PlovilaInfo[i][plZakljucan] = 1;
			PlayerInfo[playerid][pPosedovanjePlovila] = i;
			strmid(PlovilaInfo[i][plVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
			SacuvajPlovila(i); SavePlayer(playerid); TogglePlayerControllable(playerid, 1);
			new string[128];
			format(string, charsmax(string), ""VARADERO"[V:RPG] | "BELA"Uspesno ste kupili polovno plovilo za %d$ novca!",PlovilaInfo[i][plCijena]/2); //conver
			SCM(playerid,-1, string);
            UsaoPloviloProdaja[playerid] = -1;
		}
		else return SCM(playerid,-1,""VARADERO"[V:RPG] | "SIVA"To plovilo nije na prodaju!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1868.8652,-2284.3818,13.5469))
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Ne mozete gledati katalog iz vozila!");
    	if(PlayerInfo[playerid][pPosedovanjeAviona] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes letjelicu!");
	    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7+ za kupovinu motora!");
	    if(ServerInfo[isdozvolakupovine] == 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Saloni rade subotom i nedeljom od 20:00h do 23:00h !");
	    SPD(playerid, 298, DIALOG_STYLE_LIST,"Odabir letjelice","Dodo | "ZELENA"300000$\nStuntplane | "ZELENA"450000$\nMaverick | "ZELENA"2000000$\nSparrow | "ZELENA"400000$", "Odaberi", "Nazad");
	}
	else if(UsaoAvionProdaja[playerid] != -1)
	{
 		new i = UsaoAvionProdaja[playerid];
        if(AvionInfo[i][avImaVlasnika] == 0)
		{
  			if(PlayerInfo[playerid][pNovacDzep] < AvionInfo[i][avCijena]/2) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		    g_NovacMinus(playerid, AvionInfo[i][avCijena]/2);
			AvionInfo[i][avImaVlasnika] = 1; AvionInfo[i][avZakljucan] = 1;
			PlayerInfo[playerid][pPosedovanjeAviona] = i;
			strmid(AvionInfo[i][avVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
			SacuvajAvione(i); SavePlayer(playerid); TogglePlayerControllable(playerid, 1);
			new string[128];
			format(string, charsmax(string), ""VARADERO"[V:RPG] | "BELA"Uspesno ste kupili polovnu letjelicu za %d$ novca!",AvionInfo[i][avCijena]/2); //conver
			SCM(playerid,-1, string);
            UsaoAvionProdaja[playerid] = -1;
		}
		else return SCM(playerid,-1,""VARADERO"[V:RPG] | "SIVA"Ta letjelica nije na prodaju!");
	}
	return 1;
}
CMD:prihvatirukovanje(playerid, params[])
{
new stringbrt[128];
if( GetPVarInt( playerid, "ShakeOffer" ) < 999 ) {
if( IsPlayerConnected( GetPVarInt( playerid, "ShakeOffer" ) ) ) {
if( IsPlayerNearPlayer( 3.0, playerid, GetPVarInt( playerid, "ShakeOffer" ) ) ) {
switch( GetPVarInt( playerid, "ShakeStyle" ) )
{
case 1:
{
ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
}
case 2:
{
ApplyAnimation(playerid,"GANGS","hndshkaa",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkaa",4.0,0,0,0,0,0);
}
case 3:
{
ApplyAnimation(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkba",4.0,0,0,0,0,0);
}
case 4:
{
ApplyAnimation(playerid,"GANGS","hndshkca",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkca",4.0,0,0,0,0,0);
}
case 5:
{
ApplyAnimation(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkda",4.0,0,0,0,0,0);
}
case 6:
{
ApplyAnimation(playerid,"GANGS","hndshkea",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkea",4.0,0,0,0,0,0);
}
case 7:
{
ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","hndshkfa",4.0,0,0,0,0,0);
}
case 8:
{
ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0);
}
case 9:
{
ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
ApplyAnimation(GetPVarInt(playerid, "ShakeOffer"),"GANGS","prtial_hndshk_biz_01",4.0,0,0,0,0,0);
}
}
format(stringbrt, sizeof(stringbrt), "* Prihvatio si %s-ov zahtev za rukovanje.", GetName( GetPVarInt( playerid, "ShakeOffer" ) ) );
SCM(playerid,-1, stringbrt);
format(stringbrt, sizeof(stringbrt), "* %s je prihvatio tvoj zahtev za rukovanjem.", GetName( playerid ) );
SCM(GetPVarInt(playerid,"ShakeOffer"),-1,stringbrt);
SetPVarInt(playerid,"ShakeOffer", 0 ); SetPVarInt(GetPVarInt(playerid, "ShakeOffer" ), "ShakeOffer", 0 );
}
else SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Igrac koji ti je ponudio rukovanje nije blizu tebe !");
}
else SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niko ti nije ponudio rukovanje !");
}
return 1;
}
CMD:rukovanje(playerid, params[]) {
new stringbrt[128];
new igrac, vrsta;
if(IsPlayerInAnyVehicle( playerid ) ) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Ne mozes se rukovati ako si u vozilu!");
if(sscanf( params, "ui", igrac, vrsta ) ) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"/rukovanje [ ID/Deo Imena ] [vrsta rukovanja(1-9)]");
if(IsPlayerConnected(  igrac ) ) {
if( igrac != INVALID_PLAYER_ID) {
if(IsPlayerNearPlayer( 3.0, playerid, igrac) ) {
if(IsPlayerInAnyVehicle( igrac ) ) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Ne mozes se rukovati sa osobom koja je u vozilu!");
if(igrac == playerid) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Ne mozes se rukovati sam sa sobom!");
format(stringbrt, sizeof( stringbrt ), "* Ponudio si rukovanje %s-u.", GetName( igrac ) );
SCM(playerid, 0x33CCFFAA, stringbrt );
format(stringbrt, sizeof( stringbrt ), "* %s ti je ponudio rukovanje.", GetName( playerid ) );
SCM(igrac, 0x33CCFFAA, stringbrt );
SCM(igrac, 0xFF6347AA, "* Ako se zelis rukovati,prihvati rukovanje koristeci /prihvatirukovanje.");
SetPVarInt(playerid, "ShakeOffer", igrac);
SetPVarInt(igrac, "ShakeOffer", playerid );
SetPVarInt(igrac, "ShakeStyle", vrsta);
}
else SCM(playerid,-1,"Taj igrac nije blizu tebe !");
}
else SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Taj igrac nije na serveru!");
}
return 1;
}
///////////////////////---Komande,sa servera------------//////////
CMD:id(playerid, params[])
{
	//#pragma unused help
 	new string[128],id;
	if(sscanf(params, "u", id)) return SCM(playerid, -1,""SRWBOJA"Varadero Pomoc | "SIVA"/ID [Ime_Prezime]");
	if(id == IPI) return SCM(playerid, -1,""SRWBOJA"Varadero Pomoc | "SIVA"Pogresan ID");
	format(string, charsmax(string), ""VARADERO"[INFO] "BELA"Igrac: %s | ID: %d", GetName(id), id); //conver
	SCM(playerid,-1, string);
	return 1;
}
CMD:ostrvo(playerid, params[])//1991.77112, -1106.88989, 31.30530
{
    //#pragma unused help
   	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >=1)
  	if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1, ""ZELENA"[V:RPG] "SIVA"Ne mozete koristiti ovu komandu jer imate trazeni level!");
  	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1, ""ZELENA"[V:RPG] "SIVA"Ne mozete se portati jer ste zatvoreni!");
	if(GetPlayerState(playerid) == 2)
  	{
        new idv = GetPlayerVehicleID(playerid);
        SetVehiclePos(idv,305.5728,3271.0251,3.2021);
 	}
	else
	{
        SetPlayerPos(playerid,305.5728,3271.0251,3.2021);
 	}
 	DisablePlayerCheckpoint(playerid);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid,0);
	SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Teleportovali ste se do Ostrva!");
	return 1;
}
CMD:kazni(playerid, params[])
{
	new playa, money, result[64];
	new string[256];
    if(sscanf(params, "uis[64]", playa, money, result)) return SendClientMessage(playerid, -1, ""SRWBOJA"/kazni [ ID / IME ] [ IZNOS ] [ RAZLOG ] ");
    if(money < 1 || money > 9000000) return SendClientMessage(playerid, -1, ""SRWBOJA"Ne moze biti manje od 1 ili vise od 9.000.000$!");
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >=2)
	{
		if(IsPlayerConnected(playa))
		{
		    if(playa != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "{F23A0D}[KAZNA]: {FFFFFF}%s je novcano kaznjen od strane Staff-a sa %d$, razlog: %s", GetName(playa), money, (result));
                SCMTA(-1,string);
				g_NovacMinus(playa, money);
				format(string, sizeof(string), ""SRWBOJA"Staff-Team %s je kaznio igraca", GetName(playerid));
                SCMTA(0xFFFF80C8, string);
				return 1;
			}
		}
	}
	return 1;
}
CMD:offstlevel(playerid, params[])
{
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] < 6)
 	{
  	SendClientMessage(playerid, 0xC3C3C3FF, " {FFFFFF}[{F81414}[V:RPG] {FFFFFF}] {C3C3C3}NIste ovlasceni :P Niste ovlasceni");
  	return 1;
  	}
    new targetname[24], level;
    if(sscanf(params, "s[24]i", targetname, level)) return SendClientMessage(playerid, -1, "Koristi: /offstlevel [Ime igraca] [ST level]");   
    	
    
    return 1;
}

CMD:offgmlevel(playerid, params[])
{
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] < 6)
 	{
  	SendClientMessage(playerid, 0xC3C3C3FF, " {FFFFFF}[{F81414}[V:RPG] {FFFFFF}] {C3C3C3}NIste ovlasceni :P Niste ovlasceni");
  	return 1;
  	}
    new targetname[24], level;
    if(sscanf(params, "s[24]i", targetname, level)) return SendClientMessage(playerid, -1, "Koristi: /offgmlevel [Ime igraca] [gm level]");
   
   	new q[58+24+1];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `players` where `Name` = '%e'", targetname);
	mysql_tquery( SQL, q, "_sqlMakeGameMasterOffline", "isi", playerid, targetname, level);    
  
    return 1;
}
//------------------------------------------------------------------------------
CMD:offlider(playerid, params[])
{
	#pragma unused params
    if(PlayerInfo[playerid][pVlidera] < 1)
 	return 
  	SendClientMessage(playerid, 0xC3C3C3FF, " {FFFFFF}[{F81414}[V:RPG] {FFFFFF}] {C3C3C3}Samo Vodja Lidera");
	
    new targetname[24], level;
    if(sscanf(params, "s[24]i", targetname, level)) return SendClientMessage(playerid, -1, "Koristi: /offlider [Ime igraca] [id orge]");
   
    new q[58+24+1];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `players` where `Name` = '%e'", targetname);
	mysql_tquery( SQL, q, "_sqlMakeLiderOffline", "isi", playerid, targetname, level);    
  
    return 1;
}
CMD:boombox(playerid, params[])
{
    new string[128];
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 1 && PlayerInfo[playerid][pPromoter] < 1 && PlayerInfo[playerid][pSpecteam] < 1 && PlayerInfo[playerid][pVip] < 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo vipovi!");
    if(!GetPVarType(playerid, "BoomboxObject"))
    {
        if(sscanf(params, "s[256]", params)) return SendClientMessage(playerid, COLOR_WHITE, "KORISTI: /boombox [music url] (Morate postaviti DIREKTAN LINK za pustanje)");
        foreach(new i : Player)
        {
            if(GetPVarType(i, "BoomboxObject"))
            {
                if(IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "bposX"), GetPVarFloat(i, "bposY"), GetPVarFloat(i, "bposZ")))
                {
                    SendClientMessage(playerid, COLOR_GREY, " Vec ima postavljen boombox blizu! Idi negde dalje!");
                    return 1;
                }
            }
        }

        new Float:x, Float:y, Float:z, Float:a;
        GetPlayerPos(playerid, x, y, z); GetPlayerFacingAngle(playerid, a);
        SetPVarInt(playerid, "BoomboxObject", CreateDynamicObject(2103, x, y, z-1, 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
        SetPVarFloat(playerid, "bposX", x); SetPVarFloat(playerid, "bposY", y); SetPVarFloat(playerid, "bposZ", z);
        SetPVarInt(playerid, "bboxareaid", CreateDynamicSphere(x, y, z, 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
        format(string, sizeof(string), " Postavio si boombox na tvoju lokaciju. NE ZABORAVI DA GA OBRISES ISTO KOMANDOM!!!");
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        foreach(new i : Player)
        {
            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "bboxareaid")))
            {
                PlayAudioStreamForPlayer(i, params, GetPVarFloat(playerid, "bposX"), GetPVarFloat(playerid, "bposY"), GetPVarFloat(playerid, "bposZ"), 30.0, 1);
            }
        }
        SetPVarString(playerid, "BoomboxURL", params);
    }
    else
    {
        DestroyDynamicObject(GetPVarInt(playerid, "BoomboxObject"));
        DeletePVar(playerid, "BoomboxObject"); DeletePVar(playerid, "BoomboxURL");
        DeletePVar(playerid, "bposX"); DeletePVar(playerid, "bposY"); DeletePVar(playerid, "bposZ");
        if(GetPVarType(playerid, "bboxareaid"))
        {
            foreach(new i : Player)
            {
                if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "bboxareaid")))
                {
                    StopAudioStreamForPlayer(i);
                    SendClientMessage(i, COLOR_GREY, " Boombox kreator je obrisao svoj muzicki studio.");
                }
            }
            DeletePVar(playerid, "bboxareaid");
        }
        SendClientMessage(playerid, COLOR_LIGHTBLUE, " Unistio si svoj boombox.");
    }
    return 1;
}

////////////BRISANJE IMOVINE///////////////////////////////
CMD:izbrisikucu(playerid, params[])
{

    new targetid;
    
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo Vlasnik!");
	if(sscanf(params,"i",targetid)) return SCM(playerid,-1,""SIVA"USE: "BELA"/izbrisikucu [ID]");
	
	new q[64];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `kuce` where `kSQLID` = '%d'", targetid);
	mysql_tquery( SQL, q, "_sqlDeleteKuca", "ii", playerid, targetid);

	DestroyDynamic3DTextLabel(KucaLabel[targetid]);
	DestroyDynamicPickup(KucaPickup[targetid]);
	for(new i; Kuce:i < Kuce; i++) 
	{ 
		KucaInfo[targetid][Kuce:i] = -1; 		
	}
	return 1;
}

function: _sqlDeleteKuca(playerid, kucaid)
{

	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID te kuce nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `kuce` WHERE `kSQLID` = '%d'", kucaid);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, "Obrisali ste kucu id: %d", kucaid);
		va_SendClientMessageToAll(-1 , "Administrator: %s je obrisao Kucu ID: (%d).", GetName(playerid), kucaid);
	}
	return 1;
}
CMD:izbrisistan(playerid, params[])
{
    new targetid;
    
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo Vlasnik!");
	if(sscanf(params,"i",targetid)) return SCM(playerid,-1,""SIVA"USE: "BELA"/izbrisistan [ID]");
	
	new q[58+24+1];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `stanovi` where `sSQLID` = '%d'", targetid);
	mysql_tquery( SQL, q, "_sqlDeleteStan", "ii", playerid, targetid);

	DestroyDynamic3DTextLabel(StanLabel[targetid]);
	DestroyDynamicPickup(StanPickup[targetid]);
	for(new i; Stan:i < Stan; i++) 
	{ 
		StanInfo[targetid][Stan:i] = -1; 		
	}
	
	return 1;
}
function: _sqlDeleteStan(playerid, stanid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID tog stana nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `stanovi` WHERE `sSQLID` = '%d'", stanid);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, "Obrisali ste stan id: %d", stanid);
		va_SendClientMessageToAll(-1 , "Administrator: %s je obrisao Stan ID: (%d).", GetName(playerid), stanid);
	}
	return 1;
}
CMD:izbrisivikendicu(playerid, params[])
{
    new targetid;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo Vlasnik!");
	if(sscanf(params,"i",targetid)) return SCM(playerid,-1,""SIVA"USE: "BELA"/izbrisivikendicu [ID]");
	
	new q[64];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `vikendice` where `vSQLID` = '%d'", targetid);
	mysql_tquery( SQL, q, "_sqlDeleteVikendica", "ii", playerid, targetid);

	DestroyDynamic3DTextLabel(VikendicaLabel[targetid]);
	DestroyDynamicPickup(VikendicaPickup[targetid]);	
	for(new i; Vikendica:i < Vikendica; i++) 
	{ 
		VikendiceInfo[targetid][Vikendica:i] = -1; 		
	}

	return 1;
}
function: _sqlDeleteVikendica(playerid, vid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID vikendice nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `vikendice` WHERE `vSQLID` = '%d'", vid);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, "Obrisali ste stan id: %d", vid);
		va_SendClientMessageToAll(-1 , "Administrator: %s je obrisao Vikendicu ID: (%d).", GetName(playerid), vid);
	}
	return 1;
}

CMD:izbrisifirmu(playerid, params[])
{
    new targetid;    
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo Vlasnik!");
	if(sscanf(params,"i",targetid)) return SCM(playerid,-1,""SIVA"USE: "BELA"/izbrisifirmu [ID]");
	
	new q[58+24+1];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `firme` where `fSQLID` = '%d'", targetid);
	mysql_tquery( SQL, q, "_sqlDeleteFirma", "ii", playerid, targetid);
	DestroyDynamic3DTextLabel(FirmaLabel[targetid]);
	DestroyDynamicPickup(FirmaPickup[targetid]);		
	return 1;
}

function: _sqlDeleteFirma(playerid, firmaid)
{

	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID te firme nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `firme` WHERE `fSQLID` = '%d'", firmaid);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, "Obrisali ste firmu id: %d", firmaid);
		va_SendClientMessageToAll(-1 , "Administrator: %s je obrisao Firmu ID: (%d).", GetName(playerid), firmaid);
	}
	return 1;
}
CMD:apu(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 1 && PlayerInfo[playerid][pTestAdmin] < 1) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo A/GM/SA!");
	new id, sediste;
	if(sscanf(params, "ui", id, sediste)) return SCM(playerid, -1, ""SIVA"USE: "BELA"/apu [ID/Nick] [Sediste(1,2,3)]");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"ERROR: "BELA"Morate biti u vozilu!");
	if(!DaljinaIgraca(6.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"ERROR: "SRWBOJA"Taj igrac nije blizu tebe!");
	if(IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, ""SRWBOJA"ERROR: "SRWBOJA"Taj igrac je vec u nekom vozilu!");
	if(sediste > 3 || sediste < 1) return SCM(playerid, -1, ""SRWBOJA"ERROR: "SRWBOJA"Broj sedista moze biti samo 1,2,3!");
	PutPlayerInVehicle(id, GetPlayerVehicleID(playerid), sediste);
	new string[128];
	format(string,sizeof(string),"* %s ubacuje %s u auto.",GetName(playerid),GetName(id));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	format(string, charsmax(string), ""SIVA"%s vas je ubacio u auto!",GetName(playerid)); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"Ubacili ste %s u auto!",GetName(id)); //conver
	SCM(playerid,-1, string);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:engine(playerid, params[])
{

	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new engine, lights, alarm, doors, bonnet, boot, objective, string[100];
		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
		if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
		if(engine == 0 || engine == -1)
		{
			new Float:HP;
			GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
			if(HP < 400.0) return SCM(playerid,-1, ""SIVA"Vozilo vam je previse osteceno, pozovite mehanicara!");
			if(Fuel[GetPlayerVehicleID(playerid)] <= 0) return SCM(playerid,-1, ""SIVA"Nemate goriva u vozilu pa ne mozete upaliti motor!");
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
			format(string,sizeof(string), "* %s pali motor na vozilu.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			format(string, sizeof(string), "Motor:_~g~On");
			PlayerTextDrawSetString(playerid, Brzinomer[playerid][7], string);
		}
		else if(engine == 1)
		{
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, alarm, doors, bonnet, boot, objective);
			format(string,sizeof(string), "* %s gasi motor na vozilu.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			format(string, sizeof(string), "Motor:_~r~Off");
			PlayerTextDrawSetString(playerid, Brzinomer[playerid][7], string);
		}
	}
    return 1;
}
/////////////////////////////////////////////////////////
CMD:stopmusic(playerid, params[])
{
	//#pragma unused help
	StopAudioStreamForPlayer(playerid);
    return 1;
}
/////////////////////////////////////////////////////////
/*CMD:aprodajsve2000jajemojedesno(playerid, params[])
{

    new string[200];
    new string1[200];
    new string2[200];
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pAdmin] >= 8) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Samo Vlasnik!");
    format(string,sizeof(string),"[V:RPG] "SRWBOJA"(( Trenutno se vrsi proces prodavanja svih kuca,stanova,firmi i vikendica. ))");
	SCMTA(-1,string);
	format(string1,sizeof(string1),"[V:RPG] "SRWBOJA"(( Koriscenje komandi bice vam omoguceno za nekoliko minuta ;). ))");
	SCMTA(-1,string1);
    //kuce
    for(new k = 0; k < sizeof(KucaInfo); k++)
    {
    KucaInfo[k][kProveraVlasnika] = 0; KucaInfo[k][kFrizder] = 0; KucaInfo[k][kOruzije] = -1; KucaInfo[k][kOdjeca] = 0;
    KucaInfo[k][kNovac] = 0; KucaInfo[k][kZatvoreno] = 1; KucaInfo[k][kZvono] = 0; KucaInfo[k][kDroga] = 0;
    KucaInfo[k][kMunicija] = 0; KucaInfo[k][kRent] = 0; KucaInfo[k][kMats] = 0; KuceLP(k);
    strmid(KucaInfo[k][kVlasnik],"Niko",0,strlen("Niko"),255);  SacuvajKucu(k);
    }
    //stanovi
    for(new s = 0; s < sizeof(StanInfo); s++)
    {
    StanInfo[s][sProveraVlasnika] = 0; StanInfo[s][sOruzije] = -1; StanInfo[s][sNovac] = 0; StanInfo[s][sZatvoreno] = 1; StanInfo[s][sMunicija] = 0; StanLP(s);
    strmid(StanInfo[s][sVlasnik],"Niko",0,strlen("Niko"),255); SacuvajStan(s);
	}
	//vikendice
	for(new vi = 0; vi < sizeof(VikendiceInfo); vi++)
	{
	VikendiceInfo[vi][viProveraVlasnika] = 0; VikendiceInfo[vi][viDroga] = 0; VikendiceInfo[vi][viMats] = 0; VikendiceInfo[vi][viZatvoreno] = 1; VikendicaLP(vi);
    strmid(VikendiceInfo[vi][viVlasnik],"Niko",0,strlen("Niko"),255); SacuvajVikendicu(vi);
	}
	//firme
	for(new b = 0; b < sizeof(FirmaInfo); b++)
	{
	for(new i=0; i<MAX_PLAYERS; i++)
    {
	FirmaInfo[b][fImaVlasnika] = 0;
	FirmaInfo[b][fKasa] = 0;
	FirmaInfo[b][fZatvoreno] = 0;
	strmid(FirmaInfo[b][fVlasnik], "Niko", 0, strlen("Niko"), 255);
	strmid(FirmaInfo[b][fIznuda], "Niko", 0, strlen("Niko"), 255);
	PlayerInfo[i][pPosedovanjeFirme] = -1;
	FirmaLabelIPickup(b);
	SacuvajFirmu(b);
	}
	}
	SCM(playerid,-1,"[V:RPG] "SRWBOJA"(( Prodao si sve firme,kuce,stanove i vikendice! ))");
	format(string2,sizeof(string2),"[V:RPG] "SRWBOJA"(( Kuce,stanovi,vikendice i firme su prodane od strane Vlasnika,"ZELENA"komande su omogucene. ))");
	SCMTA(-1,string2);
	return 1;
}*/
/////////////////////////////////////////////////////////
CMD:avprodaj(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 6+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
	new i, poz = random(sizeof(RandomPijacaSpawn));
	for(new j = 0; j < sizeof(VoziloInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[j][vID])
		{
			i = j;
		}
	}
	VoziloInfo[i][vPozX] = RandomPijacaSpawn[poz][0];
	VoziloInfo[i][vPozY] = RandomPijacaSpawn[poz][1];
	VoziloInfo[i][vPozZ] = RandomPijacaSpawn[poz][2];
	VoziloInfo[i][vPozA] = RandomPijacaSpawn[poz][3];
	strmid(VoziloInfo[i][vVlasnik], "Niko", 0, strlen("Niko"), 999);
	VoziloInfo[i][vImaVlasnika] = 0; VoziloInfo[i][vSpawn] = 0; VoziloInfo[i][vZakljucan] = 0;
	VoziloInfo[i][vDroga] = 0; VoziloInfo[i][vMats] = 0; VoziloInfo[i][vRadio] = 0;
	VoziloInfo[i][vOruzije] = -1; VoziloInfo[i][vMunicija] = 0;
	DestroyVehicle(VoziloInfo[i][vID]);
	VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
	SacuvajVozilo(i);
	new string[96];
	RTC(VoziloInfo[i][vID]);
	format(string, charsmax(string), "[V:RPG] "ZELENA"Prodali ste na pijacu vozilo ID: %d!",i); //conver
	SCM(playerid,-1, string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:unikatnovozilo(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	new i, id,string[120];
	if(sscanf(params,"ii",i,id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/uniaktnovozilo [ID] [ID VOZILA]");
	if(id < 400 || id > 620) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 400 i iznad 620!");
	if(i < 0 || i > sizeof(VoziloInfo)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID Vozila nije validan!");
	DestroyVehicle(VoziloInfo[i][vID]);
	VoziloInfo[i][vSpawn] = 0;
	VoziloInfo[i][vModel] = id;
	VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
	format(string, charsmax(string), "[V:RPG] "ZELENA"Vozilo je uspesno parkirano ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajVozilo(i); RTC(VoziloInfo[i][vID]);
	format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s [%d] je koristio /unikatnovozilo na ID: %d [%d]!",GetName(playerid),playerid,i,id);
	AdminGameMaster(-1, string);
	return 1;
}
CMD:unikatnimotor(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	new i, id,string[120];
	if(sscanf(params,"ii",i,id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/unikatnimotor [ID] [ID VOZILA]");
	if(id < 400 || id > 620) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 400 i iznad 620!");
	if(i < 0 || i > sizeof(MotorInfo)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID Motora nije validan!");
	DestroyVehicle(MotorInfo[i][mID]);
	MotorInfo[i][mModel] = id;
	MotorInfo[i][mSpawn] = 0;
	MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel],MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA],MotorInfo[i][mBoja1],MotorInfo[i][mBoja2],30000);
	format(string, charsmax(string), "[V:RPG] "ZELENA"Motor je uspesno parkiran ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajMotor(i); RTC(MotorInfo[i][mID]);
	format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s [%d] je koristio /unikatnimotor na ID: %d [%d]!",GetName(playerid),playerid,i,id);
	AdminGameMaster(-1, string);
	return 1;
}
CMD:unikatnoplovilo(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	new i, id,string[120];
	if(sscanf(params,"ii",i,id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/unikatnoplovilo [ID] [ID VOZILA]");
	if(id < 400 || id > 620) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 400 i iznad 620!");
	if(i < 0 || i > sizeof(PlovilaInfo)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID Plovila nije validan!");
	DestroyVehicle(PlovilaInfo[i][plID]);
	PlovilaInfo[i][plModel] = id;
	PlovilaInfo[i][plSpawn] = 0;
	PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel],PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA],PlovilaInfo[i][plBoja1],PlovilaInfo[i][plBoja2],30000);
	format(string, charsmax(string), "[V:RPG] "ZELENA"Plovilo je uspesno parkirano ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajPlovila(i); RTC(PlovilaInfo[i][plID]);
	format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s [%d] je koristio /unikatnoplovilo na ID: %d [%d]!",GetName(playerid),playerid,i,id);
	AdminGameMaster(-1, string);
	return 1;
}
CMD:unikatnaletelica(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	new i, id,string[120];
	if(sscanf(params,"ii",i,id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/unikatnaletelica [ID] [ID VOZILA]");
	if(id < 400 || id > 620) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 400 i iznad 620!");
	if(i < 0 || i > sizeof(AvionInfo)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID Letelice nije validan!");
	DestroyVehicle(AvionInfo[i][avID]);
	AvionInfo[i][avModel] = id;
	AvionInfo[i][avSpawn] = 0;
	AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel],AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA],AvionInfo[i][avBoja1],AvionInfo[i][avBoja2],30000);
	format(string, charsmax(string), "[V:RPG] "ZELENA"Letjelica je uspesno parkirana ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajAvione(i); RTC(AvionInfo[i][avID]);
	format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s [%d] je koristio /unikatnaletelica na ID: %d [%d]!",GetName(playerid),playerid,i,id);
	AdminGameMaster(-1, string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:avparkiraj(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 5+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    new i, Float:PozAS[4];
	for(new j = 0; j < sizeof(VoziloInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[j][vID])
		{
			i = j;
		}
	}
	GetVehiclePos(VoziloInfo[i][vID], PozAS[0], PozAS[1], PozAS[2]);
	GetVehicleZAngle(VoziloInfo[i][vID], PozAS[3]);
	VoziloInfo[i][vSpawn] = 0;
	VoziloInfo[i][vPozX] = PozAS[0];
	VoziloInfo[i][vPozY] = PozAS[1];
	VoziloInfo[i][vPozZ] = PozAS[2];
	VoziloInfo[i][vPozA] = PozAS[3];
	DestroyVehicle(VoziloInfo[i][vID]);
	VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
	new string[128];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Vozilo je uspesno parkirano ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajVozilo(i); RTC(VoziloInfo[i][vID]);
	return 1;
}
CMD:psparkiraj(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pClan] != 8 && PlayerInfo[playerid][pLider] != 8) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"PS!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
	if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))  return SCM(playerid,-1,""SIVA"Niste zakacili vozilo!");
    new i, Float:PozAS[4];
	for(new j = 0; j < sizeof(VoziloInfo); j++)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)) == VoziloInfo[j][vID])
		{
			i = j;
		}
	}

	GetVehiclePos(VoziloInfo[i][vID], PozAS[0], PozAS[1], PozAS[2]);
	GetVehicleZAngle(VoziloInfo[i][vID], PozAS[3]);
	VoziloInfo[i][vSpawn] = 0;
	VoziloInfo[i][vPozX] = PozAS[0];
	VoziloInfo[i][vPozY] = PozAS[1];
	VoziloInfo[i][vPozZ] = PozAS[2];
	VoziloInfo[i][vPozA] = PozAS[3];
	DestroyVehicle(VoziloInfo[i][vID]);
	VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
	new string[128];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Vozilo je uspesno parkirano ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajVozilo(i); RTC(VoziloInfo[i][vID]);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:amparkiraj(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 5+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    new i, Float:PozAS[4];
	for(new j = 0; j < sizeof(MotorInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == MotorInfo[j][mID])
		{
			i = j;
		}
	}
	GetVehiclePos(MotorInfo[i][mID], PozAS[0], PozAS[1], PozAS[2]);
	GetVehicleZAngle(MotorInfo[i][mID], PozAS[3]);
	MotorInfo[i][mPozX] = PozAS[0];
	MotorInfo[i][mPozY] = PozAS[1];
	MotorInfo[i][mPozZ] = PozAS[2];
	MotorInfo[i][mPozA] = PozAS[3];
	MotorInfo[i][mSpawn] = 0;
	DestroyVehicle(MotorInfo[i][mID]);
	MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel],MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA],MotorInfo[i][mBoja1],MotorInfo[i][mBoja2],30000);
	new string[96];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Motor je uspesno parkiran ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajMotor(i); RTC(MotorInfo[i][mID]);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:amprodaj(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 6+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
	new i, poz = random(sizeof(RandomMotorPijacaSpawn));
	for(new j = 0; j < sizeof(MotorInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == MotorInfo[j][mID])
		{
			i = j;
		}
	}
	MotorInfo[i][mPozX] = RandomMotorPijacaSpawn[poz][0];
	MotorInfo[i][mPozY] = RandomMotorPijacaSpawn[poz][1];
	MotorInfo[i][mPozZ] = RandomMotorPijacaSpawn[poz][2];
	MotorInfo[i][mPozA] = RandomMotorPijacaSpawn[poz][3];
 	strmid(MotorInfo[i][mVlasnik], "Niko", 0, strlen("Niko"), 999);
 	MotorInfo[i][mSpawn] = 0;
	MotorInfo[i][mImaVlasnika] = 0; MotorInfo[i][mZakljucan] = 0;
 	DestroyVehicle(MotorInfo[i][mID]);
	MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel],MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA],MotorInfo[i][mBoja1],MotorInfo[i][mBoja2],30000);
	SacuvajMotor(i);
	new string[96];
	RTC(MotorInfo[i][mID]);
	format(string, charsmax(string), "[V:RPG] "ZELENA"Prodali ste na pijacu motor ID: %d!",i); //conver
	SCM(playerid,-1, string);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:abparkiraj(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 5+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    new i, Float:PozAS[4];
	for(new j = 0; j < sizeof(BiciklaInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == BiciklaInfo[j][biID])
		{
			i = j;
		}
	}
	GetVehiclePos(BiciklaInfo[i][biID], PozAS[0], PozAS[1], PozAS[2]);
	GetVehicleZAngle(BiciklaInfo[i][biID], PozAS[3]);
	BiciklaInfo[i][biPozX] = PozAS[0];
	BiciklaInfo[i][biPozY] = PozAS[1];
	BiciklaInfo[i][biPozZ] = PozAS[2];
	BiciklaInfo[i][biPozA] = PozAS[3];
	DestroyVehicle(BiciklaInfo[i][biID]);
	BiciklaInfo[i][biID] = CreateVehicle(BiciklaInfo[i][biModel],BiciklaInfo[i][biPozX],BiciklaInfo[i][biPozY],BiciklaInfo[i][biPozZ],BiciklaInfo[i][biPozA],BiciklaInfo[i][biBoja1],BiciklaInfo[i][biBoja2],30000);
	new string[96];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Biciklo je uspesno parkirano ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajBicikla(i); RTC(BiciklaInfo[i][biID]);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:aleprodaj(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 6+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
	new i, poz = random(sizeof(RandomPijacaAvionSpawn));
	for(new j = 0; j < sizeof(AvionInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == AvionInfo[j][avID])
		{
			i = j;
		}
	}
	AvionInfo[i][avPozX] = RandomPijacaAvionSpawn[poz][0];
	AvionInfo[i][avPozY] = RandomPijacaAvionSpawn[poz][1];
	AvionInfo[i][avPozZ] = RandomPijacaAvionSpawn[poz][2];
	AvionInfo[i][avPozA] = RandomPijacaAvionSpawn[poz][3];
	strmid(AvionInfo[i][avVlasnik], "Niko", 0, strlen("Niko"), 999);
	AvionInfo[i][avImaVlasnika] = 0; AvionInfo[i][avZakljucan] = 0;
	DestroyVehicle(AvionInfo[i][avID]);
	AvionInfo[i][avSpawn] = 0;
	AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel],AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA],AvionInfo[i][avBoja1],AvionInfo[i][avBoja2],30000);
	SacuvajAvione(i);
	RTC(AvionInfo[i][avID]);
	new string[96];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Prodali ste na pijacu letjelicu ID: %d!",i); //conver
	SCM(playerid,-1, string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:aleparkiraj(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 5+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    new i, Float:PozAS[4];
	for(new j = 0; j < sizeof(AvionInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == AvionInfo[j][avID])
		{
			i = j;
		}
	}
	GetVehiclePos(AvionInfo[i][avID], PozAS[0], PozAS[1], PozAS[2]);
	GetVehicleZAngle(AvionInfo[i][avID], PozAS[3]);
	AvionInfo[i][avPozX] = PozAS[0];
	AvionInfo[i][avPozY] = PozAS[1];
	AvionInfo[i][avPozZ] = PozAS[2];
	AvionInfo[i][avPozA] = PozAS[3];
	AvionInfo[i][avSpawn] = 0;
	DestroyVehicle(AvionInfo[i][avID]);
	AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel],AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA],AvionInfo[i][avBoja1],AvionInfo[i][avBoja2],30000);
	new string[96];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Letjelica je uspesno parkirana ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajAvione(i); RTC(AvionInfo[i][avID]);
	return 1;
}
/////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
PromeniImeIgracu(name[], playerid)
{	
	new vozilo1 = PlayerInfo[playerid][pPosedovanjeAuta];
	new vozilo2 = PlayerInfo[playerid][pPosedovanjeAuta2];
	new kuca = PlayerInfo[playerid][pPosedovanjeKuce];
	new firma = PlayerInfo[playerid][pPosedovanjeFirme];
    
	if(PlayerInfo[playerid][pPosedovanjeKuce] != -1 && strcmp(GetName(playerid), KucaInfo[kuca][kVlasnik], true) == 0)
	{
	    strmid(KucaInfo[kuca][kVlasnik], name, 0, strlen(name), 24); SacuvajKucu(kuca);
	}
	if(PlayerInfo[playerid][pPosedovanjeFirme] != -1 && strcmp(GetName(playerid), FirmaInfo[firma][fVlasnik], true) == 0)
	{
	    strmid(FirmaInfo[firma][fVlasnik], name, 0, strlen(name), 24); SacuvajFirmu(firma);
	}
	if(PlayerInfo[playerid][pPosedovanjeAuta] != -1 && strcmp(GetName(playerid), VoziloInfo[vozilo1][vVlasnik], true) == 0)
	{
	    strmid(VoziloInfo[vozilo1][vVlasnik], name, 0, strlen(name), 24);
		SacuvajVozilo(vozilo1);
	}
	if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1 && strcmp(GetName(playerid), VoziloInfo[vozilo1][vVlasnik], true) == 0)
	{
	    strmid(VoziloInfo[vozilo2][vVlasnik], name, 0, strlen(name), 24);
		SacuvajVozilo(vozilo2);
	}
	SetPlayerName(playerid, name);
	SavePlayer(playerid);
	return 1;
}
////////////////////////////////////////
CMD:avobrisi(playerid, params[])
{
    //#pragma unused help
    new acc;
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
    if(sscanf(params, "i", acc)) return SCM(playerid,-1,""SPLAVA"[V:RPG] Pomoc | "BELA"/avobrisi [ID]");
	DestroyVehicle(VoziloInfo[acc][vID]);
	VoziloInfo[acc][vID] = -1;
    new string[128];
    format(string,sizeof(string),AUTO_FILE,acc);
    fremove(string);
    format(string, charsmax(string), "Vozilo ID %d je obrisano", acc); //conver
	SCM(playerid, -1, string);
	format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je obrisao vozilo ID: %d", GetName(playerid), acc);
	SCMTA(-1,string);
    return 1;
}
CMD:amobrisi(playerid, params[])
{
    //#pragma unused help
    new acc;
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
    if(sscanf(params, "i", acc)) return SCM(playerid,-1,""SPLAVA"[V:RPG] Pomoc | "BELA"/amobrisi [ID]");
	DestroyVehicle(MotorInfo[acc][mID]);
	MotorInfo[acc][mID] = -1;
    new string[128];
    format(string,sizeof(string),MOTOR_FILE,acc);
    fremove(string);
    format(string, charsmax(string), "Vozilo ID %d je obrisano", acc); //conver
	SCM(playerid, -1, string);
	format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s je obrisao Motor ID: %d", GetName(playerid), acc);
	SCMTA(-1,string);
    return 1;
}
/////////////////////////////////////////////////////////
CMD:aplprodaj(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 4+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
	new i, poz = random(sizeof(RandomPlovilaPijacaSpawn));
	for(new j = 0; j < sizeof(PlovilaInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == PlovilaInfo[j][plID])
		{
			i = j;
		}
	}
	PlovilaInfo[i][plPozX] = RandomPlovilaPijacaSpawn[poz][0];
	PlovilaInfo[i][plPozY] = RandomPlovilaPijacaSpawn[poz][1];
	PlovilaInfo[i][plPozZ] = RandomPlovilaPijacaSpawn[poz][2];
	PlovilaInfo[i][plPozA] = RandomPlovilaPijacaSpawn[poz][3];
	strmid(PlovilaInfo[i][plVlasnik], "Niko", 0, strlen("Niko"), 999);
	PlovilaInfo[i][plImaVlasnika] = 0; PlovilaInfo[i][plZakljucan] = 0;
	DestroyVehicle(PlovilaInfo[i][plID]);
	PlovilaInfo[i][plSpawn] = 0;
	PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel],PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA],PlovilaInfo[i][plBoja1],PlovilaInfo[i][plBoja2],30000);
	SacuvajPlovila(i);
	RTC(PlovilaInfo[i][plID]);
	new string[96];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Prodali ste na pijacu plovilo ID: %d!",i); //conver
	SCM(playerid,-1, string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:aplparkiraj(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo ALVL 4+!");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    new i, Float:PozAS[4];
	for(new j = 0; j < sizeof(PlovilaInfo); j++)
	{
		if(GetPlayerVehicleID(playerid) == PlovilaInfo[j][plID])
		{
			i = j;
		}
	}
	GetVehiclePos(PlovilaInfo[i][plID], PozAS[0], PozAS[1], PozAS[2]);
	GetVehicleZAngle(PlovilaInfo[i][plID], PozAS[3]);
	PlovilaInfo[i][plPozX] = PozAS[0];
	PlovilaInfo[i][plPozY] = PozAS[1];
	PlovilaInfo[i][plPozZ] = PozAS[2];
	PlovilaInfo[i][plPozA] = PozAS[3];
	DestroyVehicle(PlovilaInfo[i][plID]);
	PlovilaInfo[i][plSpawn] = 0;
	PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel],PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA],PlovilaInfo[i][plBoja1],PlovilaInfo[i][plBoja2],30000);
	new string[96];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Plovilo je uspesno parkirano ID: %d!",i); //conver
	SCM(playerid,-1, string);
	SacuvajPlovila(i); RTC(PlovilaInfo[i][plID]);
	return 1;
}
CMD:specon(playerid, params[])
{
	//#pragma unused help
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0 &&  saduty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator/GameMaster/Spec-Team Duznosti!");
    if( PlayerInfo[ playerid ][ pAdmin ] >= 1 || PlayerInfo[ playerid ][ pGM ] >= 1 || PlayerInfo[ playerid ][ pSpecteam ] >= 1 || PlayerInfo[ playerid ][ pTestAdmin ] >= 1 )
	{
	    new id;
		new Float:Pos[3];
	    if( sscanf( params, "u", id ) ) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] : "BELA"/specon [ID/Ime_Prezime]");
	    if( id == IPI ) return SCM( playerid, -1, ""CRVENA"[#SPEC]: "BELA"Nepostojeci ID.");
	    if( PlayerInfo[playerid][pGM] == 1 && PlayerInfo[id][pAdmin] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Zasto bi specao Admine ?");
	    if( id == playerid ) return SCM( playerid, -1, ""CRVENA"[#SPEC]: "BELA"Ne mozes specati sam sebe.");
		if( PlayerInfo[ playerid ][ pAdmin ] < PlayerInfo[ id ][ pAdmin ] ) return SCM(playerid,-1, ""CRVENA"[#SPEC]: "BELA"Ne mozes specati admina koji je veci od tebe!");
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		SetPVarFloat(playerid,"XPos",Pos[0]);
		SetPVarFloat(playerid,"YPos",Pos[1]);
		SetPVarFloat(playerid,"ZPos",Pos[2]);
		SetPVarInt(playerid,"Interior",GetPlayerInterior(playerid));
		SetPVarInt(playerid,"VW",GetPlayerVirtualWorld(playerid));
		PlayerInfo[playerid][pSpecating] = 1;
		GameTextForPlayer(playerid, "~y~Ukljucuem spec, sacekajte...", 3000, 3);
		if ( !IsPlayerInAnyVehicle(id) )
		{
			TogglePlayerSpectating(playerid, 1);
			PlayerSpectatePlayer(playerid, id);
			SetPlayerInterior(playerid,GetPlayerInterior(id));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
			return 1;
		}
		else
		{
			TogglePlayerSpectating(playerid, 1);
			PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
			SetPlayerInterior(playerid,GetPlayerInterior(id));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
		}
	}
	return 1;
}
//>>>>>>>>>>>>>>>>>>>>>>>>>>>> Komanda /specoff <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//
CMD:specoff(playerid, params[])
{
	//#pragma unused help
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0 &&  saduty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator/GameMaster/Spec-Team Duznosti!");
    if( PlayerInfo[ playerid ][ pAdmin ] >= 1 || PlayerInfo[ playerid ][ pGM ] >= 1 || PlayerInfo[ playerid ][ pSpecteam ] >= 1 || PlayerInfo[ playerid ][ pTestAdmin ] >= 1 )
	{
		if(PlayerInfo[playerid][pSpecating] == 0)return SCM(playerid, -1, ""CRVENA"[#SPEC]: "BELA"Ne specas nikog!");
		TogglePlayerSpectating(playerid, 0);
		PlayerInfo[playerid][pSpecating] = 0;
		GameTextForPlayer(playerid, "~y~Iskljucujem spec, sacekajte...", 3000, 3);
    }
	return 1;
}
///////////////////////////////////////////////////////
CMD:count(playerid, params[])
{

	if (PlayerInfo[playerid][pGM] >= 2 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		new amount,string[128];
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params,"i",amount)) return SendClientMessage(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/count [Sekundi (MAX 10 - MIN 0)]");
		//if(iscountactivated == 1) return SendClientMessage(playerid,-1,""SRWBOJA"GRESKA | "SIVA"Brojanje je vec zapoceto!");
		if(amount > 10 || amount <= 0) return SendClientMessage(playerid,-1,""SRWBOJA"GRESKA | "SIVA"MAX 10 - MIN 1 SEC");
		CountTimer = SetTimer("Count",1000,true);
		countamount = amount; iscountactivated = 1;
		format(string,sizeof(string),""VARADERO"[INFO] "BELA"%s je upravo zapoceo count.",GetName(playerid));
		AdminGameMaster(-1, string); SCM(playerid,-1,"Zapoceli ste count!");
	}
	else
	{
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo Admini & GM2+.");
	}
	return 1;
}
CMD:kkljuc(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pPomocnik] == 1)
 	{
        new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA"/Donate [ID/Ime] [Level (0-1)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"[V:RPG] Igrac nije na serveru.");
		if(level < 0 || level > 1) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Kljuc Level ne moze biti manji od 0 i veci od 1!");
		PlayerInfo[player][pDonate] = level;
		format(string, sizeof(string), ""SPLAVA"A | "BELA"Vlasnik %s vam je postavio Donate kljuc Level %d", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""CRVENA"A | "BELA"Igracu %s ste postavili Donate kljuc  Level na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik  !");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postavipromotera(playerid, params[])
{
	if(UlogovanProvera[playerid] == 0) return SendClientMessage(playerid, -1, ""ORANGE2"#!: Morate se ulogovati !");
	if(PlayerInfo[playerid][pAdmin] >= 7 || PlayerInfo[playerid][pDozvola6] == 1)
 	{
		new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/postavipromotera [ID/Ime] [Level (0/3)]");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "Igrac nije na serveru.");
		if(level < 0 || level > 3) return SendClientMessage(playerid, -1, "Level ne moze biti manji od 0, a veci od 3 !");
		PlayerInfo[player][pPromoter] = level;
		if(level == 0)
		{
		    format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Admin %s vam je skinuo Promotera.", GetName(playerid));
			SendClientMessage(player, -1, string);
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste skinuli Promotera.", GetName(player), player);
			SendClientMessage(playerid, -1, string);
		}
		else if(level >= 1)
		{
		    format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Admin %s vam je postavio Promotera Level %d.", GetName(playerid), level);
			SendClientMessage(player, -1, string);
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste postavili Promotera Level %d.", GetName(player), player, level);
			SendClientMessage(playerid, -1, string);
		}
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, "Samo Vlasnik !");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postavispecteam(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pPomocnik] == 3)
 	{
		new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA"/postavipromotera [ID/Ime] [Level (0-1)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA" Igrac nije na serveru.");
//		if(PlayerInfo[player][pLevel] == 15 || PlayerInfo[player][pSatiIgre] < 6) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozes setati poziciju igracu koji je tek napravio acc!!!!");
		if(level < 0 || level > 1) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA"PROMOTER Level ne moze biti manji od 0 i veci od 1!");
		PlayerInfo[player][pSpecteam] = level;
        format(string, sizeof(string), ""SPLAVA"A | "BELA"Vlasnik %s vam je postavio Specteam Level %d", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""SPLAVA"A | "BELA"Igracu %s ste postavili Specteam Level na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		format(string,sizeof(string),""CRVENA"A | "BELA"%s je postavio Specteam igracu %s na ID %d.",GetName(playerid),GetName(player),level);
		AdminGameMaster(-1,string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, "Samo Vlasnik !");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postavifchat(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 6)
 	{
		new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA"/postavifchat [ID/Ime] [Level (0-1)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA" Igrac nije na serveru.");
		//if(PlayerInfo[player][pLevel] == 15 || PlayerInfo[player][pSatiIgre] < 6) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozes setati poziciju igracu koji je tek napravio acc!!!!");
		if(level < 0 || level > 1) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA"F Chat Level ne moze biti manji od 0 i veci od 1!");
		PlayerInfo[player][pChatF] = level;
        format(string, sizeof(string), ""SPLAVA"A | "BELA"Vlasnik %s vam je postavio Fchat Level %d", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""SPLAVA"A | "BELA"Igracu %s ste postavili Fchat Level na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		format(string,sizeof(string),""CRVENA"A | "BELA"%s je postavio Fchat na glavu igracu %s na ID %d.",GetName(playerid),GetName(player),level);
		AdminGameMaster(-1,string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "BELA" Samo Vlasnik !");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postavitest(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if (PlayerInfo[playerid][pAdmin] >= 6)
 	{
        new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, "Varadero Pomoc | "SRWBOJA"/postavitest [ID/Ime] [Level (0c-1)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"ERROR: Igrac nije na serveru.");
		if(level < 0 || level > 1) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Ne moze vise od 1!");
		PlayerInfo[player][pTestAdmin] = level;
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Vlasnik %s vam je postavio %d TEST Admin Level.", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Igracu %s ste postavili TEST Admin Level na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		format(string,sizeof(string),""CRVENA"A | "BELA"%s je postavio TestAdmin igracu %s na ID %d.",GetName(playerid),GetName(player),level);
		AdminGameMaster(-1,string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postaviupubg(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 4)
 	{
        new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, "Varadero Pomoc | "SRWBOJA"/postavitest [ID/Ime] [Level (1-2)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"ERROR: Igrac nije na serveru.");
		if(level < 0 || level > 3) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Ne moze vise od 1!");
		PlayerInfo[player][pPUBG] = level;
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Vlasnik %s vam je postavio %d PUBG Level.", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Igracu %s ste postavili PUBG Level na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		format(string,sizeof(string),""CRVENA"A | "BELA"%s je postavio PUBG igracu %s na ID %d.",GetName(playerid),GetName(player),level);
		SendAdminMessage(-1,string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Admin Level 4!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postavivgm(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if (PlayerInfo[playerid][pAdmin] >= 6)
 	{
        new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, "Varadero Pomoc | "SRWBOJA"/postavivgm [ID/Ime] [Level (1-2)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"ERROR: Igrac nije na serveru.");
		if(level < 0 || level > 3) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Ne moze vise od 1!");
		PlayerInfo[player][pVGM] = level;
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Vlasnik %s vam je postavio %d Vodju GameMastera Level.", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Igracu %s ste postavili Vodju GameMastera Level na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postavivodju(playerid, params[])
{
    //#pragma unused help
    if (PlayerInfo[playerid][pAdmin] >= 6)
 	{
        new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, "Varadero Pomoc | "SRWBOJA"/postavivodju [ID/Ime] [Level (0-4)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"ERROR: Igrac nije na serveru.");
		if(level < 0 || level > 4) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Ne moze vise od 1!");
		PlayerInfo[player][pProbaj] = level;
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Vlasnik %s vam je postavio %d CMD Level.", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""CRVENA"::::GRESKA:::"BELA"Komanda ne postoji >> /komande !");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postaviturcin(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 6)
 	{
        new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, "Varadero Pomoc | "SRWBOJA"/postaviturcin [ID/Ime] [Level (1-2)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"ERROR: Igrac nije na serveru.");
		if(level < 0 || level > 3) return SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Ne moze vise od 1!");
		PlayerInfo[player][pTurcin] = level;
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Vlasnik %s vam je postavio %d Vodju GameMastera Level.", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Igracu %s ste postavili Vodju GameMastera Level na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:kljuc(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 5)
 	{
        new player, level, string[256];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, "Varadero Pomoc | "SRWBOJA"/sukykey [ID/Ime] [Level (0-4)");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"ERROR: Igrac nije na serveru.");
		PlayerInfo[player][pSuky] = level;
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Vlasnik %s vam je postavio %d Kljuc za kapiju!", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""SRWBOJA"A | "BELA"Igracu %s ste postavili Kljuc za kapiju na %d.", GetName(player), level);
		SendClientMessage(playerid, -1, string);
		format(string,sizeof(string),""CRVENA"A | "BELA"%s je postavio Kljuc za kapiju %s na ID %d.",GetName(playerid),GetName(player),level);
		SendAdminMessage(-1,string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:postavivipa(playerid, params[])
{
	if(UlogovanProvera[playerid] == 0) return SendClientMessage(playerid, -1, ""ORANGE2"#!: Morate se ulogovati !");
    if(PlayerInfo[playerid][pAdmin] >= 7 || PlayerInfo[playerid][pDozvola5] == 1)
 	{
        new player, level, string[512];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/postavivipa [ID/Ime] [Level (0/6)]");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "Igrac nije na serveru.");
		if(level < 0 || level > 6) return SendClientMessage(playerid, -1, "Level ne moze biti manji od 0, a veci od 6!");
		PlayerInfo[player][pVip] = level;
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Vlasnik %s vam je postavio Vip nivo %d.", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste postavili Vip nivo %d.", GetName(player), player, level);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), ""ORANGE2"#!: Vlasnik %s [%d] je postavio Vipa igracu %s [%d] level %d.", GetName(playerid), playerid, GetName(player), player, level);
		AdminGameMaster(-1,string);
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	}
	return 1;
}
///////////////////LIDERCHAT////////////////////////////////////////////////////
CMD:l(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] : "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    if((lchat)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"/l chat je iskljucen!!");
    if(PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pVlidera] >= 1)
	{
		if(GetTimeEx() < gLeader[playerid] && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, "Ovu komandu mozete koristiti svakih 5 sekundi !");
		{
		if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"Ne mozete koristiti ovu komandu jer ste zatvoreni !");
		if(PlayerInfo[playerid][pMutiran] == 1) return SCM(playerid,-1,"Ne mozete koristiti ovu komandu zato sto ste mutirani na chat !");
		if(PlayerInfo[playerid][pMutel] == 1) return SCM(playerid,-1,"Ne mozete koristiti ovu komandu zato sto ste mutirani na /l chatu !");
		new text[256], string[128], sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[1024]", text)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/l [tekst]");
		new arank[256];
		if(PlayerInfo[playerid][pLider] == 1) { arank = ""LJUB"LSPD"; }
		else if(PlayerInfo[playerid][pLider] == 2) { arank = ""LJUB"TVF"; }
		else if(PlayerInfo[playerid][pLider] == 3) { arank = ""LJUB"BDT"; }
		else if(PlayerInfo[playerid][pLider] == 4) { arank = ""LJUB"GSF"; }
		else if(PlayerInfo[playerid][pLider] == 5) { arank = ""LJUB"Ballas"; }
		else if(PlayerInfo[playerid][pLider] == 6) { arank = ""LJUB"Novinari"; }
		else if(PlayerInfo[playerid][pLider] == 7) { arank = ""LJUB"CIA"; }
		else if(PlayerInfo[playerid][pLider] == 8) { arank = ""LJUB"PS"; }
		else if(PlayerInfo[playerid][pLider] == 9) { arank = ""LJUB"Condor"; }
		else if(PlayerInfo[playerid][pLider] == 10) { arank = ""LJUB"Hitman"; }
		else if(PlayerInfo[playerid][pLider] == 11) { arank = ""LJUB"BL"; }
		else if(PlayerInfo[playerid][pLider] == 12) { arank = ""LJUB"LCN"; }
		else if(PlayerInfo[playerid][pLider] == 13) { arank = ""LJUB"DNB"; }
		else if(PlayerInfo[playerid][pLider] == 14) { arank = ""LJUB"Taxi"; }
		else if(PlayerInfo[playerid][pLider] == 15) { arank = ""LJUB"Yakuza"; }
		else if(PlayerInfo[playerid][pLider] == 16) { arank = ""LJUB"FBI"; }
		else if(PlayerInfo[playerid][pLider] == 17) { arank = ""LJUB"BCC"; }
		else if(PlayerInfo[playerid][pLider] == 18) { arank = ""LJUB"Vatrogasci"; }
		else if(PlayerInfo[playerid][pLider] == 19) { arank = ""LJUB"DR"; }
		else if(PlayerInfo[playerid][pLider] == 20) { arank = ""LJUB"RM"; }
		else if(PlayerInfo[playerid][pLider] == 21) { arank = ""LJUB"NC"; }
		else if(PlayerInfo[playerid][pLider] == 22) { arank = ""LJUB"LC"; }
		else if(PlayerInfo[playerid][pLider] == 23) { arank = ""LJUB"TBB"; }
		else if(PlayerInfo[playerid][pLider] == 24) { arank = ""LJUB"SAOP"; }
		else if(PlayerInfo[playerid][pLider] == 25) { arank = ""LJUB"VLA"; }
		else if(PlayerInfo[playerid][pVlidera] == 1) { arank = "Vodja Lidera"; }
		else if(PlayerInfo[playerid][pAdmin] == 5) { arank = "Head-Admin"; }
		else if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Direktor"; }
		else if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Vlasnik"; }
		else if(PlayerInfo[playerid][pAdmin] == 8) { arank = "Developer"; }
		format(string, sizeof(string), ""GCHAT"[LIDER CHAT] %s [%s | ID:%d"GCHAT"]: "BELA"%s", GetName(playerid), arank, playerid, text);
		Lider(-1,string);
		{
		gLeader[playerid] = GetTimeEx() + 5;
		}
	}
	}
	return 1;
}
///////////////
CMD:mutirajl(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play, string[256];
		if(sscanf(params, "ud", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "VARADERO"/mutirajl [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
     	PlayerInfo[play][pMutel] = 1;
		format(string, 256, ""ORANGE2"#!: Mutirani ste na /l chatu od strane Vlasnika !");
		SendClientMessage(play, -1, string);
		format(string, 256, ""ORANGE2"#!: Mutirali ste igraca %s [%d] na /l chatu !", GetName(play), play);
		SendClientMessage(playerid, -1, string);
		SavePlayer(play);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
CMD:unmutirajl(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new string[256], play;
		if(sscanf(params, "ud", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "VARADERO"/unmutirajl [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
     	PlayerInfo[play][pMutel] = 0;
		format(string, 256, ""ORANGE2"#!: Unmutirani ste na /l chatu od strane Vlasnika !");
		SendClientMessage(play, -1, string);
		format(string, 256, ""ORANGE2"#!: Unmutirali ste igraca %s [%d] na /l chatu !", GetName(play), play);
		SendClientMessage(playerid, -1, string);
		SavePlayer(play);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:asvima(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste ovlasceni!");
	new string[128];
	{
	    foreach(new id:Player)
	    {
			PlayerInfo[id][pTrazeniLevel] = 0;
			strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
			strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
			strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);
			SetPlayerColor(id, BELA2);
	    }
	    format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je ocistio wanted level svima!", GetName(playerid));
		SCMTA(-1,string);
	}
	return 1;
}
///////////////////////////////////////////////////////
	CMD:pronadjikvar(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
    		if(PlayerInfo[playerid][pPosao] != POSAO_VODOINSTALATER) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Niste vodoinstalater!");
	      	{
      			if(IsPlayerInRangeOfPoint(playerid, 12, 1806.2552,-1690.9285,13.7140))
	      		{
			 		if(OpstinaKvar == 1)
					{
						SendClientMessage(playerid,COLOR_RED, "Kvar na vodovodnoj mrezi se nalazi u blizini Opstine.");
						SetPlayerCheckpoint(playerid, 1431.1438, -1589.5889, 13.5372, 3.0);
						return 1;
					}
				 	else if(GroweKvar == 1)
					{
						SetPlayerCheckpoint(playerid, 2344.8425, -1661.6545, 13.5575, 3.0);
						SendClientMessage(playerid, COLOR_RED, "Kvar na vodovodnoj mrezi se nalazi u blizini Growe Street.");
						return 1;
					}
			 		else if(KolodvorKvar == 1)
					{
						SetPlayerCheckpoint(playerid, 1819.4520, -1834.0774, 13.4629,3.0);
						SendClientMessage(playerid, COLOR_RED, "Kvar na vodovodnoj mrezi se nalazi u blizini Kolodvora.");
						return 1;
					}
			 		else if(BankaKvar == 1)
					{
						SetPlayerCheckpoint(playerid, 1483.2871, -1041.2990, 23.7268, 3.0);
						SendClientMessage(playerid, COLOR_RED, "Kvar na vodovodnoj mrezi se nalazi u blizini Banke.");
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_RED, "[Greska]Trenutno nema kvarova na vodovodnoj mrezi!.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "Niste kod racunara za pronalazenje kvarova!");
					return 1;
				}
			}
 		}
		return 1;
	}
	CMD:unistisvekvarove(playerid, params[])
	{
	if(PlayerInfo[playerid][pAdmin] < 5 ) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste ovlasteni!");
	KvarOpstina(playerid);
	KvarKolodvor(playerid);
	KvarBanka(playerid);
	KvarGrowe(playerid);
	return 1;
	}
	
	CMD:popravikvar(playerid, params[])
	{
 		if(IsPlayerConnected(playerid))
	    {
	       	if(PlayerInfo[playerid][pPosao] != POSAO_VODOINSTALATER) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Niste vodoinstalater!");
	      	{
				if(Kvar1 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "[Greska]Trenutno nema nikakvih kvarova na vodovodnoj mrezi!");
					return 1;
				}

				if(Ventil == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "[Greska]Prvo morate da zatvorite ventil kako bi otklonili kvar!");
					return 1;
				}

				if(PosaoOprema[playerid] == 0)
		        {
		        	SendClientMessage(playerid, COLOR_RED, "[Greska]Ne mozete vrsiti popravke bez Alata!");
					return 1;
				}

				if(IsPlayerInRangeOfPoint(playerid, 10, 1819.4520, -1834.0774, 13.4629))//Kvar Kolodvor
				{
					Kvar1 = 0;
					KolodvorKvar = 0;
					SetTimerEx("KvarKolodvor",35000,0,"i",playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Otklanjanje kvara je u toku, molimo sacekajte.");
					return 1;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 10, 1431.1438, -1589.5889, 13.5372))//Kvar Opstina
				{
					Kvar1 = 0;
					OpstinaKvar = 0;
					SetTimerEx("KvarOpstina",35000,0,"i",playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Otklanjanje kvara je u toku, molimo sacekajte.");
					return 1;
			    }
				else if(IsPlayerInRangeOfPoint(playerid, 10, 1483.2871, -1041.2990, 23.7268))//Kvar Banka
				{
					Kvar1 = 0;
					BankaKvar = 0;
					SetTimerEx("KvarBanka",35000,0,"i",playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Otklanjanje kvara je u toku, molimo sacekajte.");
					return 1;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 10, 2344.8425, -1661.6545, 13.5575))//Kvar Grove
				{
					Kvar1 = 0;
					GroweKvar = 0;
					SetTimerEx("KvarGrowe",35000,0,"i",playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Otklanjanje kvara je u toku, molimo sacekajte.");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[Greska] Niste na mestu kvara.");
					return 1;
				}
			}
		}
		return 1;
	}
	CMD:zatvoriventil(playerid, params[])
	{
		new sendername[MAX_PLAYER_NAME], string[260];
		if(IsPlayerConnected(playerid))
	    {
   			if(PlayerInfo[playerid][pPosao] != POSAO_VODOINSTALATER) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Niste vodoinstalater!");
	      	{
		 		if(Kvar1 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, "[Greska]Trenutno nema kvarova na vodovodnoj mrezi!");
					return 1;
				}
				if(PosaoOprema[playerid] == 0)
		        {
		        	SendClientMessage(playerid, COLOR_RED, "[Greska]Ne mozete zaviti ventil bez Alata!");
					return 1;
				}
				if(Ventil == 1)
				{
					SendClientMessage(playerid, COLOR_RED, "[Greska]Ventil je vec zatvoren!");
					return 1;
				}
		 		if(IsPlayerInRangeOfPoint(playerid, 2, 1823.2830, -1834.0970, 13.4893))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					Ventil = 1;
					DestroyDynamicObject( kk22 );//Ventil Kolodvor
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zatvorili ste ventil i zaustavili vodu, sada mozete otkloniiti kvar.");
					format(string, sizeof(string), "* %s uzima kljuc i zavija ventil.", sendername);
					e_RadiusMSG(30.0, playerid, HEX_PROX, string);
					return 1;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 2, 1429.7283, -1590.5406, 13.5904))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					Ventil = 1;
					DestroyDynamicObject( ko21 );//Ventil Opstina
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zatvorili ste ventil i zaustavili vodu, sada mozete otkloniiti kvar.");
					format(string, sizeof(string), "* %s uzima kljuc i zavija ventil.", sendername);
					e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		   			return 1;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 2, 1483.2239, -1040.0723, 23.6878))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    Ventil = 1;
					DestroyDynamicObject( kb25 );//Ventil Banka
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zatvorili ste ventil i zaustavili vodu, sada mozete otkloniiti kvar.");
					format(string, sizeof(string), "* %s uzima kljuc i zavija ventil.", sendername);
					e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		   			return 1;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 2, 2343.1768, -1658.5077, 13.3988))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					Ventil = 1;
					DestroyDynamicObject( kg29 );//Ventil Growe
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zatvorili ste ventil i zaustavili vodu, sada mozete otkloniiti kvar.");
					format(string, sizeof(string), "* %s uzima kljuc i zavija ventil.", sendername);
					e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		   			return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[Greska] Niste kod ventila.");
					return 1;
				}
			}
		}
		return 1;
	}
/////////////////////////////////////////////
CMD:dajpasos(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/dajpasos [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pPasos] = 1;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Upsesno ste dali pasos!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
CMD:dajrpucitelja(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/dajrpucitelja [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pRPucitelj] = 1;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Upsesno ste postavili RPG ucitelja!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
CMD:skinirpucitelja(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/skinirpucitelja [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pRPucitelj] = 0;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Upsesno ste skinuli RPG ucitelja!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
CMD:dajdiplomu(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pRPucitelj] == 1)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/dajdiplomu [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		if(PlayerInfo[play][pPismeni]) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Igrac nije polozio pismeni!");
		PlayerInfo[play][pDiploma] = 1;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste dali diplomu!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo RPG ucitelj!");
	}
	return 1;
}
CMD:dajvodjuabjuzera(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/dajvodjuabjuzera [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pVabjuzer] = 1;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Upsesno ste postavili abjuzera!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik !");
	}
	return 1;
}
CMD:dajabjuzera(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pVabjuzer] == 1)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/dajabjuzera [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pAbjuzer] = 1;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste postavili abjuzera!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik !");
	}
	return 1;
}
CMD:skiniabjuzera(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pVabjuzer] == 1)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/skiniabjuzera [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pAbjuzer] = 0;
		PlayerInfo[play][pVabjuzer] = 0;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste skinuli abjuzera!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik !");
	}
	return 1;
}
CMD:dajvodjulidera(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/dajvodjulidera [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pVlidera] = 1;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Upsesno ste postavili vodju lidera!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
CMD:skinivodjulidera(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/skinivodjulidera [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pVlidera] = 0;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste skinuli vodju lidera!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo vlasnik!");
	}
	return 1;
}
/////////////////////////////////////////////
CMD:udriimunitet(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/dajimunitet [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pImunitett] = 1;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Upsesno ste postavili imunitet!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
CMD:skidajmunitet(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new play;
		if(sscanf(params, "u", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/skiniimunitet[ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
		PlayerInfo[play][pImunitett] = 0;
		SavePlayer(play);
		SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Upsesno ste skinuli imunitet!");
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}

CMD:divorce(playerid, params[])
{
	//#pragma unused help
	new giveplayerid, giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME], string[128];
	if(PlayerInfo[playerid][pMarried] < 1) return SCM(playerid, -1, ""BELA"Niste vencani !");
	if(sscanf(params, "u", giveplayerid)) return SCM(playerid, -1, "{00C0FF}CMD | {F3FF02}/divorce [Playerid/Deo imena]");
	if(giveplayerid == INVALID_PLAYER_ID) return SCM(playerid, -1, ""BELA"Taj igrac nije na mrezi !");
	if(!DaljinaIgraca(5.0,playerid,giveplayerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije blizu tebe!");
	if(giveplayerid == playerid) return SCM(playerid, -1, "Ne mozete prositi samog sebe!");
	new dstring[MAX_PLAYER_NAME];
	new wstring[MAX_PLAYER_NAME];
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "%s", giveplayer);
	strmid(wstring, string, 0, strlen(string), 255);
	format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
	strmid(dstring, string, 0, strlen(string), 255);
	if(strcmp(dstring,wstring, true ) != 0 ) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije vencan sa tobom !");
	format(string, sizeof(string), "* Poslali ste zahtev za razvod igracu %s.", giveplayer);
	SCM(playerid, -1, string);
	format(string, sizeof(string), "* %s ti je poslao zahtev za razvod (ukucaj /prihvatirazvod) da prihvatis.", sendername);
	SCM(giveplayerid, -1, string);
	DivorceOffer[giveplayerid] = playerid;
	return 1;
}
CMD:propose(playerid, params[])
{
	//#pragma unused help
	new giveplayerid, giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME], string[256];
	if(GetPlayerMoney(playerid) < 20000) return SCM(playerid, -1, "Brak i troskovi kostaju $20000 !");
	if(PlayerInfo[playerid][pMarried] > 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Vec ste vencani !");
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate kucu da bi omogucili da vasa Zena / Muz zivi negde !");
	if(sscanf(params, "u", giveplayerid)) return SCM(playerid, -1, "{00C0FF}CMD | {F3FF02}/propose [Playerid/Deo imena]");
	if(giveplayerid == INVALID_PLAYER_ID) return SCM(playerid, -1, "Taj igrac nije na mrezi !");
	if(PlayerInfo[giveplayerid][pMarried] > 0) return SCM(playerid, -1, "Taj igrac je vec vencan !");
	if(PlayerInfo[giveplayerid][pPosedovanjeKuce] != -1) return SCM(playerid, -1, ""BELA"Taj igrac ima kucu, ne moze biti vencan !");
	if(!DaljinaIgraca(5.0,playerid,giveplayerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije blizu tebe!");
	if(giveplayerid == playerid) return SCM(playerid, -1, "Ne mozete zaprositi sami sebe!");
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "* Zaprosili ste %s.", giveplayer);
	SCM(playerid, -1, string);
	format(string, sizeof(string), "* %s vas je upravo zprosio (ukucajte /prihvativencanje) da prihvatite.", sendername);
	SCM(giveplayerid, -1, string);
	ProposeOffer[giveplayerid] = playerid;
	return 1;
}
CMD:apoklon(playerid, params[])
{
    	new string[128];
	    if (PlayerInfo[playerid][pAdmin] >= 5)
	    {
			foreach(new i : Player)
			    {
					switch(random(5))
					{
					    case 0: {
					        new rand = (5000 + random(20000));
							g_NovacPlus(i, rand);
		                    format(string, sizeof(string), "~r~Srecna Nova Godina!~n~~w~Dobio si ~g~$%d", rand);
		                    GameTextForPlayer(i, string, 4000, 3);
						}
					    case 1: {
					        SetPlayerHealth(i, 100);
					        format(string, sizeof(string), "~r~Srecna Nova Godina!~n~~w~Dobio si ~y~Cokoladu");
		                    GameTextForPlayer(i, string, 4000, 3);
					    }
					    case 2: {
					        SetPlayerArmour(i, 100);
					        format(string, sizeof(string), "~r~Srecna Nova Godina!~n~~w~Dobio si ~y~Pancir");
					        GameTextForPlayer(i, string, 4000, 3);
					    }
					    case 3: {
					        PlayerInfo[i][pExp] ++;
		                    format(string, sizeof(string), "~r~Srecna Nova Godina!~n~~w~Dobio si ~y~Respekte");
		                    GameTextForPlayer(i, string, 4000, 3);
						}
						case 4: {
					        new rand = (1250 + random(15000));
							g_NovacPlus(i, rand);
		                    format(string, sizeof(string), "~r~Srecna Nova Godina!~n~~w~Dobio si ~g~$%d", rand);
		                    GameTextForPlayer(i, string, 4000, 3);
						}
			    }
			}
			format(string, sizeof(string), "{FFAA00}Srecna Nova Godina! {FFFFFF}Dobio si {FFAA00}Poklon {FFFFFF}od Administrator Team-a.");
			SendClientMessageToAll(COLOR_WHITE, string);
	    }
		return 1;
}
CMD:bacipoklon(playerid, params[])
{
	    if (PlayerInfo[playerid][pAdmin] >= 4)
	    {
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			new rand = random(sizeof(RandomModel));
			Gift[giftCounter] = CreateDynamicPickup(RandomModel[rand][0], 1, x + 3, y + 1, z, GetPlayerVirtualWorld(playerid));
			giftCounter++;
			new string[128 + MAX_ZONE_NAME], zone[MAX_ZONE_NAME];
			GetPlayer2DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "{FF0000}Deda Mraz {FFFFFF}je izgubio {FF3C00}Poklon {FFFFFF}u {0069FF}%s! {FFFFFF}nadji ga brzo!", zone);
			SendClientMessageToAll(COLOR_WHITE, string);
	    }
	    return 1;
}
CMD:witness(playerid, params[])
{
	//#pragma unused help
	new giveplayerid, giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME], string[256];
	if(sscanf(params, "u", giveplayerid)) return SCM(playerid, -1, "{00C0FF} CMD | {F3FF02}/witness [Playerid/Deo imena ");
	if(giveplayerid == INVALID_PLAYER_ID) return SCM(playerid, -1, "Taj igrac nije na mrezi !");
	if(!DaljinaIgraca(5.0,playerid,giveplayerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije blizu tebe!");
	if(giveplayerid == playerid) return SCM(playerid, -1, "Ne mozete oznaciti na sebe!");
	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "* Zahtevate od igraca %s Da bude vas svedok na vencanju.", giveplayer);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "* %s Zahteva od vas da budete svedok na vencanju (ukucajte /prihvatikuma) da prihvatite.", sendername);
	SendClientMessage(giveplayerid, -1, string);
	MarryWitnessOffer[giveplayerid] = playerid;
	return 1;
}
CMD:cancel(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
    MarryWitnessOffer[playerid] = -1;
    ProposeOffer[playerid] = -1;
    DivorceOffer[playerid] = -1;
    SCM(playerid, -1, "   prekinuli ste sve oko vencanja !");
    return 1;
}
CMD:prihvativencanje(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
    new string[256], giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME];
	if(ProposeOffer[playerid] == -1) return SCM(playerid, -1, "Niko nije zaporosio");
	if(!IsPlayerInRangeOfPoint(playerid, 20, 2240.2542,-1330.0862,25.1189)) return SCM(playerid, -1, "Morate biti u crkvi");
	if(!DaljinaIgraca(10.0, playerid, ProposeOffer[playerid])) return SCM(playerid, -1, "   Igrac koji je zaporosio nije blizu tebe !");
	if(MarryWitness[ProposeOffer[playerid]] == 999) return SCM(playerid, -1, "   Onaj ko prosi nema svedoka za vencanje !");
	if(!IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
	if(!DaljinaIgraca(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]])) return SCM(playerid, -1, "   Svedoci nizu blizu mladozenje !");
	GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "* Prihvatili ste zahtev od igraca %s da budete njegova zena.", giveplayer);
	SCM(playerid, -1, string);
	format(string, sizeof(string), "* %s je prihvatio vas poziv da bude vasa zena.", sendername);
	SCM(ProposeOffer[playerid], -1, string);
	format(string, sizeof(string), "Svestenik: %s da li prihvatate igraca %s za vaseg muza? (ukucajte 'da', nista ne moze da prekine ovaj brak)", sendername, giveplayer);
	SCM(playerid, -1, string);
	MarriageCeremoney[playerid] = 1;
	ProposedTo[ProposeOffer[playerid]] = playerid;
	GotProposedBy[playerid] = ProposeOffer[playerid];
	MarryWitness[ProposeOffer[playerid]] = -1;
	ProposeOffer[playerid] = -1;
	return 1;
}
CMD:prihvatikuma(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	new string[100], giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME];
	if(MarryWitnessOffer[playerid] == -1) return SCM(playerid, -1, "   Niko vas nije pitao da budete svedok na vencanju !");
	if(!IsPlayerConnected(MarryWitnessOffer[playerid])) return 1;
	if(!DaljinaIgraca(10.0, playerid, MarryWitnessOffer[playerid])) return SCM(playerid, -1, "   Igrac koji je poslao zahtev za svedoka nije u blizini !");
	GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "* Prihvatili ste zahtev od igraca %s'da budete njegov svedok na vencanju.", giveplayer);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "* %s je prihvatio vas zahtev da bude vas svedok na vencanju.", sendername);
	SendClientMessage(MarryWitnessOffer[playerid], -1, string);
	MarryWitness[MarryWitnessOffer[playerid]] = playerid;
	MarryWitnessOffer[playerid] = -1;
	return 1;
}
CMD:bilbord(playerid, params[])
{
    new strR[255];
	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, "Morate biti 7+ lvl");
	if(bilbas == 1 && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, "Neki bilbord je vec napisan, sacekajte malo");
	if(!IsPlayerInRangeOfPoint(playerid, 10, 1519.19, -1725.64, 11.59) && !IsPlayerInRangeOfPoint(playerid, 10, 1368.66, -1412.66, 11.44) && !IsPlayerInRangeOfPoint(playerid, 10, 1473.17, -1042.98, 21.70) && !IsPlayerInRangeOfPoint(playerid, 10, 1232.87, -924.13, 40.62) && !IsPlayerInRangeOfPoint(playerid, 10, 1185.61, -1388.17, 11.17) && !IsPlayerInRangeOfPoint(playerid, 10, 1583.20, -2309.10, 11.42)) return SCM(playerid, -1, "Nisi blizu bilborda");
	new bilt[60];
	if(sscanf(params, "s[128]", bilt)) return SCM(playerid, -1, "[V:RPG] {00FFEE}/bilbord [text]");
	new is1=0;
	new r=0;
	while(strlen(bilt[is1]))
	{
		if('0'<=bilt[is1]<='9')
		{
			new is2=is1+1;
			new p=0;
			while(p==0)
			{
				if('0'<=bilt[is2]<='9'&&strlen(bilt[is2])) is2++;
				else
				{
					strmid(strR[r],bilt,is1,is2,255);
					if(strval(strR[r])<255) r++;
					is1=is2;
					p=1;
				}
			}
		}
		is1++;
	}
	if(r>=4)
	{
		for(new z=0;z<r;z++)
		{
			new pr2;
			while((pr2=strfind(bilt,strR[z],true))!=-1) for(new i=pr2,j=pr2+strlen(strR[z]);i<j;i++) bilt[i]='*';
			return 1;
		}
	}
	if(strlen(bilt) > 50) return SCM(playerid, -1, "Ne moze vise od 50 znakova");
	if(PlayerInfo[playerid][pZlato] < 4) return SCM(playerid, -1, "Nemas 4g zlata");
	if(IsPlayerInRangeOfPoint(playerid, 10, 1519.19, -1725.64, 11.59))
	{
		SetDynamicObjectMaterialText(bill1, 0, bilt, 130, "Arial", 24, 0, 0xFFFFFFAA, -16777216, 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10, 1368.66, -1412.66, 11.44))
	{
		SetDynamicObjectMaterialText(bill2, 0, bilt, 130, "Arial", 24, 0, 0xFFFFFFAA, -16777216, 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10, 1473.17, -1042.98, 21.70))
	{
		SetDynamicObjectMaterialText(bill3, 0, bilt, 130, "Arial", 24, 0, 0xFFFFFFAA, -16777216, 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 15, 1232.87, -924.13, 40.62))
	{
		SetDynamicObjectMaterialText(bill4, 0, bilt, 130, "Arial", 24, 0, 0xFFFFFFAA, -16777216, 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10, 1185.61, -1388.17, 11.17))
	{
		SetDynamicObjectMaterialText(bill5, 0, bilt, 130, "Arial", 24, 0, 0xFFFFFFAA, -16777216, 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10, 1583.20, -2309.10, 11.42))
	{
		SetDynamicObjectMaterialText(bill6, 0, bilt, 130, "Arial", 24, 0, 0xFFFFFFAA, -16777216, 1);
	}
	bilbas = 1;
	new string[96];
	format(string, charsmax(string), "Dali ste 4G GOLD-A za ime bilborda ' %s '.",bilt); //conver
	SCM(playerid, -1, string);
	PlayerInfo[playerid][pZlato] -= 4;
	SetTimer("SkiniBilb", 500000, 0);
	return 1;
}
CMD:gepek(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
        new engine,lights,alarm,doors,bonnet,boot,objective;
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, "INFO | {FFFFFF}Morate biti pored gepeka");
		nvozilo[playerid] = -1;
		new Float:x1, Float:y1, Float:z1;
		new bool:hasCar1 = PlayerInfo[playerid][pPosedovanjeAuta] != -1, bool:hasCar2 = PlayerInfo[playerid][pPosedovanjeAuta2] != -1;

		if (hasCar1 || hasCar2) {
			for(new car = 0; car < MAX_VEHICLES; car++)
	  		{
				GetVehiclePos(car, x1, y1, z1);
	  			if(IsPlayerInRangeOfPoint(playerid, 5, x1, y1, z1))
				{
					if(hasCar1 && car == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
					{
						nvozilo[playerid] = PlayerInfo[playerid][pPosedovanjeAuta];
						break;
					}
					else if(hasCar2 && car == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
					{
						nvozilo[playerid] = PlayerInfo[playerid][pPosedovanjeAuta2];
						break;
					}
				}
	   		}
   		}
		if(nvozilo[playerid] == -1) return SendClientMessage(playerid, -1, "INFO | {FFFFFF}Niste u blizini niti jednog vozila!");
		if(ProvjeraVozila(VoziloInfo[nvozilo[playerid]][vID]))
		{
			SPD(playerid, 777,DIALOG_STYLE_LIST,"Gepek","Ostavi\nUzmi\nInfo\nZatvori", "U redu", "Zatvori");
			GetVehicleParamsEx(VoziloInfo[nvozilo[playerid]][vID],engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(VoziloInfo[nvozilo[playerid]][vID],engine,lights,alarm,doors,bonnet,true,objective);
		}
		else
		{
  			SendClientMessage(playerid, -1, "INFO | {FFFFFF}Ovo vozilo nema gepeka!");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////
CMD:kopajzlato(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPosao] != POSAO_RUDAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste rudar!");
		if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
		if(KopacZlata[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Vec ste zapoceli sa poslom.");
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 5, 620.2411,834.2767,-94.8276))
		{
			KopacZlata[playerid] = 1;
			TogglePlayerControllable(playerid, 1);
			new randomize;
			new utovaristring[128];
			randomize = random(sizeof(KopacCheckPoints));
			SetPlayerCheckpoint(playerid, KopacCheckPoints[randomize][0], KopacCheckPoints[randomize][1], KopacCheckPoints[randomize][2], 5.0);
			format(utovaristring, sizeof(utovaristring), "* Zapoceli ste kopanje zlata, idite do crvenog markerai kopajte !");
			SendClientMessage(playerid, COLOR_WHITE, utovaristring);
		}
		else
		{
			SCM(playerid, COLOR_GREY, "  Nisi na mestu!");
		}
	}
	return 1;
}

CMD:predajzlato(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPosao] != POSAO_RUDAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste rudar!");
		if(PlayerInfo[playerid][pKopac] == 0) return SCM(playerid, 0xFF0000C8, "   Niste radili !");
		if(IsPlayerInRangeOfPoint(playerid, 2.5, 585.4147,871.9699,-42.4973))
		{
			KopacZlata[playerid] = 0;
			new utovaristring[128];
			TogglePlayerControllable(playerid, 1);
			format(utovaristring, sizeof(utovaristring), "* Predali ste nekoliko grama zlata i zaradili ste $%d !.",PlayerInfo[playerid][pKopac]);
			SendClientMessage(playerid, COLOR_WHITE, utovaristring);
			PlayerInfo[playerid][pKzlato] += PlayerInfo[playerid][pKopac];
			PlayerInfo[playerid][pKopac] = 0;
			DisablePlayerCheckpoint(playerid);
			new tozla = PlayerInfo[playerid][pKzlato];
			g_NovacPlus(playerid, tozla);
			PlayerInfo[playerid][pKzlato] = 0;
		}
		else
		{
			SCM(playerid, COLOR_GREY, "  Nisi na mestu!");
		}
	}
	return 1;
}
///////////////////PREVOZ ZLAATA//////////////////////////////////////////
CMD:utovarizlato(playerid, params[])
{
	new idcar = GetPlayerVehicleID(playerid);
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 10, 580,865,-43.5))
		{
			if(PlayerInfo[playerid][pPosao] != POSAO_RUDAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste rudar!");
			if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
			if(PrevozZlata[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Vec ste zapoceli sa poslom.");
				return 1;
			}
			if(IsAZlatoCar(idcar))
			{
				PrevozZlata[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				new zutovaristring[128];
				SetPlayerCheckpoint(playerid, 1348.0571,-1797.3876,13.5443, 5.0);
				format(zutovaristring, sizeof(zutovaristring), "Utovarili ste zlatne poluge, idite do crvenog markera i istovarite.");
				TogglePlayerControllable(playerid, 0); SetTimerEx("Freeze",5000, false, "d", playerid);
				SendClientMessage(playerid, COLOR_WHITE, zutovaristring);
			}
		}
	}
	return 1;
}
CMD:istovarizlato(playerid, params[])
{
	new idcar = GetPlayerVehicleID(playerid);
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 6, 1348.0571,-1797.3876,13.5443))
		{
			if(PlayerInfo[playerid][pPosao] != POSAO_RUDAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste rudar!");
			if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
			if(PrevozZlata[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Niste zapoceli posao.");
				return 1;
			}
			if(IsAZlatoCar(idcar))
			{
				PrevozZlata[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPlayerCheckpoint(playerid, 580,865,-43.5, 5.0);
				TogglePlayerControllable(playerid, 0); SetTimerEx("Freeze",5000, false, "d", playerid);
				new bonus = random(400), string[120];
				g_NovacPlus(playerid, 7000+bonus);
				format(string,sizeof(string),""SPLAVA"Uspesno ste istovarili zlatne poluge!\n\n"BELA"Plata: "SPLAVA"7000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
				SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj istovara zlata",string,"Ok","");
			}
		}
	}
	return 1;
}
CMD:svetlaon(playerid, params[])
{
    //#pragma unused help
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");

    new tmpcar = GetPlayerVehicleID(playerid);
    new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(tmpcar,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(tmpcar,engine,true,alarm,doors,bonnet,boot,objective);
    SendClientMessage(playerid, 0xFFFF00AA, "INFO | {FFFFFF}Ukljucili ste svetla na vozilu (( Da ugasite /svetlaoff ))");
	return 1;
}
CMD:svetlaoff(playerid, params[])
{
    //#pragma unused help
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");

    new tmpcar = GetPlayerVehicleID(playerid);
    new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(tmpcar,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(tmpcar,engine,false,alarm,doors,bonnet,boot,objective);
    SendClientMessage(playerid, 0xFFFF00AA, "INFO | {FFFFFF}Ugasili ste svetla na vozilu (( Da upalite /svetlaon ))");
	return 1;
}
CMD:dosije(playerid, params[])
{
    //#pragma unused help
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new dosije1[300];
	new dosije[600];
    format(dosije1,sizeof(dosije1),"{80C8FE}DOSIJE: {FFFFFF}MUP\n{80C8FE}Vase Ime: {FFFFFF}%s\n{80C8FE}Wanted level: {FFFFFF}%d\n\n",sendername, PlayerInfo[playerid][pTrazeniLevel]);
    format(dosije, sizeof(dosije),"%s%s",dosije1);
    SPD(playerid,7143,DIALOG_STYLE_MSGBOX,"POLICIJSKI NALOG",dosije,"OK","OK");
    return 1;
}
CMD:neon(playerid, params[])
{
	if(!PlayerToPoint(5.0,playerid,1319.5065,-1239.1620,13.5469)){ SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF} Niste u {FFFFFF}NEON SHOPu !");return 1;}
	if(PlayerInfo[playerid][pNovacDzep] < 200){SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF} Nemate dovoljno novca za Neon (200$)!");return 1;}
	if(!IsPlayerInAnyVehicle(playerid)){SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF} Moras biti {FFFFFF}u vozilu !");return 1;}
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER){SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF} Niste na {FFFFFF}vozackom mestu !");return 1;}
	DestroyDynamicObject(GetPVarInt(playerid, "neon")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon1")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon2")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon4")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon5")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon6")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
	DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon8")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon9")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon10")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon12")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon13")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon14")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon15"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon16")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon17")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon18")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon19"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon20")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon21")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon22")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon23"));
	DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon24")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon25")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon26")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon27"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon28")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon29")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon30")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon31"));
    DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon32")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon33")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon34")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon35"));

	SPD(playerid, 1381, DIALOG_STYLE_LIST, "[UGRADNJA NEONKI]","1\t Tamno plava\n2\t Crvena\n3\t Zelena\n4\t Bela\n5\t Ljubicasta\n6\t VARADERO\n7\t Cijan\n8\t Svetlo plava\n9\t Ruzicasta\n10\t Narandzasta\n11\t Svetlo zelena\n12\t Svetlo VARADERO\n13\t Obrisi neon", "Odaberi","Odustani");
	return 1;
}
CMD:izvadipasos(playerid, params[])
{
	#pragma unused params
	//#pragma unused help
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 33.1681,114.4860,495.6328)) return SCM(playerid,-1,""SRWBOJA" "SIVA"Morate biti u opstini!");
	if(PlayerInfo[playerid][pPasos] == 1) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Vec imate pasos!");
	if(GetTimeEx() < Pasos[playerid]) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Ovu komandu mozete koristiti svakih 10 minuta!");
	SPD(playerid, 1351, DIALOG_STYLE_LIST, "Sta je RolePlay?", "Ubijanje igraca bez razloga\nSimuliranje stvarnog zivota\nTrcanje i skakanje\nMaltretiranje Civila\nGazenje ljudi autom", "Odgovori", "Odustani");
	Pasos[playerid] = GetTimeEx() + 600;
	return 1;
}
CMD:pismeni(playerid, params[])
{
	#pragma unused params
	//#pragma unused help
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 1163.2476,-613.1199,1089.9259)) return SCM(playerid,-1,""SRWBOJA" "SIVA"Morate biti u RPG Skoli!");
	if(PlayerInfo[playerid][pPismeni] == 1) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Vec imate polozen pismeni!");
	if(GetTimeEx() < Pismeni[playerid]) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Ovu komandu mozete koristiti jednom svaka 24 sata!");
	SPD(playerid, 5001, DIALOG_STYLE_LIST, "IC: Sta je to Gibanica?", "MetaKuca\nMagnezijum\nMatematicka Gimnazija Los Santos", "Odgovori", "Odustani");
	Pismeni[playerid] = GetTimeEx() + 144000;
	return 1;
}
CMD:proveripojas(playerid, params[])
{
	if(!Policajac(playerid)) return SCM(playerid, -1, "Nisi policajac");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/proveripojas [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, "Taj igrac nije na serveru");
	if(!IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "Taj igrac nije u vozilu, recite mu da udje");
	new pveh = GetVehicleModel(GetPlayerVehicleID(id));
	if(pveh == 509 || pveh == 481 || pveh == 510 || pveh == 519 || pveh == 520 || pveh == 553 || pveh == 592 || pveh == 460 || pveh == 476 || pveh == 511 || pveh == 512 || pveh == 513) return SCM(playerid, -1, "Igrac je u vozilu koje ne mozete proveriti");
	if(Policajac(id)) return SCM(playerid, -1, "Ne mozete proveriti pojas policajcu");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Prvo izadjite iz vozila");
	if(id == playerid) return SCM(playerid, -1, "Ne mozete proveriti sami sebi pojas");
	if (DaljinaIgraca(5.0, playerid, id))
	{
		new zak[30];
		if(UsingBelt[id] == 1) { zak = "je"; }
 	    else if(UsingBelt[id] == 0) { zak = "nije"; }
		new string[96];
		format(string, charsmax(string), "* Igracu %s %s vezan pojas.",GetName(id),zak); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "Policajac %s je proverio da li ste vezali pojas.",GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	return 1;
}

CMD:pojas(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new string[64];
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vi ste na bicikli, /kaciga!!");
			if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vi ste na motoru /kaciga!!");
			if(UsingBelt[playerid] == 0)
			{
				SCM(playerid, -1, "* Vezali ste vas pojas.");
				format(string, sizeof(string), "* %s vezuje pojas (/pojas) .", GetName(playerid));
				e_RadiusMSG(20.0, playerid, HEX_PROX, string);
				UsingBelt[playerid] = 1;
			}
		}
	}
	return 1;
}

CMD:pojasoff(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new string[64];
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vi ste na bicikli, /kaciga!!");
			if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vi ste na motoru /kaciga!!");
			if(UsingBelt[playerid] == 1)
			{
				SCM(playerid, -1, "* Odvezali ste vas pojas.");
				format(string, sizeof(string), "* %s odvezuje pojas (/pojasoff) .", GetName(playerid));
				e_RadiusMSG(20.0, playerid, HEX_PROX, string);
				UsingBelt[playerid] = 0;
			}
		}
	}
	return 1;
}

forward Pozar();
public Pozar()
{
	new rand = random(6)+1;
	Pozarcic = 1;
	if(rand == 1)
	{
		PozarX = 2054.5825;
		PozarY = -1248.9137;
		PozarZ = 23.8313;
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		new str[128];
		format(str, 128, ""CRVENA"Obavestenje: "BELA"Upravo je izbio pozar u oblasti Glen Parka. Molimo sve vatrogasce da krenu!");
		SCMTA(-1, str);
		pozar3 = CreateObject(3461, 2056.23, -1250.22, 21.36,   0.00, 0.00, 0.00);
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pLider] == 18 || PlayerInfo[i][pClan] == 18)
			{
				SetPlayerCheckpoint(i, 2054.5825,-1248.9137,23.8313, 5.0);
				SCM(i, -1, ""CRVENA"Obavestenje: "BELA" Izbio je pozar! Mesto pozara oznaceno je na radaru!");
			}
		}
	}
	if(rand == 2)
	{
		PozarX = 1709.5983;
		PozarY = -1697.4121;
		PozarZ = 14.1641;
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		new str[128];
		format(str, 128, ""CRVENA"Obavestenje: "BELA"Upravo je izbio pozar u oblasti Varadero Opstine. Molimo sve vatrogasce da krenu!");
		SCMTA(-1, str);
		pozar6 = CreateObject(3461, 1708.90, -1697.84, 11.58,   0.00, 0.00, 0.00);
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pLider] == 18 || PlayerInfo[i][pClan] == 18)
			{
				SetPlayerCheckpoint(i, 1709.5983,-1697.4121,14.1641, 5.0);
				SCM(i, -1, ""CRVENA"Obavestenje: "BELA" Izbio je pozar! Mesto pozara oznaceno je na radaru!");
			}
		}
	}
	if(rand == 3)
	{
		PozarX = 1573.4175;
		PozarY = -2236.2119;
		PozarZ = 14.8098;
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		new str[128];
		format(str, 128, ""CRVENA"Obavestenje: "BELA"Upravo je izbio pozar u oblasti Varadero Aerodroma. Molimo sve vatrogasce da krenu!");
		SCMTA(-1, str);
		pozar1 = CreateObject(3461, 1573.36, -2237.02, 10.97,   0.00, 0.00, 0.00);
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pLider] == 18 || PlayerInfo[i][pClan] == 18)
			{
				SetPlayerCheckpoint(i, 1573.4175,-2236.2119,14.8098, 5.0);
				SCM(i, -1, ""CRVENA"Obavestenje: "BELA" Izbio je pozar! Mesto pozara oznaceno je na radaru!");
			}
		}
	}
	if(rand == 4)
	{
		PozarX = 1512.2186;
		PozarY = -2059.5305;
		PozarZ = 29.2153;
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		new str[128];
		format(str, 128, ""CRVENA"Obavestenje: "BELA"Upravo je izbio pozar u oblasti Verdant Bluffsa. Molimo sve vatrogasce da krenu!");
		SCMTA(-1, str);
		pozar5 = CreateObject(3461, 1513.51, -2061.54, 26.22,   0.00, 0.00, 0.00);
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pLider] == 18 || PlayerInfo[i][pClan] == 18)
			{
				SetPlayerCheckpoint(i, 1512.2186,-2059.5305,29.2153, 5.0);
				SCM(i, -1, ""CRVENA"Obavestenje: "BELA" Izbio je pozar! Mesto pozara oznaceno je na radaru!");
			}
		}
	}
	if(rand == 5)
	{
		PozarX = 1375.8622;
		PozarY = -1860.2269;
		PozarZ = 14.0010;
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		CreateExplosion(Float:PozarX, Float:PozarY, Float:PozarZ, 7, 100000);
		new str[128];
		format(str, 128, ""CRVENA"Obavestenje: "BELA"Upravo je izbio pozar u oblasti Varadero Opstine. Molimo sve vatrogasce da krenu!");
		SCMTA(-1, str);
		pozar4 = CreateObject(3461, 1375.04, -1860.97, 11.37,   0.00, 0.00, 0.00);
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pLider] == 18 || PlayerInfo[i][pClan] == 18)
			{
				SetPlayerCheckpoint(i, 1375.8622,-1860.2269,14.0010, 5.0);
				SCM(i, -1, ""CRVENA"Obavestenje: "BELA" Izbio je pozar! Mesto pozara oznaceno je na radaru!");
			}
		}
	}
	return 1;
}
CMD:startpozar(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 5 ) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste ovlasteni!");
	Pozar();
	return 1;
}
CMD:startkvar(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 5 ) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste ovlasteni!");
	Kvar();
	return 1;
}
CMD:vreca(playerid, params[])
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, VRECA_SLOT))
	{
		RemovePlayerAttachedObject(playerid, VRECA_SLOT);
	}
	else
	{
		SetPlayerAttachedObject( playerid, VRECA_SLOT, 1550, 1, -0.008714, -0.188819, -0.026564, 159.138153, 86.558647, 0.000000, 1.005565, 0.984468, 1.014210 );
	}
	return 1;
}
/////////////////////////////////////////////////
CMD:svima(playerid, params[])
{
	//#pragma unused help
    if(PlayerInfo[playerid][pAdmin] < 7 && PlayerInfo[playerid][pDozvola7] != 1) return SCM(playerid, -1, "Niste u mogucnosti koristiti ovu komandu.");
	new string[256], vrsta, kolicina;
	if(sscanf(params, "ii", vrsta, kolicina))
	{
		SendClientMessage(playerid,-1,""VARADERO"[KORISCENJE] "BELA"/svima [Vrsta] [Kolicina]");
		SendClientMessage(playerid,-1,""VARADERO"[VRSTE] "BELA"1. Level | 2. Novac | 3. Respect | 4. Gold");
		return 1;
	}
	if(kolicina < 1) return SCM(playerid, -1, "Kolicina ne moze biti ispod 1.");
	if(vrsta == 1)
	{
 		for(new i = 0; i <= GetPlayerPoolSize(); i++)
		{
	        if(UlogovanProvera[i] != 0)
			{
	            PlayerInfo[i][pLevel] += kolicina;
	            SetPlayerScore(i, PlayerInfo[i][pLevel]);
	        }
	    }
		format(string,sizeof(string),""SRWBOJA"[V NAGRADE] "BELA"Administrator "SRWBOJA"%s "BELA"je nagradio sve igrace sa "SRWBOJA"%d Level UP-a "BELA"!", GetName(playerid), kolicina);
		SCMTA(-1,string);
	}
	else if(vrsta == 2)
	{
 		for(new i = 0; i <= GetPlayerPoolSize(); i++)
		{
	        if(UlogovanProvera[i] != 0)
			{
	            g_NovacPlus(i, kolicina);
	        }
	    }
	    format(string,sizeof(string),""SRWBOJA"[V NAGRADE] "BELA"Administrator "SRWBOJA"%s "BELA"je nagradio sve igrace sa "SRWBOJA"$%d Novca "BELA"!", GetName(playerid), kolicina);
		SCMTA(-1,string);
	}
	else if(vrsta == 3)
	{
 		for(new i = 0; i <= GetPlayerPoolSize(); i++)
		{
	        if(UlogovanProvera[i] != 0)
			{
	            PlayerInfo[i][pExp] += kolicina;
	        }
	    }
	    format(string,sizeof(string),""SRWBOJA"[V NAGRADE] "BELA"Administrator "SRWBOJA"%s "BELA"je nagradio sve igrace sa "SRWBOJA"%d Respect UP-a "BELA"!", GetName(playerid), kolicina);
		SCMTA(-1,string);
	}
	else if(vrsta == 4)
	{
 		for(new i = 0; i <= GetPlayerPoolSize(); i++)
		{
	        if(UlogovanProvera[i] != 0)
			{
	            PlayerInfo[i][pZlato] += kolicina;
	        }
	    }
	    format(string,sizeof(string),""SRWBOJA"[V NAGRADE] "BELA"Administrator "SRWBOJA"%s "BELA"je nagradio sve igrace sa "SRWBOJA"%dG Zlata "BELA"!", GetName(playerid), kolicina);
		SCMTA(-1,string);
	}
	else SCM(playerid, -1, ""CRVENA"#ERROR: "BELA"Pogresna vrsta ! "CRVENA"(1-4)");
	return true;
}
//////////////////////////////////////////////////////
CMD:razvedi(playerid, params[])
{
	new player, string[120];
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Nisi ovlascen");
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 2250.2136,-1326.1591,25.8217)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Moras biti u salu za vencanje");
	if(sscanf(params, "ud", player)) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"/razved [ID/Ime]");
	if(!IsPlayerConnected(player)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID");
	PlayerInfo[player][pMarried] = 0;
    format(string, sizeof(string),""BELA"Postovani %s, vi ste razvedeni, razveo vas je svestenik %s, srecno u daljem zivotu.",GetName(player),GetName(playerid));
    SCM(player, -1, string);
    format(string, sizeof(string),""SRWBOJA"[V:RPG] "BELA"Uspesno ste razveli %s",GetName(player));
    SCM(playerid, -1, string);
    format(string, sizeof(string),""SRWBOJA"[V VIJESTI]"BELA"Nazalost je razveden/a %s, razveo ih je svestenik %s",GetName(player),GetName(playerid));
    SCM(playerid, -1, string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:postaviadmina(playerid, params[])
{
	if(UlogovanProvera[playerid] == 0) return SendClientMessage(playerid, -1, ""ORANGE2"#!: Morate se ulogovati !");
	if(PlayerInfo[playerid][pAdmin] >= 7 || PlayerInfo[playerid][pDozvola3] == 1)
	{
		new player, level, string[512];
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/postaviadmina [ID/Ime] [Level (0-8)]");
		if(!IsPlayerConnected(player)) return SCM(playerid, -1,"Pogresan ID !");
		if(level < 0 || level > 8) return SendClientMessage(playerid, -1, "Admin Level ne moze biti manji od 0, a veci od 8 !");
		PlayerInfo[player][pAdmin] = level;
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Vlasnik %s vam je postavio Admin nivo %d.", GetName(playerid), level);
		SendClientMessage(player, -1, string);
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste postavili Admin nivo %d.", GetName(player), player, level);
		SendClientMessage(playerid, -1, string);
		format(string,sizeof(string),""VARADERO"[INFO] "BELA"Vlasnik %s [%d] je postavio Admina igracu %s [%d] level %d.", GetName(playerid), playerid, GetName(player), player, level);
		SendAdminMessage(-1,string);
		if(level == 0)
		{
			SetPlayerColor(player, BELA2);
			AdminDuty[player] = 0;
			Update_Skin(player, 294);
		}
		else
		{	
			PlayerInfo[player][pAdminpin] = 1000+random(9999);			
			sql_update_int(player, "Adminpin", PlayerInfo[player][pAdminpin]);
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Vas sigurnosni PIN Kod je: "CRVENA"%d", PlayerInfo[player][pAdminpin]);
			SendClientMessage(player, -1, string);
		}
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, "Samo Vlasnik");
	}
	return 1;
}
CMD:postaviadminaoff(playerid, params[])
{
	#pragma unused params
    new targetname[24], level;
    if(PlayerInfo[playerid][pAdmin] >= 7)
    if(sscanf(params, "s[24]i", targetname, level)) return SendClientMessage(playerid, -1, "Koristi: /postaviadminaoff [Ime igraca] [Admin Level]");
    new q[58+24+1];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `players` where `Name` = '%e'", targetname);
	mysql_tquery( SQL, q, "_sqlMakeAdminOffline", "isi", playerid, targetname, level);
    return 1;
}
///////////////////////////////////////////////////////
CMD:postavigm(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] >= 7 || PlayerInfo[playerid][pDozvola2] == 1)
	{
		new player, level;
		if(sscanf(params, "ud", player, level)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/postavigm [ID/Ime] [Level 0-2]");
		if(player == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SIVA"ERROR: Igrac nije na serveru.");
//		if(PlayerInfo[player][pLevel] == 15 || PlayerInfo[player][pSatiIgre] < 6) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozes setati poziciju igracu koji je tek napravio acc!!!!");
		if(level < 0 || level > 2) return SendClientMessage(playerid, -1, ""CRVENA"[V:RPG] "SIVA"GameMaster Level ne moze biti manji od 0 i veci od 2!");
		PlayerInfo[player][pGM] = level;
		if(level == 0)
		{
		    new aRank[50], string[512];
		    if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		    if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		    if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		    if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"%s %s vam je skinuo GameMastera.", aRank, GetName(playerid));
			SendClientMessage(player, -1, string);
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste skinuli GameMastera.", GetName(player), player);
			SendClientMessage(playerid, -1, string);
			format(string,sizeof(string),""ORANGE2"#!: %s %s [%d] je skinuo GameMastera igracu %s [%d].", aRank, GetName(playerid), playerid, GetName(player), player);
			AdminGameMaster(-1, string);
			SetPlayerColor(player, BELA2);
			GMDuty[player] = 0;
		}
		else if(level >= 1)
		{
		    new aRank[50], string[512];
		    if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		    if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		    if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		    if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"%s %s vam je postavio GameMaster nivo %d.", aRank, GetName(playerid), level);
			SendClientMessage(player, -1, string);
			format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste postavili GameMaster nivo %d.", GetName(player), player, level);
			SendClientMessage(playerid, -1, string);
			format(string,sizeof(string),""ORANGE2"#!: %s %s [%d] je postavio GameMastera igracu %s [%d] nivo %d.", aRank, GetName(playerid), playerid, GetName(player), player, level);
			AdminGameMaster(-1, string);
		}
		SavePlayer(player);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""CRVENA"[V:RPG] "SIVA" Samo Vlasnik !");
	}
	return 1;
}
////////////////////////////////////////////////////////
CMD:spodesavanja(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo Vlasnik, DE SI POSAO?");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	SPD(playerid, 112, DIALOG_STYLE_LIST, ""SPLAVA"===>>PODESI SERVER<<===", "[1]-Registracija (ON/OFF)\n[2]-Oglas (ON/OFF)\n[3]-Administrator/GM Pitanja (ON/OFF)\n[4]-Administrator/GM Report (ON/OFF)\n[5]-Kupovina vozila (ON/OFF)", "Odabir", "Izlaz");
    new z[13]; if(ServerInfo[isRegistracija] == 1) z = "Onemogucena"; else z = "Omogucena";
    new o[13]; if(ServerInfo[isOglas] == 1) o = "Iskljucen"; else o = "Ukljucen";
    new c[13]; if(ServerInfo[isPitanja] == 1) c = "Iskljucen"; else c = "Ukljucen";
    new r[13]; if(ServerInfo[isReport] == 1) r = "Iskljucen"; else r = "Ukljucen";
    new s[13]; if(ServerInfo[isdozvolakupovine] == 1) s = "Ukljucen"; else s = "Iskljucen";
	new string[128];
	format(string, charsmax(string), ""SRWBOJA"[V:RPG] "SIVA"Registracija: %s | Oglas: %s | Pitanja: %s | Report: %s | Kupovina: %s",z,o,c,r,s);
	SCM(playerid,-1, string);
	return 1;
}
//////////////////////////////////////////////////////
CMD:dajpljacku(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	new target;
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "u", target)) return SendClientMessage(playerid,-1, ""ORANGE"[V:RPG] Pomoc | "BELA"/dajpljacku [ID/Ime]");
    if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Pogresan ID!");
    PlayerInfo[target][pRobbankVreme] = 0;
	SavePlayer(target);
	return 1;
}
//////////////////////////////////////////////////////
CMD:dajnovac(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"Samo Admin Level 6");
	new target, money;
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "ud", target, money)) return SendClientMessage(playerid,-1, ""ORANGE"[V:RPG] Pomoc | "BELA"/dajnovac [ID/Ime] [Kolicina Novca]");
    if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Pogresan ID!");
	if(PlayerInfo[target][pNovacDzep] < 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Igrac je u minusu sa novcem, prvo mu podesi novac na 0!");
	new string[128]; g_NovacPlus(target, money);
	format(string, sizeof(string), ""SIVA"[V:RPG] "SPLAVA"%s ti je dao $%d novca.", GetName(playerid), money);
	SendClientMessage(target, -1, string);
	format(string, sizeof(string), ""SIVA"[V:RPG] "SPLAVA"Dali ste %s %d novca.", GetName(target), money);
	SendClientMessage(playerid, -1, string);
	format(string,sizeof(string),""SIVA"[V:RPG] "SPLAVA"Administrator %s je dao %s novca %d$!",GetName(playerid),GetName(target), money);
	AdminGameMaster(-1, string);
	SavePlayer(target);
	return 1;
}
//////////////////////////////////////////////////////
CMD:naruciubistvo(playerid, params[])
{
    new target;
	if(sscanf(params, "u", target)) return SendClientMessage(playerid,-1, ""ORANGE"[V:RPG] Pomoc | "BELA"/naruciubijstvo [ID/Ime]");
	if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Pogresan ID!");
	if(GetTimeEx() < Naruciubistvo[playerid]) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Ovu komandu mozete koristiti svakih 10 minuta!");
	if(PlayerInfo[target][pNarucen] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Taj igrac je vec narucen!");
    if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Pogresan ID!");
    if(PlayerInfo[target][pLider] == 10 || PlayerInfo[target][pClan] == 10) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozes naruciti ubistvo na hitmana!");
	if(PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pClan] == 10) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Hitman si!");
    if(PlayerInfo[target][pAdmin] > 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozes naruciti ubistvo admina!");
    if(PlayerInfo[target][pGM] > 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozes naruciti ubistvo na GameMastera!");
    if(Policajac(target)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozes naruciti ubistvo policajca/agenta!");
    if(PlayerInfo[playerid][pNovacDzep] < 20000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate dovoljno novca!");
    if(PlayerInfo[target][pLevel] < 7) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozes naruciti ubistvo igracu manjem od lvl 7!");
    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste dovoljan level!");
	new string[256]; g_NovacMinus(playerid, 20000);
	PlayerInfo[target][pNarucen] = 1;
	SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Narucili ste ubistvo!");
	format(string,sizeof(string),""SIVA"[V:RPG] "SPLAVA"%s je narucio ubistvo igraca %s za 20 000 $",GetName(playerid),GetName(target));
	ChatSA(-1, string);
	Naruciubistvo[playerid] = GetTimeEx() + 600;
	SavePlayer(target);
	return 1;
}
///////////////////////////////////////////////////////
CMD:podesinovac(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"Samo Admin Level 6");
	new target, money;
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "ud", target, money)) return SendClientMessage(playerid,-1, ""ORANGE"[V:RPG] Pomoc | "BELA"/podesinovac [ID/Ime] [Novac]");
    if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Pogresan ID!");
	new string[128]; g_ResetujNovac(target); g_NovacPlus(target, money);
	format(string, sizeof(string), ""SIVA"[V:RPG] "SPLAVA"%s ti je podesio novac na $%d.", GetName(playerid), money);
	SendClientMessage(target, -1, string);
	format(string, sizeof(string), ""SIVA"[V:RPG] "SPLAVA"Podesili ste %s novac na %d.", GetName(target), money);
	SendClientMessage(playerid, -1, string);
	format(string,sizeof(string),""SIVA"[V:RPG] "SPLAVA"Administrator %s je postavio %s novca %d$!",GetName(playerid),GetName(target), money);
	AdminGameMaster(-1, string);
	SavePlayer(target);
	return 1;
}
///////////////////////////////////////////////////////
CMD:gpsonoff(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pGPS] <= 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate GPS!");
	if(PlayerInfo[playerid][pGPS] == 0) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Nemas GPS!!");
	if(UpaljenGPS[playerid] == 0)
	{
	    SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Uspesno ste upalili GPS! Da ga ugasite /gpsonoff!");
		UpaljenGPS[playerid] = 1;
	}
	else if(UpaljenGPS[playerid] == 1)
	{
        SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Uspesno ste ugasili GPS! Da ga upalite /gpsonoff!");
		UpaljenGPS[playerid] = 0;
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:aduty(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Imate wanted level pa ne mozete /aduty !");
	if( PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Zatvoreni ste ne moze ova komandu da koristite!");
    if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"U Event Si bre !!");
	if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pTestAdmin] == 0) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Samo Admini!");
	if(AdminDuty[playerid] == 0)
	{
	    new aRank[50], string[512];
	    if(PlayerInfo[playerid][pTestAdmin] == 1) { aRank = "Test Admin"; }
	    if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
	    if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
	    if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
	    if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
	    if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
	    if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
	    if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
	    if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
	    format(string, 512, ""VARADERO"[INFO] "BELA"%s %s je na duznosti.", aRank, GetName(playerid));
		SCMTA(-1, string);
		AdminDuty[playerid] = 1;
		SetPlayerColor(playerid, 0x000000ff);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		ResetPlayerWeapons(playerid);
		God[playerid] = 1;
	}
	else if(AdminDuty[playerid] == 1)
	{
		new aRank[50], string[512];
	    if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
	    if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
	    if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
	    if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
	    if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
	    if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
	    if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
	    if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
	    format(string, 512, ""VARADERO"[INFO] "BELA"%s %s vise nije duznosti.", aRank, GetName(playerid));
		SCMTA(-1, string);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		SetPlayerColor(playerid, BELA2);
		AdminDuty[playerid] = 0;
		ResetPlayerWeapons(playerid);
		God[playerid] = 0;
	}
	return 1;
}
//-----------------------------------------------------------------//
CMD:pubg(playerid, params[])
{
    if(PlayerInfo[playerid][pPUBG] == 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Zatrazite Dozvolu od Admina za PUBG!");
	if(PlayerInfo[playerid][pTrazeniLevel] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Imate trazeni level ne mozete koristiti ovu komandu");
	if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"U Event Si bre !!");
	if(PlayerInfo[playerid][pPUBG] == 1)
	{
		new rand = random(sizeof(RandomPubg));
		SetPlayerPos(playerid, RandomPubg[rand][0], RandomPubg[rand][1], RandomPubg[rand][2]);
		GivePlayerWeapon(playerid, 24, 200);
		GivePlayerWeapon(playerid, 25, 200);
		GivePlayerWeapon(playerid, 31, 500);
		GivePlayerWeapon(playerid, 34, 500);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
		SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA" Usli ste u PUBG da napustite kucajte /napustipubg!");
		SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA" CHAT SA PUBG IGRACIMA /pc");
		PlayerInfo[playerid][pUPUBG] = 1;
		return 1;
	} else if(PlayerInfo[playerid][pPUBG] == 2) {
		new rand2 = random(sizeof(RandomPubg));
		SetPlayerPos(playerid, RandomPubg[rand2][0], RandomPubg[rand2][1], RandomPubg[rand2][2]);
		GivePlayerWeapon(playerid, 24, 200);
		GivePlayerWeapon(playerid, 25, 200);
		GivePlayerWeapon(playerid, 31, 500);
		GivePlayerWeapon(playerid, 34, 500);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
		PlayerInfo[playerid][pUPUBG] = 1;
		SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA" CHAT SA PUBG IGRACIMA /pc");
		SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA" Usli ste u PUBG da napustite kucajte /napustipubg!");
		return 1;
	}
    return 1;
}
CMD:napustipubg(playerid, params[])
{
SpawnPlayer(playerid);
SpawnIgraca(playerid);
PlayerInfo[playerid][pUPUBG] = 0;
SCM(playerid, -1 , ""SRWBOJA"[V:RPG] "BELA"Uspesno ste izasli  iz PUBG-a");
return 1;
}
//////////////////////////////////////////////////////
CMD:gmduty(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pGM] == 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Samo GM!");
	if(PlayerInfo[playerid][pTrazeniLevel] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Imate trazeni level ne mozete koristiti ovu komandu");
	if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"U Event Si bre !!");
	if(GMDuty[playerid] == 0)
	{
	    new aRank[50], string[512];
	    if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
	    if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
		format(string, 512, ""SRWBOJA"[INFO] "BELA"%s %s je na duznosti, za pomoc koristite /pitaj.", aRank, GetName(playerid));
		SCMTA(-1,string);
		GMDuty[playerid] = 1;
		SetPlayerColor(playerid, 0x33CCFFAA);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		ResetPlayerWeapons(playerid);
		God[playerid] = 1;
	}
	else if(GMDuty[playerid] == 1)
	{
		new aRank[50], string[512];
		if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
	    if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
		format(string, 512, ""SRWBOJA"[INFO] "BELA"%s %s vise nije na duznosti. DutyTime: %d", aRank, GetName(playerid), PlayerInfo[ playerid ][ pDutyTime ]);
		SCMTA(-1, string);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		SetPlayerColor(playerid, BELA2);
		GMDuty[playerid] = 0;
		ResetPlayerWeapons(playerid);
		God[playerid] = 0;
	}
	return 1;
}
CMD:vpopravi(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1, ""ORANGE2"#!: Morate se ulogovati!");
	if(PlayerInfo[playerid][pVip] >= 3)
	{
	    if(PlayerInfo[playerid][pVip] == 6)
	    {
			new string[256], vipRank[50];
			if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""ORANGE2"#!: Morate biti u vozilu!");
			SetPVarInt(playerid, "PopravkaVozila", 1);
			RepairVehicle(GetPlayerVehicleID(playerid));
			if(PlayerInfo[playerid][pVip] == 6) { vipRank = "Elite"; }
			format(string,sizeof(string),""ZELENA"#!: %s %s je popravio vozilo!", vipRank, GetName(playerid));
			AdminGameMasterSpec(-1, string);
			SCM( playerid, -1, ""ORANGE2"#!: Popravili ste vozilo !");
		}
		else
		{
			new string[256], vipRank[50];
			if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""ORANGE2"#!: Morate biti u vozilu!");
	        if(gettime() < Ppopravi[playerid]) return SCM(playerid, -1, ""ORANGE2"#!: Ovu komandu mozete koristiti svaka 2 minuta!");
			SetPVarInt(playerid, "PopravkaVozila", 1);
			RepairVehicle(GetPlayerVehicleID(playerid));
			if(PlayerInfo[playerid][pVip] == 1) { vipRank = "Vip Level 1"; }
			if(PlayerInfo[playerid][pVip] == 2) { vipRank = "Vip Level 2"; }
			if(PlayerInfo[playerid][pVip] == 3) { vipRank = "Vip Level 3"; }
			if(PlayerInfo[playerid][pVip] == 4) { vipRank = "Vip Level 4"; }
			if(PlayerInfo[playerid][pVip] == 5) { vipRank = "Premium"; }
			format(string,sizeof(string),""ZELENA"#!: %s %s je popravio vozilo!", vipRank, GetName(playerid));
			AdminGameMasterSpec(-1, string);
			SCM( playerid, -1, ""ORANGE2"#!: Popravili ste vozilo !");
			Ppopravi[playerid] = gettime() + 120;
		}
	}
	else
	{
		SCM(playerid, -1, ""ORANGE2"#!: Samo Vipovi !");
	}
	return (true);
}
CMD:ppopravi(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1, "Morate se ulogovati!");
	if(PlayerInfo[playerid][pPromoter] >= 1)
    {
    	if(PlayerInfo[playerid][pPromoter] == 3)
	    {
			new string[256], vipRank[50];
			if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""ORANGE2"#!: Morate biti u vozilu!");
			SetPVarInt(playerid, "PopravkaVozila", 1);
			RepairVehicle(GetPlayerVehicleID(playerid));
			if(PlayerInfo[playerid][pPromoter] == 1) { vipRank = "Promoter Level 3"; }
			format(string,sizeof(string),""ORANGE"#!: %s %s je popravio vozilo!", vipRank, GetName(playerid));
			AdminGameMasterSpec(-1, string);
			SCM( playerid, -1, ""ORANGE"#!: Popravili ste vozilo !");
		}
		else
		{
			new string[256], vipRank[50];
			if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""ORANGE2"#!: Morate biti u vozilu!");
	        if(gettime() < Ppopravi[playerid]) return SCM(playerid, -1, ""ORANGE2"#!: Ovu komandu mozete koristiti svaka 2 minuta!");
			SetPVarInt(playerid, "PopravkaVozila", 1);
			RepairVehicle(GetPlayerVehicleID(playerid));
			if(PlayerInfo[playerid][pPromoter] == 1) { vipRank = "Promoter Level 1"; }
			if(PlayerInfo[playerid][pPromoter] == 2) { vipRank = "Promoter Level 2"; }
			format(string,sizeof(string),""ORANGE"#!: %s %s je popravio vozilo!", vipRank, GetName(playerid));
			AdminGameMasterSpec(-1, string);
			SCM( playerid, -1, ""ORANGE"#!: Popravili ste vozilo !");
			Ppopravi[playerid] = gettime() + 120;
		}
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Promoteri!");
	}
	return 1;
}
//////////////////////////////////////////////////////
CMD:dlgorivo(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new o;
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator Duznosti !");
		if(sscanf(params, "i", o)) return 1;
		if(VoziloJeAvion(GetVehicleModel(o)) || VoziloJeBrod(GetVehicleModel(o)) || VoziloJeKamion(GetVehicleModel(o))) Fuel[o] = 85;
		else if(VoziloJeMotor(GetVehicleModel(o))) Fuel[o] = 45;
		else if(VoziloJeBicikla(GetVehicleModel(o)) || GetVehicleModel(o) == 538) Fuel[o] = 1000000;
		else Fuel[o] = 45;
		new string[256];
		format(string,sizeof(string), ""SRWBOJA"[V:RPG] "BELA"Uspesno ste napunili gorivo vozilu %i", GetName(playerid), o);
		SCM(playerid, -1, string);
		foreach(new i : Player)
		{
			format(string, sizeof(string), "~w~GORIVO:_%d_l", Fuel[GetPlayerVehicleID(i)]);
            PlayerTextDrawSetString(i, Brzinomer[i][8], string);
		}
	}
	else return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini (Admin Level 4+)!");
	return 1;
}
////////////////////////////////////////////////////////
CMD:agorivo(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator Duznosti !");
		for(new o; o < MAX_VOZILA; o++)
		{
			if(VoziloJeAvion(GetVehicleModel(o)) || VoziloJeBrod(GetVehicleModel(o)) || VoziloJeKamion(GetVehicleModel(o))) Fuel[o] = 85;
	    	else if(VoziloJeMotor(GetVehicleModel(o))) Fuel[o] = 45;
	    	else if(VoziloJeBicikla(GetVehicleModel(o)) || GetVehicleModel(o) == 538) Fuel[o] = 1000000;
	    	else Fuel[o] = 45;
		}
		new string[256];
		format(string,sizeof(string), ""SRWBOJA"[V:RPG] "BELA"Administrator "BELA"%s "BELA"je napunio sva vozila gorivom.", GetName(playerid));
		AdminGameMasterSpec(-1, string);
		foreach(new i : Player)
		{
			format(string, sizeof(string), "~w~GORIVO:_%d_l", Fuel[GetPlayerVehicleID(i)]);
            PlayerTextDrawSetString(i, Brzinomer[i][8], string);
		}
	}
	else return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini (Admin Level 1+)!");
	return 1;
}
CMD:najavirpcas(playerid, params[])
{
	if(PlayerInfo[playerid][pRPucitelj] == 1)
	{
	new tekst[128], string[128];
	if(sscanf(params, "s[90]", tekst)) return SCM(playerid,-1,  ""VARADERO"[V:RPG] Pomoc | "BELA"/najavirpcas [tekst]");
	format(string, sizeof(string), ""SIVA"[RP Skola] "BELA"RP Ucitelj %s: "SRWBOJA"%s", GetName(playerid), tekst);
	SCMTA(-1,string);
	} else SendClientMessage(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo RP Ucitelj!");
	return 1;
}
////////////////////////////////////////////////////////
CMD:flip(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
 	if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Ti si na bicikli covece!!!");
	if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Ti si na motoru covece!!");
	if(VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Ti si u helisu covece!!");
	if (PlayerInfo[playerid][pGM] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Samo admini & GM!");
 	if(IsPlayerInAnyVehicle(playerid))
 	{
    new currentveh;
    new Float:angle;
    currentveh = GetPlayerVehicleID(playerid);
    GetVehicleZAngle(currentveh, angle);
    SetVehicleZAngle(currentveh, angle);
    SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vozilo ispravljeno!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:cc(playerid, params[])
{

	if(GetTimeEx() < cctime) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Chat je vec ociscen, moras sacekati 5 sekundi!");
	if(PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
 	    new aRank[30]; 
 	    foreach(new i : Player) 
 	    { 
 	    	OcistiChat(i, 120); 
 	    }
 	    if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
 	    if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
 	    if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
 	    if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
 	    if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
 	    if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
 	    if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
 	    if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
 	    if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
	    if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
		

		va_SendClientMessageToAll(-1, ""SRWBOJA"Varadero: "BELA"%s "SRWBOJA"(%s) "BELA"je ocistio chat svim igracima.", aRank, GetName(playerid));
		cctime = GetTimeEx() + 5;
	}
	else
	{
		SCM(playerid, -1, "[V:RPG] "BELA"Samo Admini & GameMasteri !");
	}
	return 1;
}
////////////////////////////////////////////////////////
CMD:bojavozila(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (Admin Level 3+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new pplayerid,col[2],string[150];
	if(sscanf(params, "udd", pplayerid,col[0],col[1])) return SCM(playerid, -1, ""SIVA"[V:RPG] Pomoc | /bojavozila [ID/Ime] [ID Boje 1] [ID Boje 2]");
	if(pplayerid == IPI) return SCM(playerid, -1, ""SIVA"GREKSA | Pogresan ID!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""BELA"ERROR: "SIVA"Igrac mora biti u autu!");
	ChangeVehicleColor(GetPlayerVehicleID(pplayerid), col[0],col[1]);
	format(string, sizeof(string),""SRWBOJA"[V:RPG] "BELA"Administrator %s je promijenio boju vozila igracu %s ["SRWBOJA"%d"BELA"] ["SRWBOJA"%d"BELA"]",GetName(playerid),GetName(pplayerid),col[0],col[1]);
	SendAdminMessage(-1,string);
	return 1;
}
//------------------------------------------------------------------------------
CMD:reklamice(playerid, params[])
{
	new smsporuka[60];
	format(smsporuka,-1,"Zasto ne vidimo 100/100? Reklamirajte za nagradicu ^^");
	SCM(playerid,-1,smsporuka);
	return 1;
}
//------------------------------------------------------------------------------
CMD:plicnu(playerid, params[])
{
	new imeid;
	if(sscanf(params, "us[128]", imeid)) return SCM ( playerid, -1, "/plicnu [ID/Ime]");
	new string[156];
	if(!IsPlayerConnected(imeid)) return SendClientMessage(playerid, -1, ""CRVENA"[GRESKA]: "SIVA"Pogresan ID!");
	format(string,sizeof string ,"------------ Licna Karta "CRVENA"%s ------------", GetName(imeid));
	SendClientMessage(imeid, -1,string);
	format(string,sizeof string ,"Ime: "CRVENA"%s",GetName(imeid));
	SendClientMessage(imeid, -1,string);
	format(string,sizeof string ,"Godine: "CRVENA"%d",PlayerInfo[imeid][pGodine]);
	SendClientMessage(imeid, -1,string);
	format(string,sizeof string ,"Drzava: "CRVENA"Los Santos");
	SendClientMessage(imeid, -1,string);
	format(string,sizeof(string), "* %s vadi licnu kartu i pokazuje je %s", GetName(imeid), GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	return 1;
}
////////////////////////////////////////////////////////
CMD:vcarrespawn(playerid, params[])
{
    if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"Ne mozete da koristite komande na eventu !!");
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 1 && PlayerInfo[playerid][pVip] < 5 && PlayerInfo[playerid][pTestAdmin] < 1) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo A/GM/VIP/SPEC");
	if(PlayerInfo[playerid][pRadi] == 1) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Radis posao ne mozes da koristis ovu komandu!");
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"ERROR: "SIVA"Ti si zavezan ne mozes koristiti ovu komandu!");
	if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Ne mozete koristiti ovu komandu jer imate trazeni level!");
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Ne mozete jer ste zatvoreni!");
	if(GetPlayerInterior(playerid) > 0) return SCM(playerid,-1,""SRWBOJA"ERROR: "BELA"Ne mozete koristiti /vcarrespawn dok ste u enterijeru!");
	SPD(playerid,16121,DIALOG_STYLE_LIST, "===>>RESPAWN<<===", "Auto 1\nAuto2\nMotor\nLetelica\nPlovilo", "Port", "Izadji");
 	return 1;
}
// ========================================================================== //
//                          #VehicleSpawn System                              //
//                          #Realized by Stretch                              //
// ========================================================================== //
CMD:vspawn(playerid, params[])
{
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid, -1, ""ORANGE2"#!: Vi ste zatvoreni, nije vam dozvoljeno koristiti ovu komandu.");

	new auto1[22], auto2[22], motor[22], letelica[22], plovilo[22], str[512];
	if(PlayerInfo[playerid][pPosedovanjeAuta] < 0 || strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vVlasnik], GetName(playerid)) != 0) auto1 = ""CRVENA"Ne postoji";
	else auto1 = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjeAuta2] < 0 || strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vVlasnik], GetName(playerid)) != 0) auto2 = ""CRVENA"Ne postoji";
	else auto2 = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjeMotora] < 0 || strcmp(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mVlasnik], GetName(playerid)) != 0) motor = ""CRVENA"Ne postoji";
	else motor = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjeAviona] < 0 || strcmp(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avVlasnik], GetName(playerid)) != 0) letelica = ""CRVENA"Ne postoji";
	else letelica = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjePlovila] < 0 || strcmp(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plVlasnik], GetName(playerid)) != 0) plovilo = ""CRVENA"Ne postoji";
	else plovilo = ""ZELENA"Postoji";

	format(str, 512, "Ime\tSlot\tStatus\n"BELA"Auto\t1\t%s\nAuto\t2\t%s\nMotor\t1\t%s\nLetelica\t1\t%s\nPlovilo\t1\t%s", auto1, auto2, motor, letelica, plovilo);
	SPD(playerid, 453, DIALOG_STYLE_TABLIST_HEADERS, "SPAWN VOZILA", str, D_ODABERI, D_ODUSTANI);
	SavePlayer(playerid);
 	return 1;
}
fDialog(453)
{
    if(response)
	switch(listitem)
	{
		case 0:
		{
		    if(PlayerInfo[playerid][pPosedovanjeAuta] < 0 || strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vVlasnik], GetName(playerid)) != 0)
		        return SCM(playerid, -1, ""ORANGE2"#!: Vi ne posedujete auto broj 1.");
			if(SpawnovaoVozilo[playerid] == 1)
			    return SCM(playerid, -1, ""ORANGE2"#!: Cooldown za spawnovanje vozila jos nije istekao, sacekajte da istekne.");
			SCM(playerid, -1, ""VARADERO"[INFO]"BELA" Stvorili ste auto (1), sledece vozilo mozete stvoriti za 2 minuta.");
			SetTimer("StvorioVozilo", 120000, true);
			SpawnovaoVozilo[playerid] = 1;
			RTC(GetPlayerVehicleID(playerid));
		}
		case 1:
		{
		    if(PlayerInfo[playerid][pPosedovanjeAuta2] < 0 || strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vVlasnik], GetName(playerid)) != 0)
		        return SCM(playerid, -1, ""ORANGE2"#!: Vi ne posedujete auto broj 2.");
			if(SpawnovaoVozilo[playerid] == 1)
			    return SCM(playerid, -1, ""ORANGE2"#!: Cooldown za spawnovanje vozila jos nije istekao, sacekajte da istekne.");
			SCM(playerid, -1, ""VARADERO"[INFO]"BELA" Stvorili ste auto (2), sledece vozilo mozete stvoriti za 2 minuta.");
			SetTimer("StvorioVozilo", 120000, true);
			SpawnovaoVozilo[playerid] = 1;
			RTC(GetPlayerVehicleID(playerid));
		}
		case 2:
		{
		    if(PlayerInfo[playerid][pPosedovanjeMotora] < 0 || strcmp(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mVlasnik], GetName(playerid)) != 0)
		        return SCM(playerid, -1, ""ORANGE2"#!: Vi ne posedujete motor broj 1.");
			if(SpawnovaoVozilo[playerid] == 1)
			    return SCM(playerid, -1, ""ORANGE2"#!: Cooldown za spawnovanje vozila jos nije istekao, sacekajte da istekne.");
			SCM(playerid, -1, ""VARADERO"[INFO]"BELA" Stvorili ste motor (1), sledece vozilo mozete stvoriti za 2 minuta.");
			SetTimer("StvorioVozilo", 120000, true);
			SpawnovaoVozilo[playerid] = 1;
			RTC(GetPlayerVehicleID(playerid));
		}
		case 3:
		{
		    if(PlayerInfo[playerid][pPosedovanjeAviona] < 0 || strcmp(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avVlasnik], GetName(playerid)) != 0)
		        return SCM(playerid, -1, ""ORANGE2"#!: Vi ne posedujete letelicu broj 1.");
			if(SpawnovaoVozilo[playerid] == 1)
			    return SCM(playerid, -1, ""ORANGE2"#!: Cooldown za spawnovanje vozila jos nije istekao, sacekajte da istekne.");
			SCM(playerid, -1, ""VARADERO"[INFO]"BELA" Stvorili ste letelicu (1), sledece vozilo mozete stvoriti za 2 minuta.");
			SetTimer("StvorioVozilo", 120000, true);
			SpawnovaoVozilo[playerid] = 1;
			RTC(GetPlayerVehicleID(playerid));
		}
		case 4:
		{
		    if(PlayerInfo[playerid][pPosedovanjePlovila] < 0 || strcmp(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plVlasnik], GetName(playerid)) != 0)
		        return SCM(playerid, -1, ""ORANGE2"#!: Vi ne posedujete plovilo broj 1.");
			if(SpawnovaoVozilo[playerid] == 1)
			    return SCM(playerid, -1, ""ORANGE2"#!: Cooldown za spawnovanje vozila jos nije istekao, sacekajte da istekne.");
			SCM(playerid, -1, ""VARADERO"[INFO]"BELA" Stvorili ste plovilo (1), sledece vozilo mozete stvoriti za 2 minuta.");
			SetTimer("StvorioVozilo", 120000, true);
			SpawnovaoVozilo[playerid] = 1;
			RTC(GetPlayerVehicleID(playerid));
		}
	}
	return 1;
}
// ========================================================================== //
//                          #VehiclePort System                               //
//                          #Realized by Stretch                              //
// ========================================================================== //

CMD:vportvozilo(playerid, params[])
{
	if(SpawnovaoVozilo[playerid] == 0) return SCM(playerid, -1, ""ORANGE2"#!: Morate spawnovati vase vozilo (/vspawn).");
	if(PlayerInfo[playerid][pVip] < 4) return SCM(playerid, -1, ""ORANGE2"#!: Niste ovlasceni za upotrebu ove komande.");
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""ORANGE2"#!: Vi ste zavezani, nije vam dozvoljeno koristiti ovu komandu.");
	if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid, -1, ""ORANGE2"#!: Posedujete wanted level, nije vam dozvoljeno koristiti ovu komandu.");
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid, -1, ""ORANGE2"#!: Vi ste zatvoreni, nije vam dozvoljeno koristiti ovu komandu.");
	if(GetPlayerInterior(playerid) > 0) return SCM(playerid, -1, ""ORANGE2"#!: Ne mozete koristiti ovu komandu u enterijeru.");

	new auto1[22], auto2[22], motor[22], letelica[22], plovilo[22], str[512];
	if(PlayerInfo[playerid][pPosedovanjeAuta] < 0 || strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vVlasnik], GetName(playerid)) != 0) auto1 = ""CRVENA"Ne postoji";
	else auto1 = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjeAuta2] < 0 || strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vVlasnik], GetName(playerid)) != 0) auto2 = ""CRVENA"Ne postoji";
	else auto2 = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjeMotora] < 0 || strcmp(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mVlasnik], GetName(playerid)) != 0) motor = ""CRVENA"Ne postoji";
	else motor = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjeAviona] < 0 || strcmp(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avVlasnik], GetName(playerid)) != 0) letelica = ""CRVENA"Ne postoji";
	else letelica = ""ZELENA"Postoji";
	if(PlayerInfo[playerid][pPosedovanjePlovila] < 0 || strcmp(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plVlasnik], GetName(playerid)) != 0) plovilo = ""CRVENA"Ne postoji";
	else plovilo = ""ZELENA"Postoji";

	format(str, 512, "Ime\tSlot\tStatus\n"BELA"Auto\t1\t%s\nAuto\t2\t%s\nMotor\t1\t%s\nLetelica\t1\t%s\nPlovilo\t1\t%s", auto1, auto2, motor, letelica, plovilo);
	SPD(playerid, 16120, DIALOG_STYLE_TABLIST_HEADERS, "PORT VOZILA", str, D_ODABERI, D_ODUSTANI);
	SavePlayer(playerid);
 	return 1;
}
///////-----Napustanje na evetnu
CMD:napustievent(playerid, params[])
{
	 if(PlayerInfo[playerid][pPridruzeneventu] == 0) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Niste u Eventu!");
	 PlayerInfo[playerid][pPridruzeneventu] = 0;
	 SpawnPlayer(playerid);
	 DisablePlayerCheckpoint(playerid);
	 SetPlayerInterior(playerid, 0);
	 ResetPlayerWeapons(playerid);
	 PosaoGPS[playerid] = 0;
	 SpawnIgraca(playerid);
	 PlayerInfo[playerid][pRadi] = 0;
	 SendClientMessage(playerid, 0xFF9900AA, "Uspesno ste napustili Event!");
	 return 1;
}
///////-----Napustanje na evetnu
CMD:napustiwar(playerid, params[])
{
	 if(PlayerInfo[playerid][pWar] == 0) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Niste u WARu!");
	 PlayerInfo[playerid][pWar] = 0;
	 SpawnPlayer(playerid);
	 TextDrawHideForPlayer(playerid, TDwar0);
	 TextDrawHideForPlayer(playerid, TDwar1);
	 TextDrawHideForPlayer(playerid, TDwar2);
	 TextDrawHideForPlayer(playerid, TDwar3);
	 TextDrawHideForPlayer(playerid, TDwar4);
	 TextDrawHideForPlayer(playerid, TDwar5);
	 TextDrawHideForPlayer(playerid, TDwar6);
	 DisablePlayerCheckpoint(playerid);
	 SetPlayerInterior(playerid, 0);
	 ResetPlayerWeapons(playerid);
	 PosaoGPS[playerid] = 0;
	 PlayerInfo[playerid][pRadi] = 0;
	 SpawnIgraca(playerid);
	 SendClientMessage(playerid, 0xFF9900AA, "Uspesno ste napustili War!");
	 return 1;
}
CMD:bacimobilni(playerid, params[])
{
	 if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Nemate mobilni telefon!");
	 SendClientMessage(playerid, 0xFF9900AA, "Bacili ste mobilni na pod nema te ga vise puko je !");
	 PlayerInfo[playerid][pMobilni] = 0;
	 SavePlayer(playerid);
	 return 1;
}
///////////////////////////////////////////////////////
CMD:name(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		new string[128],pplayerid;
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params, "u", pplayerid)) return SCM(playerid, -1, ""SIVA"Koristi: "BELA"/name [ID]");
		if(pplayerid == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Taj igrac nije na serveru!");
		if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Ne mozete kikovati tog igraca!");
		new status[20];
		if(PlayerInfo[playerid][pAdmin] >= 1) format(status, sizeof(status), "Admina");
		if(PlayerInfo[playerid][pGM] >= 1) format(status, sizeof(status), "GameMastera");
		format(string,sizeof(string),""SRWBOJA"KICK: "BELA"Gradjanin '%s' je izbacen sa servera od strane administratora, razlog: Ime_Prezime",GetName(pplayerid));
		SCMTA(-1,string);
		StatusKonekta(pplayerid, 2);
		new string1[128];
		format(string1,sizeof(string1),""SRWBOJA"[V:RPG] "BELA"Kikovali ste igraca %s zbog nepravilnog imena!",GetName(pplayerid));
		SCM(playerid,-1,string1);
		format(string, sizeof(string), ""SRWBOJA"STAFF clan %s je upisao "BELA"/name %s", GetName(playerid), params);
		AdminGameMaster(-1,string);
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini & GM!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:kick(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
		new string[128],pplayerid, reason[48];
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params, "us[48]", pplayerid, reason)) return SCM(playerid, -1, "[V:RPG] Pomoc | "BELA"/kick [ID/Ime] [Razlog]");
		if(pplayerid == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
		if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Ne mozete kikovati tog igraca!");
		format(string,sizeof(string),""SRWBOJA"[KICK] "BELA"Staff %s je kikovao igraca "SRWBOJA"%s.",GetName(playerid),GetName(pplayerid));
		SCMTA(-1,string);
		format(string,sizeof(string),""BELA"Kikovani ste od strane admina "SRWBOJA"%s | "BELA"Razlog: "SRWBOJA"%s",GetName(playerid),reason);
		SCM(pplayerid,-1,string);
		format(string,sizeof(string),""CRVENA"A | "BELA"Staff %s je kikovao | Igraca "SRWBOJA"%s | "BELA"Razlog: "SRWBOJA"%s",GetName(playerid),GetName(pplayerid),reason);
		AdminGameMaster(-1, string);
		new string1[128];
		format(string1,sizeof(string1),""SRWBOJA"Kikovali ste igraca %s | Razlog: %s",GetName(pplayerid),reason);
		SCM(playerid,-1,string1);
		g_freeze[pplayerid] = SetTimerEx("KonektKick", 1000, 0, "d", pplayerid);
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini & GM!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////
CMD:gotopos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, -1, "Niste ovlasceni");
	if(sscanf(params, "fff", X, Y, Z)) return SendClientMessage(playerid, -1, "Koristite: /gotopos [X] [Y] [Z]");
	SetPlayerPos(playerid, X, Y, Z); 
	return 1;		
}
CMD:gotoon(playerid, params[])
{
    PlayerInfo[playerid][pGoto] = 0;
    SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Ukljucili ste mogucnost portanja do vas!");
	return 1;
}
/////////////////////////////////////////////
CMD:gotooff(playerid, params[])
{
     PlayerInfo[playerid][pGoto] = 1;
     SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Iskljucili ste mogucnost portanja do vas!");
     return 1;
}
CMD:vratistats(playerid, params[])
{
   if(PlayerInfo[playerid][pLevel] > 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ovu komandu mozete koristiti samo do level-a 1!");
   PlayerInfo[playerid][pLevel] = 6;
   PlayerInfo[playerid][pNovacDzep] = 500000;
   PlayerInfo[playerid][pNovacBanka] = 0;
   PlayerInfo[playerid][pVip] = 3;
   SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Uspesno ste vratili sebi stats sa Registera!");
   SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Idite relog da bi vam se stats sacuvao!");
   Kick(playerid);
   return 1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(4237)
{
    new id = PrihvataGoto[ playerid ];
    if(response)
	{
	        if(!IsPlayerConnected(id))
			{
				SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Taj igrac je "CRVENA"offline"BELA".");
				PrihvataGoto[ playerid ] = -1;
			}
	        else
			{
	            new Float:Xx, Float:Yy, Float:Zz, Float:Aa;
	            GetPlayerPos(playerid, Xx,Yy,Zz); GetPlayerFacingAngle(playerid, Aa);
	            if(GetPlayerState(id) != PLAYER_STATE_DRIVER)
				{
					SetPlayerPos(id, Xx+1,Yy+1,Zz); SetPlayerFacingAngle(id, Aa); PrihvataGoto[ playerid ] = -1;
				}
	            else
				{
					SetVehiclePos(GetPlayerVehicleID(id), Xx+2,Yy+3,Zz);
					SetVehicleZAngle(GetPlayerVehicleID(id), Aa);
					PrihvataGoto[ playerid ] = -1;
				}
	        }
	        new string[60];
			format(string, sizeof(string),""VARADERO"[INFO] "BELA"%s se teleportovao do tebe.",GetName(playerid));
			SCM(id, -1, string);
    }
    else
	{
		SCM(id, -1, ""SRWBOJA"[V:RPG] "BELA"Vas zahtev za /goto je "CRVENA2"odbijen"BELA".");
		PrihvataGoto[ playerid ] = -1;
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:goto(playerid, params[])
{
	if(PlayerInfo[playerid][pRadi] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Radis posao ne mozes da koristis ovu komandu!");
	if(PlayerInfo[playerid][pUPUBG] == 1) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Ne Moze da koristite komande na PUBG-U");
	if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"Ne mozete da koristite komande na eventu !!");
	new string[256], giveplayerid, giveplayer[MAX_PLAYER_NAME];
	new Float:plx,Float:ply,Float:plz, str[256];
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
		if( !sscanf(params, "u", giveplayerid ) ) {
		    if( giveplayerid == INVALID_PLAYER_ID ) return SCM(playerid, -1,"Igrac nije povezan.");
		    if( PlayerInfo[playerid][pSpecteam] >= 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
		    if( PlayerInfo[playerid][pSpecteam] >= 1 && PlayerInfo[giveplayerid][pGM] >= 1) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
  			if( PlayerInfo[playerid][pGM] >= 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
      		if( PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
		    if(giveplayerid == playerid) return SCM(playerid, -1, "Zasto pokusavas goto na samog sebe, imas li ti MOZGA.");
		    if( PlayerInfo[playerid][pGM] == 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,"[ V:RPG ]  "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas.");
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer)); GetPlayerPos(giveplayerid, plx, ply, plz);
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, plx, ply+4, plz);
			}
			else
			{
				SetPlayerPos(playerid,plx,ply+2, plz);
			}
			SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));

			new aRank[124];
			if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
			if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
			if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
			if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
			if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
			if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
			if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
			if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
			if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
			if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2"; }
			format(string, 256,""VARADERO"[PORT] "BELA"%s %s se portao do vas.", aRank, GetName(playerid));
			SCM(giveplayerid, -1, string);
			format(string, 256,""VARADERO"[PORT] "BELA"Teleportovali ste se do igraca %s.", GetName(giveplayerid));
			SCM(playerid, -1, string);
		}
		else SCM(playerid, -1,""VARADERO"[KORISCENJE] "BELA"/goto [ID/Ime_Prezime]");
	}
    else if(PlayerInfo[playerid][pPromoter] >= 1 || PlayerInfo[playerid][pVip] >= 1)
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if( !sscanf(params, "u", giveplayerid ) )
			{
			    if( giveplayerid == INVALID_PLAYER_ID ) return SCM(playerid, -1,""CRVENA"Igrac nije povezan!");
			    if( PlayerInfo[playerid][pPromoter] == 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
			    if( PlayerInfo[playerid][pPromoter] == 1 && PlayerInfo[giveplayerid][pGM] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
			    if( PlayerInfo[playerid][pPromoter] == 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
			    if( PlayerInfo[playerid][pPromoter] == 1 && PlayerInfo[giveplayerid][pGM] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
			    if( PlayerInfo[playerid][pSpecteam] == 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
			    if( PlayerInfo[playerid][pSpecteam] == 1 && PlayerInfo[giveplayerid][pGM] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
			    if( PlayerInfo[playerid][pGM] >= 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
			    if( PlayerInfo[playerid][pVip] >= 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
	            if( PlayerInfo[playerid][pVip] >= 1 && PlayerInfo[giveplayerid][pGM] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
	            if( PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
				if( PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca jer imate trazeni level!");
				if( PlayerInfo[giveplayerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji ima trazeni level!");
				if( PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca jer ste zatvoreni!");
				if(PlayerInfo[giveplayerid][pGoto] == 1) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Igrac je zabranio mogucnost portanja do njega !");
				if( PlayerInfo[playerid][pTestAdmin] == 1 && PlayerInfo[giveplayerid][pAdmin] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca koji je jaci od vas!");
	            if( PlayerInfo[giveplayerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca jer je zatvoren!");
				if( PlayerInfo[playerid][pWar] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca jer ste u waru!");
				if( PlayerInfo[giveplayerid][pWar] >= 1) return SCM(playerid,-1,"[V:RPG] | "SPLAVA"Ne mozete se portati do igraca jer je u waru!");
				if(giveplayerid == playerid) return SCM(playerid, -1, "Zasto pokuasvas goto na samog sebe, imas li ti MOZGA!");

			    format(str, sizeof(str), "Igrac {1A80D2}%s{FFFFFF} trazi mogucnost portanja do vas.", GetName(playerid));
			    SPD(giveplayerid, 4237, DSB, "GOTO ZAHTEV", str, D_POTVRDI, "{FC3F3F}ODBIJ");
			    SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Poslali ste zahtev za port.");
			    PrihvataGoto[ giveplayerid ] = playerid;
			}
			else SCM(playerid, -1,""SRWBOJA"PORT Pomoc | "BELA"/goto [ID/Nick]");
		}
	}
	return 1;
}
////////////////////////////////////////////////////////
CMD:uvozilo(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Samo Admini (Admin Level 2+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    if(IsPlayerInAnyVehicle(playerid)) {
    return SCM(playerid,-1,""BELA"[V:RPG] "SIVA"Ne mozete koristiti ovu komandu dok ste u vozilu.");
    }
	new voziloid;
	if(sscanf(params, "i", voziloid)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/uvozilo [ID]");
	PutPlayerInVehicle(playerid, voziloid, 1);
	new string[96];
	format(string, charsmax(string), ""SIVA"[V:RPG] "SRWBOJA"Portovani ste u auto ID %d!",voziloid); //conver
	SCM(playerid,-1, string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:osamari(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		new sIgrac,razlog[48];
		new Float:health,string[128];
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params, "us[48]", sIgrac,razlog)) return SCM(playerid, -1, ""ORANGE"[V:RPG] Pomoc | "BELA"/osamari [ID/Ime] [Razlog]");
	    if(sIgrac == INVALID_PLAYER_ID) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
        if(Zavezan[sIgrac] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Taj igrac je zavezan!");
		if(PlayerInfo[sIgrac][pZatvor] != 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Taj igrac je u zatvoru!");
        if(StavljeneLisice[sIgrac] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igracu su stavljene lisice!");
		if(IgracTazovan[sIgrac] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igrac je tazovan!");
		if(IgracOboren[sIgrac] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igrac je oboren!");
		GetPlayerPos(sIgrac, X, Y, Z);
		format(string,sizeof(string),""SRWBOJA"[V:RPG] "BELA"Administrator %s vas je osamario "SRWBOJA"Razlog: %s!",GetName(playerid),razlog);
		SCM(sIgrac,-1,string);
		format(string,sizeof(string),""SRWBOJA"[V:RPG] "BELA"Osamarili ste %s-a "SRWBOJA"Razlog: %s!",GetName(sIgrac),razlog);
		SCM(playerid,-1,string);
		SetPlayerPos(sIgrac, X, Y, Z + 5.0);
		GetPlayerHealth(sIgrac,health);
		SetPlayerHealth(sIgrac,health-10);
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini & GM!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:freeze(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	new string[128], string2[128], igrac;
	if (PlayerInfo[playerid][pGM] >= 2 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
	    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params, "u", igrac)) return SendClientMessage(playerid, -1, ""ORANGE"[V:RPG] Pomoc | "BELA"/freeze (ID Igraca)");
        if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
        if(PlayerInfo[igrac][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
		format(string, sizeof(string), ""SRWBOJA"[V:RPG] "SIVA"Frezovali ste igraca %s-a!",GetName(igrac));
		SendClientMessage(playerid, -1, string);
		format(string2, sizeof(string2), ""SRWBOJA"[V:RPG] "SIVA"Frezovani ste od strane Admina & GameMastera %s-a!",GetName(playerid));
		SendClientMessage(igrac, -1, string2);
		TogglePlayerControllable(igrac, false);
		Frezovan[igrac] = 1;
	}
	else
	{
		SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Admini!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:unfreeze(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	new string[128], string2[128], igrac;
	if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
	    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params, "u", igrac)) return SendClientMessage(playerid, -1, ""ORANGE"[V:RPG] Pomoc | "BELA"/unfreeze (ID Igraca)");
        if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
        if(PlayerInfo[igrac][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
		format(string, sizeof(string), ""SRWBOJA"[V:RPG] "SIVA"Unfrezovali ste igraca %s-a!",GetName(igrac));
		SendClientMessage(playerid, -1, string);
		format(string2, sizeof(string2), ""SRWBOJA"[V:RPG] "SIVA"Unfrezovani ste od strane Admina & GameMastera %s-a!",GetName(playerid));
		SendClientMessage(igrac, -1, string2);
		TogglePlayerControllable(igrac, true);
		Frezovan[igrac] = 0;
	}
	else
	{
		SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Admini & GM!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:rtc(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pSpecteam] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "BELA"Morate biti u vozilu!");
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "BELA"Morate biti na mestu vozaca!");
		RTC(GetPlayerVehicleID(playerid));
		SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Respawnovali ste vozilo!");
	}
	else
	{
		SCM(playerid,-1, ""ORANGE"[V:RPG] "BELA"Samo Admini & GM!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:vrtc(playerid, params[])
{
	if(PlayerInfo[playerid][pVip] >= 1 || PlayerInfo[playerid][pPromoter] >= 1)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "BELA"Morate biti u vozilu!");
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "BELA"Morate biti na mestu vozaca!");
		RTC(GetPlayerVehicleID(playerid));
		SCM(playerid,-1,"Respawnovali ste vozilo!");
	}
	else
	{
		SCM(playerid,-1, "Samo Vipovi & Promoteri !");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:setskin(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pAdmin] >= 4)
	{
		new pplayerid, skin;
		if(sscanf(params, "ui", pplayerid,skin)) return SCM(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/setskin [ID/Ime] [Skin ID]");
		if(pplayerid == IPI) return SCM(playerid, -1, "Pogresan ID !");
	    if(IsPlayerInAnyVehicle(pplayerid)) return SCM(playerid, -1, "Ne mozete menjati skin dok je igrac u vozilu!");
		if(skin < 1 || skin > 311) return SCM(playerid, -1, "Pogresan id skina!");
		PlayerInfo[pplayerid][pSkin] = skin;
		Update_Skin(pplayerid,skin); SavePlayer(pplayerid);
		new aRank[50], string[256];
		if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
		if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
		format(string, 256, ""ORANGE2"#!: %s %s vam je postavio Skin ID %d !", aRank, GetName(playerid), skin);
		SCM(pplayerid, -1, string);
		format(string, 256, ""ORANGE2"#!: Igracu %s [%d] ste postavili Skin ID %d !", GetName(pplayerid), pplayerid, skin);
		SCM(playerid, -1, string);
		format(string, 256, ""ORANGE2"#AdmWarn: %s %s [%d] je postavio Skin igracu %s [%d] ID: %d !", aRank, GetName(playerid), playerid, GetName(pplayerid), pplayerid, skin);
		SendAdminMessage(-1, string);
	}
	else
	{
		SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Admini (Admin Level 2+)!");
	}
	return 1;
}

///////////////////////////////////////////////////////
CMD:jetpack(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] > 1 || PlayerInfo[playerid][pSpecteam] > 1 || PlayerInfo[playerid][pTestAdmin] > 1)
	{
	if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0 && saduty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator/GameMaster/SA Duznosti!");
	new Float:slx, Float:sly, Float:slz;
	if(GetPVarInt(playerid,"Jetpack") != 999)
   	{
	SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Unistili ste JetPack.");
	GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz+2);
	SetPVarInt(playerid,"Jetpack",999);
   	}
	else if(GetPVarInt(playerid,"Jetpack") == 999)
	{
	SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Stvorili ste JetPack.");
 	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
 	SetPVarInt(playerid,"Jetpack",playerid);
  	}
  	} else SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo Staff Team !");
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:spawn(playerid, params[])
	{
        //#pragma unused help
	    #pragma unused params
	    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
        if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
		if(IsPlayerConnected(playerid))
	    {
	    	new giveplayerid,sstring[256];
			if(sscanf(params, "u", giveplayerid)) return SCM(playerid, COLOR_GRAD2, "Koristi: /spawn [ID]");
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
   					    SpawnPlayer(giveplayerid);
   					    if(PlayerInfo[giveplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
 						format(sstring, sizeof(sstring), "{FF0000}#Spawn:{FFFFFF} %s je spawnovan od strane Administrator/GameMaster %s", GetName(giveplayerid), GetName(playerid));
                        SCMTA(WHITE, sstring);
                        SpawnIgraca(giveplayerid);
                        SetPlayerWorldBounds(giveplayerid,20000.0000,-20000.0000,20000.0000,-20000.0000);
				    }
				}
			}
		}
		return 1;
	}
///////////////////////////////////////////////////////
CMD:kill(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SendClientMessage(playerid, -1, "Nisi ulogovan.");
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new pplayerid,string[128];
		if(sscanf(params, "u", pplayerid)) return SendClientMessage(playerid, -1, ""BELA"/kill [ID/Ime]");
		if(!IsPlayerConnected(pplayerid)) return SendClientMessage(playerid, -1, ""SIVA"Pogresan ID.");
		SetPlayerHealth(pplayerid,0);
		format( string, sizeof( string ), ""ORANGE2"#!: Administrator %s vas je ubio.",GetName(playerid));
		SCM(pplayerid,-1,string);
		format( string, sizeof( string ), ""ORANGE2"#!: Ubili ste igraca %s [%d].",GetName(pplayerid), pplayerid);
		SCM( playerid, -1, string );
  		format( string, sizeof( string ), ""ORANGE2"(/kill): Administrator %s [%d] je ubio igraca %s [%d].",GetName(playerid), playerid,GetName(pplayerid), pplayerid);
		SendAdminMessage(-1,string);
		PlayerInfo[pplayerid][pTrazeniLevel] = 0;
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"[ V:RPG ]  "BELA"Samo Admini.");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:gethere(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pGM] >= 2 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		new gtIgrac;
		new string[256];
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""ORANGE2"#!: Morate biti na duznosti !");
		if(sscanf(params, "u", gtIgrac)) return SCM(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/gethere [ID/Ime_Prezime]");
		if(!IsPlayerConnected(gtIgrac)) return SCM(playerid, -1, ""ORANGE2"#!: Pogresan ID !");
	    if( PlayerInfo[playerid][pSpecteam] >= 1 && PlayerInfo[gtIgrac][pAdmin] >= 1) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
	    if( PlayerInfo[playerid][pSpecteam] >= 1 && PlayerInfo[gtIgrac][pGM] >= 1) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
		if( PlayerInfo[playerid][pGM] >= 1 && PlayerInfo[gtIgrac][pAdmin] >= 1) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
  		if( PlayerInfo[playerid][pAdmin] < PlayerInfo[gtIgrac][pAdmin]) return SCM(playerid,-1,""CRVENA"#ERROR: "BELA"Ne mozes se gotati do igraca koji je veci RANK od tebe .");
		if(gtIgrac == playerid) return SCM(playerid, -1, "Zasto pokusavas da getas samog sebe ?");
		if(PlayerInfo[gtIgrac][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete portati igraca koji ima trazeni level!");
		GetPlayerPos(playerid, X, Y, Z);
		SetPlayerPos(gtIgrac, X + 2.0, Y, Z);
		SetPlayerVirtualWorld(gtIgrac, GetPlayerVirtualWorld(playerid));
		SetPlayerInterior(gtIgrac, GetPlayerInterior(playerid));
		new aRank[50];
		if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
		if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 2 (Vodja)"; }
		if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
		if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
		if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
		if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
		if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
		format(string, 256, ""ORANGE2"#!: Teleportovao si igraca %s do sebe.", GetName(gtIgrac));
		SCM(playerid, -1, string);
		format(string, 256, ""ORANGE2"#!: %s %s vas je teleportovao do sebe.", aRank, GetName(playerid));
		SCM(gtIgrac, -1, string);
	}
	else
	{
		SCM(playerid, -1, "Samo Staff Team (A/GM) !");
	}
	return 1;
}
///////////////////////////////////////////////////////n
CMD:aoruzije(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"Samo Admin Level 6+!");
	new pplayerid,gun,ammo,string[128];
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "uii", pplayerid,gun,ammo)) return SCM(playerid,-1, ""BELA"[V:RPG] Pomoc | "BELA"/aoruzije [ID/Nick] [Weapon ID] [Municija]");
	if(pplayerid == IPI) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Taj igrac nije na serveru!");
	GivePlayerWeapon(pplayerid, gun,ammo);
	format(string,sizeof(string),""BELA"[V:RPG] "BELA"Administrator "SRWBOJA"%s "BELA"vam je dao oruzije ID "SPLAVA"%d!",GetName(playerid),gun);
	SCM(pplayerid,-1,string);
	format(string,sizeof(string),""BELA"[V:RPG] "BELA"Dali ste oruzije ID "SRWBOJA"%d "BELA"igracu "SPLAVA"%s!",gun,GetName(pplayerid));
	SCM(playerid,-1,string);
	format(string, sizeof(string), ""CRVENA"A | "BELA"Administrator %s daje oruzije igracu %s | Id oruzja: %d | %d metaka",GetName(playerid),GetName(pplayerid),gun,ammo);
	SendAdminMessage(-1,string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:fban(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (Admin Level 4+)!");
	new pplayerid,string[256],reason[48];
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "us[48]",pplayerid,reason)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/fban [ID/Nick] [Razlog]");
	if(pplayerid == IPI) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
	if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
	format(string,sizeof(string),""SRWBOJA"[V:RPG] "BELA"Ban | Administrator "SPLAVA"%s "BELA"je banovao "BELA"%s "BELA"| Razlog: "SRWBOJA"%s.",GetName(playerid),GetName(pplayerid),reason);
	SCMTA(-1,string);
	SCM(pplayerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ovo nije pravi ban ovo je fake ban xD.");
	return 1;
}
///////////////////////////////////////////////////////
CMD:ubisve(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Vlasnik!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new string[128]; foreach(new i : Player) { SetPlayerHealth(i,0); }
	format(string,sizeof(string),""BELA"(( Administrator %s je ubio sve igrace na serveru ))",GetName(playerid));
	SCMTA(-1,string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:freezesveaukurac(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Direktor!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    new string[128]; foreach(new i : Player) { TogglePlayerControllable(i,0); }
    format(string,sizeof(string),""SRWBOJA"(( UPOZORENJE!!! "BELA"Administrator %s je zaledio sve igrace na serveru."SRWBOJA" ))",GetName(playerid));
    SCMTA(-1,string);
    return 1;
}
///////////////////////////////////////////////////////
CMD:unfreezesveaukurac(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Direktor!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    new string[128]; foreach(new i : Player) { TogglePlayerControllable(i,1); }
    format(string,sizeof(string),""SRWBOJA"(( UPOZORENJE !!! "BELA"Administrator %s je odledio sve igrace na serveru."SRWBOJA" ))",GetName(playerid));
    SCMTA(-1,string);
    return 1;
}
///////////////////////////////////////////////////////
CMD:sviheal(playerid, params[])
{
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Morate se ulogovati da bi pisali.");
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1, "Samo Admini (Admin Level 5+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid, -1, "Morate biti na Admin duznosti!");
	new aRank[50], string[200]; 
	foreach(new i:Player) 
	{ 
		SetPlayerHealth(i,99.0); 
	}
	if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
	if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
	if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
	if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
	format(string, 200, ""VARADERO"[INFO] "BELA"%s %s je podesio helte svim igracima.", aRank, GetName(playerid));
	SCMTA(-1, string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:svipancir(playerid, params[])
{
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Morate se ulogovati da bi pisali.");
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1, "Samo Admini (Admin Level 5+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid, -1, "Morate biti na admin duznosti!");
	new aRank[50], string[200]; foreach(new i:Player) { SetPlayerArmour(i,99.0); }
	if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
	if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
	if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
	if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
	format(string, 200, ""VARADERO"[INFO] "BELA"%s %s je podesio pancir svim igracima.", aRank, GetName(playerid));
	SCMTA(-1, string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:podesihp(playerid, params[])
{
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Morate se ulogovati da bi pisali.");
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 2)
	{
		new aRank[50], playa;
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Morate biti na Admin & Supporter duznosti!");
		if(sscanf(params,"u",playa)) return SCM(playerid, -1, ""SPLAVA"V Pomoc | "SIVA"/podesihp [ID/Ime]");
		if(!IsPlayerConnected(playa)) return SCM(playerid,-1,""SPLAVA"[GRESKA] "SIVA"Igrac nije na serveru!");
		SetPlayerHealth(playa, 99.0);
		if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
		if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
		if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
		if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
		if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
		if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
        va_SendClientMessage(playa, -1, ""VARADERO"[INFO] "BELA"%s %s vam je podesio helte.", aRank, GetName(playerid));
		va_SendClientMessage(playerid, -1, ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste podesili helte.", GetName(playa), playa);
	}
	else
	{
		SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Samo Admini & Supporteri!");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:podesipancir(playerid, params[])
{
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Morate se ulogovati da bi pisali.");
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 2)
	{
		new aRank[50], playa;
		if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Morate biti na admin duznosti!");
		if(sscanf(params,"u",playa)) return SCM(playerid, -1, ""SPLAVA"V Pomoc | "SIVA"/podesipancir [ID/Ime]");
		if(!IsPlayerConnected(playa)) return SCM(playerid,-1,""SPLAVA"[GRESKA] "SIVA"Igrac nije na serveru!");
		SetPlayerArmour(playa, 99.0);
		if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
		if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
		if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
		if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
		if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
		if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
        va_SendClientMessage(playa, -1, ""VARADERO"[INFO] "BELA"%s %s vam je podesio helte.", aRank, GetName(playerid));
		va_SendClientMessage(playerid, -1, ""VARADERO"[INFO] "BELA"Igracu %s [%d] ste podesili helte.", GetName(playa), playa);
	}
	else
	{
		SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Samo Admini !");
	}
	return 1;
}
/////////////////////////////////////////////////////////
CMD:avozilo(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pUPUBG] == 1) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Ne Moze da koristite komande na PUBG-U");
   	if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Imate wanted level pa ne mozete /aduty !");
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Ne mozete koristiti ovu komandu dok ste u vozilu.");
	if(PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pSpecteam] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
		if(GetPVarInt(playerid, "stvorioavozilo") == 0) ShowModelSelectionMenu(playerid, vozilolist, "Staff Vozila");
		else if(GetPVarInt(playerid, "stvorioavozilo") == 1)
		{
			DestroyVehicle(AdminVozilo[playerid]);
			Delete3DTextLabel(avehl[playerid]);
			AdminVozilo[playerid] = -1;
			SetPVarInt(playerid, "stvorioavozilo", 0);
			SCM(playerid, -1, ""ORANGE2"#!: Unistili ste Staff Vozilo.");
		}
	}
	else return SCM(playerid, -1, "Samo Staff Team (A/GM/ST).");
	return 1;
}
////////////////////////////////////////////////////////
CMD:platica(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Vlasnik");
    foreach(new i : Player)
    {
    PayDay(i);
    }
    return 1;
}
///~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [ KOMANDA /plati ] ~~~~~~~~~~~~~~~~~~~~~~~~~~///
CMD:plati(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Moras biti level 7 da bi koristili ovo komandu!");
 	new target, money;
	if(sscanf(params, "ud", target, money)) return SendClientMessage(playerid,-1, ""VARADERO"[V:RPG] "BELA"/plati [ID] [Kolicina Novca]");
	if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""SZELENA"ERROR: "SIVA"Pogresan ID!");
	if(target == playerid) return SendClientMessage(playerid, -1, ""SZELENA"ERROR: "SIVA"Ne mozete samom sebi dati novac!");
	if(money < 1) return SendClientMessage(playerid, -1, ""SZELENA"ERROR: "SIVA"Suma novca ne moze biti manja od 1!");
	if(money > PlayerInfo[playerid][pNovacDzep]) return SendClientMessage(playerid, -1, ""SZELENA"ERROR: "SIVA"Nemate toliko novca!");
	new Float:Pos[3]; GetPlayerPos(target,Pos[0],Pos[1],Pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid,1.5,Pos[0],Pos[1],Pos[2])) return SendClientMessage(playerid, -1, ""SZELENA"ERROR: "SIVA"Igrac nije blizu vas!");
	new string[128];
	g_NovacMinus(playerid, money);
	g_NovacPlus(target, money);
	SavePlayer(target);
	SavePlayer(playerid);
	format(string, sizeof(string), ""VARADERO"[V:RPG] "SZELENA"Dali ste %s %d$.", GetName(target), money);
	SCM(playerid, -1, string);
	format(string, sizeof(string), ""VARADERO"[V:RPG] "SZELENA"%s vam je dao %d$.", GetName(playerid), money);
	SCM(target, -1, string);
	format(string, sizeof(string), "* %s uzima nesto novca iz svog dzepa i daje %s.", GetName(playerid), GetName(target));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	OnePlayAnim(playerid, "DEALER", "shop_pay", 2.5, 0, 0, 0, 0, 0);
	return 1;
}
////////////////////////////////////////////////////////
CMD:a(playerid, params[])
{
    if((achat)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"A (Administrator) chat je iskljucen,ne mozes to!");
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pTestAdmin] < 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Niste ovlasceni");
	{
	new text[1024], string[1024], sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "s[1024]", text)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/a [tekst]");
	new arank[124];
	if(PlayerInfo[playerid][pTestAdmin] == 1) { arank = "Test Admin"; }
	if(PlayerInfo[playerid][pAdmin] == 1) { arank = "Admin Level 1"; }
	if(PlayerInfo[playerid][pAdmin] == 2) { arank = "Admin Level 2"; }
 	if(PlayerInfo[playerid][pAdmin] == 3) { arank = "Admin Level 3"; }
	if(PlayerInfo[playerid][pAdmin] == 4) { arank = "Admin Level 4"; }
	if(PlayerInfo[playerid][pAdmin] == 5) { arank = "Admin Level 5 (Head-Admin)"; }
	if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Admin Level 6 (Direktor)"; }
	if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Vlasnik"; }
 	if(PlayerInfo[playerid][pAdmin] == 8) { arank = "Developer"; }
    format(string, sizeof(string), ""CRVENA"A | "BELA"%s "CRVENA"%s [ID:%d]: "BELA"%s",arank,sendername,playerid,text);
	SAM(-1,string);
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:ao(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pTestAdmin] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini Level1+!");
	new text[1024], string[1024], sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "s[1024]", text)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/ao [tekst]");
    new Adminlevel[124];
    if(PlayerInfo[playerid][pTestAdmin] == 1) { Adminlevel = "Test Admin"; }
    if(PlayerInfo[playerid][pAdmin] == 1) { Adminlevel = "Admin Level 1"; }
    if(PlayerInfo[playerid][pAdmin] == 2) { Adminlevel = "Admin Level 2"; }
    if(PlayerInfo[playerid][pAdmin] == 3) { Adminlevel = "Admin Level 3"; }
    if(PlayerInfo[playerid][pAdmin] == 4) { Adminlevel = "Admin Level 4"; }
    if(PlayerInfo[playerid][pAdmin] == 5) { Adminlevel = "Admin Level 5 (Head-Admin)"; }
    if(PlayerInfo[playerid][pAdmin] == 6) { Adminlevel = "Admin Level 6 (Direktor)"; }
   	if(PlayerInfo[playerid][pAdmin] == 7) { Adminlevel = "Vlasnik"; }
    if(PlayerInfo[playerid][pAdmin] == 8) { Adminlevel = "Developer"; }
    format(string, sizeof(string), ""CRVENA"(( "BELA"%s %s: %s "CRVENA"))", Adminlevel, sendername, text);
	SendClientMessageToAll(-1,string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:gmo(playerid, params[])
{

	if(PlayerInfo[playerid][pGM] < 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo GameMasteri!");
	new GMLevel[50], text[1024], string[1024], sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "s[1024]", text)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/gmo [tekst]");
	if(PlayerInfo[playerid][pGM] == 1) { GMLevel = "GameMaster 1"; }
    if(PlayerInfo[playerid][pGM] == 2) { GMLevel = "GameMaster 2 (Vodja)"; }
	format(string, sizeof(string), ""SPLAVA"(( "BELA"%s %s: %s "SPLAVA"))", GMLevel, sendername, text);
	SendClientMessageToAll(-1,string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:g(playerid, const params[])
{
    if(UlogovanProvera[playerid] == 0)
		return sendErrorMessage(playerid, "Morate se ulogovati !");
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pSpecteam] >= 1 || PlayerInfo[playerid][pVip] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1 || PlayerInfo[playerid][pPromoter] >= 1)
	{
		if(PlayerInfo[playerid][pZatvor] != 0)
			return sendErrorMessage(playerid, "Zatvoreni ste, ne mozete pisati u /g Chatu !");
		if(PlayerInfo[playerid][pMuteg] == 1)
			return sendErrorMessage(playerid, "Vi ste ucutkani na /g Chatu, ne mozete pisati !");
		if((noooc))
			return sendErrorMessage(playerid, "Global Chat (/g) je trenutno iskljucen !");
		if(gettime() < gKomanda[playerid] && PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 1)
			return sendErrorMessage(playerid, "Ovu komandu mozete koristiti svakih 15 sekundi !");

		if(sscanf(params, "s[128]", params[0])) return koriscenje(playerid, "/g [text]");
		new aRank[50], string[128];
		if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
		if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
		if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
		if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
		if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
  		if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
	    if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
		if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
		if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
		if(PlayerInfo[playerid][pVip] == 1) { aRank = "Vip Level 1"; }
		if(PlayerInfo[playerid][pVip] == 2) { aRank = "Vip Level 2"; }
		if(PlayerInfo[playerid][pVip] == 3) { aRank = "Vip Level 3"; }
		if(PlayerInfo[playerid][pVip] == 4) { aRank = "Vip Level 4"; }
	 	if(PlayerInfo[playerid][pVip] == 5) { aRank = "Premium"; }
	 	if(PlayerInfo[playerid][pVip] == 6) { aRank = ""ELITE"Elite"; }
		format(string, sizeof(string), ""ZELENA"G | %s %s [ID:%d]: "BELA"%s", aRank, GetName(playerid), playerid, params[0]);
		AdminGameMasterVip(-1, string);
		gKomanda[playerid] = gettime() + 15;
	}
	return 1;
}
CMD:ga(playerid, params[])
{
    //#pragma unused help
    if((gachat)) return SCM(playerid, -1, ""ZELENA"[V:RPG] "BELA"Staff (/ga) chat je iskljucen,ne mozes to!");
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1)
	{
		if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Ne mozete koristiti ovu komandu jer ste zatvoreni!");
		if(PlayerInfo[playerid][pMuteg] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Ne mozete koristiti ovu komandu zato sto ste mutirani na /ga chat!");
		new text[1024], string[1024], sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[1024]", text)) return SCM(playerid, -1, ""SRWBOJA"([V:RPG] ) Pomoc | "SIVA" /ga [tekst]");
		new arank[50];
		if(PlayerInfo[playerid][pTestAdmin] == 1) { arank = "Test Admin"; }
		if(PlayerInfo[playerid][pAdmin] == 1) { arank = "Admin Level 1"; }
		if(PlayerInfo[playerid][pAdmin] == 2) { arank = "Admin Level 2"; }
		if(PlayerInfo[playerid][pAdmin] == 3) { arank = "Admin Level 3"; }
		if(PlayerInfo[playerid][pAdmin] == 4) { arank = "Admin Level 4"; }
		if(PlayerInfo[playerid][pAdmin] == 5) { arank = "Admin Level 5 (Head-Admin)"; }
		if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Admin Level 6 (Direktor)"; }
		if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Vlasnik"; }
	    if(PlayerInfo[playerid][pAdmin] == 8) { arank = "Developer"; }
 	    if(PlayerInfo[playerid][pGM] == 1) { arank = "GameMaster 1"; }
		if(PlayerInfo[playerid][pGM] == 2) { arank = "GameMaster 2"; }
		if(PlayerInfo[playerid][pSpecteam] == 1) { arank = "Spec-Team"; }
        format(string, sizeof(string), "{157DEC}GA | "BELA"%s {157DEC}%s [ID:%d]"BELA": %s",arank,sendername,playerid,text);
		AdminGameMasterSpec(-1,string);
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:uzmiip(playerid, params[])
{

	if (PlayerInfo[playerid][pGM] >= 2 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		new pplayerid,ip[64],string[128];
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params, "u", pplayerid)) return SCM(playerid, -1, ""SIVA"[V:RPG] Pomoc | /uzmiip [ID/Ime]");
		if(pplayerid == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
		GetPlayerIp(pplayerid,ip,50);
		format(string,sizeof(string),""SIVA"Igrac %s | IP: %s",GetName(pplayerid),ip);
		SCM(playerid,-1,string);
	}
	else
	{
		SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo Admini & GM2+.");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:podesisat(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""SRWBOJA"Samo Admini (AL 2+)!");
	new time,string[128];
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "i", time)) return SCM(playerid, -1, ""SIVA"[V:RPG] Pomoc | /podesisat [vreme]");
	format(string,sizeof(string),"{0072FF}A | {FFFFFF}Administrator %s je postavio vreme na %d!",GetName(playerid),time);
	SendClientMessageToAll(-1,string);
	SetWorldTime(time);
	return 1;
}
///////////////////////////////////////////////////////
CMD:podesivreme(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""SIVA"[ V:RPG ] Samo Admini (AL 2+)!");
	new string[128],weather;
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "i", weather)) return SCM(playerid, -1, ""SPLAVA"[V:RPG] Pomoc | "BELA"/podesivreme [vreme ID (0 - 45)]");
	if(weather > 45 || weather < 0) return SCM(playerid, -1, ""SIVA"GRESKA | Pogresan ID Vremena!!");
	format(string,sizeof(string),""SIVA"Administrator %s je postavio vreme na %d!",GetName(playerid),weather);
	SendClientMessageToAll(-1,string);
	SetWeather(weather);
	return 1;
}
///////////////////////////////////////////////////////
CMD:nitro(playerid, params[])
{
	if(PlayerInfo[playerid][pGM] >= 2 || PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Morate biti u vozilu!");
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
		SCM(playerid,-1,"Dodali ste nitro u vozilo!");
	}
	else
	{
		SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo Admini & GameMaster (AL 1+ & GM 3+).");
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:mute(playerid, params[])
{

	new pid,vrijeme,razlog[128],str[128];
	if(PlayerInfo[playerid][pAdmin] < 0 || PlayerInfo[playerid][pGM] < 0) return SCM(playerid, -1, ""SRWBOJA"Samo Admini i GM!");
    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[ V:RPG ]  "SIVA"Morate biti na Administrator & Gamemaster duznosti!");
	if(sscanf(params, "uis[48]", pid,vrijeme,razlog)) return SCM(playerid,-1,""SIVA"[V:RPG] Pomoc | "BELA"/mute [id] [vrijeme(minut]] [razlog]");
	if(pid == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[ V:RPG ]  "SIVA"Pogresan ID!");
	if(PlayerInfo[pid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
	if(PlayerInfo[pid][pMutiran] == 1) return SCM(playerid,-1,""SIVA"[GRESKA]: Taj igrac je vec mutiran!");
	PlayerInfo[pid][pMutiran] = 1;
	PlayerInfo[pid][pMutiranVreme] = vrijeme * 60;
	format(str,sizeof str,""ORANGE2"#!: Mutirani ste od strane Staff Teama | Razlog: %s | Vreme: %d", razlog, vrijeme);
	SCM(pid,-1,str);
	format(str,sizeof str,""ORANGE2"#!: Mutirali ste igraca %s [%d] | Razlog: %s | Vreme: %d", GetName(pid), razlog, vrijeme);
	SCM(playerid,-1,str);
	format(str,sizeof(str),""VARADERO"[INFO] "BELA"STAFF %s [%d] je utisao igraca %s [%d] na %d minuta.",GetName(playerid), playerid, GetName(pid), pid, vrijeme);
	AdminGameMaster(-1,str);
	PlayerInfo[playerid][pBrojMute]++;
	SavePlayer(pid);
	return 1;
}
///////////////////////////////////////////////////////
CMD:unmute(playerid, params[])
{
	new pid,str[128];
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, -1, ""SRWBOJA"[ V:RPG ]  "SIVA"Samo Admini (Admin Level 3+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[ V:RPG ]  "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "u", pid)) return SCM(playerid,-1,""SIVA"[V:RPG] Pomoc | "BELA"/unmute [id]");
	if(pid == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[ V:RPG ]  "SIVA"Pogresan ID!");
	if(PlayerInfo[pid][pMutiran] == 0) return SCM(playerid,-1,""SIVA"[GRESKA]: Taj igrac nije mutiran!");
	PlayerInfo[pid][pMutiran] = 0;
	PlayerInfo[pid][pMutiranVreme] = -1;
	format(str,sizeof str,""ORANGE2"#!: Admin %s vam se unmutirao | Sada mozete pisati.", GetName(playerid));
	SCM(pid,-1,str);
	format(str,sizeof str,""ORANGE2"#!: Unmutirali ste igraca %s.", GetName(pid));
	SCM(playerid,-1,str);
	format(str,sizeof(str),""VARADERO"[INFO] "BELA"STAFF %s [%d] je odmutirao igraca %s [%d].",GetName(playerid), playerid, GetName(pid), pid);
	AdminGameMaster(-1,str);
	SavePlayer(pid);
	return 1;
}

///////////////////////////////////////////////////////
CMD:warn(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Admini (Admin Level 2+)!");
	new pplayerid,string[128],reason[48];
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	if(sscanf(params, "us[48]", pplayerid,reason)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/warn [ID/Ime] [Razlog]");
	if(pplayerid == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
	if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
	PlayerInfo[pplayerid][pWarn] += 1;
	format(string,sizeof(string),""SPLAVA"INFO | "BELA"Administrator %s vam je dao warn(%d po redu) | Razlog: %s",GetName(playerid),PlayerInfo[pplayerid][pWarn],reason);
	SCM(pplayerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Dali ste warn igracu %s | Razlog: %s",GetName(pplayerid),reason);
	SCM(playerid,-1,string);
	format(string,sizeof(string),""CRVENA"A | "BELA"Administrator %s je dao warn igracu %s | Razlog: %s",GetName(playerid),GetName(pplayerid),reason);
	AdminGameMaster(-1,string);
	format(string,sizeof(string),""SRWBOJA"WARN | "BELA"Administrator %s je dao warn igracu %s",GetName(playerid),GetName(pplayerid));
	SendClientMessageToAll(-1,string);
	PlayerInfo[playerid][pBrojWarn]++;
	if(PlayerInfo[pplayerid][pWarn] >= 5)
	{
		format(string,sizeof(string),""SRWBOJA"BAN | "SIVA"Igrac %s poseduje 5/5 warnova. Staff odlucuje sta ce biti sa njim.",GetName(pplayerid));
		SendClientMessageToAll(-1,string);
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:skiniwarn(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (Admin Level 3+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new gtIgrac,string[128];
	if(sscanf(params, "u", gtIgrac)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/skiniwarn [ID/Ime]");
	if(gtIgrac == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
	format(string,sizeof(string),""SPLAVA"[WARN] "BELA"Skinuli ste warn igracu %s | Warn: %d/5!",GetName(gtIgrac),PlayerInfo[gtIgrac][pWarn]);
	SCM(playerid,-1,string);
	format(string,sizeof(string),""SPLAVA"[WARN] "SIVA"Administrator %s vam je skinuo warn | Warn: %d/5!",GetName(playerid),PlayerInfo[gtIgrac][pWarn]);
	SCM(gtIgrac,-1,string);
	format(string,sizeof(string),""SPLAVA"A | "BELA"Administrator %s je skinuo warn igracu %s | Warn: %d/5!",GetName(playerid),GetName(gtIgrac),PlayerInfo[gtIgrac][pWarn]);
	AdminGameMaster(-1,string);
	PlayerInfo[gtIgrac][pWarn] -= 1;
	return 1;
}
CMD:hangar(playerid, params[])
{
	if(GaddafiTime[playerid] == 1) return SCM(playerid, -1, "Vec ste uzeli paket, sacekajte malo !");
 	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Moras biti level 7 da bi mogao koristiti ovu komandu!");
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 24.2000000,1898.1999500,19.4000000)) return SCM(playerid, -1, ""SRWBOJA"ERROR: "SRWBOJA"Moras biti u hangaru!");
	if(PlayerInfo[playerid][pLider] < 1 && PlayerInfo[playerid][pClan] < 1 )  return SendClientMessage(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Niste clan mafije/bande!");
    GaddafiTime[playerid] = 1;
	SetTimerEx("GaddafiTimer", 5000000, false, "i", playerid);
	SCM(playerid, -1, "Izaberi Paket !");
	SPD(playerid,213,DIALOG_STYLE_LIST, "Hangar PAKETI", "Paket 1\nPaket 2\nPaket 3\nPaket 4", "Uzmi", "Odustani");
    GaddafiPaketa--;
	return 1;
}
//----------------------------------------------------------------------------//
new Status[MAX_PLAYERS] = 0;
CMD:apanel(playerid, params[])
{
	new ime[50], player;
 	GetPlayerName(playerid, ime, 50);
    if(!strcmp(ime, "Bunta_Fujiwara", true) || !strcmp(ime, "bunta", true) || !strcmp(ime, "Bart", true))
	{
		if(player == INVALID_PLAYER_ID) return SCM(playerid, -1, "Pogresan ID !");
		SPD(playerid, 479, DSI, "ADMIN PANEL", ""BELA"Unesite ime igraca kojem zelite da date komande", "Nastavi", "Izlaz");
	}
	else
	{
		SCM(playerid, -1, "Samo Vlasnik !");
	}
	return 1;
}
fDialog(479)
{
	if(response)
	{
	    new targetid;
	    if( sscanf( inputtext, "u", targetid ) ) return SPD( playerid, 479, DSI, "ADMIN PANEL", ""BELA"Unesite ime igraca kojem zelite da date komande", "Nastavi", "Izlaz" );
        Status[playerid] = targetid;

		new lider[22], gamemaster[22], rpe[22], vip[22], promoter[22], nagrade[22], pstats[22], admin[22], cn[22], str[512];
		if(PlayerInfo[targetid][pDozvola1] == 1) lider = ""ZELENA"ON";
		else lider = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola2] == 1) gamemaster = ""ZELENA"ON";
		else gamemaster = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola3] == 1) admin = ""ZELENA"ON";
		else admin = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola4] == 1) rpe = ""ZELENA"ON";
		else rpe = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola5] == 1) vip = ""ZELENA"ON";
		else vip = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola6] == 1) promoter = ""ZELENA"ON";
		else promoter = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola7] == 1) nagrade = ""ZELENA"ON";
		else nagrade = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola8] == 1) pstats = ""ZELENA"ON";
		else pstats = ""CRVENA"OFF";
		if(PlayerInfo[targetid][pDozvola9] == 1) cn = ""ZELENA"ON";
		else cn = ""CRVENA"OFF";

		format(str, 512, "#\tOdobrenje\tStatus\n[1]\tPostavljanje Lidera:\t\t%s\n[2]\tPostavljanje GameMastera:\t\t%s\n[3]\tPostavljanje Admina:\t\t%s\n[4]\tPostavljanje RP Enforcera:\t\t%s\n[5]\tPostavljanje Vipa:\t\t%s\n[6]\tPostavljanje Promotera:\t\t%s\n[7]\tDavanje nagrada igracima:\t\t%s\n[8]\tPodesavanje Statsa:\t\t%s\n[9]\tKomanda /changename:\t\t%s\n[10]\tDozvoli/Zabrani sve", lider, gamemaster, admin, rpe, vip, promoter, nagrade, pstats, cn);
		SPD(playerid, 480, DIALOG_STYLE_TABLIST_HEADERS, "ADMIN PANEL", str, D_ODABERI, D_ODUSTANI);
	}
	return 1;
}
fDialog(480)
{
    if(response)
	switch(listitem)
	{
		case 0:
		{
		    new string[256], player = Status[playerid];
		    if(PlayerInfo[player][pDozvola1] == 1)
		    {
				PlayerInfo[player][pDozvola1] = 0; SavePlayer(player);
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /postavilidera !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /postavilidera !", GetName(player));
				SendClientMessage(playerid, -1, string);
			}
			else if(PlayerInfo[player][pDozvola1] == 0)
		    {
				PlayerInfo[player][pDozvola1] = 1; SavePlayer(player);
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /postavilidera !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /postavilidera !", GetName(player));
				SendClientMessage(playerid, -1, string);
			}
		}
		case 1:
		{
		    new string[256], player = Status[playerid];
			if(PlayerInfo[player][pGM] >= 1 && PlayerInfo[player][pAdmin] >= 1 && PlayerInfo[player][pAdmin] <= 4) return SCM(playerid, -1, "Igrac je manji Rank od Admin Level 5 !");
		    if(PlayerInfo[player][pDozvola2] == 1)
		    {
				PlayerInfo[player][pDozvola2] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /postavigm !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /postavigm !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola2] == 0)
		    {
				PlayerInfo[player][pDozvola2] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /postavigm !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /postavigm !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 2:
		{
		    new string[256], player = Status[playerid];
		    if(PlayerInfo[player][pDozvola3] == 1)
		    {
				PlayerInfo[player][pDozvola3] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /postaviadmina !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /postaviadmina !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola3] == 0)
		    {
				PlayerInfo[player][pDozvola3] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /postaviadmina !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /postaviadmina !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 3:
		{
			new string[256], player = Status[playerid];
			if(PlayerInfo[player][pGM] >= 1 && PlayerInfo[player][pAdmin] >= 1 && PlayerInfo[player][pAdmin] <= 4) return SCM(playerid, -1, "Igrac je manji Rank od Admin Level 5 !");
		    if(PlayerInfo[player][pDozvola4] == 1)
		    {
				PlayerInfo[player][pDozvola4] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /postavirpe !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /postavirpe !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola4] == 0)
		    {
				PlayerInfo[player][pDozvola4] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /postavirpe !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /postavirpe !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 4:
		{
		    new string[256], player = Status[playerid];
		    if(PlayerInfo[player][pDozvola5] == 1)
		    {
				PlayerInfo[player][pDozvola5] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /postavivipa !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /postavivipa !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola5] == 0)
		    {
				PlayerInfo[player][pDozvola5] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /postavivipa !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /postavivipa !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 5:
		{
			new string[256], player = Status[playerid];
			if(PlayerInfo[player][pGM] >= 1 && PlayerInfo[player][pAdmin] >= 1 && PlayerInfo[player][pAdmin] <= 4) return SCM(playerid, -1, "Igrac je manji Rank od Admin Level 5 !");
		    if(PlayerInfo[player][pDozvola6] == 1)
		    {
				PlayerInfo[player][pDozvola6] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /postavipromotera !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /postavipromotera !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola6] == 0)
		    {
				PlayerInfo[player][pDozvola6] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /postavipromotera !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /postavipromotera !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 6:
		{
			new string[256], player = Status[playerid];
			if(PlayerInfo[player][pGM] >= 1 && PlayerInfo[player][pAdmin] >= 1 && PlayerInfo[player][pAdmin] <= 4) return SCM(playerid, -1, "Igrac je manji Rank od Admin Level 5 !");
		    if(PlayerInfo[player][pDozvola7] == 1)
		    {
				PlayerInfo[player][pDozvola7] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /svima !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /svima !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola7] == 0)
		    {
				PlayerInfo[player][pDozvola7] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /svima !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /svima !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 7:
		{
			new string[256], player = Status[playerid];
			if(PlayerInfo[player][pGM] >= 1 && PlayerInfo[player][pAdmin] >= 1 && PlayerInfo[player][pAdmin] <= 4) return SCM(playerid, -1, "Igrac je manji Rank od Admin Level 5 !");
		    if(PlayerInfo[player][pDozvola8] == 1)
		    {
				PlayerInfo[player][pDozvola8] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /pstats !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /pstats !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola8] == 0)
		    {
				PlayerInfo[player][pDozvola8] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /pstats !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /pstats !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 8:
		{
			new string[256], player = Status[playerid];
			if(PlayerInfo[player][pGM] >= 1 && PlayerInfo[player][pAdmin] >= 1 && PlayerInfo[player][pAdmin] <= 4) return SCM(playerid, -1, "Igrac je manji Rank od Admin Level 5 !");
		    if(PlayerInfo[player][pDozvola9] == 1)
		    {
				PlayerInfo[player][pDozvola9] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je zabranio koriscenje komande /changename !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje komande /changename !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola9] == 0)
		    {
				PlayerInfo[player][pDozvola9] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje komande /changename !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje komande /changename !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
		case 9:
		{
			new string[256], player = Status[playerid];
			if(PlayerInfo[player][pGM] >= 1 && PlayerInfo[player][pAdmin] >= 1 && PlayerInfo[player][pAdmin] <= 4) return SCM(playerid, -1, "Igrac je manji Rank od Admin Level 5 !");
		    if(PlayerInfo[player][pDozvola1] == 1 || PlayerInfo[player][pDozvola2] == 1 || PlayerInfo[player][pDozvola3] == 1 || PlayerInfo[player][pDozvola4] == 1 || PlayerInfo[player][pDozvola5] == 1 || PlayerInfo[player][pDozvola6] == 1 || PlayerInfo[player][pDozvola7] == 1 || PlayerInfo[player][pDozvola8] == 1 || PlayerInfo[player][pDozvola9] == 1)
		    {
				PlayerInfo[player][pDozvola1] = 0;
				PlayerInfo[player][pDozvola2] = 0;
				PlayerInfo[player][pDozvola3] = 0;
				PlayerInfo[player][pDozvola4] = 0;
				PlayerInfo[player][pDozvola5] = 0;
				PlayerInfo[player][pDozvola6] = 0;
				PlayerInfo[player][pDozvola7] = 0;
				PlayerInfo[player][pDozvola8] = 0;
				PlayerInfo[player][pDozvola9] = 0;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje svih komandi !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste zabranili koriscenje svih komandi !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
			else if(PlayerInfo[player][pDozvola1] == 0 || PlayerInfo[player][pDozvola2] == 0 || PlayerInfo[player][pDozvola3] == 0 || PlayerInfo[player][pDozvola4] == 0 || PlayerInfo[player][pDozvola5] == 0 || PlayerInfo[player][pDozvola6] == 0 || PlayerInfo[player][pDozvola7] == 0 || PlayerInfo[player][pDozvola8] == 0 || PlayerInfo[player][pDozvola9] == 0)
		    {
				PlayerInfo[player][pDozvola1] = 1;
				PlayerInfo[player][pDozvola2] = 1;
				PlayerInfo[player][pDozvola3] = 1;
				PlayerInfo[player][pDozvola4] = 1;
				PlayerInfo[player][pDozvola5] = 1;
				PlayerInfo[player][pDozvola6] = 1;
				PlayerInfo[player][pDozvola7] = 1;
				PlayerInfo[player][pDozvola8] = 1;
				PlayerInfo[player][pDozvola9] = 1;
				format(string, 256, ""VARADERO"[INFO] "BELA"Vlasnik %s vam je dozvolio koriscenje svih komandi !", GetName(playerid));
				SendClientMessage(player, -1, string);
				format(string, 256, ""VARADERO"[INFO] "BELA"Igracu %s ste dozvolili koriscenje svih komandi !", GetName(player));
				SendClientMessage(playerid, -1, string);
			 	SavePlayer(player);
			}
		}
	}
	return(true);
}
///////////////////////////////////////////////////////
CMD:vipskin(playerid, params[])
{
if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ne mozete menjati skin dok je igrac u vozilu!");
if(PlayerInfo[playerid][pLider] != 0 || PlayerInfo[playerid][pClan] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Skinove igracima u org se ne mogu menjati!");
if(PlayerInfo[playerid][pVip] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pPromoter] >= 1)
SPD(playerid,345,DIALOG_STYLE_LIST, "VIPSKIN", "Bumbar :D\nMrsa\nMiki\nMilos\nMica\nNikola\nCelavi :D\nProsjak :D\nSeljak :D\nKokosar :D\nZoran\nPeder :D\nGradjevinac\nKlovn\nStreberko :D", "OK", "Izadji");
return 1;
}
CMD:dodacioff(playerid, params[])
{
    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
    {
		if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    }
    return 1;
}
//////////////////////////////////////////////////////
CMD:war(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,-1,"Samo Admini!");
	if(WarZapocet == 1) return SCM(playerid,-1,"War je vec pokrenut!");
	new id, tim;
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,"Morate biti na Administrator duznosti!");
	if(sscanf(params, "ud", id, tim)) return SendClientMessage(playerid,-1, ""VARADERO"[KORISCENJE] "BELA"/war [ID/Ime] [Tim]");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "Pogresan ID!");
    PlayerInfo[id][pWar] = tim;
	new string[128];
	format(string, sizeof(string), ""SIVA"[V:RPG] "SPLAVA"%s te je pozvao u tim $%d.", GetName(playerid), tim);
	SendClientMessage(id, -1, string);
	format(string, sizeof(string), ""SIVA"[V:RPG] "SPLAVA"Pozvali ste igraca %s u tim %d.", GetName(id), tim);
	SendClientMessage(playerid, -1, string);
	SavePlayer(id);
	return 1;
}
CMD:pokreniwar(playerid, params[])
{
	new vreme;
	if(PlayerInfo[playerid][pGM] >= 2 || PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(WarZapocet == 1) return SCM(playerid,-1,"War je vec pokrenut!");
		if(sscanf(params,"i",vreme)) return SendClientMessage(playerid, -1, "/pokreniwar [vreme (u minutima)]");
		wartd = SetTimer("warTD",1000, true);
		WarTrajanje = vreme*60;
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pWar] == 1)
			{
				SetPlayerVirtualWorld(i, 10);
				new rand = random(sizeof(RandomTim1));
				SetPlayerPos(i, RandomTim1[rand][0], RandomTim1[rand][1], RandomTim1[rand][2]);
				SetPlayerInterior(i, 10);
				Update_Skin(i, 285);
				TextDrawShowForPlayer(i, TDwar0);
				TextDrawShowForPlayer(i, TDwar1);
				TextDrawShowForPlayer(i, TDwar2);
				TextDrawShowForPlayer(i, TDwar3);
				TextDrawShowForPlayer(i, TDwar4);
				TextDrawShowForPlayer(i, TDwar5);
				TextDrawShowForPlayer(i, TDwar6);
				GivePlayerWeapon(i, 24, 200);
				GivePlayerWeapon(i, 25, 200);
				GivePlayerWeapon(i, 31, 500);
				GivePlayerWeapon(i, 34, 500);
				SetPlayerHealth(i, 99.0);
				SetPlayerArmour(i, 99.0);
			}
			else if(PlayerInfo[i][pWar] == 2)
			{
				SetPlayerVirtualWorld(i, 10);
				new rand2 = random(sizeof(RandomTim2));
				SetPlayerPos(i, RandomTim2[rand2][0], RandomTim2[rand2][1], RandomTim2[rand2][2]);
				SetPlayerInterior(i, 10);
				Update_Skin(i, 287);
				TextDrawShowForPlayer(i, TDwar0);
				TextDrawShowForPlayer(i, TDwar1);
				TextDrawShowForPlayer(i, TDwar2);
				TextDrawShowForPlayer(i, TDwar3);
				TextDrawShowForPlayer(i, TDwar4);
				TextDrawShowForPlayer(i, TDwar5);
				TextDrawShowForPlayer(i, TDwar6);
				GivePlayerWeapon(i, 24, 200);
				GivePlayerWeapon(i, 25, 200);
				GivePlayerWeapon(i, 31, 500);
				GivePlayerWeapon(i, 34, 500);
				SetPlayerHealth(i, 99.0);
				SetPlayerArmour(i, 99.0);
			}
		}
		new string[64];
		format(string,sizeof(string),"[[ V:RPG ] WAR] "SPLAVA"Administrator "BELA"%s "SPLAVA"je pokrenuo war!", GetName(playerid));
		SCMTA(-1,string);
		WarZapocet = 1;
		startovanwar = 0;
	}
	return 1;
}
CMD:zaustaviwar(playerid, params[])
{

	if(PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pWar] > 0)
			{
				new Float: oldpos[4], oldint;
				TextDrawHideForPlayer(i, TDwar0);
				TextDrawHideForPlayer(i, TDwar1);
				TextDrawHideForPlayer(i, TDwar2);
				TextDrawHideForPlayer(i, TDwar3);
				TextDrawHideForPlayer(i, TDwar4);
				TextDrawHideForPlayer(i, TDwar5);
				TextDrawHideForPlayer(i, TDwar6);
				oldpos[0] = GetPVarFloat(i, PVAR_TAG"oldX");
				oldpos[1] = GetPVarFloat(i, PVAR_TAG"oldY");
				oldpos[2] = GetPVarFloat(i, PVAR_TAG"oldZ");
				oldpos[3] = GetPVarFloat(i, PVAR_TAG"oldR");
				oldint = GetPVarInt(i, PVAR_TAG"oldInt");
				SetPlayerPos(i, oldpos[0], oldpos[1], oldpos[2]);
				SetPlayerFacingAngle(i, oldpos[3]);
				SetPlayerInterior(i, oldint);
				DeletePVar(i, PVAR_TAG"oldX");
				DeletePVar(i, PVAR_TAG"oldY");
				DeletePVar(i, PVAR_TAG"oldZ");
				DeletePVar(i, PVAR_TAG"oldR");
				DeletePVar(i, PVAR_TAG"oldInt");
				ResetPlayerWeapons(i);
				SetPlayerVirtualWorld(i, 0);
				Update_Skin(i, PlayerInfo[i][pSkin]);
				PlayerInfo[i][pWar] = 0;
				WarZapocet = 0;
				KillTimer(wartd);
			}
		}
		new string[128];
		format(string,sizeof(string),""BELA"[[ V:RPG ] WAR] "SPLAVA"War je zavrsen rezultatom "BELA"| Tim 1 : "SPLAVA"%d "BELA"|| Tim 2 : "SPLAVA"%d "BELA"|",	WarBrojanje1,WarBrojanje2);
		SCMTA(-1,string);
		WarBrojanje1 = 0;
		WarBrojanje2 = 0;
		WarTrajanje = -1;
		WarZapocet = 0;
	}
	return 1;
}
CMD:startwar(playerid, params[])
{

	if(PlayerInfo[playerid][pGM] >= 2 || PlayerInfo[playerid][pAdmin] >= 4)
	{
		SendClientMessageToAll(GREEN,"WAR! WAR! WAR!");
		SendClientMessageToAll(GREEN,"WAR pokrenut! Da se pridruzite kucajte \"/joinwar\"");
		startovanwar = 1;
    }
	return 1;
}
CMD:joinwar(playerid, params[])
{

	if(startovanwar != 1) return 1;
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete koristiti ovu komandu jer ste zatvoreni!");
	if(GetPVarInt(playerid,"EditorMode") == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Zasto bi koristio ovu komanndu kad koristis namestaj sistem, gde ti je MOZAK?!");
	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Moras biti level 7 da bi mogao koristiti ovu komandu!");
	SPD(playerid, 500, DIALOG_STYLE_LIST, ""ZELENA"WAR! "BELA"Izaberi tim", "Tim 1\nTim 2", "Izaberi", "Odustani");
	return 1;
}
fDialog(500)
{
	if(!response) return 1;
	PlayerInfo[playerid][pWar] = listitem+1;
	new string[96];
	format(string, charsmax(string), "Usao si u TIM %i", listitem+1); //conver
	SCM(playerid, -1, string);
	new Float: oldpos[4], oldint;
	GetPlayerPos(playerid, oldpos[0], oldpos[1], oldpos[2]);
	GetPlayerFacingAngle(playerid, oldpos[3]);
	oldint = GetPlayerInterior(playerid);
	SetPVarFloat(playerid, PVAR_TAG"oldX", oldpos[0]);
	SetPVarFloat(playerid, PVAR_TAG"oldY", oldpos[1]);
	SetPVarFloat(playerid, PVAR_TAG"oldZ", oldpos[2]);
	SetPVarFloat(playerid, PVAR_TAG"oldR", oldpos[3]);
	SetPVarInt(playerid, PVAR_TAG"oldInt", oldint);
	return 1;
}
///////////////////////////////////////////////////////
CMD:vulkanizer(playerid, params[])
{
    if(!IsPlayerInRangeOfPoint(playerid, 3,1816.2792,-1428.8622,13.6016)) {
        return SCM(playerid, -1,"Niste kod Vulkanizera!");
    }
    if(!IsPlayerInAnyVehicle(playerid)) {
        return SCM(playerid, -1," Niste u vozilu! ");
    }

    if(GetPlayerState(playerid) != 2) {
        return SCM(playerid, -1," Niste vozac! ");
    }

    if(SafeGetPlayerMoney(playerid) < 200) {
        return SCM(playerid, -1," Nemate dovoljno novca. Potrebno 200$");
    }

    new vozilo = GetPlayerVehicleID(playerid);
    SetVehiclePos(vozilo, 1732.8884,-1749.2290,13.3911);
    SetVehicleZAngle(vozilo, 0);
    TogglePlayerControllable(playerid, 0);
    SCM(playerid, -1,"Promena guma u toku, molimo sacekajte.");
    SetPlayerCameraPos(playerid, 1737, -1755.1999511719, 15.5);
    SetPlayerCameraLookAt(playerid, 1733.0999755859, -1749.3000488281, 13.1000003814);
    SetTimerEx("Vulkanizer",13000,0,"ii",playerid, 1);
	return 1;
}
///////////////////////////////////////////////////////
CMD:baci(playerid, params[])
{
	new Float:hp;
    if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradis!");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Morate biti van vozila !");
    if(PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradis!");
    if(PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradis!");
    if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ti si hitman covece!");
	if(GetTimeEx() < bacitimer[playerid]) return SCM(playerid, -1, ""SIVA"Ovu komandu mozete koristiti svakih 120 sekundi!");
	GetPlayerHealth(playerid, hp);
	if(hp < 10) return SCM(playerid, -1, ""SIVA"Ne mozete koristiti ovu komandu, ranjeni ste!");
    new sendername[MAX_PLAYER_NAME];
    new GunID = GetPlayerWeapon(playerid);
    new GunAmmo = GetPlayerAmmo(playerid);
    GetPlayerName(playerid, sendername, sizeof(sendername));
    new Float:Xx,Float:Yy,Float:Zz;
    GetPlayerPos(playerid, Xx, Yy, Zz);
    SetPlayerAmmo(playerid, GunID, 0);
    DropGun(playerid, GunID,GunAmmo,Xx,Yy,Zz,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
    new string[128];
    format(string, sizeof(string), "* %s je bacio oruzje na pod.", sendername);
    e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	bacitimer[playerid] = GetTimeEx() + 120;
    return 1;
}
///////////////////////////////////////////////////////
CMD:podigni(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Morate biti van vozila !");
    if(PlayerInfo[playerid][pDisarm] == 1 && PlayerInfo[playerid][pDisarmVreme] > 0) return SCM(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Imas Disarm ");
    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Moras biti level 7 da bi koristio ovu komandu!");
    for(new i = 0; i < sizeof(DropInfo); i++)
    {
        if (IsPlayerInRangeOfPoint(playerid, 2.0,DropInfo[i][DropGunPosX],DropInfo[i][DropGunPosY],DropInfo[i][DropGunPosZ]))
        {
            if(GetPlayerVirtualWorld(playerid) == DropInfo[i][DropGunVWorld] && GetPlayerInterior(playerid) == DropInfo[i][DropGunInterior])
            {
                new sendername[MAX_PLAYER_NAME];
                GetPlayerName(playerid, sendername, sizeof(sendername));
                DestroyDynamicObject(DropObject[i]);
                GivePlayerWeapon(playerid,DropInfo[i][DropGunAmmount][0],DropInfo[i][DropGunAmmount][1]);
                DropInfo[i][DropGunPosX] = 0.0;
                DropInfo[i][DropGunPosY] = 0.0;
                DropInfo[i][DropGunPosZ] = 0.0;
                DropInfo[i][DropGunAmmount][0] = 0;
                DropInfo[i][DropGunAmmount][1] = 0;
				new string[128];
                format(string, sizeof(string), "* %s je uzeo oruzje s poda.", sendername);
                e_RadiusMSG(30.0, playerid, HEX_PROX, string);
                return 1;
            }
        }
    }
    return 1;
}

///////////////////////////////////////////////////////
CMD:lotto(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pLottoNr] > 0)
		{
			SendClientMessage(playerid, -1, ""SIVA"Vec imate lotto listic !");
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 2101.2185,-1359.8767,23.9868))
		{
			if(PlayerInfo[playerid][pNovacDzep] < 5)
			{
				SendClientMessage(playerid, -1, ""SIVA"Treba vam $5 za Lotto listic !");
				return 1;
			}
			if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "   Ne mozete to, u vozilu ste !");
			SPD(playerid, 10010, DIALOG_STYLE_INPUT, "Lotto", "1)LOTTO\n1)Upisite zeljeni broj:\n1)BIRAJTE OD 1 DO 100", "OK", "EXIT");
		}
		else
		{
		SCM(playerid, -1, "   Niste kod lotto prodavnice!");
		}
	}
	return 1;
}
CMD:daj2kljuca(playerid, params[])
{
	//#pragma unused help
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"Samo Admin Level 6");
	new id,string[256];
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator Duznosti!");
    if(sscanf(params,"u",id)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/daj2kljuca [ID]");
    if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Pogresan ID!");
    if(PlayerInfo[id][pDvaV] == 1)
    {
		PlayerInfo[id][pDvaV] = 0;
		format(string,sizeof(string),""CRVENA"A | "BELA"Igrac "SRWBOJA"%s "BELA"ne moze da kupuje 2 auta", GetName(id)); //conver
        SCM(playerid, -1, string);
		format(string,sizeof(string),""CRVENA"A | "BELA"Administrator "SRWBOJA"%s "BELA"je zabranio igracu "SRWBOJA" %s da kupuje 2 auta",GetName(playerid),GetName(id)); //conver
        SendAdminMessage(-1, string);
	}
	else if(PlayerInfo[id][pDvaV] != 1)
	{
		PlayerInfo[id][pDvaV] = 1;
		format(string,sizeof(string),""CRVENA"A | "BELA"Igrac "SRWBOJA"%s "BELA"moze da kupuje 2 vozila ", GetName(id)); //conver
        SCM(playerid, -1, string);
		format(string,sizeof(string),""CRVENA"A | "BELA"Administrator "SRWBOJA"%s "BELA"je dozvolio igracu "SRWBOJA" %s da kupuje 2 auta",GetName(playerid),GetName(id)); //conver
	 	SendAdminMessage(-1, string);
 	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:ban(playerid, params[])
{
	//#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Admini (Admin Level 1+)!");
	if(PlayerInfo[playerid][pTestAdmin] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vi ste test Administrator ne mozete ovu cmd da koristite!");
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	new id, razlog[40],string[128],banfile[80];
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    if(sscanf(params,"us[40]",id,razlog)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/ban [ID] [Razlog]");
    if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Pogresan ID!");
    if(PlayerInfo[id][pAdmin] >= 6 || PlayerInfo[id][pAdmin] >= 5) return SCM(playerid, -1, "[V:RPG] "SIVA"Ne mozete banovati tog igraca!");
    if(PlayerInfo[id][pAdmin] >= 5) return SCM(playerid, -1, "[V:RPG] "SIVA"Ne mozete banovati tog igraca!");
    format(banfile, sizeof(banfile), BAN_FOLDER, GetName(id));
	if(fexist(banfile)) return SCM(playerid,-1, "[V:RPG] | "SRWBOJA"Igrac je vec banovan!");
	format(string,sizeof(string),""ORANGE2"#!: Banovali ste igraca %s | Razlog: %s", GetName(id), razlog);
    SCM(playerid,-1, string);
    format(string,sizeof(string),""ORANGE2"#!: Banovani ste od strane Admina | Razlog: %s",razlog);
	SCM(id,-1,string);
    format(string,sizeof(string),""ORANGE2"#AdmWarn: Administrator %s je banovao igraca %s | Razlog: %s", GetName(playerid), GetName(id),razlog);
	AdminGameMaster(-1,string);
	format(string,sizeof(string),""ORANGE2"#BAN: Igrac %s je banovan sa servera | Razlog: %s", GetName(id), razlog);
	SCMTA(-1,string);
	PlayerInfo[playerid][pBrojBanned]++;
    new File:ban = fopen(banfile, io_write);
    fwrite(ban, "|---Banovan---|\n");
    new var[64];
	format(var,64,"| Administrator = %s |\n", GetName(playerid));
    fwrite(ban,var);
    new var1[128];
	format(var1,128,"| Razlog = %s\n", razlog);
    fwrite(ban,var1);
    fclose(ban);
    g_freeze[id] = SetTimerEx("KonektKick", 1000, 0, "d", id);
	return 1;
}
/////////////////////////////////////
CMD:bandjubre(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (Admin Level 4+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new ip[50],string[128];
    if(sscanf(params, "s[50]",ip)) return SCM(playerid,-1, ""SIVA"[V:RPG] "ZELENA"/bandjubre [Igracev IP]");
	format(string,sizeof(string),"banip %s",ip);
	SendRconCommand(string);
	SendRconCommand("reloadbans");
	PlayerInfo[playerid][pBrojBanned]++;
	format(string,sizeof(string),""ZELENA"Administrator %s je banovao igraca sa IP-a: "BELA"%s",GetName(playerid),ip);
	AdminGameMaster(-1,string);
	return 1;
}
/////////////////////////////////////
CMD:banip(playerid, params[])
{
	//#pragma unused help
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Admini (Admin Level 2+)!");
	new id, razlog[40],string[128],banfile[80];
	if(PlayerInfo[playerid][pTestAdmin] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vi ste test Administrator ne mozete ovu cmd da koristite!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    if(sscanf(params,"us[40]",id,razlog)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/ban [ID] [Razlog]");
    if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Pogresan ID!");
    if(PlayerInfo[id][pAdmin] >= 5) return SCM(playerid, -1, "[V:RPG] "SIVA"Ne mozete banovati tog igraca!");
    format(banfile, sizeof(banfile), BAN_FOLDER, GetName(id));
	if(fexist(banfile)) return SCM(playerid,-1, "[V:RPG] | "SRWBOJA"Igrac je vec banovan!");
	format(string,sizeof(string),""ORANGE2"#!: Banovali ste igraca %s | Razlog: %s", GetName(id), razlog);
    SCM(playerid,-1, string);
    format(string,sizeof(string),""ORANGE2"#!: Banovani ste od strane Admina | Razlog: %s",razlog);
	SCM(id,-1,string);
    format(string,sizeof(string),""ORANGE2"#AdmWarn: Administrator %s je trajno banovao igraca %s | Razlog: %s",GetName(playerid),GetName(id),razlog);
	AdminGameMaster(-1,string);
	format(string,sizeof(string),""ORANGE2"#BANIP: Igrac %s je trajno banovan sa servera | Razlog: %s", GetName(id), razlog);
	SCMTA(-1,string);
    new File:ban = fopen(banfile, io_write);
    fwrite(ban, "|---Banovan---|\n");
    new var[64];
	format(var,64,"| Administrator = %s |\n", GetName(playerid));
    fwrite(ban,var);
    new var1[128];
	format(var1,128,"| Razlog = %s\n", razlog);
    fwrite(ban,var1);
    fclose(ban);
    Ban(id);
    PlayerInfo[playerid][pBrojBanned]++;
    g_freeze[id] = SetTimerEx("KonektKick", 1000, 0, "d", id);
	return 1;
}
////////////////////////////////////////////////////////
CMD:unbanip(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (Admin Level 4+)!");
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    if(PlayerInfo[playerid][pTestAdmin] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vi ste test Administrator ne mozete ovu cmd da koristite!");
	new ip[50],string[128];
    if(sscanf(params, "s[128]",ip)) return SCM(playerid,-1, ""SIVA"[V:RPG] "ZELENA"/unbanip [Igracev IP]");
	format(string,sizeof(string),"unbanip %s",ip);
	SendRconCommand(string);
	SendRconCommand("reloadbans");
	format(string,sizeof(string),""ZELENA"Administrator %s je unbanovao IP: "BELA"%s",GetName(playerid),ip);
	AdminGameMaster(-1,string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:offban(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Samo Head-Administrator!");
	new imeigraca[40],razlog[40],string[128],banfile[80];
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(sscanf(params,"s[40]s[40]",imeigraca,razlog)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/offban [Ime_Prezime] [Razlog]");
    format(banfile, sizeof(banfile), BAN_FOLDER, imeigraca);
	if(fexist(banfile)) return SCM(playerid,-1, "[V:RPG] "SRWBOJA"Igrac je vec banovan!");
	format(string,sizeof(string),""ORANGE2"#OFFBAN: Vlasnik %s je OFF banovao igraca %s | Razlog: %s",GetName(playerid),imeigraca,razlog);
	AdminGameMaster(-1,string);
    new File:ban = fopen(banfile, io_write);
    fwrite(ban, "|---Off Banovan---|\n");
    new var[64];
	format(var,64,"| Administrator = %s |\n", GetName(playerid));
    fwrite(ban,var);
    new var1[128];
	format(var1,128,"| Razlog = %s\n", razlog);
    fwrite(ban,var1);
    fclose(ban);
	return 1;
}
///////////////////////////////////////////////////////
CMD:unban(playerid, params[])
{
	//#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (Admin Level 2+)!");
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pTestAdmin] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vi ste test Administrator ne mozete ovu cmd da koristite!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new imeigraca[24],str[128],banfile[64];
	if(sscanf(params,"s[40]",imeigraca)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/unban [Ime_Prezime]");
	format(banfile,64,BAN_FOLDER,imeigraca);
	if(!fexist(banfile)) return SCM(playerid,-1, "[V:RPG] "SRWBOJA"Taj igrac nije banovan (Nema ga u fajlu)!");
    format(str,sizeof(str),""ORANGE2"#AdmWarn: Igrac %s je unbanovan od strane Admina %s.",imeigraca,GetName(playerid));
    AdminGameMaster(-1,str);
	format(str,sizeof(str),""ORANGE2"#!: Unbanovali ste igraca %s.",imeigraca);
	SCM(playerid,-1,str);
	fremove(banfile);
	return 1;
}
///////////////////////////////////////////////////////
CMD:sacuvajacounte(playerid, params[])
{
	//#pragma unused help
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
		foreach(new i : Player)
		{
			if(UlogovanProvera[i] == 1)
			{
				SavePlayer(i);
			}
		}
		SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Svi acounti su uspesno sacuvani!");
		print("- Svi korisnicki racuni su uspesno sacuvani.");
	}
	return 1;
}
/////////////////////////////////////////////////////////
CMD:duplirespekti(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (Admin Level 5+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Morate biti na Administrator duznosti!");
	if(DupliRespekti == 0)
	{
	DupliRespekti = 1;
	new string[256];
	format(string, sizeof(string), ""SRWBOJA"[V:RPG] "BELA"Administrator %s je ukljucio duple respekte!",GetName(playerid));
	SCMTA(-1, string);
	SendRconCommand("hostname (V:RPG): Dobrodosli | (( x3 Respekta < 20 Level ))");
	}
	else if(DupliRespekti == 1)
	{
	DupliRespekti = 0;
	new string[256];
	format(string, sizeof(string), ""SRWBOJA"[V:RPG] "BELA"Administrator %s je ugasio duple respekte!!",GetName(playerid));
	SCMTA(-1, string);
	SendRconCommand("hostname (V:RPG): Dobrodosli | www.varadero-samp.com");
	}
	return 1;
}
/////////////////////////////////////////////////////////
CMD:donirajbanderi(playerid, params[])
{
    new kolicina;
    if(sscanf(params, "d", kolicina)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"/donirajbanderi [Kolicina]");
    if(PlayerInfo[playerid][pNovacDzep] < kolicina) return SCM(playerid,-1, "[V:RPG] "SRWBOJA"Nemas toliko novca!");
    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti lvl 7+!");
    if(kolicina < 1000000 || kolicina > 5000000) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 1000000 i iznad 5000000 odjednom!");
	g_NovacMinus(playerid, kolicina);
	new string[512];
    format(string, 512, ""SRWBOJA"[BANDERA] "BELA"Gradjanin "SRWBOJA"%s "BELA"je donirao "SRWBOJA"$%d "BELA"novca banderi.", GetName(playerid), kolicina);
    SCMTA(-1, string);
	{
        foreach(new i : Player)
        {
            if(IsPlayerInRangeOfPoint(i, 3.0, 1134.5845,-935.8270,42.8968))
            {
				g_NovacPlus(i, 3000);
            }
        }
	}
	return 1;
}
//////////////////////////////////////////////////////////////
CMD:ateleport(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pUPUBG] == 1) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u PUBG-u !");
    if(PlayerInfo[playerid][pRadi] == 1) return SCM(playerid, -1, "Radite posao, ne mozete koristiti ovu komandu !");
    if(Zavezan[playerid] == 1) return SCM(playerid, -1, "Zavezani ste, ne mozete koristiti ovu komandu !");
	if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer imate Wanted Level !");
    if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste zatvoreni !");
	if(PlayerInfo[playerid][pWar] >= 1) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u WAR-u !"); SetPVarInt(playerid, "WarpHack", 0);
    SPD(playerid, 138, DIALOG_STYLE_LIST, "TELEPORT", "Organizacije\nLos Santos Lokacije\nLas Venturas & San Fierro\nPoslovi", "Odabir", "Izlaz");
    SetPVarInt(playerid, "WarpHack", 0);
	return 1;
}
CMD:tp(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pUPUBG] == 1) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u PUBG-u !");
    if(PlayerInfo[playerid][pRadi] == 1) return SCM(playerid, -1, "Radite posao, ne mozete koristiti ovu komandu !");
    if(Zavezan[playerid] == 1) return SCM(playerid, -1, "Zavezani ste, ne mozete koristiti ovu komandu !");
	if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer imate Wanted Level !");
    if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste zatvoreni !");
	if(PlayerInfo[playerid][pWar] >= 1) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u WAR-u !"); SetPVarInt(playerid, "WarpHack", 0);
    SPD(playerid, 138, DIALOG_STYLE_LIST, "TELEPORT", "Organizacije\nLos Santos Lokacije\nLas Venturas & San Fierro\nPoslovi", "Odabir", "Izlaz");
    SetPVarInt(playerid, "WarpHack", 0);
	return 1;
}
CMD:zakaci(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
  		if(PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pClan] == 8)
    	{
     		if(ParkingAuta(GetPlayerVehicleID(playerid)))
        	{
         		if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
           		{
             		if(GetPlayerState(playerid)==2)
               		{
	                 	new Float:pX,Float:pY,Float:pZ;
	                  	GetPlayerPos(playerid,pX,pY,pZ);
	                   	new Float:vX,Float:vY,Float:vZ;
	                    new Found=0;
	                    new vid=0;
	                    while((vid<MAX_VOZILA)&&(!Found))
	                    {
                     		vid++;
                           	GetVehiclePos(vid,vX,vY,vZ);
                           	if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
                        	{
                         		Found=1;
                               	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
                                {
                                	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
                                }
                                else
                           		{
                               		AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
                           		}
                         	}
                   		}
                     	if(!Found)
                      	{
                       		SendClientMessage(playerid,0xFFFF00AA,"[V:RPG] Nema automobila u blizini.");
                        }
                  	}
                  	else
                  	{
                   		SendClientMessage(playerid, COLOR_GRAD2, "[V:RPG] Morate biti na mjestu vozaca.");
                     	return 1;
                  	}
               	}
               	else
               	{
                	SendClientMessage(playerid, COLOR_GRAD2, "[V:RPG] Morate biti u pauku da bi mogli ovo koristit");
                  	return 1;
               	}
          	}
            else
           	{
            	SendClientMessage(playerid, COLOR_GRAD2, "[V:RPG] Morate biti u vozilu da biste koristili ovu komandu.");
             	return 1;
            }
   		}
     	else
      	{
       		SendClientMessage(playerid,COLOR_GRAD2,"[V:RPG] Morate biti clan parking servisa da bi koristili ovu komandu.");
            return 1;
       	}
	}
 	return 1;
}
CMD:otkaci(playerid, params[])
{
	if(IsPlayerConnected(playerid))
 	{
  		if(PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pClan] == 8)
    	{
     		if(ParkingAuta(GetPlayerVehicleID(playerid)))
        	{
         		if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
           		{
             		if(GetPlayerState(playerid)==2)
               		{
	                 	new Float:pX,Float:pY,Float:pZ;
	                  	GetPlayerPos(playerid,pX,pY,pZ);
	                   	new Float:vX,Float:vY,Float:vZ;
	                    new Found=0;
	                    new vid=0;
	                    while((vid<MAX_VOZILA)&&(!Found))
	                    {
                     		vid++;
                           	GetVehiclePos(vid,vX,vY,vZ);
                           	if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
                        	{
                         		Found=1;
                               	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
                                {
                                	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
                                }
                         	}
                   		}
                     	if(!Found)
                      	{
                       		SendClientMessage(playerid,0xFFFF00AA,"[V:RPG] Nema automobila u blizini.");
                        }
                  	}
                  	else
                  	{
                   		SendClientMessage(playerid, COLOR_GRAD2, "[V:RPG] Morate biti na mjestu vozaca.");
                     	return 1;
                  	}
               	}
               	else
               	{
                	SendClientMessage(playerid, COLOR_GRAD2, "[V:RPG] Morate biti u pauku da bi mogli ovo koristit");
                  	return 1;
               	}
          	}
            else
           	{
            	SendClientMessage(playerid, COLOR_GRAD2, "[V:RPG] Morate biti u vozilu da biste koristili ovu komandu.");
             	return 1;
            }
   		}
     	else
      	{
       		SendClientMessage(playerid,COLOR_GRAD2,"[V:RPG] Morate biti clan parking servisa da bi koristili ovu komandu.");
            return 1;
       	}
	}
 	return 1;
}
/////////////////////////////////////////////////////////////
CMD:odg(playerid, params[])
{
    //#pragma unused help
	new id, poruka[128];
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 2) return SCM(playerid, -1, ""ZELENA"(Varadero) "SIVA"Samo Admini & GameMaster (AL 1+ & GM 2+)");
	if(sscanf(params, "us[128]", id, poruka)) return SCM(playerid,-1,""SRWBOJA""VARADERO"[V:RPG] "BELA"/odg [ID/Ime] [odgovor]");
	new string[156];
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, ""ZELENA"(Varadero) "SIVA"Pogresan ID!");
	format(string,sizeof string, ""SRWBOJA"Vas odgovor %s-u [ID:%d]: "BELA"%s", GetName(id) , id, poruka);
	SendClientMessage(playerid, -1,string);
	new status[20];
	if(PlayerInfo[playerid][pAdmin] >= 1) format(status, sizeof(status), "Administrator");
	if(PlayerInfo[playerid][pGM] >= 1) format(status, sizeof(status), "GM");
	format(string,sizeof string ,""SRWBOJA"%s [ID:%d] vam je odgovorio: "BELA"%s",GetName(playerid),playerid,poruka);
	SendClientMessage(id, -1,string);
	format(string,sizeof string ,"{FF0000}[V:RPG] "SIVA"%s {FF0000}%s je "SIVA"odgovorio igracu {FF0000}%s.",status,GetName(playerid),GetName(id));
	AdminGameMaster(-1,string);
	new stringar[156];
	format(stringar,sizeof stringar ,""SRWBOJA"[!/odg] %s --> %s "SIVA"[TEXT: %s]",GetName(playerid),GetName(id),poruka);
	AdminGameMaster(-1,stringar);
	return 1;
}
////////////////////////////////////////////////////////////
CMD:kreirajfirmu(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    new vrsta,cena,lvl, firmaid; 
    
    if(sscanf(params, "iii", vrsta, lvl , cena))
	{
    	SCM(playerid, -1, "[V:RPG] Pomoc | "SPLAVA"/kreirajfirmu [vrsta] [level] [cena]");
    	SCM(playerid, -1, "Vrste Firmi | "SPLAVA"0: Market | 1: Market | 2: Burg");
        SCM(playerid, -1, "Vrste Firmi | "SPLAVA"3: Cluckin Bell | 4: Pizza | 5: Pig Pen");
        SCM(playerid, -1, "Vrste Firmi | "SPLAVA"6: Bar | 7: Gym | 8: Sex Shop | 9: Binco");
        SCM(playerid, -1, "Vrste Firmi | "SPLAVA"10: Gun Shop | 11: Disco | 12: Restoran");
        SCM(playerid, -1, "Vrste Firmi | "SPLAVA"13: Zip | 14: Victim | 15: Suburban");
        SCM(playerid, -1, "Vrste Firmi | "SPLAVA"16: Night Club | 17: Elite Restoran | 18: Gun Shop 2");
        SCM(playerid, -1, "Vrste Firmi | "SPLAVA"19: Barber | 20: Kladionica | 21: S biznis");
    	return 1;
	}
	if(firmaid >= MAX_FIRMI) return SCM(playerid,-1, ""SRWBOJA"[ Varadero ] "SIVA"Dostigli ste maksimalan broj firmi, laku noc i dobro vece!");
	
	new q[128];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `firme` SET `Vrsta` = '%d', `Level` = '%d', `Cena` = '%d'",	vrsta,lvl,cena);		
	mysql_tquery(SQL, q, "_sqlInsertFirma", "ddddd", firmaid, playerid, vrsta, lvl, cena);
	
	return 1;
}

function: _sqlInsertFirma(firmaid, playerid, vrsta, lvl, cena)
{
	firmaid = cache_insert_id();
	// = cache_insert_id();
	//firmaid = FirmaInfo[ firmaid ][ fSQLID ];
	new string[500];
	GetPlayerPos(playerid, X,Y,Z);
	if(vrsta == 0) // MARKET 1
	{
        FirmaInfo[firmaid][fIzlazX] = -25.132600; FirmaInfo[firmaid][fIzlazY] = -139.067001;
    	FirmaInfo[firmaid][fIzlazZ] = 1003.546875; FirmaInfo[firmaid][fInt] = 16;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_MARKET;
    	strmid(FirmaInfo[firmaid][fNaziv],"Market 24/7",0,strlen("Market 24/7"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 1) // MARKET 2
	{
        FirmaInfo[firmaid][fIzlazX] = -27.312299; FirmaInfo[firmaid][fIzlazY] = -29.277599;
    	FirmaInfo[firmaid][fIzlazZ] = 1003.557250; FirmaInfo[firmaid][fInt] = 4;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_MARKET;
    	strmid(FirmaInfo[firmaid][fNaziv],"Market 24/7",0,strlen("Market 24/7"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 2) // BURG
	{
        FirmaInfo[firmaid][fIzlazX] = -27.312299; FirmaInfo[firmaid][fIzlazY] = -72.6414;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.5078; FirmaInfo[firmaid][fInt] = 10;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_BURG;
    	strmid(FirmaInfo[firmaid][fNaziv],"Burg",0,strlen("Burg"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
   	}
	else if(vrsta == 3) // Cluckin
	{
        FirmaInfo[firmaid][fIzlazX] = 366.0316; FirmaInfo[firmaid][fIzlazY] = -9.169898;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.851623; FirmaInfo[firmaid][fInt] = 9;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_CLUCKIN;
    	strmid(FirmaInfo[firmaid][fNaziv],"Cluckin Bell",0,strlen("Cluckin Bell"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 4) // Pizza
	{
        FirmaInfo[firmaid][fIzlazX] = 372.411712; FirmaInfo[firmaid][fIzlazY] = -130.457702;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.492187; FirmaInfo[firmaid][fInt] = 5;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_PIZZA;
    	strmid(FirmaInfo[firmaid][fNaziv],"Pizza",0,strlen("Pizza"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 5) // Pig Pen
	{
        FirmaInfo[firmaid][fIzlazX] = 1204.846191; FirmaInfo[firmaid][fIzlazY] = -13.852100;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.921875; FirmaInfo[firmaid][fInt] = 2;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_PIGPEN;
    	strmid(FirmaInfo[firmaid][fNaziv],"Pig Pen",0,strlen("Pig Pen"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 6) // Bar
	{
        FirmaInfo[firmaid][fIzlazX] = 501.870788; FirmaInfo[firmaid][fIzlazY] = -67.582000;
    	FirmaInfo[firmaid][fIzlazZ] = 998.757812; FirmaInfo[firmaid][fInt] = 11;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_BAR;
    	strmid(FirmaInfo[firmaid][fNaziv],"Bar",0,strlen("Bar"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 7) // Gym
	{
        FirmaInfo[firmaid][fIzlazX] = 772.359375; FirmaInfo[firmaid][fIzlazY] = -5.515697;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.728576; FirmaInfo[firmaid][fInt] = 5;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_GYM;
    	strmid(FirmaInfo[firmaid][fNaziv],"Gym",0,strlen("Gym"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 8) // Sex Shop
	{
        FirmaInfo[firmaid][fIzlazX] = -100.295700; FirmaInfo[firmaid][fIzlazY] = -24.654399;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.718811; FirmaInfo[firmaid][fInt] = 3;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_SEXSHOP;
    	strmid(FirmaInfo[firmaid][fNaziv],"Sex Shop",0,strlen("Sex Shop"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 9) // Binco
	{
        FirmaInfo[firmaid][fIzlazX] = 207.766204; FirmaInfo[firmaid][fIzlazY] = -111.266296;
    	FirmaInfo[firmaid][fIzlazZ] = 1005.132812; FirmaInfo[firmaid][fInt] = 15;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_BINCO;
    	strmid(FirmaInfo[firmaid][fNaziv],"Binco",0,strlen("Binco"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
    else if(vrsta == 10) // Gun Shop
	{
        FirmaInfo[firmaid][fIzlazX] = 315.762786; FirmaInfo[firmaid][fIzlazY] = -143.661193;
    	FirmaInfo[firmaid][fIzlazZ] = 999.601623; FirmaInfo[firmaid][fInt] = 7;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_GUNSHOP;
    	strmid(FirmaInfo[firmaid][fNaziv],"Gun Shop",0,strlen("Gun Shop"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 11) // Disco
	{
        FirmaInfo[firmaid][fIzlazX] = 493.439300; FirmaInfo[firmaid][fIzlazY] = -24.916900;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.671875; FirmaInfo[firmaid][fInt] = 17;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_DISCO;
    	strmid(FirmaInfo[firmaid][fNaziv],"Disco",0,strlen("Disco"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 12) // Restoran
	{
        FirmaInfo[firmaid][fIzlazX] = 460.265411; FirmaInfo[firmaid][fIzlazY] = -88.611503;
    	FirmaInfo[firmaid][fIzlazZ] = 999.554687; FirmaInfo[firmaid][fInt] = 4;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_RESTORAN;
    	strmid(FirmaInfo[firmaid][fNaziv],"Restoran",0,strlen("Restoran"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 13) // ZIP
	{
        FirmaInfo[firmaid][fIzlazX] = 161.410293; FirmaInfo[firmaid][fIzlazY] = -96.687202;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.804687; FirmaInfo[firmaid][fInt] = 18;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_ZIP;
    	strmid(FirmaInfo[firmaid][fNaziv],"Zip",0,strlen("Zip"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 14) // Victim
	{
        FirmaInfo[firmaid][fIzlazX] = 227.342803; FirmaInfo[firmaid][fIzlazY] = -8.243800;
    	FirmaInfo[firmaid][fIzlazZ] = 1002.210876; FirmaInfo[firmaid][fInt] = 5;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_VICTIM;
    	strmid(FirmaInfo[firmaid][fNaziv],"Victim",0,strlen("Victim"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 15) // Suburban
	{
        FirmaInfo[firmaid][fIzlazX] = 203.895294; FirmaInfo[firmaid][fIzlazY] = -50.656700;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.804687; FirmaInfo[firmaid][fInt] = 1;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_SUBURBAN;
    	strmid(FirmaInfo[firmaid][fNaziv],"Suburban",0,strlen("Suburban"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 16) // night club
	{
        FirmaInfo[firmaid][fIzlazX] = -2636.5781; FirmaInfo[firmaid][fIzlazY] = 1402.7936;
    	FirmaInfo[firmaid][fIzlazZ] = 906.4609; FirmaInfo[firmaid][fInt] = 3;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_DISCO;
    	strmid(FirmaInfo[firmaid][fNaziv],"Night Club",0,strlen("Night Club"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 17) // Elite Restoran
	{
        FirmaInfo[firmaid][fIzlazX] = -794.9584; FirmaInfo[firmaid][fIzlazY] = 490.1105;
    	FirmaInfo[firmaid][fIzlazZ] = 1376.1953; FirmaInfo[firmaid][fInt] = 1;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_RESTORAN;
    	strmid(FirmaInfo[firmaid][fNaziv],"Elite Restoran",0,strlen("Elite Restoran"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
    else if(vrsta == 18) // Gun Shop 2
	{
        FirmaInfo[firmaid][fIzlazX] = 316.524993; FirmaInfo[firmaid][fIzlazY] = -167.706985;
    	FirmaInfo[firmaid][fIzlazZ] = 999.593750; FirmaInfo[firmaid][fInt] = 6;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_GUNSHOP;
    	strmid(FirmaInfo[firmaid][fNaziv],"Gun Shop",0,strlen("Gun Shop"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
    else if(vrsta == 19) // Barber
	{
        FirmaInfo[firmaid][fIzlazX] = 418.652984; FirmaInfo[firmaid][fIzlazY] = -82.639793;
       	FirmaInfo[firmaid][fIzlazZ] = 1001.804687; FirmaInfo[firmaid][fInt] = 3;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_BARBER;
    	strmid(FirmaInfo[firmaid][fNaziv],"Barber",0,strlen("Barber"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 20) // Kladionica
	{
        FirmaInfo[firmaid][fIzlazX] = 833.8954;
		FirmaInfo[firmaid][fIzlazY] = 7.4047;
    	FirmaInfo[firmaid][fIzlazZ] = 1004.1797;
		FirmaInfo[firmaid][fInt] = 3;
    	FirmaInfo[firmaid][fCena] = cena;
		FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_KLADIONICA;
    	strmid(FirmaInfo[firmaid][fNaziv],"Kladionica",0,strlen("Kladionica"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
	}
	else if(vrsta == 21) // S biznisi
	{
	    FirmaInfo[firmaid][fIzlazX] = 0.0; FirmaInfo[firmaid][fIzlazY] = 0.0;
    	FirmaInfo[firmaid][fIzlazZ] = 0.0; FirmaInfo[firmaid][fInt] = 0;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_SBIZZ;
    	strmid(FirmaInfo[firmaid][fNaziv],"Preimenovati",0,strlen("Preimenovati"),255);
    	strmid(FirmaInfo[firmaid][fIznuda],"Niko",0,strlen("Niko"),255);
    }
    FirmaInfo[firmaid][fUlazX] = X; 
    FirmaInfo[firmaid][fUlazY] = Y; 
    FirmaInfo[firmaid][fUlazZ] = Z;
    FirmaInfo[firmaid][fImaVlasnika] = 0; 
    FirmaInfo[firmaid][fZatvoreno] = 1;
    FirmaInfo[firmaid][fVW] = firmaid; 
    FirmaInfo[firmaid][fKasa] = 0;
    FirmaInfo[firmaid][fProizvodi] = 300; 
    FirmaInfo[firmaid][fMaxProizvodi] = 300;
    FirmaInfo[firmaid][fSQLID] = firmaid;
    strmid(FirmaInfo[firmaid][fVlasnik],"Niko",0,strlen("Niko"),255);
    format(string,sizeof(string),""ZPLAVA"[ "BELA"%s "ZPLAVA"]\n"ZPLAVA"Firma na prodaju!\n"ZPLAVA"Cena: "BELA"%d$\n"ZPLAVA"Level: "BELA"%d\n"ZPLAVA"Za kupovinu /kupifirmu",FirmaInfo[firmaid][fNaziv],FirmaInfo[firmaid][fCena],FirmaInfo[firmaid][fLevel]);
    FirmaLabel[firmaid] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,X,Y,Z,80, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
    FirmaPickup[firmaid] = CreateDynamicPickup(1274, 1, FirmaInfo[firmaid][fUlazX], FirmaInfo[firmaid][fUlazY], FirmaInfo[firmaid][fUlazZ]);
    format(string,sizeof(string),"[V:RPG] | "CRVENA"Firma Kreiran (Ovo je firma ID: %d)!",firmaid);
	SCM(playerid,-1,string);
	FirmaLabelIPickup(firmaid); 
	SacuvajFirmu(firmaid);


	va_SendClientMessage(playerid, -1, "Kreirali ste firmu ID: %d", FirmaInfo[ firmaid ][ fSQLID ]);
	return 1;
}

///////////////////////////////////////////////////////////////
CMD:portfirma(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Admini (AL 3+)!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new id;
	if(sscanf(params,"i",id)) return SCM(playerid,-1,"[V:RPG] "VARADERO"/portfirma [ID]");

	SendClientMessage(playerid, -1, "Ukoliko ste portovani na farmu, firma ne postoji, jebiga mrzi me da radim proveru voli vas bunta <3");
    SetPlayerPos(playerid,FirmaInfo[id][fUlazX], FirmaInfo[id][fUlazY], FirmaInfo[id][fUlazZ]);
    SetPlayerInterior(playerid,0); 
    SetPlayerVirtualWorld(playerid,0);
	return 1;
}
//////////////////////////////////////////////////////////////
CMD:efirmu(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new i = -1;
	new string[128];
	for(new x; x < MAX_FIRMI; x++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[x][fUlazX], FirmaInfo[x][fUlazY], FirmaInfo[x][fUlazZ]))
		{
			i = x;
			IzmenaFirme[playerid] = x;
			break;
		}
	}
	if(i == -1) return SCM(playerid, -1, ""SRWBOJA"[ Varadero ] "SIVA"Niste kod firme!");
	new akcija[16];
	if(sscanf(params, "s[32]", akcija))
    {
		SCM(playerid,-1,"Firme | "SPLAVA"/efirmu | Prodaj | Info | Otkljucaj");
		SCM(playerid,-1,"Firme | "SPLAVA"/efirma2 za editovanje ostalog!");
		return 1;
	}
	if(!strcmp(akcija, "prodaj", true))
	{
		if(FirmaInfo[i][fImaVlasnika] == 0) return SCM(playerid,-1, ""SRWBOJA"[ Varadero ] "SIVA"Ne mozete prodati firmu jer ta firma nema vlasnika!");
		FirmaInfo[i][fImaVlasnika] = 0;
		FirmaInfo[i][fKasa] = 0;
		FirmaInfo[i][fZatvoreno] = 1;
		strmid(FirmaInfo[i][fVlasnik], "Niko", 0, strlen("Niko"), 255);
		strmid(FirmaInfo[i][fIznuda], "Niko", 0, strlen("Niko"), 255);
		PlayerInfo[playerid][pPosedovanjeFirme] = -1;
		FirmaLabelIPickup(i);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""SIVA"[V:RPG] "SIVA"Prodali ste firmu ID: %d!", i); //conver
		SCM(playerid, -1, string);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "info", true))
	{
		new z[3];
		if(FirmaInfo[i][fZatvoreno] == 1) z = "Da";
		else z = "Ne";
		format(string, charsmax(string), "- Vlasnik: %s | Reket: %s | Naziv: %s | Level: %d | Zakljucano: %s", FirmaInfo[i][fVlasnik], FirmaInfo[i][fIznuda],FirmaInfo[i][fNaziv],FirmaInfo[i][fLevel],z); //conver
		SCM(playerid,-1, string);
		format(string, charsmax(string), "- Cena: %d$ | ID: %d | Kasa: %d$ | Proizvodi: %d/%d", FirmaInfo[i][fCena], i, FirmaInfo[i][fKasa], FirmaInfo[i][fProizvodi], FirmaInfo[i][fMaxProizvodi]); //conver
		SCM(playerid,-1, string);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "otkljucaj", true))
	{
		FirmaInfo[i][fZatvoreno] = 0;
		SCM(playerid,-1,""SIVA"Firma je otkljucana!");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[ Varadero ] "SIVA"Netacno uneseno radnja editovanja!");
	return 1;
}
///////////////////////////////////////////////////////////////
CMD:efirmu2(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new i = -1;
	new string[128];
	for(new x; x < MAX_FIRMI; x++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[x][fUlazX], FirmaInfo[x][fUlazY], FirmaInfo[x][fUlazZ]))
		{
			i = x;
			IzmenaFirme[playerid] = x;
			break;
		}
	}
	if(i == -1) return SCM(playerid, -1, ""SRWBOJA"[ Varadero ] "SIVA"Niste kod firme!");
	new akcija[16],radnja;
	if(sscanf(params, "s[32]d", akcija,radnja))
    {
		SCM(playerid,-1,"Firme | "SPLAVA"/efirmu2 | Level | Cena | Reket ID: 0 | Kasa | Proizvodi");
		SCM(playerid,-1,"Firme | "SPLAVA"/efirma za editovanje ostalog!");
		return 1;
	}
	if(!strcmp(akcija, "level", true))
	{
        if(radnja < 0 || radnja > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
        FirmaInfo[IzmenaFirme[playerid]][fLevel] = radnja;
		FirmaLabelIPickup(i);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""SIVA"[V:RPG] "SIVA"Izmenili ste level firme id: %d u %d!", i, radnja); //conver
		SCM(playerid, -1, string);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "cena", true))
	{
        if(radnja < 0 || radnja > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
        FirmaInfo[IzmenaFirme[playerid]][fCena] = radnja;
		FirmaLabelIPickup(i);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""SIVA"[V:RPG] "SIVA"Izmenili ste cenu firme id: %d u %d!", i, radnja); //conver
		SCM(playerid, -1, string);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "reket", true))
	{
        if(radnja < 0 || radnja > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
    	if(radnja == 0)
    	{
        strmid(FirmaInfo[IzmenaFirme[playerid]][fIznuda], "Niko", 0, strlen("Niko"), 255);
		FirmaLabelIPickup(i);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""SIVA"[V:RPG] "SIVA"Skinuli ste reket firme id %d!", i); //conver
		SCM(playerid, -1, string);
		IzmenaFirme[playerid] = -1;
		}
	}
	else if(!strcmp(akcija, "kasa", true))
	{
	    if(PlayerInfo[playerid][pAdmin] != 8) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
        if(radnja < 0 || radnja > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
        FirmaInfo[IzmenaFirme[playerid]][fKasa] = radnja;
		FirmaLabelIPickup(i);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""SIVA"[V:RPG] "SIVA"Izmenili ste kasu firme id: %d u %d!", i, radnja); //conver
		SCM(playerid, -1, string);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "proizvodi", true))
	{
        if(radnja < 0 || radnja > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
        FirmaInfo[IzmenaFirme[playerid]][fProizvodi] = radnja;
		FirmaLabelIPickup(i);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""SIVA"[V:RPG] "SIVA"Izmenili ste proizvode firme id: %d u %d!", i, radnja); //conver
		SCM(playerid, -1, string);
		IzmenaFirme[playerid] = -1;
	}
	else return SCM(playerid, -1, ""SRWBOJA"[ Varadero ] "SIVA"Netacno uneseno radnja editovanja!");
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:kupifirmu(playerid, params[])
{
	for(new i; i < sizeof(FirmaInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
		{
			if(!strcmp(FirmaInfo[i][fVlasnik], "Niko", true) && FirmaInfo[i][fImaVlasnika] == 0)
			{
				if(PlayerInfo[playerid][pLevel] < FirmaInfo[i][fLevel]) {
					new string[128];
					format(string, charsmax(string), ""SRWBOJA"[GRESKA]: "SIVA"Treba vam %d level za ovu firmu!", FirmaInfo[i][fLevel]); //conver
					return SCM(playerid,-1, string);
				}
				if(PlayerInfo[playerid][pPosedovanjeFirme] != -1) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Vec imas firmu!!");
				if(PlayerInfo[playerid][pNovacDzep] < FirmaInfo[i][fCena]) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Nemas dovoljno novca za ovo firmu!");
				strmid(FirmaInfo[i][fVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 255);
				FirmaInfo[i][fImaVlasnika] = 1;
				PlayerInfo[playerid][pPosedovanjeFirme] = i;
				FirmaInfo[i][fZatvoreno] = 0;
				SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Cestitamo, kupili ste firmu!");
				SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Za komande firme koristite /firma!");
				g_NovacMinus(playerid, FirmaInfo[i][fCena]);
				strmid(FirmaInfo[i][fIznuda],"Niko",0,strlen("Niko"),255);
				UsaoFirma[playerid] = i;
				FirmaLabelIPickup(i);
				SacuvajFirmu(i);
				return 1;
			}
			else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ta firma se ne prodaje!!");
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:firma(playerid, params[])
{

    if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate firmu!");
    new imedas[MAX_PLAYER_NAME];
	GetPlayerName(playerid, imedas, sizeof(imedas));
	if(strcmp(FirmaInfo[PlayerInfo[playerid][pPosedovanjeFirme]][fVlasnik], imedas, true)) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Niste vlasnik te firme!");
    SPD(playerid, 74, DIALOG_STYLE_LIST, ""SPLAVA"Firma Opcije", "[1]-Informacije\n[2]-Otkljucaj Firmu\n[3]-Zakljucaj Firmu\n[4]-Podigni Novac\n[5]-Ostavi Novac\n[6]-Naruci Proizvode\n[7]-Promeni Ime\n[8]-Prodaj Firmu Drzavi\n[9]-Postavi Iznudu\n[10]- Skini Iznudu\n[11]-Prodaj firmu igracu", "Odaberi", "Nazad");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:htrazeni(playerid, params[])
{
	if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10)
	{
		new x = 0, string[128];
		SCM(playerid, -1, ""SRWBOJA"|-------------------Trazeni Igraci-------------------|");
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pNarucen] != 0)
			{
				format(string,sizeof(string), "- %s(ID:%d) -", GetName(i), i);
				SCM(playerid, -1, string);
				x++;
			}
		}
		if(x == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Nema trazenih igraca!");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo clanovi Hitman-a!");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:zlista(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		new vrsta[15], x = 0, string[128];
		SCM(playerid, -1, ""SRWBOJA"|--------------------------Zatvoreni Igraci--------------------------|");
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pZatvor] != 0)
			{
				if(PlayerInfo[i][pZatvor] == 1) vrsta = "Prison";
				else if(PlayerInfo[i][pZatvor] == 2) vrsta = "Obicni Zatvor";
				else if(PlayerInfo[i][pZatvor] == 3) vrsta = "Area 51";
				else vrsta = "Nista";
				format(string, sizeof(string), "%s(ID:%d) | Zatvor: %s | Vreme: %d", GetName(i), i, vrsta,PlayerInfo[i][pZatvorenVreme]);
				SCM(playerid, -1, string);
				x++;
			}
		}
		if(x == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Nema zatvorenih igraca!");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini & GameMaster!");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:mlista(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
		new x = 0, string[128];
		SCM(playerid, -1, ""SRWBOJA"|-------------------Mutirani Igraci-------------------|");
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pMutiran] != 0)
			{
				format(string,sizeof(string), "- %s(ID:%d) | Vrijeme : [ %d ] -", GetName(i), i,PlayerInfo[i][pMutiranVreme]);
				SCM(playerid, -1, string);
				x++;
			}
		}
		if(x == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Nema mutiranih igraca!");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Admini (AL 1+)!");
	return 1;
}
/////////////////////////////////////////////////////////////////
CMD:pstats(playerid, params[])
{
        //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
        if(PlayerInfo[playerid][pAdmin] < 7 && PlayerInfo[playerid][pDozvola8] != 1) return SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"Samo Admin Level 6");
	    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	    new id, stat, vr;
	    if(sscanf(params, "uiiI", id, stat, vr))
		{
			SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/pstats [ID/Nick] [Kod] [Kolicina]");
			SCM(playerid, -1, ""SIVA"| (1). Level | (2). Respekti | (3). Bankovni racun | (4). Pol |");
			SCM(playerid, -1, ""SIVA"| (5). Sati Igranja | (6). Godine | (7). Droga | (8). Mats");
			SCM(playerid, -1, ""SIVA"| (9). Firma Kljuc (-1 nema biza) | (10). Kuca Kljuc (-1 nema kuce)");
			SCM(playerid, -1, ""SIVA"| (11). Stan Kljuc (-1 nema stan) | (12). Vikendica Kljuc (-1 nema vikendicu)");
			SCM(playerid, -1, ""SIVA"| (13). Org Ugovor | (14). Posao | (15). Posao ugovor | (16). Auto kljuc (-1 nema auto)");
			SCM(playerid, -1, ""SIVA"| (17). Motor kljuc (-1 nema motor) | (18). Bicikl kljuc (-1 nema biciklo)");
	        SCM(playerid, -1, ""SIVA"| (19). Letjelica kljuc (-1 nema letjelicu) | (20). Plovilo Kljuc ( -1 nema kljuc)");
			SCM(playerid, -1, ""SIVA"| (21). Donator Bodovi | (22). Auto kljuc 2 (-1 nema auto) | (23). Zlato ");
	        SCM(playerid, -1, ""SIVA"| (24). Pistol | (25). Pistol Silenced (26). Desert Eagle . (27). Shotgun");
	        SCM(playerid, -1, ""SIVA"| (28) . SawnOff | (29). Comb skill (30). Uzi Skill | (31). SMG Skill");
	        SCM(playerid, -1, ""SIVA"| (32) . Ak 47 | (33). M4 Skill | (34). Imanje");
			return 1;
		}
		if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Igrac nije na serveru!");
		new string[360];
		format(string, sizeof(string), ""SRWBOJA"Administrator %s je upisao "BELA"/pstats %s", GetName(playerid), params);
		AdminGameMaster(-1,string);
		if(stat == 1)
		{
	        if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
			PlayerInfo[id][pLevel] = vr;
			SetPlayerScore(id, vr);
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s level na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio level na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 2)
		{
			PlayerInfo[id][pExp] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s respekte na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio respekte na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 3)
		{
	        if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
			PlayerInfo[id][pNovacBanka] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s novac u banci na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio novac u banci na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 4)
		{
	        if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
			PlayerInfo[id][pSex] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s pol na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio pol na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 5)
		{
			PlayerInfo[id][pSatiIgre] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s sati igranja na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio sate igranja na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 6)
		{
			PlayerInfo[id][pGodine] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s godine na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio godine na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 7)
		{
			PlayerInfo[id][pDroga] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s drogu na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio drogu na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 8)
		{
		    if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
			PlayerInfo[id][pMats] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s materijale na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio materijale na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 9)
		{
			PlayerInfo[id][pPosedovanjeFirme] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s firmu na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio firmu na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 10)
		{
			PlayerInfo[id][pPosedovanjeKuce] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s kucu na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio kucu na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 11)
		{
			PlayerInfo[id][pPosedovanjeStana] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s stan na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio stan na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 12)
		{
			PlayerInfo[id][pPosedovanjeVikendice] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s vikendicu na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio vikendicu na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 13)
		{
			PlayerInfo[id][pOrgUgovor] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s org ugovor na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio org ugovor na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 14)
		{
			PlayerInfo[id][pPosao] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s posao na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio posao na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 15)
	    {
	        if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
			PlayerInfo[id][pPosaoUgovor] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s posao ugovor na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio posao ugovor na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 16)
		{
			PlayerInfo[id][pPosedovanjeAuta] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s auto na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio auto na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 17)
		{
			PlayerInfo[id][pPosedovanjeMotora] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s motor na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio motor na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 18)
	    {

			PlayerInfo[id][pPosedovanjeBicikla] = vr;
		    SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s biciklo na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio biciklo na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 19)
		{
			PlayerInfo[id][pPosedovanjeAviona] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s letjelicu na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio letjelicu na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 20)
		{
			PlayerInfo[id][pPosedovanjePlovila] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s plovilo na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio plovilo na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 22)
		{
			PlayerInfo[id][pPosedovanjeAuta2] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s 2 auto na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio 2 auto na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
		else if(stat == 23)
		{
			PlayerInfo[id][pZlato] = vr;
	        SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s zlato na %d.", GetName(id), vr); //conver
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio zlato na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
	    else if(stat == 24)
		{
	        if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
	        PlayerInfo[id][pPistSkill] = vr;
	        SetPlayerSkillLevel(id, WEAPONSKILL_PISTOL, PlayerInfo[id][pPistSkill]);
	        SavePlayer(id);
		    format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"PISTOL skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
	    }
	    else if(stat == 25)
		{
	        if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
	        PlayerInfo[id][pSilenSkill] = vr;
	        SetPlayerSkillLevel(id, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[id][pSilenSkill]);
	        SavePlayer(id);
		    format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"SILENCED skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
		    AdminGameMaster(-1, string);
	    }
		else if(stat == 26)
	    {
	        if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
	        PlayerInfo[id][pDesertSkill] = vr;
	        SetPlayerSkillLevel(id, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[id][pDesertSkill]);
	        SavePlayer(id);
			format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"DEAGLE skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
	    }
		else if(stat == 27)
		{
	         if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
	         PlayerInfo[id][pShotgSkill] = vr;
	         SetPlayerSkillLevel(id, WEAPONSKILL_SHOTGUN, PlayerInfo[id][pShotgSkill]);
	         SavePlayer(id);
		     format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"SHOTGUN skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
		     AdminGameMaster(-1, string);
        }
		else if(stat == 28)
		{
            if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
            PlayerInfo[id][pSawnSkill] = vr;
            SetPlayerSkillLevel(id, WEAPON_SAWEDOFF, PlayerInfo[id][pSawnSkill]);
            SavePlayer(id);
			format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"SAWNOFF skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
        }
		else if(stat == 29)
		{
            if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
            PlayerInfo[id][pCombSkill] = vr;
            SetPlayerSkillLevel(id, WEAPONSKILL_SPAS12_SHOTGUN, PlayerInfo[id][pCombSkill]);
            SavePlayer(id);
			format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"SPAS12 skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
        }
		else if(stat == 30)
		{
            if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
            PlayerInfo[id][pUziSkill] = vr;
            SetPlayerSkillLevel(id, WEAPONSKILL_MICRO_UZI, PlayerInfo[id][pUziSkill]);
            SavePlayer(id);
			format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"UZI skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
        }
		else if(stat == 31)
		{
            if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
            PlayerInfo[id][pSmgSkill] = vr;
            SetPlayerSkillLevel(id, WEAPONSKILL_MP5, PlayerInfo[id][pSmgSkill]);
            SavePlayer(id);
			format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"MP5 skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
        }
        else if(stat == 32)
		{
            if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
            PlayerInfo[id][pAkSkill] = vr;
            SetPlayerSkillLevel(id, WEAPONSKILL_AK47, PlayerInfo[id][pAkSkill]);
            SavePlayer(id);
			format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"AK47 skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
        }
		else if(stat == 33)
		{
            if(vr < 0 || vr > 10000000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Mora biti ispod 10000000!");
            PlayerInfo[id][pM4Skill] = vr;
            SetPlayerSkillLevel(id, WEAPONSKILL_M4, PlayerInfo[id][pM4Skill]);
            SavePlayer(id);
			format(string,sizeof(string),""VARADERO"[V:RPG] | "BELA"Administrator "SPLAVA"%s "BELA"je postavio igracu "SRWBOJA"%s "BELA"M4 skill na"SRWBOJA"%s.",GetName(playerid),GetName(id), vr);
			AdminGameMaster(-1, string);
	    }
	    else if(stat == 34)
		{
			PlayerInfo[id][pPosedovanjeImanja] = vr;
			SavePlayer(id);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Postavili ste %s Imanje na %d.", GetName(id), vr); //conver
			SCM(playerid, -1, string);
			format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je postavio Imanje na %d.", GetName(playerid), vr); //conver
			SCM(id, -1, string);
		}
	    else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Pogresan stat kod!");
	    return 1;
}
/////////////////////////////////////////////////////////////////
CMD:proveri(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 2) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Administrator/GM4+!");
	new id,string[256];
	if(sscanf(params, "u", id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/proveri [ID]");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac nije na serveru!");
    CheckShowStats(playerid,id);
    format(string, charsmax(string), ""ORANGE2"#AdmWarn: STAFF %s [%d] pregleda stats igracu %s [%d].", GetName(playerid), playerid, GetName(id), id);
    AdminGameMaster(-1, string);
	return 1;
}
CMD:proveriorg(playerid, params[])
{
	 //#pragma unused help
	 //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	 if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 1) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Staff!");
	 new id;
	 if(sscanf(params, "u", id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/proveriorg [ID]");
	 if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac nije na serveru!");
	 ProveraORG(playerid,id);
	 return 1;
}
CMD:proverifs(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 1) return SCM(playerid,-1,""SRWBOJA"#ERROR: "SIVA"Samo Administrator/GM5+!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/proverifs [ID]");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac nije na serveru!");
    CheckShowSkills(playerid,id);
	return 1;
}
////////////////////////////////////////////////////////////////
CMD:adozvole(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo Head Administrator!");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new id, stat;
	if(sscanf(params, "ui", id, stat))
	{
		SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/adozvole [ID/Nick] [Kod (1-6)]");
		SCM(playerid, -1, ""SIVA"| (1). Auto Dozvola | (2). Motor Dozvola | (3). Kamion Dozvola");
		SCM(playerid, -1, ""SIVA"| (4). Avion Dozvola | (5). Brod Dozvola | (6). Gun Dozvola");
		return 1;
	}
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Igrac nije na serveru!");
	new string[360];
	if(stat == 1)
	{
		PlayerInfo[id][pADozvola] = 1;
  		SavePlayer(id);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Dali ste %s dozvolu za voznju.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je dao dozvolu za voznju.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(stat == 2)
	{
		PlayerInfo[id][pMotorDozvola] = 1;
  		SavePlayer(id);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Dali ste %s dozvolu za motor.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je dao dozvolu za motor.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(stat == 3)
	{
		PlayerInfo[id][pKamionDozvola] = 1;
  		SavePlayer(id);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Dali ste %s dozvolu za kamion.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je dao dozvolu za kamion.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(stat == 4)
	{
		PlayerInfo[id][pAvionDozvola] = 1;
  		SavePlayer(id);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Dali ste %s dozvolu za avion.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je dao dozvolu za avion.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(stat == 5)
	{
		PlayerInfo[id][pBrodDozvola] = 1;
  		SavePlayer(id);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Dali ste %s dozvolu za brod.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je dao dozvolu za brod.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(stat == 6)
	{
		PlayerInfo[id][pGunDozvola] = 1;
  		SavePlayer(id);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Dali ste %s dozvolu za oruzije.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vam je dao dozvolu za oruzije.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Pogresan kod!");
	return 1;
}
///////////////////////////////////////////////////////////////
CMD:zatvori(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0 &&  saduty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator/GameMaster/Spec-Team Duznosti!");
	if( PlayerInfo[ playerid ][ pAdmin ] >= 1 || PlayerInfo[ playerid ][ pGM ] >= 1 || PlayerInfo[ playerid ][ pSpecteam ] >= 1 )
	{
		new ID, Vreme, Razlog[64];
		if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0 &&  saduty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator/GameMaster/Spec-Team Duznosti!");
		if(sscanf(params, "uis[64]", ID, Vreme, Razlog)) return SCM(playerid, -1, ""SPLAVA"[V:RPG] Pomoc | "BELA"/zatvori [ID/Nick] [Vreme (minuta)] [Razlog]");
		if(ID == INVALID_PLAYER_ID) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Igrac je offline!");
		if(Vreme < 1 || Vreme > 50000) { SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA" Vreme ne moze biti manje od 1 a ni vise od 50000 minuta!"); return 1; }
	 	if(PlayerInfo[ID][pAdmin] > 0) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Ne mozete staviti u zatvor admina!");
		if(VuceIgraca[playerid] != -1)
        {
		KillTimer(VuciTimer[playerid]); Vucen[VuceIgraca[playerid]] = -1; VuceIgraca[playerid] = -1;
    	}
		if(Vucen[playerid] != -1)
	   {
		KillTimer(VuciTimer[Vucen[playerid]]); VuceIgraca[Vucen[playerid]] = -1; Vucen[playerid] = -1;
	    }
	    Zavezan[ID] = 0;
	    PlayerInfo[ID][pTrazeniLevel] = 0;
		ResetPlayerWeapons(ID);
		SetPlayerPos(ID, 107.2300,1920.6311,18.5208);
		SetPlayerWorldBounds(ID, 337.5694,101.5826,1940.9759,1798.7453);
		SetPlayerInterior(ID, 0);
		TogglePlayerControllable(ID, 0);
		g_freeze[ID] = SetTimerEx("Freeze",5000, false, "i", ID);
		PlayerInfo[ID][pZatvor] = 3;
		PlayerInfo[ID][pZatvorenVreme] += Vreme*60;
		new string[256];
		format(string, sizeof(string), ""CRVENA"[V:RPG] Zatvorili ste %s u zatvor na %d minuta!", GetName(ID),Vreme);
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""CRVENA"[RAZLOG]: Vi ste zatvoreni zbog %s. Pravo na zalbu imate samo uz DOKAZE!!!", Razlog);
		SCM(ID, -1, string);
		format(string, sizeof(string), ""CRVENA"STAFF CLAN %s vas je zatvorio na %d minuta.", GetName(playerid), Vreme);
		SCM(ID, -1, string);
		format(string, sizeof(string), ""CRVENA"[ZATVORSKA KAZNA]"BELA"Varadero Administracija je zatvorio igraca %s "CRVENA"| Minuti: %d | Razlog: %s",GetName(ID),Vreme,Razlog);
		SCMTA(-1, string);
		format(string, sizeof(string), ""CRVENA"Staff %s je zatvorio igraca!", GetName(playerid));
		AdminGameMaster(-1, string);
		PlayerInfo[playerid][pBrojJail]++;
        SavePlayer(ID);
	}
	else return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Admini/GameMasteri/ST");
	return 1;
}
////////////////////////////////////////////////////////
CMD:oslobodi(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pGM] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		new id,string[128];
		if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Imate wanted level pa ne mozetE /OSLOBODI!");
		if( PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Zatvoreni ste ne moze ova komandu da koristite!");
	    if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"U Event Si bre !!");
		if(sscanf(params, "u", id)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "BELA"/oslobodi [ID/Nick]");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Igrac je offline!");
		if(PlayerInfo[id][pZatvor] == 0) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Igrac nije zatvoren!");
		PlayerInfo[id][pZatvor] = 0;
		PlayerInfo[id][pZatvorenVreme] = 0;
		SetPlayerWorldBounds(id,20000.0000,-20000.0000,20000.0000,-20000.0000);
		SetPlayerInterior(id, 0);
		SetPlayerVirtualWorld(id, 0);
		SetPlayerPos(id, 1802.7881, -1577.6869, 13.4119);
		SetPlayerFacingAngle(id, 281.0);
		SetCameraBehindPlayer(id);
		format(string, charsmax(string), ""VARADERO"[V:RPG] "SIVA"Administrator %s vas je oslobodio iz zatvora!", GetName(playerid)); //conver
		SCM(id, -1, string);
		format(string, sizeof(string), ""VARADERO"A | "SIVA"Administrator %s je pustio %s iz zatvora!", GetName(playerid),GetName(id));
		AdminGameMaster(-1, string);
	}
	else return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Admini (AL 1+)!");
	return 1;
}


CMD:zatvorioff(playerid, params[])
{
    //#pragma unused help
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new playername[32], Vreme;
		if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator & GameMaster duznosti!");
		if(sscanf(params, "s[25]i", playername, Vreme)) return SCM(playerid, -1, ""SPLAVA"[V:RPG] Pomoc | "BELA"/zatvorioff [Ime_Prezime] [Vreme (minuta)]");
		if(Vreme < 1 || Vreme > 50000) { SCM(playerid, -1, ""SPLAVA"[GRESKA] "BELA" Vreme ne moze biti manje od 1 a ni vise od 50000 minuta!"); return 1; }

		new q[58+24+1];
		mysql_format( SQL, q, sizeof(q), "SELECT * FROM `players` where `Name` = '%e'", playername);
		mysql_tquery( SQL, q, "_sqlJailPlayer", "isi", playerid, playername, Vreme);

	}
	else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	return 1;
}

CMD:platikauciju(playerid, params[])
{

	if(PlayerInfo[playerid][pZatvor] == 2)
	{
    	if(PlayerInfo[playerid][pZlato] < 10) return SCM(playerid, -1, "Nemas 10g zlata");
		PlayerInfo[playerid][pZatvor] = 0;
		PlayerInfo[playerid][pZatvorenVreme] = 0;
		SetPlayerWorldBounds(playerid,20000.0000,-20000.0000,20000.0000,-20000.0000);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 1802.7881, -1577.6869, 13.4119);
		SetPlayerFacingAngle(playerid, 281.0);
		SetCameraBehindPlayer(playerid);
		SCM(playerid, -1, "Dali ste 10G GOLD-A i pusteni ste na slobodu");
       	PlayerInfo[playerid][pZlato] -= 10;
	}
	else return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Nemate ponudjenu kauciju!");
	return 1;
}
/////////////////////////////////////////////////////
CMD:postavilidera(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(PlayerInfo[playerid][pAdmin] < 7 && PlayerInfo[playerid][pDozvola1] != 1)
		return SCM(playerid, -1, ""ORANGE2"#!: Niste ovlasceni za koriscenje ove komande !");
	new target, factionid, string[256], aRank[50];
	if(sscanf(params, "ud", target, factionid))
	{
		SCM(playerid,-1, ""SPLAVA"[V:RPG] Pomoc | "SRWBOJA"/postavilidera [ID/Ime] [ID Org]");
		SCM(playerid, -1,""SIVA"(ID:1). "SPLAVA"Los Santos Police Department");
		SCM(playerid,-1,""SIVA"(ID:2). "SPLAVA"The Vinci Family");
		SCM(playerid,-1,""SIVA"(ID:3). "SPLAVA"Black Dragon Triads");
		SCM(playerid,-1,""SIVA"(ID:4). "SPLAVA"Grove Street Family");
		SCM(playerid,-1,""SIVA"(ID:5). "SPLAVA"Ballas");
		SCM(playerid,-1,""SIVA"(ID:6). "SPLAVA"Novinari");
		SCM(playerid,-1,""SIVA"(ID:7). "SPLAVA"CIA");
		SCM(playerid,-1,""SIVA"(ID:8). "SPLAVA"Parking Servis");
		SCM(playerid,-1,""SIVA"(ID:9). "SPLAVA"Condor");
        SCM(playerid,-1,""SIVA"(ID:10). "SPLAVA"Hitmen");
        SCM(playerid,-1,""SIVA"(ID:11). "SPLAVA"Blue Lagoon");
        SCM(playerid,-1,""SIVA"(ID:12). "SPLAVA"LCN");
        SCM(playerid,-1,""SIVA"(ID:13). "SPLAVA"Da Naga Boys");
        SCM(playerid,-1,""SIVA"(ID:14). "SPLAVA"Taxi");
        SCM(playerid,-1,""SIVA"(ID:15). "SPLAVA"Yakuza");
        SCM(playerid,-1,""SIVA"(ID:16). "SPLAVA"FBI");
        SCM(playerid,-1,""SIVA"(ID:17). "SPLAVA"Black Cobra Corporation");
        SCM(playerid,-1,""SIVA"(ID:18). "SPLAVA"Vatrogasci");
		SCM(playerid,-1,""SIVA"(ID:19). "SPLAVA"DeathRow");
		SCM(playerid,-1,""SIVA"(ID:20). "SPLAVA"Russian Mafia");
		SCM(playerid,-1,""SIVA"(ID:21). "SPLAVA" Narco Cartel !");
		SCM(playerid,-1,""SIVA"(ID:22). "SPLAVA" Loca Cartel !");
		SCM(playerid,-1,""SIVA"(ID:23). "SPLAVA" TBB !");
		SCM(playerid,-1,""SIVA"(ID:24). "SPLAVA" Specijalna Antiteroristicka Jedinica !");
		SCM(playerid,-1,""SIVA"(ID:25). "SPLAVA" Varrio Los Aztecas !");
		return 1;
	}
	if(factionid < 0 || factionid > 25) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"ne mozete ici ispod 0 i vise od 25!");
	if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1 ,""SIVA"Pogresan ID (Nije Online)!");
//	if(PlayerInfo[target][pLevel] == 15 || PlayerInfo[target][pSatiIgre] < 6) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozes setati poziciju igracu koji je tek napravio acc!!!!");
	if(factionid == PlayerInfo[target][pLider]) return SendClientMessage(playerid,-1, ""SIVA"[GRESKA] "SRWBOJA"Taj igrac je vec lider te organizacije!");
	if(factionid == 0)
	{
		PlayerInfo[target][pLider] = 0;
		PlayerInfo[target][pClan] = 0;
		PlayerInfo[target][pRank] = 0;
		PlayerInfo[target][pSkin] = 1;
		PlayerInfo[target][pChatF] = 0;
		PlayerInfo[target][pPrisluskivanje] = 0;
		PlayerInfo[target][pRankName] = 0;
		Update_Skin(target,PlayerInfo[target][pSkin]);
  		if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
		if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
		if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
		if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
		if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"%s %s vam je skinuo Lidera.", aRank, GetName(playerid));
		SendClientMessage(target, -1, string);
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s ste skinuli Lidera.", GetName(target));
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), ""VARADERO"[INFO] "BELA"%s %s je skinuo Lidera igracu %s.", aRank, GetName(playerid), GetName(target));
		AdminGameMaster(-1, string);
		return 1;
	}
	PlayerInfo[target][pLider] = factionid; PlayerInfo[target][pClan] = factionid; PlayerInfo[target][pRank] = 6;
	if(factionid == 1) { PlayerInfo[target][pSkin] = 283; } //LS PD
	else if(factionid == 2) { PlayerInfo[target][pSkin] = 124; } //ITA MAFIA
	else if(factionid == 3) { PlayerInfo[target][pSkin] = 120; } //TRIADS
	else if(factionid == 4) { PlayerInfo[target][pSkin] = 271; } //GROVE
	else if(factionid == 5) { PlayerInfo[target][pSkin] = 296; } //BALLAS
	else if(factionid == 6) { PlayerInfo[target][pSkin] = 295; } //NOVINARI
	else if(factionid == 7) { PlayerInfo[target][pSkin] = 310; } //Marshall
	else if(factionid == 8) { PlayerInfo[target][pSkin] = 16; } //Parking servis
	else if(factionid == 9) { PlayerInfo[target][pSkin] = 46; } //Condor
	else if(factionid == 10) { PlayerInfo[target][pSkin] = 163; } //HITMAN
	else if(factionid == 11) { PlayerInfo[target][pSkin] = 292; } //LCN
	else if(factionid == 12) { PlayerInfo[target][pSkin] = 147; } //La Cosa Nostra
	else if(factionid == 13) { PlayerInfo[target][pSkin] = 124; } // Da Naga Boys
	else if(factionid == 14) { PlayerInfo[target][pSkin] = 187; } //Taxi
	else if(factionid == 15) { PlayerInfo[target][pSkin] = 120; } //Yakuza
	else if(factionid == 16) { PlayerInfo[target][pSkin] = 286; } //FBI
	else if(factionid == 17) { PlayerInfo[target][pSkin] = 249; } //BCC
	else if(factionid == 18) { PlayerInfo[target][pSkin] = 279; } //Vatrogasci
	else if(factionid == 19) { PlayerInfo[target][pSkin] = 113; } //DeathRow
    else if(factionid == 20) { PlayerInfo[target][pSkin] = 163; } //Russian Mafia
    else if(factionid == 21) { PlayerInfo[target][pSkin] = 293; } //Narco Cartel
    else if(factionid == 22) { PlayerInfo[target][pSkin] = 123; } //Loca Cartel
    else if(factionid == 23) { PlayerInfo[target][pSkin] = 120; } // TBB
    else if(factionid == 25) { PlayerInfo[target][pSkin] = 292; } //VLA
	Update_Skin(target, PlayerInfo[target][pSkin]);
	if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
	if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
	if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
	if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
	if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
	if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
	if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
	if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
	format(string, sizeof(string), ""VARADERO"[INFO] "BELA"%s %s vam je postavio Lidera organizacije %s.", aRank, GetName(playerid), ImeOrganizacije(factionid));
	SendClientMessage(target, -1, string);
	format(string, sizeof(string), ""VARADERO"[INFO] "BELA"Igracu %s ste postavili Lidera organizacije %s.", GetName(target));
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), ""VARADERO"[INFO] "BELA"%s %s je igracu postavio Lidera %s organizacije %s.", aRank, GetName(playerid), GetName(target), ImeOrganizacije(factionid));
	AdminGameMaster(-1, string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:ubaci(playerid, params[])
{

	new para1,ftext[20];
	//if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if (PlayerInfo[playerid][pLider] < 1 && PlayerInfo[playerid][pPrivilegija] < 1) return SCM(playerid, -1, ""CRVENA"[ V:RPG ]  "SIVA"Samo Lideri.");
	if(sscanf(params, "u", para1)) return SendClientMessage(playerid, -1, ""SPLAVA"[V:RPG] Pomoc | "BELA"/ubaci [ID]");
	if(para1 == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(PlayerInfo[para1][pPozvan] > 0) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA" Neko je vec pozvao tog igraca!");
	if(PlayerInfo[para1][pOrgUgovor] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Igrac ima kaznu ulaska u org, sacekajte da mu istekne!");
	if(para1 == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete sebe pozvati u org!");
    if (PlayerInfo[para1][pLider] > 0) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Taj igrac je lider neke organizacije!");
	//------------------------------------------------------------------------//
	if(PlayerInfo[para1][pClan] == 0)
	{
		if(PlayerInfo[playerid][pLider] == 1)
		{
			PlayerInfo[para1][pPozvan] = 1;
		}
		else if(PlayerInfo[playerid][pLider] == 2)
		{
			PlayerInfo[para1][pPozvan] = 2;
		}
		else if(PlayerInfo[playerid][pLider] == 3)
		{
			PlayerInfo[para1][pPozvan] = 3;
		}
		else if(PlayerInfo[playerid][pLider] == 4)
		{
			PlayerInfo[para1][pPozvan] = 4;
		}
		else if(PlayerInfo[playerid][pLider] == 5)
		{
			PlayerInfo[para1][pPozvan] = 5;
		}
		else if(PlayerInfo[playerid][pLider] == 6)
		{
			PlayerInfo[para1][pPozvan] = 6;
		}
		else if(PlayerInfo[playerid][pLider] == 7)
		{
			PlayerInfo[para1][pPozvan] = 7;
		}
		else if(PlayerInfo[playerid][pLider] == 8)
		{
			PlayerInfo[para1][pPozvan] = 8;
		}
		else if(PlayerInfo[playerid][pLider] == 9)
		{
			PlayerInfo[para1][pPozvan] = 9;
		}
		else if(PlayerInfo[playerid][pLider] == 10)
		{
			PlayerInfo[para1][pPozvan] = 10;
		}
		else if(PlayerInfo[playerid][pLider] == 11)
		{
			PlayerInfo[para1][pPozvan] = 11;
		}
		else if(PlayerInfo[playerid][pLider] == 12)
		{
			PlayerInfo[para1][pPozvan] = 12;
		}
		else if(PlayerInfo[playerid][pLider] == 13)
		{
			PlayerInfo[para1][pPozvan] = 13;
		}
		else if(PlayerInfo[playerid][pLider] == 14)
		{
			PlayerInfo[para1][pPozvan] = 14;
		}
		else if(PlayerInfo[playerid][pLider] == 15)
		{
			PlayerInfo[para1][pPozvan] = 15;
		}
		else if(PlayerInfo[playerid][pLider] == 16)
		{
			PlayerInfo[para1][pPozvan] = 16;
		}
		else if(PlayerInfo[playerid][pLider] == 17)
		{
			PlayerInfo[para1][pPozvan] = 17;
		}
		else if(PlayerInfo[playerid][pLider] == 18)
		{
			PlayerInfo[para1][pPozvan] = 18;
		}
		else if(PlayerInfo[playerid][pLider] == 19)
		{
			PlayerInfo[para1][pPozvan] = 19;
		}
		else if(PlayerInfo[playerid][pLider] == 20)
		{
			PlayerInfo[para1][pPozvan] = 20;
		}
		else if(PlayerInfo[playerid][pLider] == 21)
		{
			PlayerInfo[para1][pPozvan] = 21;
		}
		else if(PlayerInfo[playerid][pLider] == 22)
		{
			PlayerInfo[para1][pPozvan] = 22;
		}
		else if(PlayerInfo[playerid][pLider] == 23)
		{
			PlayerInfo[para1][pPozvan] = 23;
		}
		else if(PlayerInfo[playerid][pLider] == 24)
		{
			PlayerInfo[para1][pPozvan] = 24;
		}
		else if(PlayerInfo[playerid][pLider] == 25)
		{
			PlayerInfo[para1][pPozvan] = 25;
		}
		else
		{
			return 1;
		}
		new string[128];
		format(string, charsmax(string), ""VARADERO"[INFO] "BELA"Lider %s [%d] te je pozvao da se pridruzis organizaciji %s!", GetName(playerid), playerid, ftext);
		SCM(para1,-1,string);
		SCM(para1,-1,""VARADERO"[INFO] "BELA"Da prihvatite poziv kucajte /prihvati poziv | Da odbijete kucajte /odbij poziv!");
		format(string, charsmax(string), ""VARADERO"[INFO] "BELA"Pozvali ste %s [%d] da se pridruzi vasoj organizaciji.", GetName(para1), para1); //conver
		SCM(playerid,-1, string);
		
	}
	else
	{
		SCM(playerid, -1, "Taj igrac je vec u nekoj organizaciji!");
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////
CMD:dodelirank(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if (PlayerInfo[playerid][pLider] < 1 && PlayerInfo[playerid][pPrivilegija] < 1) return SCM(playerid, -1, ""CRVENA"[ V:RPG ]  "SIVA"Samo Lideri.");
	new id, rank,string[128];
	if(sscanf(params, "ui", id, rank)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/dodelirank [ID/Ime] [Rank (0-5)]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac je offline!");
	if(PlayerInfo[playerid][pLider] != PlayerInfo[id][pClan]) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac je clan neke druge organizacije!");
	if(rank < 0 || rank > 5) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Rank ne moze biti manji od 0 i veci od 5!");
	if(PlayerInfo[id][pLider] > 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac je lider neke organizacije pa mu ne mozete dati rank!");
	if(id == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete sebi davati rank!");
	/////////////////PD///////////////////////
	if(PlayerInfo[playerid][pLider] == 1)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, PD_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, PD_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, PD_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) { 	Update_Skin(id, PD_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, PD_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, PD_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////TVF////////////////////
	else if(PlayerInfo[playerid][pLider] == 2)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, TVF_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, TVF_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, TVF_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, TVF_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, TVF_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, TVF_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	/////////////////////TRIADS////////////////////
	else if(PlayerInfo[playerid][pLider] == 3)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, TBT_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, TBT_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, TBT_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, TBT_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, TBT_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, TBT_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
    /////////////////////GROVE////////////////////
	else if(PlayerInfo[playerid][pLider] == 4)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, GSF_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, GSF_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, GSF_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, GSF_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, GSF_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, GSF_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	//////////////////BALLAS///////////////////////
	else if(PlayerInfo[playerid][pLider] == 5)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, BALLAS_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, BALLAS_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, BALLAS_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, BALLAS_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, BALLAS_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, BALLAS_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	//////////////////NOVINARI/////////////////////
	else if(PlayerInfo[playerid][pLider] == 6)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, NOVINARI_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, NOVINARI_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, NOVINARI_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, NOVINARI_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, NOVINARI_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, NOVINARI_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	/////////////////////////////////////////////////
	if(PlayerInfo[playerid][pLider] == 7)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, MA_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, MA_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, MA_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) { 	Update_Skin(id, MA_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, MA_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, MA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
	if(PlayerInfo[playerid][pLider] == 8)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, PS_RANK);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, PS_RANK);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, PS_RANK);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) { 	Update_Skin(id, PS_RANK);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, PS_RANK);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, PD_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
	if(PlayerInfo[playerid][pLider] == 9)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, CO_RANK);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, CO_RANK2); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, CO_RANK3); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) { 	Update_Skin(id, CO_RANK4); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, CO_RANK5); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, CO_ZRANK); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 10)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, SA_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, SA_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, SA_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, SA_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, SA_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 11)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, PO_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, PO_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, PO_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, PO_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, PO_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 12)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, PO2_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, PO2_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, PO2_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, PO2_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, PO2_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 13)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, PO3_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, PO3_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, PO3_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, PO3_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, PO3_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 14)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, TAXI_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, TAXI_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, TAXI_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, TAXI_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, TAXI_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 15)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, BASE_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, BASE_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, BASE_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, BASE_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, BASE_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 16)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, FBI_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, FBI_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, FBI_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, FBI_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, FBI_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 17)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, RB_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, RB_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, RB_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, RB_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, RB_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	//////////////////////////////////////////////
    	////////////////////////////////////////////////////
 	else if(PlayerInfo[playerid][pLider] == 19)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, LCN_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, LCN_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, LCN_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, LCN_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, LCN_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	else if(PlayerInfo[playerid][pLider] == 20)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, PO4_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, PO4_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, PO4_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, PO4_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, PO4_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	else if(PlayerInfo[playerid][pLider] == 21)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, SMITH_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, SMITH_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, SMITH_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, SMITH_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, SMITH_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	else if(PlayerInfo[playerid][pLider] == 22)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, LOCA_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, LOCA_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, LOCA_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, LOCA_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, LOCA_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	else if(PlayerInfo[playerid][pLider] == 23)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, TEC_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, TEC_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, TEC_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, TEC_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, TEC_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	else if(PlayerInfo[playerid][pLider] == 25)
	{
		if(PlayerInfo[id][pSex] == 1)
		{
			if(rank==1 || rank==0){	Update_Skin(id, VLA_RANK1);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 2) { 	Update_Skin(id, VLA_RANK2);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 3) { 	Update_Skin(id, VLA_RANK3);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 4) {    Update_Skin(id, VLA_RANK4);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
			else if(rank == 5) { 	Update_Skin(id, VLA_RANK5);	PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
		}
		else { Update_Skin(id, SA_ZENSKI); PlayerInfo[id][pSkin] = GetPlayerSkin(id); }
	}
	//////////////////////////////////////////////
	PlayerInfo[id][pRank] = rank;
	format(string, sizeof(string), ""VARADERO"INFO | "SIVA"Lider %s vas je unapredio u rank %d!", GetName(playerid),rank);
	SendClientMessage(id, -1, string);
	format(string, sizeof(string), ""VARADERO"INFO | "SIVA"Dao si %s rank %d.", GetName(id),rank);
	SendClientMessage(playerid, -1, string);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:odbij(playerid, params[])
{

    new ime[24];
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
	if(sscanf(params, "s[64]", ime))
	{
		SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc: "BELA"/odbij [Ime]");
		SCM(playerid,-1,""SRWBOJA"Odbij Ime: "BELA"Poziv | Intervju | Gorivo | Popravku | Ponudu");
		return 1;
	}
	if(!strcmp(ime, "poziv", true))
	{
		if(PlayerInfo[playerid][pPozvan] == 0) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Niko vas nije pozvao u org!");
		///////////////////////////////////////////
	    else if(PlayerInfo[playerid][pPozvan] == 1)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""SRWBOJA"[LSPD] "SIVA"Igrac %s je odbio poziv da se prikljuci LSPD!", GetName(playerid));
			ChatPD(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		///////////////////////////////////////////
	    else if(PlayerInfo[playerid][pPozvan] == 2)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""VARADERO"[TVF] "SIVA"Igrac %s je odbio poziv da se prikljuci TVF!", GetName(playerid));
			ChatVF(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		///////////////////////////////////////////
		else if(PlayerInfo[playerid][pPozvan] == 3)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""SRWBOJA"[BDT] "SIVA"Igrac %s je odbio poziv da se prikljuci BDT!", GetName(playerid));
			ChatTBT(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		///////////////////////////////////////////
		else if(PlayerInfo[playerid][pPozvan] == 4)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ZELENA"[GSF] "SIVA"Igrac %s je odbio poziv da se prikljuci GSF!", GetName(playerid));
			ChatGSF(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		////////////////////////////////////////////
		else if(PlayerInfo[playerid][pPozvan] == 5)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""BALLASC"[BALLAS] "SIVA"Igrac %s je odbio poziv da se prikljuci Ballas!", GetName(playerid));
			ChatBallas(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		////////////////////////////////////////////
		else if(PlayerInfo[playerid][pPozvan] == 6)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		////////////////////////////////////////////
		else if(PlayerInfo[playerid][pPozvan] == 7)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		////////////////////////////////////////////
		else if(PlayerInfo[playerid][pPozvan] == 8)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		////////////////////////////////////////////
		else if(PlayerInfo[playerid][pPozvan] == 9)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 9)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 10)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 11)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 12)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 13)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 14)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 15)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 16)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 17)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[BCC] "BELA"Igrac %s je odbio poziv da se prikljuci BCC!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 18)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Igrac %s je odbio poziv da se prikljuci Los Santos Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 19)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[DR] "BELA"Igrac %s je odbio poziv da se prikljuci DeathRow!", GetName(playerid));
			ChatNovinari(-1, string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 20)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[Russian Mafia] "BELA"Igrac %s je odbio poziv da se prikljuci Russian Mafia!", GetName(playerid));
			ChatPrivatna4(string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 21)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[Narco Carte] "BELA"Igrac %s je odbio poziv da se prikljuci Narco Carte!", GetName(playerid));
			ChatNarco(string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 22)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""ORANGE"[Loca Carte] "BELA"Igrac %s je odbio poziv da se prikljuci Loca Carte!", GetName(playerid));
			ChatNarco(string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 23)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""CRVENA"[TBB] "BELA"Igrac %s je odbio poziv da se prikljuci TBB!", GetName(playerid));
			ChatTec(string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
		else if(PlayerInfo[playerid][pPozvan] == 25)
		{
		    PlayerInfo[playerid][pPozvan] = 0;
		    PlayerInfo[playerid][pClan] = 0;
		    PlayerInfo[playerid][pRank] = 0;
		    new string[128];
		    format(string, sizeof(string), ""CRVENA"[Varrio Los Aztecas] "BELA"Igrac %s je odbio poziv da se prikljuci Varrio Los Aztecas!", GetName(playerid));
			ChatVla(string);
			SCM(playerid,-1,""SIVA"Odbili ste poziv da se pridruzite organizaciji!");
		}
	}
	else if(!strcmp(ime, "intervju", true))
	{
		if(IntervjuGotov[playerid] == 999) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "BELA"Niko vam nije ponudio intervju!");
	    IntervjuGotov[playerid] = 999;
	    SCM(playerid,-1,""SRWBOJA"[ Varadero ] "BELA"Odbili ste intervju!");
	}
	else if(!strcmp(ime, "popravku", true))
	{
	    if(PonudioPopravku[playerid] == -1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nije vam niko ponudio popravku!");
	    PonudioPopravku[playerid] = -1; CenaPopravke[playerid] = 0;
	    SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Odbili ste popravku!");
	}
	else if(!strcmp(ime, "gorivo", true))
	{
	     if(PonudioGorivo[playerid] == -1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nije vam niko ponudio gorivo!");
	     PonudioGorivo[playerid] = -1; CenaGoriva[playerid] = 0;
	     SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Odbili ste gorivo!");
	}
	else if(strcmp(ime,"imanje",true) == 0)
	{
	    SCM(playerid, -1, ""SRWBOJA"[V:RPG] {FFFFFF}Odbili ste imanje!");
		ImanjeOffer[playerid] = 999;
		ImanjePrice[playerid] = 0;
	}
	else if(!strcmp(ime, "lecenje", true))
	{
	    if(LecenjeOd[playerid] == -1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niko vam nije ponudio lecenje!");
	    if(!IsPlayerConnected(LecenjeOd[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac koji vam je ponudio lecenje nije na serveru!");
		new Float:Poz[3]; GetPlayerPos(LecenjeOd[playerid], Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 4.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niste u blizini igraca koji vam je ponudio lecenje!");
		if(IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(LecenjeOd[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete biti u vozilu!");
		if(!IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(LecenjeOd[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Taj igrac je u vozilu!");
		if(PlayerInfo[playerid][pNovacDzep] < CenaLecenja[playerid]) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nemate dovoljno novca!");
		g_NovacMinus(playerid, CenaLecenja[playerid]); g_NovacPlus(LecenjeOd[playerid], CenaLecenja[playerid]);
		SetPlayerHealth(playerid, 99.0);
		new textjbni[512]; format(textjbni, sizeof(textjbni), "[V:RPG] "VARADERO"Izleceni ste od bolnicara %s za %d$!", GetName(LecenjeOd[playerid]), CenaLecenja[playerid]);SCM(playerid, -1, textjbni);
		format(textjbni, sizeof(textjbni), "[V:RPG] "VARADERO"Igrac %s je prihvatio lecenje i zaradio je %d$!", GetName(playerid), CenaLecenja[playerid]);SCM(LecenjeOd[playerid], -1, textjbni);
		LecenjeOd[playerid] = -1; CenaLecenja[playerid] = 0;
	}
	else if(!strcmp(ime, "ponudu", true))
	{
	    if(PonudioIgrac[playerid] == -1 || KomeProdaje[playerid] == -1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niko vam nije ponudio prodaju!");
		CijenaProdaje[PonudioIgrac[playerid]] = 0; CijenaProdaje[playerid] = 0;
  		PonudioIgrac[PonudioIgrac[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[PonudioIgrac[playerid]] = -1; KomeProdaje[playerid] = -1;
	}
	///////////////////////////////////////////
	return 1;
}
//////////////////////////////////////////////////////////
CMD:izbaci(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if (PlayerInfo[playerid][pLider] < 1 && PlayerInfo[playerid][pPrivilegija] < 1) return SCM(playerid, -1, ""CRVENA"[ V:RPG ]  "SIVA"Samo Lideri.");
	new IDizbacenog, kazna, string[128],sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME], razlog[64];
	GetPlayerName(IDizbacenog, giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "uis[64]",IDizbacenog,kazna,razlog)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/izbaci [ID] [Kazna | 0-Ne | 1-Da] [Razlog]");
	//////////////////////////////////////////////////////////////////////////////////////////////////////
   	if(IDizbacenog == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Taj igrac je offline!");
	if(IDizbacenog == playerid) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ne mozete sebi izbaciti iz org!");
	if(PlayerInfo[playerid][pLider] != PlayerInfo[IDizbacenog][pClan]) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "SIVA"Igrac nije clan vase org!");
	if(PlayerInfo[IDizbacenog][pLider] > 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ne mozete izbaciti lidera!");
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	if(PlayerInfo[IDizbacenog][pClan] < 0) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Taj igrac nije u vasoj organizaciji!");
	{
	    if(kazna == 0)
	    {
			format(string, sizeof(string), ""SRWBOJA"[INFO]: "SIVA"Izbacen si iz organizacije | Lider: %s | Kazna: Ne | Razlog: %s",GetName(playerid), razlog);
			SendClientMessage(IDizbacenog, -1, string);
			PlayerInfo[IDizbacenog][pClan] = 0;
			PlayerInfo[IDizbacenog][pRank] = 0;
			PlayerInfo[IDizbacenog][pLider] = 0;
			PlayerInfo[IDizbacenog][pOrgUgovor] = 0;
			PlayerInfo[IDizbacenog][pSkin] = 1;
			PlayerInfo[IDizbacenog][pRankName] = 0;
			Update_Skin(IDizbacenog,PlayerInfo[IDizbacenog][pSkin]);
			format(string, sizeof(string), ""SRWBOJA"[INFO]: "SIVA"Izbacio si %s iz svoje organizacije.", GetName(IDizbacenog));
			SendClientMessage(playerid, -1, string);
		}
		else if(kazna == 1)
		{
		    format(string, sizeof(string), ""SRWBOJA"[INFO]: "SIVA"Izbacen si iz organizacije | Lider: %s | Org kazna: Da (12 sati) | Razlog: %s.",GetName(playerid), razlog);
			SendClientMessage(IDizbacenog, -1, string);
			PlayerInfo[IDizbacenog][pClan] = 0;
			PlayerInfo[IDizbacenog][pRank] = 0;
			PlayerInfo[IDizbacenog][pLider] = 0;
			PlayerInfo[IDizbacenog][pOrgUgovor] = 12;
			PlayerInfo[IDizbacenog][pSkin] = 1;
			PlayerInfo[IDizbacenog][pRankName] = 0;
			Update_Skin(IDizbacenog,PlayerInfo[IDizbacenog][pSkin]);
			format(string, sizeof(string), ""SRWBOJA"[INFO]: "SIVA"Izbacio si %s iz svoje organizacije sa org kaznom 12 sati.", GetName(IDizbacenog));
			SendClientMessage(playerid, -1, string);
		}
		else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pogresan ID odabira kazne!");
	}
	return 1;
}
//////////////////////////////////////////////////////////
CMD:aizbaci(playerid, params[])
{
    //if(PlayerInfo[playerid][pSuspendovan] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"VI STE SUSSPENDOVANI VAMA SU KOMANDE ZABRANJENE ");
    if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo admini!");
	new IDizbacenog, string[128],sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
	GetPlayerName(IDizbacenog, giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",IDizbacenog)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/aizbaci [ID]");
   	if(IDizbacenog == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Taj igrac je offline!");
	if(IDizbacenog == playerid) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ne mozete sebe izbaciti iz org!");
	if(PlayerInfo[IDizbacenog][pLider] > 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ne mozete izbaciti lidera!");
	if(PlayerInfo[IDizbacenog][pClan] < 1) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Taj igrac nije u organizaciji!");
    format(string, sizeof(string), ""SRWBOJA"[INFO]: "SIVA"Administrator %s vas je izbacio iz organizacije",GetName(playerid));
	SendClientMessage(IDizbacenog, -1, string);
	PlayerInfo[IDizbacenog][pClan] = 0;
	PlayerInfo[IDizbacenog][pRank] = 0;
	PlayerInfo[IDizbacenog][pLider] = 0;
	PlayerInfo[IDizbacenog][pOrgUgovor] = 0;
	PlayerInfo[IDizbacenog][pSkin] = 1;
	PlayerInfo[IDizbacenog][pRankName] = 0;
	Update_Skin(IDizbacenog,PlayerInfo[IDizbacenog][pSkin]);
	format(string, sizeof(string), ""SRWBOJA"[INFO]: "SIVA"Izbacio si %s iz organizacije.", GetName(IDizbacenog));
	SendClientMessage(playerid, -1, string);
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:napustiorg(playerid, params[])
{
	if(PlayerInfo[playerid][pClan] == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste clan nijedne organizacije!");
	if(PlayerInfo[playerid][pLider] > 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete napustiti org jer ste lider!");
    if(PlayerInfo[playerid][pOrgUgovor] < 12)
	{
	    PlayerInfo[playerid][pOrgUgovor] = 12;
		SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Napustili ste svoju organizaciju, a niste ispunili ugovor.");
		SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Kaznjeni ste 12 sati ulaska u organizaciju!");
	}
	PlayerInfo[playerid][pClan] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pSkin] = 1;
	PlayerInfo[playerid][pRankName] = 0;
	SetPlayerHealth(playerid, 0);
	Update_Skin(playerid,PlayerInfo[playerid][pSkin]);
	SpawnIgraca(playerid);
	SpawnPlayer(playerid);
	SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Napustili ste vasu organizaciju!");
	SavePlayer(playerid);
	return 1;
}
////////////////////////////////////////////////////////////
CMD:prihvati(playerid, params[])
{

	new ime[47];
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Zavezan si ne mozes to!");
	if(sscanf(params, "s[46]", ime))
	{
		SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc: "BELA"/prihvati [Ime]");
		SCM(playerid,-1,""SRWBOJA"Prihvati Ime: "BELA"Poziv | Pojacanje | Kaznu | Popravku | Gorivo | Lecenje");
		return 1;
	}
	new string[128];
	if(!strcmp(ime, "poziv", true))
	{
		new ftext[80];
		if(PlayerInfo[playerid][pPozvan] == 0) return SCM(playerid, -1, ""SRWBOJA"[ Varadero ] "SIVA"Niko vas nije pozvao u org!");
		else if(PlayerInfo[playerid][pPozvan] == 1)
		{
			ftext = "LSPD";
			PlayerInfo[playerid][pClan] = 1; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = 284;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""SRWBOJA"[LSPD] "SIVA"Uspesno ste se pridruzili LSPD Organizaciji!");
			format(string, sizeof(string), ""SRWBOJA"[LSPD] "BELA"Igrac %s je prihvatio poziv i pridruzio se LSPD!", GetName(playerid));
			ChatPD(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 2)
		{
			ftext = "The Vinci Family";
			PlayerInfo[playerid][pClan] = 2; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = 127;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""SRWBOJA"[TVF] "SIVA"Uspesno ste se pridruzili The Vinci Family Organizaciji!");
			format(string, sizeof(string), ""SRWBOJA"[The Vinci Family] "BELA"Igrac %s je prihvatio poziv i pridruzio se The Vinci Family!", GetName(playerid));
			ChatVF(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 3)
		{
			ftext = "Black Dragon Triads";
			PlayerInfo[playerid][pClan] = 3; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = 117;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""VARADERO"[BDT] "SIVA"Uspesno ste se pridruzili Black Dragon Triads Organizaciji!");
			format(string, sizeof(string), ""SRWBOJA"[Black Dragon Triads] "BELA"Igrac %s je prihvatio poziv i pridruzio se Black Dragon Triads!", GetName(playerid));
			ChatTBT(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 4)
		{
			ftext = "Grove Street Family";
			PlayerInfo[playerid][pClan] = 4; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = 105;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ZELENA"[GSF] "SIVA"Uspesno ste se pridruzili Grove Street Family Organizaciji!");
			format(string, sizeof(string), ""ZELENA"[Grove Street Family] "SIVA"Igrac %s je prihvatio poziv i pridruzio se Grove Street Family!", GetName(playerid));
			ChatGSF(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 5)
		{
			ftext = "Ballas";
			PlayerInfo[playerid][pClan] = 5; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = BALLAS_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""BALLASC"[BALLAS] "SIVA"Uspesno ste se pridruzili Ballas Organizaciji!");
			format(string, sizeof(string), ""BALLASC"[Ballas] "SIVA"Igrac %s je prihvatio poziv i pridruzio se Ballas!", GetName(playerid));
			ChatBallas(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 6)
		{
			ftext = "Novinari";
			PlayerInfo[playerid][pClan] = 6; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = NOVINARI_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[LSN]: "BELA"Uspesno ste se pridruzili Novinarima!");
			format(string, sizeof(string), ""ORANGE"[LSN]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Novinarima!", GetName(playerid));
			ChatNovinari(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 7)
		{
			ftext = "CIA";
			PlayerInfo[playerid][pClan] = 7; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = PD_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[CIA]: "BELA"Uspesno ste se pridruzili CIA!");
			format(string, sizeof(string), ""ORANGE"[CIA]: "BELA"Igrac %s je prihvatio poziv i pridruzio se CIA!", GetName(playerid));
			ChatSPD(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 8)
		{
			ftext = "Parking Serviserima";
			PlayerInfo[playerid][pClan] = 8; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = PS_RANK;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[PS]: "BELA"Uspesno ste se pridruzili Parking Serviserima!");
			format(string, sizeof(string), ""ORANGE"[PS]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Parking Serviserima!", GetName(playerid));
			ChatPS(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 9)
		{
			ftext = "Condor";
			PlayerInfo[playerid][pClan] = 9; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = CO_RANK;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[CON]: "BELA"Uspesno ste se pridruzili Condor-ima!");
			format(string, sizeof(string), ""ORANGE"[CON]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Condor-ima!", GetName(playerid));
			CondorChat(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 10)
		{
			ftext = "Hitman";
			PlayerInfo[playerid][pClan] = 10; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = SA_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[Hitman]: "BELA"Uspesno ste se pridruzili Hitmenima.");
			format(string, sizeof(string), ""ORANGE"[Hitman]: "BELA"Igrac %s je prihvatio poziv i pridruzio se hitmenima!", GetName(playerid));
			ChatSA(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 11)
		{
			ftext = "Blue Lagoon";
			PlayerInfo[playerid][pClan] = 11; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = PO_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[Blue Lagoon]: "BELA"Uspesno ste se pridruzili Privatnoj Org.");
			format(string, sizeof(string), ""ORANGE"[Blue Lagoon]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Privatnoj org.!", GetName(playerid));
			ChatPrivatna(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 12)
		{
			ftext = "La Cosa Nostra";
			PlayerInfo[playerid][pClan] = 12; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = PO_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[LCN]: "BELA"Uspesno ste se pridruzili La Cosa Nostra.");
			format(string, sizeof(string), ""ORANGE"[LCN]: "BELA"Igrac %s je prihvatio poziv i pridruzio se LCN.!", GetName(playerid));
			ChatPrivatna2(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 13)
		{
			ftext = "Da Naga Boys";
			PlayerInfo[playerid][pClan] = 13; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = PO_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[DNB]: "BELA"Uspesno ste se pridruzili DNB.");
			format(string, sizeof(string), ""ORANGE"[DNB]: "BELA"Igrac %s je prihvatio poziv i pridruzio se DNB.!", GetName(playerid));
			ChatPrivatna3(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 14)
		{
			ftext = "Taxi";
			PlayerInfo[playerid][pClan] = 14; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = TAXI_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"Taxi: "BELA"Uspesno ste se pridruzili Taxi.");
			format(string, sizeof(string), ""ORANGE"Taxi: "BELA"Igrac %s je prihvatio poziv i pridruzio se Taxi.!", GetName(playerid));
			ChatTaxi(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 15)
		{
			ftext = "Yakuza";
			PlayerInfo[playerid][pClan] = 15; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = BASE_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[Yakuza]: "BELA"Uspesno ste se pridruzili Yakuza.");
			format(string, sizeof(string), ""ORANGE"[Yakuza]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Yakuza!", GetName(playerid));
			ChatBase(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 16)
		{
			ftext = "FBI";
			PlayerInfo[playerid][pClan] = 16; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = FBI_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[FBI]: "BELA"Uspesno ste se pridruzili FBI.");
			format(string, sizeof(string), ""ORANGE"[FBI]: "BELA"Igrac %s je prihvatio poziv i pridruzio se FBI.!", GetName(playerid));
			ChatFBI(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 17)
		{
			ftext = "Black Cobra Corporation";
			PlayerInfo[playerid][pClan] = 17; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = RB_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[Black Cobra Corporation]: "BELA"Uspesno ste se pridruzili Black Cobra Corporation.");
			format(string, sizeof(string), ""ORANGE"[Black Cobra Corporation]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Black Cobra Corporation.!", GetName(playerid));
			ChatRB(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 18)
		{
			ftext = "Vatrogasci";
			PlayerInfo[playerid][pClan] = 18; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = V_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[Vatrogasci]: "BELA"Uspesno ste se pridruzili Vatrogascima.");
			format(string, sizeof(string), ""ORANGE"[Vatrogasci]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Vatrogascima.!", GetName(playerid));
			ChatVatra(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 19)
		{
			ftext = "DR";
			PlayerInfo[playerid][pClan] = 19; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = LCN_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[DR]: "BELA"Uspesno ste se pridruzili DR.");
			format(string, sizeof(string), ""ORANGE"[DR]: "BELA"Igrac %s je prihvatio poziv i pridruzio se DR.!", GetName(playerid));
			ChatLCN(-1, string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 20)
		{
			ftext = "Da Naga Boys";
			PlayerInfo[playerid][pClan] = 20; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = PO4_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[The Russian Mafia]: "BELA"Uspesno ste se pridruzili Russian Mafia.");
			format(string, sizeof(string), ""ORANGE"[The Russian Mafia]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Russian Mafia.!", GetName(playerid));
			ChatPrivatna4(string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 21)
		{
			ftext = "Taxi";
			PlayerInfo[playerid][pClan] = 21; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = SMITH_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[Narco Cartel]: "BELA"Uspesno ste se pridruzili Narco Cartel.");
			format(string, sizeof(string), ""ORANGE"[Narco Cartel]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Narco Cartel.!", GetName(playerid));
			ChatNarco(string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 22)
		{
			ftext = "LC";
			PlayerInfo[playerid][pClan] = 22; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = LOCA_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""ORANGE"[Narco Cartel]: "BELA"Uspesno ste se pridruzili Loca Cartel.");
			format(string, sizeof(string), ""ORANGE"[Loca Cartel]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Loca Cartel.!", GetName(playerid));
			ChatNarco(string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 23)
		{
			ftext = "TBB";
			PlayerInfo[playerid][pClan] = 23; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = TEC_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""CRVENA"[TBB]: "BELA"Uspesno ste se pridruzili TBB.");
			format(string, sizeof(string), ""CRVENA"[TBB]: "BELA"Igrac %s je prihvatio poziv i pridruzio se TBB.!", GetName(playerid));
			ChatTec(string);
		}
		else if(PlayerInfo[playerid][pPozvan] == 24)
		{
			ftext = "VLA";
			PlayerInfo[playerid][pClan] = 25; PlayerInfo[playerid][pRank] = 1; PlayerInfo[playerid][pSkin] = VLA_RANK1;
			PlayerInfo[playerid][pPozvan] = 0; Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,""CRVENA"[Varrio Los Aztecas]: "BELA"Uspesno ste se pridruzili Varrio Los Aztecas.");
			format(string, sizeof(string), ""CRVENA"[Varrio Los Aztecas]: "BELA"Igrac %s je prihvatio poziv i pridruzio se Varrio Los Aztecas.!", GetName(playerid));
			ChatVla(string);
		}
	}
	if(!strcmp(ime, "pojacanje", true))
	{
		if(!Policajac(playerid)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo clanovi LSPD!");
		if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
		if(PozvaoPojacanje == -1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niko nije pozvao pojacanje!");
		new Float:xxx,Float:yyy, Float: zzz; GetPlayerPos(PozvaoPojacanje, xxx, yyy, zzz);
		PosaoGPS[playerid] = 1; SetPlayerCheckpoint(playerid, xxx, yyy, zzz, 3.0);
		SendClientMessage(playerid, -1, ""SIVA"Prihvatili ste poziv za pojacanje idite na crveni marker!");
		format(string, sizeof(string), "Policajac %s je prihvatio vas poziv za pojacanje!", GetName(playerid));
		SendClientMessage(PozvaoPojacanje, -1, string);
	}
	if(!strfind(ime, "taxi"))
	{
		new id;
		if(PlayerInfo[playerid][pClan] != 14) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo clanovi Taxi-a!");
		if(sscanf(params, "s[24]u", ime, id)) return SCM(playerid,-1,""SRWBOJA"Brutal Kuca Pomoc: "BELA"/prihvati taxi [playerid]");
		if(PozvaoTaxi[id] != 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Taj igrac nije pozvao taxi!");
		new Float:xxx,Float:yyy, Float: zzz; GetPlayerPos(id, xxx, yyy, zzz);
		PosaoGPS[playerid] = 1; SetPlayerCheckpoint(playerid, xxx, yyy, zzz, 3.0);
		SendClientMessage(playerid, -1, ""SIVA"Prihvatili ste poziv za taxi idite na crveni marker!");
		format(string, sizeof(string), "Taxista %s je prihvatio vas poziv za taxi!", GetName(playerid));
		SendClientMessage(id, -1, string);
		PozvaoTaxi[id] = 0;
	}
	else if(strcmp(ime,"imanje",true) == 0)
	{
 		if(ImanjeOffer[playerid] < 999)
   		{
			new sendername[MAX_PLAYER_NAME];
	        new giveplayer[MAX_PLAYER_NAME];
   		    GetPlayerName(ImanjeOffer[playerid], giveplayer, sizeof(giveplayer));
	    	GetPlayerName(playerid, sendername, sizeof(sendername));
 	        if(PlayerInfo[playerid][pPosedovanjeImanja] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] | "SIVA"Vec imas imanje!");
	    	if(PlayerInfo[ImanjeOffer[playerid]][pPosedovanjeImanja] == 1) return SCM(playerid, -1, "On/a vise ne poseduje taj objekat!");
	        if(GetPlayerMoney(playerid) >= ImanjePrice[playerid])
	        {
				if(IsPlayerConnected(ImanjeOffer[playerid]))
				{
					PlayerInfo[playerid][pPosedovanjeImanja] = PlayerInfo[ImanjeOffer[playerid]][pPosedovanjeImanja];
 					PlayerInfo[ImanjeOffer[playerid]][pPosedovanjeImanja] = 1;
					format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}Kupili ste imanje za $%d od gradjanina %s.",ImanjePrice[playerid],GetName(ImanjeOffer[playerid]));
                    SCM(playerid,-1, string);
					format(string, sizeof(string), ""SRWBOJA"[V:RPG] {FFFFFF}%s je kupio vase imanje za $%d.",GetName(playerid),ImanjePrice[playerid]);
					SCM(ImanjeOffer[playerid], -1, string);
	    			GivePlayerMoney(playerid, -ImanjePrice[playerid]);
			    	GivePlayerMoney(ImanjeOffer[playerid], ImanjePrice[playerid]);
			    	strmid(II[PlayerInfo[playerid][pPosedovanjeImanja]][iVlasnik], sendername, 0, strlen(sendername), 9999);
					SacuvajImanje(PlayerInfo[playerid][pPosedovanjeImanja]);
					SavePlayer(playerid);
					SavePlayer(ImanjeOffer[playerid]);
					ImanjeLabelIPickup(PlayerInfo[playerid][pPosedovanjeImanja]);
	    			ImanjeOffer[playerid] = 999;
					ImanjePrice[playerid] = 0;
					SCM(playerid, -1, ""SRWBOJA"[V:RPG] {FFFFFF}Cestitamo na vasoj novoj kupovini! (/imanje)");
				}
			}
		}
	}
	if(!strcmp(ime, "kaznu", true))
 	{
		new Float:Poz[3];
		GetPlayerPos(KaznuNapisao[playerid], Poz[0], Poz[1], Poz[2]);
		if(KaznuNapisao[playerid] == -1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niko vam nije napisao kaznu!");
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Predaleko ste od igraca koji vam je napisao kaznu!");
		if(!IsPlayerConnected(KaznuNapisao[playerid])) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Igrac koji vam je napisao kaznu je offline!");
		if(PlayerInfo[playerid][pNovacDzep] < CenaKazne[playerid]) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemas dovoljno novca da platis kaznu!");
		format(string, charsmax(string), ""VARADERO"LSPD | "SIVA"Platili ste kaznu u iznosu od %d$.", CenaKazne[playerid]); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), ""VARADERO"LSPD | "SIVA"%s je platio kaznu u iznosu od %d$.", GetName(playerid), CenaKazne[playerid]);
		SCM(KaznuNapisao[playerid], -1, string);
		g_NovacMinus(playerid, CenaKazne[playerid]);
		g_NovacPlus(KaznuNapisao[playerid], CenaKazne[playerid]);
		CenaKazne[playerid] = 0; KaznuNapisao[playerid] = -1;
	}
	if(!strcmp(ime, "intervju", true))
 	{
 		if(IntervjuGotov[playerid] < 999)
 		{
			if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(IntervjuGotov[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac kojem ste ponudili intervju nije u vasem vozilu!");
			SCM(playerid, -1, ""ORANGE"LSN | "BELA"Intervju je zapocet, pa ste za to vreme zaledjeni (/pintervju | za prekidanje intervju-a).");
			SCM(IntervjuGotov[playerid], -1, ""ORANGE"LSN | "BELA"Intervju je zapocet, pa ste za to vreme zaledjeni (/pintervju | za prekidanje intervju-a).");
			TogglePlayerControllable(playerid, 0); TogglePlayerControllable(IntervjuGotov[playerid], 0);
			PricauIntervju[playerid] = IntervjuGotov[playerid]; PricauIntervju[IntervjuGotov[playerid]] = playerid; IntervjuGotov[playerid] = 999;
		}
		else
		{
			SCM(playerid, 1, "[V:RPG] "SPLAVA"Niko vam nije ponudio intervju!");
			return 1;
		}
	}
	if(!strcmp(ime, "popravku", true))
	{
	    if(PonudioPopravku[playerid] == -1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nije vam niko ponudio popravku!");
	    if(!IsPlayerConnected(PonudioPopravku[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac koji vam je ponudio popravku je izasao sa servera!");
		new Float:Poz[3];
		GetPlayerPos(PonudioPopravku[playerid], Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niste kod igraca koji vam je ponudio popravku!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Morate biti u vozilu!");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Morate biti na mestu vozaca!");
		if(IsPlayerInAnyVehicle(PonudioPopravku[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac koji vam je ponudio popravku ne moze biti u vozilu!");
		if(PlayerInfo[playerid][pNovacDzep] < CenaPopravke[playerid]) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nemate dovoljno novca za popravku!");
		g_NovacMinus(playerid, CenaPopravke[playerid]);
		g_NovacPlus(PonudioPopravku[playerid], CenaPopravke[playerid]);
		RepairVehicle(GetPlayerVehicleID(playerid));
		SetVehicleHealth(GetPlayerVehicleID(playerid), 999.0);
		format(string, charsmax(string), "[V:RPG] "HZELENA"Vozilo je uspesno popravljeno za %d$!", CenaPopravke[playerid]); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "[V:RPG] "HZELENA"Igrac %s je prihvatio popravku za %d$.", GetName(playerid), CenaPopravke[playerid]);
		SCM(PonudioPopravku[playerid], -1, string);
        FirmaNovac(96, CenaPopravke[playerid] * 25 / 100); PonudioPopravku[playerid] = -1; CenaPopravke[playerid] = 0;
	}
	if(!strcmp(ime, "gorivo", true))
	{
	    if(PonudioGorivo[playerid] == -1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nije vam niko ponudio gorivo!");
	    if(!IsPlayerConnected(PonudioGorivo[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac koji vam je ponudio gorivo je izasao sa servera!");
		new Float:Poz[3];
		GetPlayerPos(PonudioGorivo[playerid], Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niste kod igraca koji vam je ponudio gorivo!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Morate biti u vozilu!");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Morate biti na mestu vozaca!");
		if(IsPlayerInAnyVehicle(PonudioGorivo[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac koji vam je ponudio gorivo ne moze biti u vozilu!");
		if(PlayerInfo[playerid][pNovacDzep] < CenaGoriva[playerid]) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nemate dovoljno novca za gorivo!");
		if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sipati gorivo u biciklo!");
		g_NovacMinus(playerid, CenaGoriva[playerid]);
		g_NovacPlus(PonudioGorivo[playerid], CenaGoriva[playerid]);
		if(VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid))) || VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))) || VoziloJeKamion(GetVehicleModel(GetPlayerVehicleID(playerid)))) Fuel[GetPlayerVehicleID(playerid)] = 85;
	    else if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid)))) Fuel[GetPlayerVehicleID(playerid)] = 45;
	    else Fuel[GetPlayerVehicleID(playerid)] = 45;
		format(string, sizeof(string), "~w~GORIVO:_%d_l", Fuel[GetPlayerVehicleID(playerid)]);
        PlayerTextDrawSetString(playerid, Brzinomer[playerid][8], string);
		format(string, charsmax(string), "[V:RPG] "HZELENA"Vozilo je uspesno napunjeno za %d$!", CenaGoriva[playerid]); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "[V:RPG] "HZELENA"Igrac %s je prihvatio gorivo za %d$.", GetName(playerid), CenaGoriva[playerid]);
		SCM(PonudioGorivo[playerid], -1, string);
        FirmaNovac(96, 80); PonudioGorivo[playerid] = -1; CenaGoriva[playerid] = 0;
	}
	if(!strcmp(ime, "lecenje", true))
	{
	    if(LecenjeOd[playerid] == -1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niko vam nije ponudio lecenje!");
	    if(!IsPlayerConnected(LecenjeOd[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac koji vam je ponudio lecenje nije na serveru!");
		new Float:Poz[3]; GetPlayerPos(LecenjeOd[playerid], Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 4.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niste u blizini igraca koji vam je ponudio lecenje!");
		if(IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(LecenjeOd[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete biti u vozilu!");
		if(!IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(LecenjeOd[playerid])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Taj igrac je u vozilu!");
		if(PlayerInfo[playerid][pNovacDzep] < CenaLecenja[playerid]) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nemate dovoljno novca!");
		g_NovacMinus(playerid, CenaLecenja[playerid]); g_NovacPlus(LecenjeOd[playerid], CenaLecenja[playerid]);
		SetPlayerHealth(playerid, 99.0);
		format(string, charsmax(string), "[V:RPG] "VARADERO"Izleceni ste za od bolnicara %s za %d$!", GetName(LecenjeOd[playerid]), CenaLecenja[playerid]); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "[V:RPG] "VARADERO"Igrac %s je prihvatio lecenje i zaradio je %d$!", GetName(playerid), CenaLecenja[playerid]);
		SCM(LecenjeOd[playerid], -1, string);
		LecenjeOd[playerid] = -1; CenaLecenja[playerid] = 0;
	}
    return 1;
}
////////////////////////////////////////////////////////////
CMD:obori(playerid, params[])
{
	new igrac;
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(sscanf(params,"u",igrac)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/obori [ID/Ime]");
	if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Pogresan ID!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes oboriti dok si u vozilu!");
	if(igrac == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete sami sebe oboriti!");
	if(IgracPolicajac(igrac)) return SCM(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Ne mozete oboriti PD!");
	if(IsPlayerInAnyVehicle(igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes oboriti dok je u vozilu!");
	if(PlayerInfo[igrac][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[GRESKA] "SRWBOJA"Taj igrac ima wl!");
	if(!DaljinaIgraca(2.0,playerid,igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	TogglePlayerControllable(igrac, 0); IgracOboren[igrac] = 1;
	OborenTimer[igrac] = SetTimerEx("OborenTajmer", 30000, false, "i", igrac);
	OnePlayAnim(igrac, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:skinimaramu(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes skinuti maramu dok si u vozilu!");
    foreach(new i : Player)
    {
		if(i != playerid)
		{
			if(DaljinaIgraca(10.0,playerid,i))
			{
				if(Marama[i] == 1) return SCM(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Taj igrac nema maramu!");
				if(IsPlayerInAnyVehicle(i)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes skinuti maramu dok je u vozilu!");
				if(IgracPolicajac(i)) return SCM(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Ne mozete skinuti maramu PD!");
				Marama[i] = 1;
				for(new j = 0; j < MAX_PLAYERS; j++)
				{
					ShowPlayerNameTagForPlayer(j, i, 1);
				}
			}
		}
    }
	SCM(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Uspesno ste skinuli maramu igracu!");
	return 1;
}
CMD:cuff(playerid, params[])
{

	new igrac; new string[128];
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(sscanf(params,"u",igrac)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/cuff [ID/Ime]");
	if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Pogresan ID!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes staviti igracu lisice dok si u vozilu!");
	if(igrac == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete sebi staviti lisice!");
	if(IgracPolicajac(igrac)) return SCM(playerid, -1, ""SPLAVA"[GRESKA] "SIVA"Ne mozete staviti lisice PD!");
	if(IsPlayerInAnyVehicle(igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes staviti igracu lisice dok je u vozilu!");
	if(!DaljinaIgraca(5.0,playerid,igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	if(IgracTazovan[igrac] == 0) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Moras prvo tazovati igraca!");
	if(StavljeneLisice[igrac] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igracu su vec stavljene lisice!");
	if(PlayerInfo[igrac][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Zasto pokusavas da cuffujes igraca koji je vec zatvoren, gde ti je mozak!");
	StavljeneLisice[igrac] = 1;
	format(string, charsmax(string), ""SRWBOJA"[INFO] "SIVA"%s vam je stavio lisice!",GetName(playerid)); //conver
	SCM(igrac,-1, string);
	format(string, charsmax(string), ""SRWBOJA"[INFO] "SIVA"Stavio si lisice igracu %s!",GetName(igrac)); //conver
	SCM(playerid,-1, string);
	format(string,sizeof(string),"%s vadi lisice i stavlja ih %s-u.",GetName(playerid),GetName(igrac));
	e_RadiusMSG(10.0, playerid, HEX_PROX, string);
	KillTimer(TazerTimer[igrac]);
	IgracTazovan[igrac] = 0;
	TogglePlayerControllable(igrac, 0);
	SetPlayerSpecialAction(igrac,SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(igrac, LISICE_SLOT, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:uncuff(playerid, params[])
{

	new igrac; new string[128];
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(sscanf(params,"u",igrac)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/uncuff [ID/Ime]");
	if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Pogresan ID!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes skinuti igracu lisice dok si u vozilu!");
	if(IsPlayerInAnyVehicle(igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozes skinuti igracu lisice dok je u vozilu!");
	if(igrac == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete sebi skinuti lisice!");
	if(!DaljinaIgraca(5.0,playerid,igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	if(StavljeneLisice[igrac] == 0) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igracu nisu stavljene lisice!");
	StavljeneLisice[igrac] = 0;
	IgracTazovan[igrac] = 0;
	format(string, charsmax(string), ""SRWBOJA"INFO | "SIVA"%s vam je skinuo lisice!",GetName(playerid)); //conver
	SCM(igrac,-1, string);
	format(string, charsmax(string), ""SRWBOJA"INFO | "SIVA"Skinuli ste lisice igracu %s!",GetName(igrac)); //conver
	SCM(playerid,-1, string);
	format(string,sizeof(string),"%s skida lisice igracu %s-u.",GetName(playerid),GetName(igrac));
	e_RadiusMSG(10.0, playerid, HEX_PROX, string);
	TogglePlayerControllable(igrac, 1);
	SetPlayerSpecialAction(igrac,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(playerid, LISICE_SLOT);
	return 1;
}
////////////////////////////////////////////////////////
CMD:vuci(playerid, params[])
{

	new igrac,string[80];
	if(sscanf(params,"u",igrac)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/vuci [ID/Ime]");
	if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Pogresan ID!");
	if(igrac == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete vuci sami sebe!");
	if(!DaljinaIgraca(5.0,playerid,igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	if(StavljeneLisice[igrac] == 0 && Zavezan[igrac] == 0) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igracu nisu stavljene lisice!");
	if(PlayerInfo[igrac][pZatvor] != 0) return SCM(playerid,-1,""SRWBOJA"GRESKA | "SIVA"Taj igrac je u zatvoru!");
	VuciTimer[playerid] = SetTimerEx("Vuci", 1000, 1, "i", playerid);
	TogglePlayerControllable(igrac, 0); VuceIgraca[playerid] = igrac; Vucen[igrac] = playerid;
	format(string,sizeof(string),"%s je poceo vuci igraca %s-u.",GetName(playerid),GetName(igrac));
	if(IsPlayerInAnyVehicle(igrac))
	{
		RemovePlayerFromVehicle(igrac); SCM(playerid, -1, "Krenuli ste vuci igraca koji je u vozilo, igrac je automatski izbacen iz vozila!");
		SCM(igrac, -1,"Izbaceni iz vozila jer vas je policajac poceo vuci!");
	}
	e_RadiusMSG(10.0, playerid, HEX_PROX, string);
	return 1;
}
///////////////////////////////////////////////////////
CMD:pusti(playerid, params[])
{

	new igrac,string[80];
	if(sscanf(params,"u",igrac)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/pusti [ID/Ime]");
	if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Pogresan ID!");
	if(VuceIgraca[playerid] != igrac) return SCM(playerid,-1,""SIVA"Ne vucete tog igraca!");
	if(igrac == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete pustiti sami sebe!");
	if(!DaljinaIgraca(5.0,playerid,igrac)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	KillTimer(VuciTimer[playerid]); TogglePlayerControllable(igrac, 1); VuceIgraca[playerid] = -1; Vucen[igrac] = -1;
    format(string,sizeof(string),"%s je prestao vuci igraca %s-u.",GetName(playerid),GetName(igrac));
	e_RadiusMSG(10.0, playerid, HEX_PROX, string);
	if(StavljeneLisice[igrac] == 1) TogglePlayerControllable(igrac, 0);
	if(Zavezan[igrac] == 1) TogglePlayerControllable(igrac, 0);
	return 1;
}
/////////////////////////////////////////////
CMD:psduznost(playerid, params[])
{

	new string[128];
	if(PlayerInfo[playerid][pClan] != 8) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi Parking Servisa-a!");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0,1077.5121,-909.2858,1043.3033)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Niste u PS interijeru!");
	if(GetTimeEx() < tDuznostVreme[playerid]) return SCM(playerid, -1, ""SIVA"Ovu komandu mozete koristiti svakih 2 minute!");
    format(string,sizeof(string),""BELA"[Parking Servis] "SIVA"Sluzbenik %s je na duznosti",GetName(playerid));
    SCMTA(-1,string);
	tDuznostVreme[playerid] = GetTimeEx() + 180;
	return 1;
}
CMD:togtag(playerid, params[])
{
	{
		if(togv[playerid] == 0)
		{
            PlayerInfo[playerid][pNaglavu] = 1;
		    SCM(playerid,-1,""VARADERO"[V:RPG] "SPLAVA"Sakrili ste tekst na glavu da ga opet upalis /togvip!");
            SetPlayerChatBubble(playerid, "", 0x33CCFFAA, 30.0,60000);
			togv[playerid] = 1;
			return 1;
  		}
		if(togv[playerid] == 1)
		{
		    PlayerInfo[playerid][pNaglavu] = 0;
            SCM(playerid,-1,""VARADERO"[V:RPG] "SPLAVA"Pokazali ste tekst na glavu da ga opet iskljucis /togvip!");
			togv[playerid] = 0;
			return 1;
		}
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:duznost(playerid, params[])
{
    //#pragma unused help
	new string[256];
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(AdminDuty[playerid] == 1) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Prvo iskljuci AdminDuty!");
	if(GMDuty[playerid] == 1) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Prvo iskljuci GMDuty!");
    if(IsPlayerInRangeOfPoint(playerid, 4.0,-252.1009,118.0368,-56.5761) || IsPlayerInRangeOfPoint(playerid, 4.0, -1109.4800, -95.5956, 2040.0691) || IsPlayerInRangeOfPoint(playerid, 4.0, 198.7946,309.3438,1002.9796))
 	{
	if(PolicajacNaDuznosti[playerid] == 0)
	{
        if(!Policajac(playerid))
		{
			format(string, sizeof(string), "* Policajac %s uzima znacku i pistolj iz ormarica.", GetName(playerid));
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Sada ste na duznosti!");
		GivePlayerWeapon(playerid,24,150);
		GivePlayerWeapon(playerid, 3, 0);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		PolicajacNaDuznosti[playerid] = 1;
	}
	else if(PolicajacNaDuznosti[playerid] == 1)
	{
		if(!Policajac(playerid))
		{
		 	format(string, sizeof(string), "* Policajac %s stavlja pistolj i znacku u svoj ormaric.", GetName(playerid));
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vise niste na duznosti!");
		ResetPlayerWeapons(playerid);
		SetPlayerArmour(playerid, 0);
		SetPlayerHealth(playerid, 99.0);
		PolicajacNaDuznosti[playerid] = 0;
	}
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:sajduznost(playerid, params[])
{
    //#pragma unused help
	new string[256];
	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pClan] == 24)
	if(AdminDuty[playerid] == 1) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Prvo iskljuci AdminDuty!");
	if(GMDuty[playerid] == 1) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Prvo iskljuci GMDuty!");
    if(IsPlayerInRangeOfPoint(playerid, 30.0, 1115.0513,-1810.1193,-18.1229))
 	{
	if(PolicajacNaDuznosti[playerid] == 0)
	{
        if(!Policajac(playerid))
		{
			format(string, sizeof(string), "* Policajac %s uzima znacku i pistolj iz ormarica.", GetName(playerid));
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Sada ste na duznosti!");
		GivePlayerWeapon(playerid,24,150);
		GivePlayerWeapon(playerid, 3, 0);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		PolicajacNaDuznosti[playerid] = 1;
	}
	else if(PolicajacNaDuznosti[playerid] == 1)
	{
		if(!Policajac(playerid))
		{
		 	format(string, sizeof(string), "* Policajac %s stavlja pistolj i znacku u svoj ormaric.", GetName(playerid));
			e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		}
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vise niste na duznosti!");
		ResetPlayerWeapons(playerid);
		SetPlayerArmour(playerid, 0);
		SetPlayerHealth(playerid, 99.0);
		PolicajacNaDuznosti[playerid] = 0;
	}
	}
	return 1;
}
CMD:tazer(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
	new igrac;
	if(!Policajac(playerid)) return SendClientMessage(playerid, -1, ""CRVENA"[GRESKA] "BELA"Samo clanovi LSPD.");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "BELA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu.");
	if(sscanf(params,"u",igrac)) return SCM(playerid, -1, ""VARADERO"[KORISCENJE] "BELA"/tazer [ID/Ime]");
	if(igrac == IPI) return SCM(playerid, -1, "Pogresan ID.");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Ne mozes oboriti dok si u vozilu.");
	if(igrac == playerid) return SCM(playerid, -1, "Ne mozete sami sebe tazovati.");
	if(IgracPolicajac(igrac)) return SCM(playerid, -1, ""CRVENA"[GRESKA] "BELA"Ne mozete oboriti PD.");
	if(IsPlayerInAnyVehicle(igrac)) return SCM(playerid, -1, "Ne mozes oboriti dok je u vozilu.");
	if(!DaljinaIgraca(2.0,playerid,igrac)) return SCM(playerid, -1, "Taj igrac nije blizu tebe, priblizi se i /tazer.");
	TogglePlayerControllable(igrac, 0); IgracOboren[igrac] = 1;
	OborenTimer[igrac] = SetTimerEx("OborenTajmer", 30000, false, "i", igrac);
	OnePlayAnim(igrac, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:opljackajopstinu(playerid, params[])
{
    //#pragma unused help
    new sat, minut, sekund;
    gettime(sat, minut, sekund);
    if(sat >= 1 && sat <= 7) return SCM(playerid, -1, ""CRVENA"[GRESKA]: "BELA"Ne mozete pljackati  izmedju 7-1h!");
	new tmphour;
	gettimeHourEx(tmphour);
	if(GetTimeEx() < OpljackajOpstinu[playerid]) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Ovu komandu mozete koristiti svakih 2h sekundi!");
	if((tmphour >= 01) && (tmphour <= 11)) return SCM(playerid,-1, "   Ne mozete pljackati u 1 sat posle ponoci do 11 sati ujutru !");
    if(PlayerInfo[playerid][pAlat] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras imati alat da bi pljackao!");
    if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Imate wanted level ne mozete pljackat!");
    if(OpstinOpljackana == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Banka je vec opljackana sacekajte malo!");
    if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
	{
		new imeorg[20];
		if(PlayerInfo[playerid][pLider] == 2) { imeorg = "TVF"; }
		else if(PlayerInfo[playerid][pLider] == 3) { imeorg = "BDT"; }
		else if(PlayerInfo[playerid][pLider] == 4) { imeorg = "GSF"; }
		else if(PlayerInfo[playerid][pLider] == 5) { imeorg = "Ballas"; }
		else if(PlayerInfo[playerid][pLider] == 9) { imeorg = "Condor"; }
		else if(PlayerInfo[playerid][pLider] == 11) { imeorg = "BL"; }
		else if(PlayerInfo[playerid][pLider] == 12) { imeorg = "LCN"; }
		else if(PlayerInfo[playerid][pLider] == 13) { imeorg = "Da Naga Boys"; }
		else if(PlayerInfo[playerid][pLider] == 15) { imeorg = "Yakuza"; }
		else if(PlayerInfo[playerid][pLider] == 17) { imeorg = "BCC"; }
		else if(PlayerInfo[playerid][pLider] == 19) { imeorg = "DR"; }
		else if(PlayerInfo[playerid][pLider] == 20) { imeorg = "RM"; }
		else if(PlayerInfo[playerid][pLider] == 21) { imeorg = "NC"; }
		else if(PlayerInfo[playerid][pLider] == 22) { imeorg = "LC"; }
		else return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Samo lider moze da pljacka!");
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, 29.7447,136.0314,495.6298)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Morate biti u opstini da bi mogli da pljackate!");
		PlayerInfo[playerid][pRobbankVreme] = 1200000;
		PlayerInfo[playerid][pTrazeniLevel] += 2;
		SetPlayerColor(playerid, COLOR_RED);
		OpstinOpljackana = 1;
		PlayerInfo[playerid][pAlat] = 0;
		PljackaVrijeme[playerid] = 120;
		SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pljackas opstinu ostani na mjestu 120 sekundi!");
		SetTimerEx("Pljacka0",1000, false, "i", playerid);
		new string[256];
		format(string, sizeof(string), ""VARADERO"[VESTI]"SRWBOJA" %s "BELA" pljacka Los Santos Opstinu, Molimo policiju da spreci pljackase!", imeorg);
		SCMTA(-1,string);
		OpljackajOpstinu[playerid] = GetTimeEx() + 7200;
    }
	else SCM(playerid,-1,"[V:RPG] "SRWBOJA"Morate imati Oruzije");
	return 1;
}
CMD:opljackajzlataru(playerid, params[])
{
    new sat, minut, sekund;
    gettime(sat, minut, sekund);
    if(sat >= 1 && sat <= 7) return SCM(playerid, -1, ""CRVENA"[GRESKA]: "BELA"Ne mozete pljackati  izmedju 7-1h!");
	new tmphour;
	gettimeHourEx(tmphour);
	if(GetTimeEx() < OpljackajZlataru[playerid]) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Ovu komandu mozete koristiti svakih 2h sekundi!");
	if((tmphour >= 01) && (tmphour <= 11)) return SCM(playerid,-1, "   Ne mozete pljackati u 1 sat posle ponoci do 11 sati ujutru !");
    if(PlayerInfo[playerid][pAlat] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras imati alat da bi pljackao!");
    if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Imate wanted level ne mozete pljackat!");
    if(ZlatarOpljackana == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Zlatara je vec opljackana sacekajte malo!");
    if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
	{
		new imeorg[20];
		if(PlayerInfo[playerid][pLider] == 2) { imeorg = "TVF"; }
		else if(PlayerInfo[playerid][pLider] == 3) { imeorg = "BDT"; }
		else if(PlayerInfo[playerid][pLider] == 4) { imeorg = "GSF"; }
		else if(PlayerInfo[playerid][pLider] == 5) { imeorg = "Ballas"; }
		else if(PlayerInfo[playerid][pLider] == 9) { imeorg = "Condor"; }
		else if(PlayerInfo[playerid][pLider] == 11) { imeorg = "BL"; }
		else if(PlayerInfo[playerid][pLider] == 12) { imeorg = "LCN"; }
		else if(PlayerInfo[playerid][pLider] == 13) { imeorg = "Da Naga Bays"; }
		else if(PlayerInfo[playerid][pLider] == 15) { imeorg = "Yakuza"; }
		else if(PlayerInfo[playerid][pLider] == 17) { imeorg = "BCC"; }
		else if(PlayerInfo[playerid][pLider] == 19) { imeorg = "DR"; }
		else if(PlayerInfo[playerid][pLider] == 20) { imeorg = "RM"; }
		else if(PlayerInfo[playerid][pLider] == 21) { imeorg = "NC"; }
		else if(PlayerInfo[playerid][pLider] == 22) { imeorg = "LC"; }
		else return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Samo lider moze da pljacka!");
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, 286.9147,1425.9718,727.4360)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"MoraÃ…Â¡ biti u zlatari da bi mogao da pljackaÃ…Â¡!");
		PlayerInfo[playerid][pRobbankVreme] = 3500;
		PlayerInfo[playerid][pTrazeniLevel] += 2;
		SetPlayerColor(playerid, COLOR_RED);
		ZlatarOpljackana = 1;
		PlayerInfo[playerid][pAlat] = 0;
		PljackaVrijeme[playerid] = 120;
		SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pljackas zlataru ostani na mjestu 120 sekundi!");
		SetTimerEx("Pljacka1",1000, false, "i", playerid);
		new string[256];
		format(string, sizeof(string), ""VARADERO"[VESTI]"SRWBOJA" %s "BELA" pljacka Los Santos Zlataru, Molimo policiju da spreci pljackase!", imeorg);
		SCMTA(-1,string);
		OpljackajZlataru[playerid] = GetTimeEx() + 7200;
	}
	else SCM(playerid,-1,"[V:RPG] "SRWBOJA"Morate imati Oruzije");
	return 1;
}
CMD:kupialat(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pClan] == 1 && PlayerInfo[playerid][pLider] == 1) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Pripadnik LS:PD-a si ovo ne moÃ…Â¾eÃ…Â¡!");
	if(PlayerInfo[playerid][pNovacDzep] < 3000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemas dovoljno novca da kupis alat!");
	if(PlayerInfo[playerid][pRobbankVreme] == 1) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Vec imas alat!");
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, 1936.7006,-2013.6572,13.6469)) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"MoraÃ…Â¡ biti na mestu gde se kupuje alata!");
    PlayerInfo[playerid][pAlat] = 1;
    SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Kupio si alat, sad mozes da pljackas banku!");
    g_NovacMinus(playerid, 3000);
	return 1;
}
///////////////////////////////////////////////////////////
CMD:proveridosije(playerid, params[])
{
	if(Policajac(playerid))
	{
		if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
		new veh = GetPlayerVehicleID(playerid);
		if(!PolicijskaAuta(veh) || !LasVegasAuta(veh)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Morate biti u policijskom vozilu!");
		new id,string[128];
		if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/proveridosije [ID/Nick]");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac je offline!");
		SCM(playerid,-1,""SRWBOJA"|----------------------DOSIJE-----------------------|");
		format(string, sizeof(string), "- Nick: %s", ZlocinInfo[id][zPocinio]);
		SCM(playerid, -1, string);
		format(string, sizeof(string), "- Zlocin: %s", ZlocinInfo[id][zZlocin]);
		SCM(playerid, -1, string);
		format(string, sizeof(string), "- Prijavio: %s", ZlocinInfo[id][zPrijavio]);
		SCM(playerid, -1, string);
		SCM(playerid,-1,""SRWBOJA"|------------------------------------------------------|");
	}
	else
	{
		SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD-a!");
	}
	return 1;
}
//////////////////////////////////////////////////////////
CMD:megafon(playerid, params[])
{

	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pClan] == 24)
	{
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(PlayerInfo[playerid][pMutiran] != 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Mutiran si pa ne mozes koristit ovu komandu!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Morate biti u vozilu!");
	new result[128],text;
	if(sscanf(params, "s[100]",text )) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/megafon [megaphone text]");
	new tekst1 = strlen(result);
	for(new i = 0; i<tekst1; i++) { if(IsNumeric(result[i])) result[i] = '*' ; }
	if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 1) { format(result, sizeof(result), ""VARADERO"[ Policajac %s(megafon): %s ]",GetName(playerid), text); }
    if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7) { format(result, sizeof(result), ""VARADERO"[ SA Marshall %s(megafon): %s ]",GetName(playerid), text); }
    if(PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 16) { format(result, sizeof(result), ""VARADERO"[ FBI %s(megafon): %s ]",GetName(playerid), text); }
	e_RadiusMSG(60.0, playerid, HEX_PROX, result);
	} else SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD-a!");
	return 1;
}
CMD:najava(playerid, params[])
{

	if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 24)
	{
	new tekst[128], string[128];
	if(sscanf(params, "s[90]", tekst)) return SCM(playerid,-1,  ""SPLAVA"[V:RPG] Pomoc | "BELA"/najava [tekst]");
	SendClientMessageToAll(-1, ""SRWBOJA"|-----------------------------"SIVA"Najava iz Uprave"SRWBOJA"-----------------------------|");
	if(PlayerInfo[playerid][pLider] == 1) { format(string, sizeof(string), ""SRWBOJA"[Policija] "BELA"Direktor %s: "SRWBOJA"%s", GetName(playerid), tekst); }
    if(PlayerInfo[playerid][pLider] == 7) { format(string, sizeof(string), ""SRWBOJA"[Zandarmerija] "BELA"Direktor %s: "SRWBOJA"%s", GetName(playerid), tekst); }
    if(PlayerInfo[playerid][pLider] == 16) { format(string, sizeof(string), ""SRWBOJA"[FBI] "BELA"Direktor %s: "SRWBOJA"%s", GetName(playerid), tekst); }
	SendClientMessageToAll(-1,string);
	SendClientMessageToAll(-1, ""SRWBOJA"|--------------------------------------------------------------------------------|");
	} else SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo LSPD/FBI/ZANDARMERIJA !");
	return 1;
}
//////////////////////////////////////////////////////
CMD:stduty(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pSpecteam] == 0) return SCM(playerid, -1, ""SRWBOJA"(("BELA" Varadero "SRWBOJA")) "BELA"Samo Spec-Team!");
	if(PlayerInfo[playerid][pTrazeniLevel] != 0) return SCM(playerid, -1, ""SPLAVA"[ V:RPG ] "BELA"Imate trazeni level ne mozete koristiti ovu komandu");
	if(PlayerInfo[playerid][pPridruzeneventu] >= 1) return SCM(playerid,-1,"ERROR | "SRWBOJA"U Event Si bre !!");
	new string[120];
	if(saduty[playerid] == 0)
	{
		format(string,sizeof(string),""SRWBOJA"[ V:RPG ]  - (( "BELA"Spec-Team "SRWBOJA"%s "BELA"je na duznosti, "SRWBOJA"/report !"SRWBOJA" ))",GetName(playerid));
		SCMTA(-1,string);
		saduty[playerid] = 1;
		God[playerid] = 1;
		SetPlayerColor(playerid, 0xFFC801C8);
		SetPlayerArmour(playerid, 99.0);
		SetPlayerHealth(playerid, 99.0);
		ResetPlayerWeapons(playerid);
		SetPVarInt(playerid, "Izbegavanje", 1);
	}
	else if(saduty[playerid] == 1)
	{
		SetPlayerArmour(playerid, 0);
		SetPlayerHealth(playerid, 99.0);
		SetPlayerColor(playerid,BELA2);
		format(string,sizeof(string),""SRWBOJA"[ V:RPG ]  - (( "BELA"Spec-Team "SRWBOJA"%s "BELA"je van duznosti !"SRWBOJA" ))",GetName(playerid));
		SCMTA(-1,string);
		God[playerid] = 0;
		saduty[playerid] = 0;
		SetPVarInt(playerid, "Izbegavanje", 0);
	}
	return 1;
}
///////////////////////////////////////////////////////////
CMD:psnajava(playerid, params[])
{

	if(PlayerInfo[playerid][pLider] == 8)
	{
	new tekst[128], string[128];
	if(sscanf(params, "s[90]", tekst)) return SCM(playerid,-1,  ""SPLAVA"[V:RPG] Pomoc | "BELA"/psnajava [tekst]");
	format(string, sizeof(string), ""SIVA"[Parking Servis] "BELA"Lider %s: "SIVA"%s", GetName(playerid), tekst);
	SendClientMessageToAll(-1,string);
	} else SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo Lider PS-a!");
	return 1;
}
///////////////////////////////////////////////////////////
CMD:kazna(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	new id, cena, razlog[32];
	if(sscanf(params, "uis[32]", id, cena, razlog)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SRWBOJA"/kazna [ID/Nick] [Iznos (1-1500)] [Razlog]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete sami sebi napisati kaznu!");
	if(cena < 1 || cena > 55000) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Cena ne moze biti manja od 1$,ni vec od 55000$!");
	if(strlen(razlog) > 32) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Napisali ste prevelik razlog!");
	if(!DaljinaIgraca(5.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	KaznuNapisao[id] = playerid;
	CenaKazne[id] = cena;
	new string[128];
	format(string, charsmax(string), "Policajac %s vam je napisao kaznu | Iznos Kazne: %d |.", GetName(playerid), cena); //conver
	SCM(id, -1, string);
	format(string, charsmax(string), "| Napravljeni Prekrsaj: %s |.", razlog); //conver
	SCM(id, -1, string);
	SCM(id, -1,"Da prihvatite kaznu kucajte /prihvati kaznu.");
	format(string, charsmax(string), "Napisali ste kaznu igracu %s u iznosu od %d$! | Razlog: %s |.", GetName(id), cena, razlog); //conver
	SCM(playerid, -1, string);
	return 1;
}
///////////////////////////////////////////////////////////
CMD:su(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	new id, zlocin[64], wl;
	if(sscanf(params, "uis[64]", id, wl, zlocin)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/su [ID/Nick] [level] [Opis zlocina]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete sebi dati wanted level!");
	if(IgracPolicajac(id)) return SCM(playerid,-1,""SRWBOJA"INFO | "SIVA"Ne mozes dati wanted level policajcu!");
	if(wl > 11) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igracu mozete datu max 10 wanted levela!");
	PostaviWanted(id, zlocin, GetName(playerid), wl);
	SetPlayerColor(id, COLOR_RED);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:ocistidosije(playerid, params[])
{

	new id;
	if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 24)
	{
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(!IsPlayerInRangeOfPoint(playerid, 4.0,-227.3521,133.3322,-53.8010)) return SendClientMessage(playerid,-1,""SRWBOJA"ERROR: "SIVA"Niste u prostoriji za ciscenje dosije-a!");
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "BELA"/ocistidosije [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Taj igrac je offline!");
	PlayerInfo[id][pTrazeniLevel] = 0;
	strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);
	new string[128];
	format(string, charsmax(string), ""SRWBOJA"[LSPD] "BELA"Policajac %s vam je ocistio dosije!",GetName(playerid)); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SRWBOJA"[LSPD] "BELA"Ocistili ste dosije igracu %s!",GetName(id)); //conver
	SCM(playerid,-1, string);
	SetPlayerColor(id, BELA2);
	} else SendClientMessage(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo lider LSPD FBI SP!");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:trazeni(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	SCM(playerid,-1,""SRWBOJA"|------Trenutna lista osumnjicenih------|");
	new string[128];
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pTrazeniLevel] > 0)
			{
				format(string, charsmax(string), "- %s | Wanted Level (%d) (ID:%d)", GetName(i), PlayerInfo[i][pTrazeniLevel], i); //conver
				SCM(playerid, -1, string);
			}
		}
	}
	SCM(playerid,-1,""SRWBOJA"|--------------------------------------------------|");
	return 1;
}

//////////////////////////////////////////////////////////
CMD:pu(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "BELA"Morate biti u vozilu!");
	new id, sediste;
	if(sscanf(params, "ui", id, sediste)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/pu [ID/Nick] [Sediste(1,2,3)]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(!DaljinaIgraca(6.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	if(IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "BELA"Taj igrac je vec u nekom vozilu!");
	if(sediste > 3 || sediste < 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "BELA"Broj sedista moze biti samo 1,2,3!");
	PutPlayerInVehicle(id, GetPlayerVehicleID(playerid), sediste);
	new string[128];
	format(string,sizeof(string),"* %s ubacuje %s u auto.",GetName(playerid),GetName(id));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	format(string, charsmax(string), ""SIVA"%s vas je ubacio u auto!",GetName(playerid)); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"Ubacili ste %s u auto!",GetName(id)); //conver
	SCM(playerid,-1, string);
	return 1;
}
/////////////////////////////////////////////////////////
CMD:uhapsi(playerid, params[])
{
    //#pragma unused help
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(!IsPlayerInRangeOfPoint(playerid, 8.0,1568.3774,-1694.3285,5.8906) && !IsPlayerInRangeOfPoint(playerid, 8.0,1568.3774,-1694.3285,5.8906) && !IsPlayerInRangeOfPoint(playerid, 8.0,1312.4955,-1361.4672,13.4930)) return SendClientMessage(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste kod mesta za hapsenje!");
	new id, cena,string[256];
	if(sscanf(params, "ui", id, cena)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/uhapsi [ID/Nick] [Novcana Kazna (50-2000)]");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Pogresan ID!");
	if(IgracPolicajac(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete uhapsiti policajca!");
	if(cena < 50 || cena > 5000) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Cena ne moze biti manja od 50$ i veca od 5000$!");
	if(PlayerInfo[id][pTrazeniLevel] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema wanted level!");
	if(!DaljinaIgraca(8.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	g_NovacMinus(id, cena);
	ResetPlayerWeapons(id);
	new rand = random(sizeof(RandomZatvor));
	SetPlayerPos(id, RandomZatvor[rand][0], RandomZatvor[rand][1], RandomZatvor[rand][2]);
	PlayerInfo[id][pZatvor] = 2;
	new zatvoren;
    zatvoren = PlayerInfo[id][pZatvorenVreme] = PlayerInfo[id][pTrazeniLevel] * 300;
	PlayerInfo[id][pUhapsenPuta]++;
	TogglePlayerControllable(id, 0);
	SetPlayerColor(id, BELA2);
	PlayerInfo[id][pTrazeniLevel] = 0;
	StavljeneLisice[id] = 0;
	if(Vucen[id] != -1)
	{
		KillTimer(VuciTimer[Vucen[id]]); VuceIgraca[Vucen[id]] = -1; Vucen[id] = -1;
	}
	strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);
	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
	g_freeze[id] = SetTimerEx("Freeze",5000, false, "i", id);
	format(string, sizeof(string), ""CRVENA2"Policajac %s vas je uhapsio na %d sekundi! | Cena: %d$!", GetName(playerid),zatvoren,cena);
	g_NovacPlus(playerid, 25000);
	SCM(id, -1, string);
	format(string, sizeof(string), ""SIVA"- "CRVENA2"Uhapsili ste %s na %d sekundi! | Cena: %d$ | Kaucija: 4G!", GetName(id),zatvoren,cena);
	SCM(playerid, -1, string);
	SavePlayer(id);
	if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 1) { format(string, sizeof(string), ""SIVA"Novo Hapsenje | "CRVENA2"Policajac %s je uhapsio %s",GetName(playerid),GetName(id)); }
    if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7) { format(string, sizeof(string), ""SIVA"Novo Hapsenje | "CRVENA2"Policajac %s je uhapsio %s",GetName(playerid),GetName(id)); }
    if(PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 16) { format(string, sizeof(string), ""SIVA"Novo Hapsenje | "CRVENA2"FBI %s je uhapsio %s",GetName(playerid),GetName(id)); }
	SendClientMessageToAll(-1, string);
	if(PlayerInfo[id][pLevel] <= 7)
	{
		format(string, sizeof(string), ""SRWBOJA"[V:RPG] "SIVA"Policajac %s(ID:%d) je uhapsio %s(ID:%d - Igracev Level %d) ", GetName(playerid), playerid, GetName(id), id, PlayerInfo[id][pLevel]);
		AdminGameMaster(-1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////
CMD:prepreka(playerid, params[])
{

   	if(Policajac(playerid))
	{
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(PlayerInfo[playerid][pRank] < 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "BELA"Morate biti rank 1+ da bi koristili ovu komandu!");
	new id,Float:A; GetPlayerPos(playerid, X, Y, Z); GetPlayerFacingAngle(playerid, A);
	if(sscanf(params, "i", id))
	{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/prepreka [Prepreke (1-4)]");
		SCM(playerid, -1, "|------------------PREPREKE-----------------|");
		SCM(playerid, -1, ""SRWBOJA"(1). "BELA"M - Za Gume");
		SCM(playerid, -1, ""SRWBOJA"(2). "BELA"V - Za Gume");
		SCM(playerid, -1, ""SRWBOJA"(3). "BELA"Velika Blokada");
		SCM(playerid, -1, ""SRWBOJA"(4). "BELA"Obicna Prepreka");
		SCM(playerid, -1, "|------------------------------------------------|");
		return 1;
	}
	if(id == 1)
	{
		if(Prepreka1Kreirana[playerid] == false)
		{
			Prepreka1[playerid] = CreateDynamicObject(2899, X+5, Y, Z-0.9, 0.0, 0.0, A+180);
			Prepreka1Kreirana[playerid] = true;
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Postavili ste prepreku!");
		}
		else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Vec imate kreiranu tu prepreku.");
	}
	else if(id == 2)
	{
		if(Prepreka2Kreirana[playerid] == false)
		{
			Prepreka2[playerid] = CreateDynamicObject(2892, X+5, Y, Z-1, 0.0, 0.0, A+180);
			Prepreka2Kreirana[playerid] = true;
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Postavili ste prepreku!");
		}
		else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Vec imate kreiranu tu prepreku.");
	}
	else if(id == 3)
	{
		if(Prepreka3Kreirana[playerid] == false)
		{
			Prepreka3[playerid] = CreateDynamicObject(981, X+5, Y, Z-0.5, 0.00000000, 0.00000000, A);
			Prepreka3Kreirana[playerid] = true;
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Postavili ste prepreku!");
		}
		else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Vec imate kreiranu tu prepreku.");
	}
	else if(id == 4)
	{
		if(Prepreka4Kreirana[playerid] == false)
		{
			Prepreka4[playerid] = CreateDynamicObject(979, X+5, Y, Z-0.5, 0.00000000, 0.00000000, A);
			Prepreka4Kreirana[playerid] = true;
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Postavili ste prepreku!");
		}
		else return SendClientMessage(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Vec imate kreiranu tu prepreku.");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Pogresan ID prepreke (1-4)!");
	} else SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	return 1;
}
///////////////////////////////////////////////////////
CMD:unistiprepreku(playerid, params[])
{

    if(!Policajac(playerid)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	new id;
	if(sscanf(params, "i", id)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/unistiprepreku [Prepreke (1-4)]");
	if(id == 1)
	{
		if(Prepreka1Kreirana[playerid] == true)
		{
			DestroyDynamicObject(Prepreka1[playerid]);
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Unistili ste prepreku!");
			Prepreka1Kreirana[playerid] = false;
		}
		else return SendClientMessage(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ta prepreka nije kreirana!");
	}
	else if(id == 2)
	{
		if(Prepreka2Kreirana[playerid] == true)
		{
			DestroyDynamicObject(Prepreka2[playerid]);
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Unistili ste prepreku!");
			Prepreka2Kreirana[playerid] = false;
		}
		else return SendClientMessage(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ta prepreka nije kreirana!");
	}
	else if(id == 3)
	{
		if(Prepreka3Kreirana[playerid] == true)
		{
			DestroyDynamicObject(Prepreka3[playerid]);
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Unistili ste prepreku!");
			Prepreka3Kreirana[playerid] = false;
		}
		else return SendClientMessage(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ta prepreka nije kreirana!");
	}
	else if(id == 4)
	{
		if(Prepreka4Kreirana[playerid] == true)
		{
			DestroyDynamicObject(Prepreka4[playerid]);
			SCM(playerid, -1, ""SIVA"INFO | "BELA"Unistili ste prepreku!");
			Prepreka4Kreirana[playerid] = false;
		}
		else return SendClientMessage(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ta prepreka nije kreirana!");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Pogresan ID prepreke!");
	return 1;
}
//////////////////////////////////////////////////////
CMD:unistisveprepreke(playerid, params[])
{

	if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 24)
	{
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	foreach(new i : Player)
	{
		DestroyDynamicObject(Prepreka1[i]);
		DestroyDynamicObject(Prepreka2[i]);
		DestroyDynamicObject(Prepreka3[i]);
		DestroyDynamicObject(Prepreka4[i]);
		Prepreka1Kreirana[i] = false;
		Prepreka2Kreirana[i] = false;
		Prepreka3Kreirana[i] = false;
		Prepreka4Kreirana[i] = false;
	}
	SCM(playerid,-1,""SRWBOJA"Unistili ste sve potavljene prepreke!");
	new string[128];
	format(string, sizeof(string),""SPLAVA"[V:RPG] "SIVA"Sve prepreke LSPD-a je unistio %s!",GetName(playerid));
	SCMTA(-1,string);
	}
	else SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo lider LSPD!");
	return 1;
}
////////////////////////////////////////////////////////////////////
CMD:pojacanje(playerid, params[])
{
    //#pragma unused help
	if(Policajac(playerid))
	{
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(FBI/LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	new string[256];
	format(string, sizeof(string), ""SRWBOJA"Igracu %s je potrebno pojacanje, kucaj /prihvati pojacanje da vidis njegovu lokaciju.", GetName(playerid));
	CFBIPD(-1,string);
	SCM(playerid,-1,""BELA"(FBI/LSPD) "SRWBOJA"Pozvali ste pojacanje!");
	PozvaoPojacanje = playerid;
	SetTimerEx("UkloniPoj", 100000, false, "d", playerid);
    } else SendClientMessage(playerid,-1,""BELA"[GRESKA] "SRWBOJA"Samo clanovi FBI/LSPD");
	return 1;
}
/////////////////////////////////////////////// 
CMD:pdoprema(playerid, params[])
{
    //#pragma unused help
    if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"ERROR: "SIVA"Samo clanovi LSPD!");
	if(IsPlayerInRangeOfPoint(playerid, 4.0,198.7946,309.3438,1002.9796) || IsPlayerInRangeOfPoint(playerid, 4.0, -247.1670,120.3929,-56.5761))
	SPD(playerid, 48, DIALOG_STYLE_LIST, ""BELA"LSPD/CIA Oprema", ""SRWBOJA"(1). "BELA"Oruzije\n"SRWBOJA"(2). "BELA"Undercover\n"SRWBOJA"(3). "BELA"Hrana i Pancir\n"SRWBOJA"(4). "BELA"Swat\n"SRWBOJA"(5). "BELA"Stari Skin", "Odaberi", "Izlaz");
	return 1;
}
///////////////////////////////////////////////
CMD:fbioprema(playerid, params[])
{
    //#pragma unused help
    if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"ERROR: "SIVA"Samo clanovi FBI!");
	if(IsPlayerInRangeOfPoint(playerid, 4.0, -1109.4800, -95.5956, 2040.0691))
	{
		SPD(playerid, 487, DIALOG_STYLE_LIST, ""BELA"FBI Oprema", ""SRWBOJA"(1). "BELA"Oruzije\n"SRWBOJA"(2). "BELA"Undercover\n"SRWBOJA"(3). "BELA"Hrana i Pancir\n"SRWBOJA"(4). "BELA"Swat\n"SRWBOJA"(5). "BELA"Stari Skin", "Odaberi", "Izlaz");
	}
	else return SCM(playerid, -1, ""SRWBOJA"ERROR: "SIVA"Niste na mestu gde se uzima oprema!");
	return 1;
}
///////////////////////////////////////////////
CMD:hoprema(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10)
    {
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 2816.6794,-1169.7616,1025.5778))
	{
		SPD(playerid, 5148, DIALOG_STYLE_LIST, ""BELA"Hitmen Oprema", ""SRWBOJA"(1). "BELA"Oruzije\n"SRWBOJA"(2). "BELA"Hrana i Pancir\n","Odaberi", "Izlaz");
	}
	else return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Niste na mestu gde se uzima oprema!");
	}
	return 1;
}
//////////////////////////////////////////
//////////////////////////////////////////
CMD:mlociraj(playerid, params[])
{

	if(PlayerInfo[playerid][pPosao] != POSAO_MEHANICAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste mehanicar!");
	if(GetTimeEx() < mLocate[playerid]) return SCM(playerid, -1, ""SIVA"Ovu komandu mozete koristiti svakih 30 sekundi!");
	{
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/mlociraj [ID/Ime]");
	new Float:Poz[3];
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 5.0);
	new string[128];
	format(string, charsmax(string), ""VARADERO"(Mehanicar) "SIVA"Igrac %s je oznacen crveno na mapi!",GetName(id)); //conver
	SCM(playerid,-1, string);
	Lociranje[playerid] = 1;
	mLocate[playerid] = GetTimeEx() + 30;
	}
	return 1;
}
//////////////////////////////////////////
CMD:hlociraj(playerid, params[])
{

	if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10)
	{
	new id;
	if(sscanf(params, "i", id)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/hlociraj [ID/Ime]");
	if( id == IPI ) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nije online!");
	if(PlayerInfo[id][pNarucen] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nije narucen za ubistvo!");
	new Float:Poz[3];
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 5.0);
	new string[128];
	format(string, charsmax(string), ""VARADERO"(Hitman) "SIVA"Igrac %s je oznacen crveno na mapi!",GetName(id)); //conver
	SCM(playerid,-1, string);
	Lociranje[playerid] = 1;
	}
	return 1;
}
//////////////////////////////////////////
CMD:lociraj(playerid, params[])
{

	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pClan] == 24)
	{
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/lociraj [ID/Ime]");
	if( id == INVALID_PLAYER_ID ) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nije online!");
	if(PlayerInfo[id][pTrazeniLevel] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema Wanted Level!");
	new Float:Poz[3];
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 5.0);
	new string[128];
	format(string, charsmax(string), ""VARADERO"(LSPD) "SIVA"Igrac %s je oznacen crveno na mapi (/ponistilociranje)!",GetName(id)); //conver
	SCM(playerid,-1, string);
	Lociranje[playerid] = 1;
	}
	return 1;
}
////////////////////////////////////////////
CMD:ponistilociranje(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(Lociranje[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Nikog ne locirate!");
	SCM(playerid,-1,""SIVA"Prekinuli ste lociranje!");
	Lociranje[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	return 1;
}
////////////////////////////////////MDC///////////////////////
CMD:mdc(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	new veh = GetPlayerVehicleID(playerid);
	if(!PolicijskaAuta(veh)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti u policijskom vozilu!");
	if(MDC[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Vec ste pokrenuli MDC!");
	for(new i = 0; i < 10; i++) { PlayerTextDrawShow(playerid, mdct[i]); }
	MDC[playerid] = 1; SelectTextDraw(playerid,0xFF0000FF);
	return 1;
}
///////////////////////////////////////////////////////////////
CMD:swatoprema(playerid, params[])
{
    //#pragma unused help
	new string[128];
	if (PlayerInfo[playerid][pLider] == 1 && (!swatoprema) || PlayerInfo[playerid][pLider] == 16 && (!swatoprema) || PlayerInfo[playerid][pLider] == 7 && (!swatoprema) || PlayerInfo[playerid][pLider] == 24 && (!swatoprema))
	{
		swatoprema = 1;
		format(string, sizeof(string), ""BELA"[LSPD] "SRWBOJA"Lider %s je ugasio koriscenje swat opreme!", GetName(playerid));
		CFBIPD(-1, string);
	}
	else if (PlayerInfo[playerid][pLider] == 1 && (swatoprema) || PlayerInfo[playerid][pLider] == 16 && (swatoprema) || PlayerInfo[playerid][pLider] == 7 && (swatoprema)  || PlayerInfo[playerid][pLider] == 24 && (swatoprema))
	{
		swatoprema = 0;
		format(string, sizeof(string), ""BELA"[LSPD] "SRWBOJA"Lider %s je dopustio svi LSPD da koriste swat opremu!", GetName(playerid));
		CFBIPD(-1, string);
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Samo Lider LSPD!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////
CMD:oduzmi(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozes koristiti tu komandu kad si u vozilu!");
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete oduzimati stvari u zatvoru!");
	new id, staoduzima[32];
	if(sscanf(params, "us[64]", id, staoduzima))
	{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/oduzmi [ID/Ime] [Ime stvari]");
		SCM(playerid, -1, ""SRWBOJA"Imena Stvari: "SIVA"vozacka dozvola | motor dozvola | kamion/bus dozvola | avion dozvola");
		SCM(playerid, -1, ""SRWBOJA"Imena Stvari: "SIVA"brod dozvola | droga | materijali | oruzije");
		return 1;
	}
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(!DaljinaIgraca(5.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete sami sebi oduzimati stvari!");
	/////////////////////////////////////////////////////
	new string[128];
	if(!strcmp(staoduzima, "vozacka dozvola"))
	{
		if(PlayerInfo[id][pADozvola] == 0) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema vozacku dozvolu!");
		PlayerInfo[id][pADozvola] = 0;
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste vozacku dozvolu igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo vozacku dozvolu.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(!strcmp(staoduzima, "motor dozvola"))
	{
		if(PlayerInfo[id][pMotorDozvola] == 0) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema dozvolu za motor!");
		PlayerInfo[id][pMotorDozvola] = 0;
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste dozvolu za motor igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo dozvolu za motor.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(!strcmp(staoduzima, "kamion/bus dozvola"))
	{
		if(PlayerInfo[id][pKamionDozvola] == 0) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema dozvolu za kamion!");
		PlayerInfo[id][pKamionDozvola] = 0;
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste dozvolu za kamion/bus igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo dozvolu za kamion/bus.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(!strcmp(staoduzima, "avion dozvola"))
	{
		if(PlayerInfo[id][pAvionDozvola] == 0) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema dozvolu za avion!");
		PlayerInfo[id][pAvionDozvola] = 0;
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste dozvolu za avion igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo dozvolu za avion.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(!strcmp(staoduzima, "brod dozvola"))
	{
		if(PlayerInfo[id][pBrodDozvola] == 0) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema dozvolu za brod!");
		PlayerInfo[id][pBrodDozvola] = 0;
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste dozvolu za brod igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo dozvolu za brod.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(!strcmp(staoduzima, "droga"))
	{
		if(PlayerInfo[id][pDroga] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema droge!");
		PlayerInfo[id][pDroga] = 0;
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste drogu igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo drogu.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(!strcmp(staoduzima, "materijali"))
	{
		if(PlayerInfo[id][pMats] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema materijale!");
		PlayerInfo[id][pMats] = 0;
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste materijale igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo materijale.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else if(!strcmp(staoduzima, "oruzije"))
	{
		ResetPlayerWeapons(id);
		if(GetPlayerWeapon(id) == 0) return SCM(playerid,-1,""SIVA"Taj igrac nema nikakvo oruzije!");
		//if(GetPlayerWeapon(playerid) <= 0) return SCM(playerid,-1,""SIVA"Nemas oruzije u ruci!");
		format(string, charsmax(string), "INFO | "VARADERO"Oduzeli ste oruzije igracu %s.", GetName(id)); //conver
		SCM(playerid, -1, string);
		format(string, charsmax(string), "INFO | "VARADERO"Policajac %s vam je oduzeo oruzije.", GetName(playerid)); //conver
		SCM(id, -1, string);
	}
	else return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Nepoznato ime!");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
CMD:pretresi(playerid, params[])
{

	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozes koristiti tu komandu kad si u vozilu!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/pretresi [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(!DaljinaIgraca(5.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Taj igrac nije blizu tebe!");
	new droga1[24],materijali1[24],oruzije[24],string[128];
	if(PlayerInfo[id][pDroga] > 0) droga1 = "Poseduje Drogu";
	else if(PlayerInfo[id][pDroga] == 0) droga1 = "Nema Droge!";
	if(PlayerInfo[id][pMats] > 0) materijali1 = "Poseduje Materijale";
	else if(PlayerInfo[id][pMats] == 0) materijali1 = "Nema Materijala!";
	if(GetPlayerWeapon(id) > 0) oruzije = "Poseduje Oruzije";
	else if(GetPlayerWeapon(id) == 0) oruzije = "Nema Oruzije!";
	format(string, charsmax(string), ""VARADERO"|----------------Stvari %s----------------|", GetName(id)); //conver
	SCM(playerid,-1, string);
	format(string, charsmax(string), "- Droga: "VARADERO"%s", droga1); //conver
	SCM(playerid,-1, string);
	format(string, charsmax(string), "- Materijali: "VARADERO"%s", materijali1); //conver
	SCM(playerid,-1, string);
	format(string, charsmax(string), "- Oruzije: "VARADERO"%s", oruzije); //conver
	SCM(playerid,-1, string);
	format(string, sizeof(string), "* Policajac %s vadi nalog za ptretres.", GetName(playerid));
	format(string, sizeof(string), "* Policajac %s pretresa %s.", GetName(playerid),GetName(id));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
CMD:pdozvole(playerid, params[])
{

	new id,string[128];
	if(sscanf(params, "u", id)) return SCM(playerid,-1, ""SPLAVA"[V:RPG] Pomoc | "SIVA"/pdozvole [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	new Float:Poz[3];
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Predaleko ste!");
	new oruzje[32],voznja[32],plovidba[32],letenje[32],motor[32],kamion[32];
	if(PlayerInfo[playerid][pGunDozvola] == 1) oruzje = "{F81414}Poseduje dozvolu";
	else oruzje = "{FFFFFF}Nema Dozvolu";
	if(PlayerInfo[playerid][pADozvola] == 1) voznja = "{F81414}Poseduje dozvolu";
	else voznja = "{FFFFFF}Nema Dozvolu";
	if(PlayerInfo[playerid][pBrodDozvola] == 1) plovidba = "{F81414}Poseduje dozvolu";
	else plovidba = "{FFFFFF}Nema Dozvolu";
	if(PlayerInfo[playerid][pAvionDozvola] == 1) letenje = "{F81414}Poseduje dozvolu";
	else letenje = "{FFFFFF}Nema Dozvolu";
	if(PlayerInfo[playerid][pMotorDozvola] == 1) motor = "{F81414}Poseduje dozvolu";
	else motor = "{FFFFFF}Nema Dozvolu";
	if(PlayerInfo[playerid][pKamionDozvola] == 1) kamion = "{F81414}Poseduje dozvolu";
	else kamion = "{FFFFFF}Nema Dozvolu";
	format(string, charsmax(string), ""SRWBOJA"|----------------------Dozvole od %s----------------------|", GetName(playerid)); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"- Dozvola za oruzije: %s", oruzje); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"- Dozvola za voznju: %s", voznja); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"- Dozvola za plovidbu: %s", plovidba); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"- Dozvola za letenje: %s", letenje); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"- Dozvola za motor: %s", motor); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SIVA"- Dozvola za kamion/bus: %s", kamion); //conver
	SCM(id,-1, string);
	SCM(id,-1,""SRWBOJA"|------------------------------------------------------------------------------|");
	format(string,sizeof(string), "* %s vadi dokumenta i pokazuje ih %s.", GetName(playerid), GetName(id));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////
CMD:oruzijedozvola(playerid, params[])
{
    //#pragma unused help
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, -241.3386,138.0957,-53.8010) && !IsPlayerInRangeOfPoint(playerid, 3.0, 195.2423,271.0422,1007.2893)) return SCM(playerid,-1,""SRWBOJA"ERROR: "SIVA"Morate biti u Policijskoj stanici");
	if(PlayerInfo[playerid][pGunDozvola] > 0) return SCM(playerid, -1, ""SRWBOJA"ERROR: "SIVA"Vec posedujes dozvolu za oruzije!");
	if(PlayerInfo[playerid][pNovacDzep] < 20000) return SendClientMessage(playerid,-1,""SRWBOJA"ERROR: "SIVA"Nemas dovoljno novca (20000$)!");
	PlayerInfo[playerid][pGunDozvola] = 1;
	g_NovacMinus(playerid,20000);
	SCM(playerid,-1,""SRWBOJA"(INFO) "SIVA"Uspesno ste kupili dozvolu za oruzije(-20000$)!");
	return 1;
}
CMD:rankname(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""CRVENA"[GRESKA] "SIVA"Morate se ulogovati!");
    new text[128];
    new id;
    new string[122];
    if(PlayerInfo[playerid][pLider] == 0) return SCM(playerid, -1, ""CRVENA"ERROR: "SIVA"Samo Lideri!!");
    if(sscanf(params, "us[128]", id, text)) return SCM(playerid,-1, ""CRVENA"Pomoc | "SIVA"/rankname [ID/Ime] [text]");
    if(strlen(text) < 3 || strlen(text) > 15) return SCM(playerid,-1, ""CRVENA"[GRESKA] "SIVA"Ime vaseg ranka ne moze biti manje od 3 ~ Vise od 15!");
    if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""CRVENA"ERROR: "SIVA"Igrac je offline!");
    if(PlayerInfo[playerid][pLider] != PlayerInfo[id][pClan]) return SCM(playerid, -1, ""CRVENA"ERROR: "SIVA"Igrac je clan neke druge organizacije!");
    PlayerInfo[id][pRankName] = text;
    strmid(PlayerInfo[id][pRankName], text, 0, strlen(text), 255);
    format(string, sizeof(string), ""VARADERO"INFO | "SIVA"Lider %s vam je postavio ime ranka %s!", GetName(playerid),text);
    SendClientMessage(id, -1, string);
    format(string, sizeof(string), ""VARADERO"INFO | "SIVA"Dao si %s rankname %s.", GetName(id),text);
    SCM(playerid, -1, string);
    SavePlayer(id);
    return 1;
}

////ako ocete da vam pise ime ranka kod clanovi
CMD:clanovi(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
    new org,string[512];
    if(PlayerInfo[playerid][pLider] != 0) org = PlayerInfo[playerid][pLider];
    else if (PlayerInfo[playerid][pClan] != 0) org = PlayerInfo[playerid][pClan];
    else return SCM(playerid,-1, "[V:RPG] "CRVENA"Ovu komandu mogu koristiti samo clanovi/lideri organizacija!");
    SCM(playerid, 0x808000AA, ""CRVENA"|----------------- Clanovi Online -----------------|");
    foreach(new i : Player)
    {
        format(string, sizeof(string), "");
        if(PlayerInfo[i][pLider] == org) format(string, sizeof(string), ""CRVENA"- Lider | "BELA"%s "CRVENA"| RankName "BELA"%s ",GetName(i), PlayerInfo[i][pRankName]);
        else if (PlayerInfo[i][pClan] == org) format(string, sizeof(string), ""CRVENA"- Clan | "BELA"%s "CRVENA"| Rank "BELA"%d "CRVENA"| RankName "BELA"%s",GetName(i), PlayerInfo[i][pRank], PlayerInfo[i][pRankName]);
        if (strlen(string) > 1) SCM(playerid, -1, string);
    }
    return 1;
}
/////////////////////////////////////////////////////////
CMD:r(playerid, params[])
{

	new tekst[128];
	if (sscanf(params, "s[90]", tekst))  return SendClientMessage(playerid,-1,  ""SPLAVA"[V:RPG] Pomoc | "BELA"/r [tekst]");
	if(!IgracPolicajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Niste clan PD/FBI/SP!");
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Zavezan si ne mozes to!");
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete to jer ste u zatvoru!");
    if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
    /////////////////////////RADIO CHAT//////////////////////
	else if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 24)
	{
		new string[128];
		format(string, sizeof(string), ""VARADERO"RADIO | %s (%s): "SIVA"%s "BELA"prijem", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return CFBIPD(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pClan] == 24)
	{
		new string[128];
		format(string, sizeof(string), ""VARADERO"RADIO | %s (%s): "SIVA"%s "BELA"prijem", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return CFBIPD(-1,string);
	}
	return 1;
}
fDialog(3328)
{
	if(!response) return 1;
	switch(listitem)
		{
	        case 0:
			{
				new string[252];
				fchat = 0;
				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatPD(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatVF(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatTBT(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatGSF(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatBallas(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatNovinari(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatSPD(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatPD(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				CondorChat(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatSA(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna2(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna3(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatTaxi(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatBase(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatFBI(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatRB(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatVatra(-1, string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna4(string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatNarco(string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatLoca(string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatTec(string);

				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatSaj(string);
				
				format(string, sizeof(string), ""CRVENA"#on"BELA" Lider"CRVENA" %s"BELA" je upalio"CRVENA" F chat.", GetName(playerid));
				ChatVla(string);
			}
			case 1:
			{
			    new string[252];
			    fchat = 1;
				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatPD(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatVF(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatTBT(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatGSF(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatBallas(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatNovinari(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatNovinari(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatPS(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				CondorChat(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatSA(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna2(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna3(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatTaxi(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatBase(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatFBI(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatRB(-1, string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatVatra(-1, string);

		/*		format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatLCN(string);*/

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatPrivatna4(string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatNarco(string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatLoca(string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatTec(string);

				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatSaj(string);
				
				format(string, sizeof(string), ""CRVENA"#off"BELA" Lider"CRVENA" %s"BELA" je ugasio"CRVENA" F chat.", GetName(playerid));
				ChatVla(string);
			}
		}
	return 1;
}
CMD:fchat(playerid, params[])
{
	if(PlayerInfo[playerid][pLider] == 0) return SCM(playerid,-1,"Samo Lideri.");
	SPD(playerid,3328, DIALOG_STYLE_LIST, "Family Chat", ""ZELENA"Ukljuci\n"CRVENA"Iskljuci", "Odaberi", "Odustani");
	return 1;
}
CMD:f(playerid, params[])
{

	new tekst[128];
	if (sscanf(params, "s[90]", tekst))  return SendClientMessage(playerid,-1,  ""SPLAVA"[V:RPG] Pomoc | "BELA"/f [tekst]");
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Zavezan si ne mozes to!");
	if((fchat)) return SCM(playerid,-1,""BELA"Lider je "CRVENA"ugasio"BELA" mogucnost koriscenja ove"CRVENA" komande .");
    if(StavljeneLisice[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Imas lisice!");
	if(PlayerInfo[playerid][pLider] < 1 && PlayerInfo[playerid][pClan] < 1 )  return SendClientMessage(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Niste clan ni jedne organizacije!");
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete to jer ste u zatvoru!");
    if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
    /////////////////////////LSPD CHAT//////////////////////
	else if(PlayerInfo[playerid][pLider] == 1)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA"PD | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPD(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 1)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA"PD | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPD(-1,string);
	}
    /////////////////////////////TVF CHAT/////////////
	else if(PlayerInfo[playerid][pLider] == 2)
	{
		new string[128];
		format(string, sizeof(string), ""CRVENA"TVF | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatVF(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 2)
	{
		new string[128];
		format(string, sizeof(string), ""CRVENA"TVF | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatVF(-1,string);
	}
	/////////////////////////////TRIADS CHAT////////////
	else if(PlayerInfo[playerid][pLider] == 3)
	{
		new string[128];
		format(string, sizeof(string), ""ZELENA"BDT | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatTBT(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 3)
	{
		new string[128];
		format(string, sizeof(string), ""VARADERO"BDT | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatTBT(-1,string);
	}
	/////////////////////////////GROVE CHAT////////////
	else if(PlayerInfo[playerid][pLider] == 4)
	{
		new string[128];
		format(string, sizeof(string), ""ZELENA"GSF | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatGSF(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 4)
	{
		new string[128];
		format(string, sizeof(string), ""ZELENA"GSF | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatGSF(-1,string);
	}
	///////////////////BALLAS CHAT//////////////////////
	else if(PlayerInfo[playerid][pLider] == 5)
	{
		new string[128];
		format(string, sizeof(string), ""BALLASC"BALLAS | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatBallas(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 5)
	{
		new string[128];
		format(string, sizeof(string), ""BALLASC"BALLAS | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatBallas(-1,string);
	}
	//////////////NOVINARI CHAT/////////////////////////
	else if(PlayerInfo[playerid][pLider] == 6)
	{
		new string[128];
		format(string, sizeof(string), ""ORANGE"LSN | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatNovinari(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 6)
	{
		new string[128];
		format(string, sizeof(string), ""ORANGE"LSN | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatNovinari(-1,string);
	}
	//////////////SAOBRACAJNA/////////////////////////
	else if(PlayerInfo[playerid][pLider] == 7)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA"Sef CIA | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatSPD(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 7)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA"CIA | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatSPD(-1,string);
	}
	//////////////Parking Servis////////////////////////
	else if(PlayerInfo[playerid][pLider] == 8)
	{
		new string[128];
		format(string, sizeof(string), ""SPLAVA"Sef Parking Servisa | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPS(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 8)
	{
		new string[128];
		format(string, sizeof(string), ""SPLAVA"PS Radnik | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPS(-1,string);
	}
	//////////////CONDOR////////////////////////
	else if(PlayerInfo[playerid][pLider] == 9)
	{
		new string[128];
		format(string, sizeof(string), ""CRVENA"CONDOR | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return CondorChat(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 9)
	{
		new string[128];
		format(string, sizeof(string), ""CRVENA"CONDOR | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return CondorChat(-1,string);
	}
	///////////Hitmen///////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 10)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Hitmen | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatSA(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 10)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Hitmen | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatSA(-1,string);
	}
	///////////Blue Lagoon///////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 11)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Blue Lagoon | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 11)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Blue Lagoon | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna(-1,string);
	}
	///////////LCN///////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 12)
	{
		new string[128];
		format(string, sizeof(string), ""VARADERO" La Cosa Nostra | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna2(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 12)
	{
		new string[128];
		format(string, sizeof(string), ""VARADERO"La Cosa Nostra | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna2(-1,string);
	}
	///////////Da Naga Boys///////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 13)
	{
		new string[128];
		format(string, sizeof(string), ""ORANGE" Da Naga Boys | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna3(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 13)
	{
		new string[128];
		format(string, sizeof(string), ""ORANGE" Da Naga Boys | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna3(-1,string);
	}
	/////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 14)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Taxi | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatTaxi(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 14)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Taxi | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatTaxi(-1,string);
	}
	///////////base///////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 15)
	{
		new string[128];
		format(string, sizeof(string), ""CRVENA" Yakuza | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatBase(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 15)
	{
		new string[128];
		format(string, sizeof(string), ""CRVENA" Yakuza | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatBase(-1,string);
	}
	///////////FBI///////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 16)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA" FBI | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatFBI(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 16)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA" FBI | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatFBI(-1,string);
	}
	///////////BCC///////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 17)
	{
		new string[128];
		format(string, sizeof(string), ""SPLAVA" Black Cobra Corporation | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatRB(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 17)
	{
		new string[128];
		format(string, sizeof(string), ""SPLAVA" Black Cobra Corporation | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatRB(-1,string);
	}
	////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 18)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Lider Vatrogasaca | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatVatra(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 18)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Vatrogasac | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatVatra(-1,string);
	}
	///////////////////////////////
	////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 19)
	{
		new string[128];
		format(string, sizeof(string), ""VARADERO" Lider DR | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatLCN(-1,string);
	}
	else if(PlayerInfo[playerid][pClan] == 19)
	{
		new string[128];
		format(string, sizeof(string), ""VARADERO" DR | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatLCN(-1,string);
	}
	///////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 20)
	{
		new string[128];
		format(string, sizeof(string), ""LJUB" Russian Mafia | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna4(string);
	}
	else if(PlayerInfo[playerid][pClan] == 20)
	{
		new string[128];
		format(string, sizeof(string), ""LJUB" Russian Mafia | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatPrivatna4(string);
	}
	///////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 21)
	{
		new string[128];
		format(string, sizeof(string), ""HZELENA" Narco Cartel | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatNarco(string);
	}
	else if(PlayerInfo[playerid][pClan] == 21)
	{
		new string[128];
		format(string, sizeof(string), ""HZELENA" Narco Cartel | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatNarco(string);
	}
   ///////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 22)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Loca Cartel | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatLoca(string);
	}
	else if(PlayerInfo[playerid][pClan] == 22)
	{
		new string[128];
		format(string, sizeof(string), "{1BE0B5} Loca Cartel | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatLoca(string);
	}
	///////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 23)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA" TBB | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatTec(string);
	}
	else if(PlayerInfo[playerid][pClan] == 23)
	{
		new string[128];
		format(string, sizeof(string), ""SRWBOJA" TBB | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatTec(string);
	}
	///////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pLider] == 25)
	{
		new string[128];
		format(string, sizeof(string), ""SPLAVA" Varrio Los Aztecas | %s (%s): "SIVA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatVla(string);
	}
	else if(PlayerInfo[playerid][pClan] == 25)
	{
		new string[128];
		format(string, sizeof(string), ""SPLAVA" Varrio Los Aztecas | %s (%s): "BELA"%s", GetName(playerid),PlayerInfo[playerid][pRankName], params[0] );
		return ChatVla(string);
	}
	return 1;
}
///////////////////////////////////////////////
CMD:sverc(playerid, params[])
{
	new voz = GetPlayerVehicleID(playerid);
	//new bool:notDoingDrugs = false;
	if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	if(voz == tvf[3] || voz == tvf[4] || voz == tvf[5] || voz == tvf[6])
	{
    if(ClanSverc3 == 1)
    {
   	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
	SPD(playerid, 136, DIALOG_STYLE_LIST, "Vrste sverca", "Sverc materijala "ZELENA"(250 mats - 200$)\nSverc ulja "ZELENA"(5L - 400$)\nPonisti sverc", "Odaberi", "Izlaz");
    }
	else return SCM(playerid,-1,""SRWBOJA"[TVF]: "SIVA"Niste u kombiju za sverc!");
	}
	else return SCM(playerid,-1,""SRWBOJA"[TVF]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
	{
    if(voz == tbt[13] || voz == tbt[14] || voz == tbt[15] || voz == tbt[16])
    {
    if(ClanSverc13 == 1)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, -1108.1185,-1620.9246,76.3672)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, 212.1458,-228.5909,1.7786, 5.0);
	SCM(playerid,-1,""VARADERO"[BDT]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""VARADERO"[BDT]: "SIVA"Niste u kombiju za sverc!");
	}
	else return SCM(playerid,-1,""VARADERO"[BDT]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	/////////////////////////////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pClan] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
    if(voz == Smithcar[0] || voz == Smithcar[1])
    {
    if(ClanSverc21 == 1)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
    if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, -2132.6167,-247.8245,35.3265)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -1883.4282,-200.3275,16.0549, 5.0);
	SCM(playerid,-1,""VARADERO"[Narco Cartel]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""VARADERO"[Narco Cartel]: "SIVA"Niste u kombiju za sverc!");
    }
	else return SCM(playerid,-1,""VARADERO"[Narco Cartel]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	/////////////////////////////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
	{
    if(voz == Locacar[15] || voz == Locacar[0])
    {
    if(ClanSverc21 == 1)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 57.6361,-1935.6486,4.2434)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, 1549.5334,-1385.5892,14.0234, 5.0);
	SCM(playerid,-1,""VARADERO"[Loca Cartel]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""VARADERO"[Loca Cartel]: "SIVA"Niste u kombiju za sverc!");
    }
	else return SCM(playerid,-1,""VARADERO"[Loca Cartel]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	/////////////////////////////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23)
	{
    if(voz == TECcar[2] || voz == TECcar[3])
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, -634.3427,-1588.5818,24.6269)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -126.7526,-1668.8661,1.0940, 5.0);
	SCM(playerid,-1,""VARADERO"[TBB]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""VARADERO"[TBB]: "SIVA"Niste u kombiju za sverc!");
    }
	//////////////////////////////////////////////////////////////////////////////
	else if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
    if(voz == rbcar[7])
    {
    if(ClanSverc17 == 1)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2332.1375, 549.4020, 7.7806)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, 2399.2444,2760.1504,10.8203, 5.0);
	SCM(playerid,-1,""VARADERO"[Black Cobra Corporation]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""VARADERO"[Black Cobra Corporation]: "SIVA"Niste u kombiju za sverc!");
    }
	else return SCM(playerid,-1,""VARADERO"[Black Cobra Corporation]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	if(voz == vballas[10])
    {
    if(ClanSverc5 == 1)
    {
   	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercOruzija[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes municiju!");
	if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (100$)");
	SvercOruzija[playerid] = 1; g_NovacMinus(playerid,100);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -120.9831,-1648.5916,2.1757, 5.0);
	SCM(playerid,-1,""BALLASC"[BALLAS]: "BELA"Krenuli ste sa svercom oruzija otidjite u luku da utovarite oruzije.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
    }
    else return SCM(playerid,-1,""BALLASC"[Ballas]: "BELA"Niste u kombiju za sverc!");
    }
	else return SCM(playerid,-1,""VARADERO"[Ballas]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
	{
	if(voz == condorcar[8] || voz == condorcar[7])
    {
    if(ClanSverc9 == 1)
    {
   	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercOruzija[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes municiju!");
	if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (100$)");
	SvercOruzija[playerid] = 1; g_NovacMinus(playerid,100);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, 2286.9797,-2015.7365,13.3084, 5.0);
	SCM(playerid,-1,""SPLAVA"[Condor]: "BELA"Krenuli ste sa svercom oruzija otidjite u luku da utovarite oruzije.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
    }
    else return SCM(playerid,-1,""SPLAVA"[Condor]: "BELA"Niste u vozilu condor organizacije!");
    }
	else return SCM(playerid,-1,""VARADERO"[Condor]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	if(voz == pocar[14] || voz == pocar[22])
    {
    if(ClanSverc11 == 1)
    {
   	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercOruzija[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes municiju!");
	if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (100$)");
	SvercOruzija[playerid] = 1; g_NovacMinus(playerid,100);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -1705.5632,14.6603,3.2085, 5.0);
	SCM(playerid,-1,""SPLAVA"[Blue Lagoon]: "BELA"Krenuli ste sa svercom oruzija otidjite u luku da utovarite oruzije.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
    }
    else return SCM(playerid,-1,""SPLAVA"[Blue Lagoon]: "BELA"Niste u vozilu privatne organizacije!");
    }
	else return SCM(playerid,-1,""VARADERO"[Blue Lagoon]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
	{
    if(voz == po2car[1] || voz == po2car[0])
    {
    if(ClanSverc12 == 1)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2799.7817, 2700.8513, 10.8298)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovolj novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -550.0393,-185.5822,78.4676, 5.0);
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SCM(playerid,-1,""VARADERO"[LCN]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	}
	else return SCM(playerid,-1,""VARADERO"[Blue Terra]: "SIVA"Niste u kombiju za sverc!");
    }
	else return SCM(playerid,-1,""VARADERO"[Blue Terra]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
    if(voz == po4car[4] || voz == po4car[5])
    {
    if(ClanSverc20 == 1)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, -2312.0989,-1595.4381,484.0190)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mestu pokretanja sverca!");
	if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -1906.1149,-1670.4601,22.5864, 5.0);
	SCM(playerid,-1,""SRWBOJA"[Russian Mafia]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""SRWBOJA"[Russian Mafia]: "SIVA"Niste u kombiju za sverc!");
    }
	else return SCM(playerid,-1,""VARADERO"[Russian Mafia]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
	{
    if(voz == po3car[1] || voz == po3car[2])
    {
    if(ClanSverc13 == 1)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
    if(SvercDroge[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1263.5160,-2010.9749,59.4269)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (200$)");
	SvercDroge[playerid] = 1; g_NovacMinus(playerid, 200);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -2112.1416,-2406.5862,31.4320, 5.0);
	SCM(playerid,-1,""VARADERO"[DNB]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""VARADERO"[DNB]: "SIVA"Niste u kombiju za sverc!");
    }
	else return SCM(playerid,-1,""VARADERO"[DNB]: "SIVA"Sverc je ugasen od strane Lidera!");
	}
	else if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
	{
	if(voz == basecar[19] || voz == basecar[20] || voz == basecar[21])
    {
    if(ClanSverc12 == 1)
    {
   	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercOruzija[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes municiju!");
   	if(!IsPlayerInRangeOfPoint(playerid, 5.0, -14.8262,-274.9314,5.5446)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovolj novca za sverc (100$)");
	SvercOruzija[playerid] = 1; g_NovacMinus(playerid,100);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -1008.4321,-688.1726,32.1262, 5.0);
	SCM(playerid,-1,""SPLAVA"[Yakuza]: "BELA"Krenuli ste sa svercom oruzija otidjite u luku da utovarite oruzije.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
    }
    else return SCM(playerid,-1,""SPLAVA"[Yakuza]: "BELA"Niste u vozilu Yakuza!");
    }
	else return SCM(playerid,-1,""VARADERO"[Yakuza]: "SIVA"Sverc je ugasen od strane Lidera!");
    }
    if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
    {
	if(voz == pocar3[8] || voz == pocar3[9])
    {
    if(ClanSverc12 == 1)
    {
   	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na mestu vozaca da bi pokrenuli sverc!");
   	if(SvercOruzija[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec svercujes drogu!");
   	if(!IsPlayerInRangeOfPoint(playerid, 25.0, -1109.2406,-1295.2731,129.2705)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mestu pokretanja sverca!");
	if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (100$)");
	SvercOruzija[playerid] = 1; g_NovacMinus(playerid,100);
	PlayerInfo[playerid][pRadi] = 1;
	SetPlayerCheckpoint(playerid, -1008.4321,-688.1726,32.1262, 15.0);
	SCM(playerid,-1,""SPLAVA"[DR]: "BELA"Krenuli ste sa svercom droge otidjite u luku da utovarite drogu.");
	SetTimerEx("WarpHack", 5000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
    }
    else return SCM(playerid,-1,""SPLAVA"[DR]: "BELA"Niste u vozilu DeathRowa!");
    }
	else return SCM(playerid,-1,""VARADERO"[DR]: "SIVA"Sverc je ugasen od strane Lidera!");
    }
    return 1;
}
/////////////////////////////////////////////////////////
CMD:skiniorgkaznu(playerid, params[])
{
    //#pragma unused help
    if(!IsPlayerInRangeOfPoint(playerid, 5.0,33.3096,129.8112,495.6328)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu gde se skida kazna!");
    if(PlayerInfo[playerid][pNovacDzep] < 200000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA" Nemate dovoljno novca kod sebe!");
    if(PlayerInfo[playerid][pOrgUgovor] == 0) return SCM(playerid,-1,""SIVA"NemaÃ…Â¡ org kaznu!");
	PlayerInfo[playerid][pOrgUgovor] = 0;
	SavePlayer(playerid);
	g_NovacMinus(playerid, 200000);
	return 1;
}
////////////////////////////////////////////////////////
CMD:kupisjeme(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 5.0,1940.5697,-1984.3297,13.5469)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mjestu kupovina sjemena!");
	if(PlayerInfo[playerid][pClan] != 4 && PlayerInfo[playerid][pLider] != 4) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo clanovi GSF!");
	if(SjemeDrogeGrove[playerid] >= 1) return SCM(playerid,-1,""SIVA"Vec imas sjeme idi ga zasadi!");
	if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,"Nemate dovoljno novca da kupite sjeme (200$)!");
	SjemeDrogeGrove[playerid] = 1; g_NovacMinus(playerid, 200);
	SCM(playerid,-1,""SIVA"Kupili ste sjeme, otidjite na mesto sadjenja droge i zasadite seme!");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:posadidrogu(playerid, params[])
{
	if(PlayerInfo[playerid][pClan] != 4 && PlayerInfo[playerid][pLider] != 4) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo clanovi GSF!");
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, 2428.2844,-1638.8367,13.4589)) return SCM(playerid,-1,""SIVA"Niste na mjestu sadjenja droge!");
    if(Posadjena[playerid] == 1) return SCM(playerid,-1,""SIVA"Vec si posadio drogu sacekaj da nikne (10 min)!");
	if(SjemeDrogeGrove[playerid] == 0) return SCM(playerid,-1,""SIVA"Nemas sjeme | Otidji i kupi sjeme (200$)!");
 	SjemeDrogeGrove[playerid] = 0; Posadjena[playerid] = 1;
    GroveDrogaTimer[playerid] = SetTimerEx("PosadjenjaDrogaGrove", 600000, false, "i", playerid);
    SCM(playerid,-1,""ZELENA"Posadili ste drogu sacekajte 10 min da nikne pa je uberite!");
    return 1;
}
//////////////////////////////////////////////////////////
CMD:beridrogu(playerid, params[])
{
    if(PlayerInfo[playerid][pClan] != 4 && PlayerInfo[playerid][pLider] != 4) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo clanovi GSF!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 2428.2844,-1638.8367,13.4589)) return SCM(playerid,-1,""SIVA"Niste na mjestu branja droge!");
	if(Posadjena[playerid] == 0) return SCM(playerid,-1,""SIVA"Niste posadili drogu!");
 	if(BranjeDroge[playerid] == 0) return SCM(playerid,-1,""SIVA"Droga jos nije spremna za branje!");
	new droga;
	droga = 200;
	for(new i=1; i <= 4; i++)
	{
		if(tCP[i] == 4)
		{
			droga += 100;
		}
	}
	BranjeDroge[playerid] = 0; PlayerInfo[playerid][pDroga] += droga; Posadjena[playerid] = 0;
	DestroyPlayerObject(playerid, SadjenjeDrogeGrove[0][playerid]); DestroyPlayerObject(playerid, SadjenjeDrogeGrove[1][playerid]);
	DestroyPlayerObject(playerid, SadjenjeDrogeGrove[2][playerid]); DestroyPlayerObject(playerid, SadjenjeDrogeGrove[3][playerid]);
	KillTimer(GroveDrogaTimer[playerid]);
	new string[128];
	format(string, charsmax(string), ""ZELENA"Ubrali ste drogu i dobili ste %dg, sada je mozete koristiti!", droga); //conver
	SCM(playerid,-1, string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:oponisti(playerid, params[])
{

	if(PlayerInfo[playerid][pClan] == 4 && PlayerInfo[playerid][pLider] == 4)
	{
		if(Posadjena[playerid] == 0) return SCM(playerid,-1,""SIVA"Niste zapoceli sa proizvodnjom droge!");
		BranjeDroge[playerid] = 0; Posadjena[playerid] = 0; DestroyPlayerObject(playerid, SadjenjeDrogeGrove[0][playerid]); DestroyPlayerObject(playerid, SadjenjeDrogeGrove[1][playerid]);
		DestroyPlayerObject(playerid, SadjenjeDrogeGrove[2][playerid]); DestroyPlayerObject(playerid, SadjenjeDrogeGrove[3][playerid]);
		KillTimer(GroveDrogaTimer[playerid]); SCM(playerid,-1,"[V:RPG] "ZELENA"Prekinuli ste proizvodnju droge!");
	}
    else if(PlayerInfo[playerid][pClan] == 2 && PlayerInfo[playerid][pLider] == 2)
	{
	    if(SvercUlja[playerid] == 0 && SvercMaterijala[playerid] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas aktiviran sverc!");
		SvercMaterijala[playerid] = 0; SvercUlja[playerid] = 0; DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pRadi] = 0;
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sverc!");
	}
 	else if(PlayerInfo[playerid][pClan] == 3 && PlayerInfo[playerid][pLider] == 3)
	{
	    if(SvercDroge[playerid] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas aktiviran sverc!");
		SvercDroge[playerid] = 0; DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pRadi] = 0;
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sverc!");
	}
	else if(PlayerInfo[playerid][pClan] == 5 && PlayerInfo[playerid][pLider] == 5)
	{
	    if(SvercOruzija[playerid] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas aktiviran sverc!");
		SvercOruzija[playerid] = 0; DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pRadi] = 0;
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sverc!");
	}
	return 1;
}
/////////////////////////////////////////////////////////
CMD:promenipass(playerid, params[])
{

	if(isnull(params)) return SCM(playerid, -1, ""VARADERO"[V:RPG] Pomoc | "SIVA"/promenipass [Novi Pass(Min 6 - Max 12 znakova]");
	if(strlen(params) < 6) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Lozinka je kratka (Min 6 znakova)!");
	if(strlen(params) > 12) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Lozinka je previse dugacka (Max 12 znakova)!");
	
	strmid(PlayerInfo[playerid][pPassword], params,0, strlen(params));
	//PlayerInfo[playerid][pPassword] = [0];
	
	sql_update_string(playerid, "Password", PlayerInfo[playerid][pPassword]);
	SCM(playerid,-1,""SRWBOJA"|--------------------------------------------------------------------------------------------|");
	new string[128];
	format(string, charsmax(string), ""SRWBOJA"- "BELA"Vasa nova lozinka je "ZELENA"%s", params); //conver
	SCM(playerid,-1, string);
	SCM(playerid,-1,""SRWBOJA"- "BELA"Slikajte promenu lozinke kako ne bi zaboravili password!");
	SCM(playerid,-1,""SRWBOJA"- "BELA"[V:RPG] Team ne odgovara za izgubljene lozinke!");
	SCM(playerid,-1,""SRWBOJA"|--------------------------------------------------------------------------------------------|");
	return 1;
}
///////////////////////////////////////////////////////////
CMD:eject(playerid, params[])
{

	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""SRWBOJA"[GRESKA] "SIVA"Morate biti u vozilu!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Morate biti na mestu vozaca!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/eject [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac se ne nalazi u vasem vozilu!");
	RemovePlayerFromVehicle(id);
	new string[128];
	format(string, charsmax(string), ""VARADERO"* "SIVA"Izbacili ste %s iz vozila.", GetName(id)); //conver
	SCM(playerid, -1, string);
	format(string, charsmax(string), ""VARADERO"* "SIVA"%s vas je izbacio iz vozila.", GetName(playerid)); //conver
	SCM(id, -1, string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:dole(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz-2);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:astuck(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo Admini (AL 6+)!");
	new igrac,string[128];
	if(sscanf(params, "u", igrac)) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/astuck (ID)");
	if(igrac == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(StavljeneLisice[igrac] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igracu su stavljene lisice!");
	if(IgracTazovan[igrac] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igrac je tazovan!");
	if(IgracOboren[igrac] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igrac je oboren!");
	if(Zavezan[igrac] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Taj igrac je zavezan!");
	if(PlayerInfo[igrac][pZatvor] != 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Taj igrac je u zatvoru!");
    new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(igrac, slx, sly, slz);
	SetPlayerPos(igrac, slx, sly, slz+2);
	TogglePlayerControllable(igrac, 1);
	format(string,sizeof(string),""SRWBOJA"[V:RPG] "BELA"Administrator %s vas je unbagovao!",GetName(playerid));
	SCM(igrac,-1,string);
	format(string,sizeof(string),""SRWBOJA"[V:RPG] "BELA"Administrator %s je koristi (/astuck) na igracu %s!",GetName(playerid) ,GetName(igrac));
	AdminGameMaster(-1,string);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:izlaz(playerid, params[])
{
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Zavezan si ne mozes to!");
 	if(!IsPlayerInAnyVehicle(playerid)) {
		return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti u vozilu.");
    }
    if(StavljeneLisice[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Imas lisice!");
    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if(UsaoAutoProdaja[playerid] != -1) {
		new string[256], szFile[32],
			Year, Month, Day;
		getdate(Year, Month, Day);
		format(szFile, charsmax(szFile), "logs/abuse_%02d%02d%d.log", Day, Month, Year);
		format(string, charsmax(string),"| %s | CMD: /exit", GetName(playerid));
		Log(szFile, string);
		UsaoAutoProdaja[playerid] = -1;
	}
    TogglePlayerControllable(playerid, 1);
    new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz+0.5);
	return 1;
}
//////////////////////////////////////////////////////////
CMD:kupidozvole(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1547.5439,-2242.6726,-91.4350)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Morate biti u Auto Skoli!");
	SPD(playerid,70,DSL,""BELA"List Dozvola",""SPLAVA"- "BELA"Dozvola za Voznju (1000$)\n"SPLAVA"- "BELA"Dozvola za Kamion/Bus (2000$)\n"SPLAVA"- "BELA"Dozvola za Avion (4000$)\n"SPLAVA"- "BELA"Dozvola za Motor (500$)\n"SPLAVA"- "BELA"Dozvola za Brod (3000$)","Odaberi","Izadji");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:banka(playerid, params[])
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
    if(PlayerInfo[playerid][pVip] == 6) {
		if(PlayerInfo[playerid][pBankovniRacun] == 0) return SCM(playerid, -1, "Nemas otvoren bankovni racun !");
		SPD(playerid, 32, DSL, ""BELA"Banka",""SRWBOJA"1 | "BELA"Ostavi Novac\n"SRWBOJA"2 | "BELA"Podigni Novac\n"SRWBOJA"3 | "BELA"Transfer Novac\n"SRWBOJA"4 | "BELA"Stanje na Bankovnom Racunu\n"SRWBOJA"5 | "BELA"Kredit", "Odaberi", "Izadji");
    }
    else
    {
        if(!IsPlayerInRangeOfPoint(playerid, 3.0, 451.2185,502.6533,407.0240) && !IsPlayerInRangeOfPoint(playerid, 3.0,  2433.10498, 2285.00513, -3.42100)) return SCM(playerid, -1, "Morate biti u banci !");
		if(PlayerInfo[playerid][pBankovniRacun] == 0) return SCM(playerid, -1, "Nemas otvoren bankovni racun !");
		SPD(playerid, 32, DSL, ""BELA"Banka",""SRWBOJA"1 | "BELA"Ostavi Novac\n"SRWBOJA"2 | "BELA"Podigni Novac\n"SRWBOJA"3 | "BELA"Transfer Novac\n"SRWBOJA"4 | "BELA"Stanje na Bankovnom Racunu\n"SRWBOJA"5 | "BELA"Kredit", "Odaberi", "Izadji");
 	}
	return 1;
}
/////////////////////////////////////////////////////////
CMD:kredit(playerid, params[])
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 451.2185,502.6533,407.0240) && !IsPlayerInRangeOfPoint(playerid, 3.0,  2433.10498, 2285.00513, -3.42100)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti u banci!");
	if(PlayerInfo[playerid][pIznosKredita] <= 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Niste podigli kredit!");
	SPD(playerid, 66, DIALOG_STYLE_LIST, ""BELA"Informacije Kredit", ""BELA"(1). "VARADERO"Info Kredit\n"BELA"(2). "VARADERO"Promena Iznosa Rate", "Odaberi", "Izadji");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:otvoriracun(playerid, params[])
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 451.2206,509.2217,407.0240)) return SCM(playerid,-1,""SRWBOJA"ERROR: "BELA"Morate biti u banci!");
	if(PlayerInfo[playerid][pBankovniRacun] == 1) return SCM(playerid,-1,""VARADERO"Vec imas bankovni racun!");
	if(PlayerInfo[playerid][pNovacDzep] < 500) return SendClientMessage(playerid,-1,""SPLAVA"[V:RPG] "BELA"Potrebno ti je 500$ za otvaranje bankovnog racuna!");
	PlayerInfo[playerid][pBankovniRacun] = 1; g_NovacMinus(playerid,500);
	SCM(playerid,-1,"[INFO]: "SRWBOJA"Otvorili ste bankovni racun za 500$!");
	return 1;
}
////////////////////////////////////////////////////////////
CMD:me(playerid, params[])
{

	new result[128];
	if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
	if(sscanf(params, "s[80]", result)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/me [tekst]");
	new tekst1 = strlen(result);
	for(new i = 0; i<tekst1; i++) { if(IsNumeric(result[i])) result[i] = '*' ; }
	new string[128];
	format(string, sizeof string, "* %s %s",GetName(playerid),result);
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	return 1;
}
////////////////////////////////////////////////////////////
CMD:do(playerid, params[])
{

	new result[128];
	if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
	if(sscanf(params, "s[80]", result)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/do [tekst]");
	new tekst1 = strlen(result);
	for(new i = 0; i<tekst1; i++) { if(IsNumeric(result[i])) result[i] = '*' ; }
	new string[128];
	format(string, sizeof string, "* %s (( %s ))",GetName(playerid),result);
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	return 1;
}
////////////////////////////////////////////////////////////
CMD:osvezi(playerid, params[])
{

	if(GetPlayerInterior(playerid) > 0) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "BELA"Ne mozete koristiti refresh dok ste u enterijeru!");
	SetPlayerVirtualWorld(playerid,0); SetPlayerInterior(playerid,0);
	SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Osvezeni ste ukoliko budete imali jos problema kontaktirajte admina!");
	return 1;
}
////////////////////////////////////////////////////////////
CMD:novi(playerid, params[])
{

    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
    if(ServerInfo[isPitanja] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ova komanda je trenutno iskljucena, pokusajte kasnije!");
	if(PlayerInfo[playerid][pLevel] > 7) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ovu komandu mozete koristiti samo do level-a 7!");
	if(PlayerInfo[playerid][pMutiran] != 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!");
	if(GetTimeEx() < NewNew[playerid]) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Ovu komandu mozete koristiti svakih 30 sekundi!");
	new adm = 0;
	foreach(new i : Player) { if(PlayerInfo[i][pGM] > 0 || PlayerInfo[i][pAdmin] > 0) adm++; }
	if(adm == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Nema Admina & GameMastera Online pa ne mozete slati pomoc!");
	new string[128];
	format(string, 128, ""SRWBOJA"[V:RPG] %s (ID:%d) je novi igrac i treba mu pomoc!", GetName(playerid), playerid);
	AdminGameMaster(-1, string);
	SCM(playerid, -1, ""SRWBOJA"INFO | Vas zahtev za pomoc je poslat svim online Adminima/GameMasterima !");
	NewNew[playerid] = GetTimeEx() + 30;
	return 1;
}
////////////////////////////////////////////////////////////
CMD:startevent(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
		if(event == 0)
		{
	 		SPD(playerid,358,DIALOG_STYLE_INPUT,"{0084e3}[EVENTI]","Event id-ovi:\n2 - Desert Drive\n3 - Suma Race\n4 - Hill Drift\n5 - Vortex\n6 - Drift1\n7 - Drift2\n8 - Zagreb Race\n9 - JetMax\n10 - Rally1\n11 - Rally2\n12 - Quad Race\n13 - Sanchez Race\n14 - Kart Race\n15 - Lavirint\n16 - Morski Race\n17 - MC Vrh\n18 - NRG Race\n19 - Guranje Monsterima\n20 - Parking Drift\n21 - Potapanje Brodova\n22 - Beach Hell\n23 - Aqua Park\nUnesi id eventa:","Unesi","Izlaz");
		}
		else
		{
            SCM(playerid, SVETLOPLAVA, "Vec ima pokrenut event!");
		}
	}
	return 1;
}

CMD:stopevent(playerid, params[])
{
	new Float: oldpos[4], oldint;
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
		if(event == 23 || event == 22 || event == 21 || event == 20 || event == 19 || event == 18 || event == 17 ||  event == 16 || event == 15 || event == 14 || event == 13 || event == 12 ||  event == 11 || event == 10 || event == 9 || event == 8 || event == 7 || event == 6 || event == 5 ||event == 4 || event == 3 || event == 2 || event == 1)
		{
			foreach(new i:Player)
			{
                if(event != 0 && Prisustvuje[i] != false)
                {  
                    PlayerInfo[i][pPridruzeneventu] = 0;
					DisablePlayerRaceCheckpoint(i);
					Prisustvuje[i] = false;
					ecp[i] = 0;
					eecp[i] = 0;
					vorcp[i] = 0;
					oldpos[0] = GetPVarFloat(i, PVAR_TAG"oldX");
					oldpos[1] = GetPVarFloat(i, PVAR_TAG"oldY");
					oldpos[2] = GetPVarFloat(i, PVAR_TAG"oldZ");
					oldpos[3] = GetPVarFloat(i, PVAR_TAG"oldR");
					oldint = GetPVarInt(i, PVAR_TAG"oldInt");
					SetPlayerPos(i, oldpos[0], oldpos[1], oldpos[2]);
					SetPlayerFacingAngle(i, oldpos[3]);
					SetPlayerInterior(i, oldint);
					DeletePVar(i, PVAR_TAG"oldX");
					DeletePVar(i, PVAR_TAG"oldY");
					DeletePVar(i, PVAR_TAG"oldZ");
					DeletePVar(i, PVAR_TAG"oldR");
					DeletePVar(i, PVAR_TAG"oldInt");
				}
			}
			auts = false;
	        event = 0;
	        MoveDynamicObject(vratakapija, 4195.9180, 1776.5142, 51.5546, 2.0);
	        DestroyDynamicObject(lsdok[0]); DestroyDynamicObject(beachhell[1]); DestroyDynamicObject(beachhell[2]); DestroyDynamicObject(lsdok[1]); DestroyDynamicObject(lsdok[2]);
			DestroyDynamicObject(ddrive[0]); DestroyDynamicObject(ddrive[1]); DestroyDynamicObject(ddrive[2]); DestroyDynamicObject(ddrive[3]); DestroyDynamicObject(ddrive[4]); DestroyDynamicObject(ddrive[5]); DestroyDynamicObject(ddrive[6]);
			DestroyDynamicObject(ddrive[7]); DestroyDynamicObject(ddrive[8]); DestroyDynamicObject(ddrive[9]); DestroyDynamicObject(ddrive[10]); DestroyDynamicObject(ddrive[11]); DestroyDynamicObject(ddrive[12]); DestroyDynamicObject(ddrive[13]); DestroyDynamicObject(ddrive[14]); DestroyDynamicObject(ddrive[15]); DestroyDynamicObject(ddrive[16]); DestroyDynamicObject(ddrive[17]); DestroyDynamicObject(ddrive[18]); DestroyDynamicObject(ddrive[19]);
			DestroyDynamicObject(KartO[0]); DestroyDynamicObject(KartO[1]); DestroyDynamicObject(KartO[2]); DestroyDynamicObject(KartO[3]);
			DestroyDynamicObject(srace[0]); DestroyDynamicObject(srace[1]); DestroyDynamicObject(srace[2]); DestroyDynamicObject(srace[3]);
			DestroyDynamicObject(Relly1[0]); DestroyDynamicObject(Relly1[1]); DestroyDynamicObject(Relly1[2]); DestroyDynamicObject(Relly1[3]);
			DestroyVehicle(eventa[0]); DestroyVehicle(eventa[1]); DestroyVehicle(eventa[2]); DestroyVehicle(eventa[3]); DestroyVehicle(eventa[4]); DestroyVehicle(eventa[5]); DestroyVehicle(eventa[6]); DestroyVehicle(eventa[7]); DestroyVehicle(eventa[8]); DestroyVehicle(eventa[9]); DestroyVehicle(eventa[10]); DestroyVehicle(eventa[11]); DestroyVehicle(eventa[12]); DestroyVehicle(eventa[13]); DestroyVehicle(eventa[14]);
			new sendername[MAX_PLAYER_NAME], string[100];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"[%d] %s je zaustavio event",playerid,sendername);
			SCMTA(-1,string);
		}
	}
	return 1;
}
CMD:eventcount(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1 && event > 1)
    {
		if (auts == false)
		{
   			auts = true;
			foreach(new i:Player)
			{
				if(ecp[i] == 1 || ecp[i] == 2 || ecp[i] == 3 || ecp[i] == 4 || ecp[i] == 5 || ecp[i] == 6 || ecp[i] == 7 || ecp[i] == 8 || ecp[i] == 9 || ecp[i] == 10 || ecp[i] == 11 || ecp[i] == 12 || ecp[i] == 13 || ecp[i] == 14 || ecp[i] == 15 || ecp[i] == 16 || ecp[i] == 17 || ecp[i] == 18 || ecp[i] == 19 || ecp[i] == 20 || ecp[i] == 21 || ecp[i] == 22)
				{
                    if(Prisustvuje[i] != false)
                    {
		   				GameTextForPlayer(i, "~n~~g~-~y~ 5 ~g~-",1000,3);
						TogglePlayerControllable(i, 0);
			   			SetTimer("eventcount4",1000,0);
			   			SetTimer("eventcount3",2000,0);
			   			SetTimer("eventcount2",3000,0);
			   			SetTimer("eventcount1",4000,0);
			   			SetTimer("eventcountgo",5000,0);
					}
				}
   			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF9900AA, "Vec je pocelo!");
			return 1;
		}
	}
	return 1;
}
CMD:eventport(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
		SPD(playerid,1003,DIALOG_STYLE_LIST,"Port lista","2 - Desert Drive\n3 - Suma Race\n4 - Hill Drift\n5 - Vortex\n6 - Drift1\n7 - Drift2\n8 - Zagreb Race\n9 - JetMax\n10 - Rally1\n11 - Rally2\n12 - Quad Race\n13 - Sanchez Race\n14 - Kart Race\n15 - Kruzna Trka\n16 - Morski Race\n17 - MC Vrh\n18 - NRG Race\n19 - Guranje Monsterima\n20 - Parking Drift\n21 - Potapanje Brodova\n22 - Beach Hell\n23 - Aqua Park","Pozovi","Prekid");
	}
	return 1;
}
CMD:trka(playerid, params[])
{
    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Moras biti level 7 da bi mogao koristiti ovu komandu!");
    if(PlayerInfo[playerid][pTrazeniLevel] >= 1) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete se portati na event jer imate trazeni level!");
    if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete se portati na event jer ste zatvoreni!");
    //if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 1) return SendClientMessage(playerid, -1, "Gde si posao bre?");
	if(slotovi != 0)
	{
		if(Prisustvuje[playerid] == false && auts == false)
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
            UCount[playerid] = 1;
			if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
			if(event == 1)
			{
				ecp[playerid] = 1;
				Prisustvuje[playerid] = true;
				slotovi--;
				SetPlayerPos(playerid, 2603.7866,-2372.5149,13.1238);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
                if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ResetPlayerWeapons(playerid);
			}
			else if(event == 2)
			{
				if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 2;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -509.9478,2589.1721,52.9780);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
                if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ResetPlayerWeapons(playerid);
			}
			else if(event == 3)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 3;
				Prisustvuje[playerid] = true;
	            slotovi--;
				SetPlayerPos(playerid, -269.5549,-2165.1125,28.7574);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 4)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 4;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -2421.8689,-609.4372,132.2674);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 5)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 5;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -2877.5713,423.5097,4.9590);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 6)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 6;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -306.8569,1302.5017,53.6073);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 7)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 7;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -2396.9985,-571.4738,132.1172);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 8)
			{   if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 8;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -1509.5323,975.5475,7.1853);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 9)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 9;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, 2282.8188,-223.8763,11.7244);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 10)//raly 1
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 10;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -1947.5833,-2460.6743,30.7485);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 11)//raly 2
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 11;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, 303.3947,-732.6323,5.5578);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 12)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 12;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -2498.3689,-1453.5709,361.8633);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 13)
			{
				if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 13;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -2538.3408,-1470.2476,360.5102);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 14)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 14;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid, -2260.2354,2278.6064,4.9886);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 15)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 15;
				Prisustvuje[playerid] = true;
	            slotovi--;
				SetTimerEx("Ucitavanje",2000,false,"i",playerid);
	            SetPlayerPos(playerid, 4188.3511, 1778.1104, 50.2300);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			    TogglePlayerControllable(playerid,0);
			    SetTimerEx("Freeze",3000, false, "i", playerid);
			    SetTimerEx("Ucitavanje",1000,false,"i",playerid);
			}
			else if(event == 16)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 16;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            TogglePlayerControllable(playerid,0);
				SetTimerEx("Ucitavanje",2000,false,"i",playerid);
	            SetPlayerPos(playerid,704.7015,-3434.2771,18.2241);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			    TogglePlayerControllable(playerid,0);
			    SetTimerEx("Ucitavanje",1000,false,"i",playerid);
			}
			else if(event == 17)
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 17;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid,-2361.7668,-2189.4280,33.5759);
				vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 18)//NRG
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
				ecp[playerid] = 18;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid,1410.1050,-1308.8313,9.4301);
				NGRTRKA[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 19)//monster
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
			    ecp[playerid] = 19;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid,-1637.0322,1044.6771,69.8280);
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 20)//drift
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
			    ecp[playerid] = 20;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid,2262.2480,1399.4867,42.8203);
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 21)//potapanje brodova
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
			    ecp[playerid] = 21;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid,-818.7883,1911.1190,7.0000);
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 22)//beachhell
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
			    ecp[playerid] = 22;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            SetPlayerPos(playerid,-2937.5605,452.5544,3.5395);
	            vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			else if(event == 23)//beachhell
			{
			    if(PlayerInfo[playerid][pZatvor] == 1 || PlayerInfo[playerid][pJailed] == 2) return SendClientMessage(playerid, -1, "Gde si posao bre?");
			    ecp[playerid] = 23;
				Prisustvuje[playerid] = true;
	            slotovi--;
	            TogglePlayerControllable(playerid,0);
	            g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);
	            SetPlayerPos(playerid,-204.0635,3954.5073,13.7655);
	            vorcp[playerid] = 0;
                PlayerInfo[playerid][pPridruzeneventu] = 1;
				ResetPlayerWeapons(playerid);
			}
			new Float: oldpos[4], oldint;
			GetPlayerPos(playerid, oldpos[0], oldpos[1], oldpos[2]);
			GetPlayerFacingAngle(playerid, oldpos[3]);
			oldint = GetPlayerInterior(playerid);
			SetPVarFloat(playerid, PVAR_TAG"oldX", oldpos[0]);
			SetPVarFloat(playerid, PVAR_TAG"oldY", oldpos[1]);
			SetPVarFloat(playerid, PVAR_TAG"oldZ", oldpos[2]);
			SetPVarFloat(playerid, PVAR_TAG"oldR", oldpos[3]);
			SetPVarInt(playerid, PVAR_TAG"oldInt", oldint);
		}
		else return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Samo jednom mozete koristiti /join u toku jednog eventa ili je event vec krenuo!");
	}
	else return SCM(playerid,-1,"{FFED00}Zao nam je, event je vec poceo!!");
	return 1;
}
////////////////////////////////////////////////////////////
CMD:pitaj(playerid, params[])
{
    if(PlayerInfo[playerid][pGM] > 0 || PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pSpecteam] > 0) return SCM(playerid, -1, "Ovu komandu mogu koristiti samo obicni igraci !");
	new sat, minut, sekund;
    gettime(sat, minut, sekund);
    if(sat >= 1 && sat <= 7) return SCM(playerid, -1, "Psttttt, Staff trenutno spava! Pitanja ne mozete slati od 1 do 7 ujutro!");
	if(ServerInfo[isPitanja] == 1) return SCM(playerid, -1, "Pitanja su trenutno iskljucena, pokusajte kasnije!");
    if(PlayerInfo[playerid][pMutiran] != 0) return SCM(playerid, -1, "Mutirani ste ne mozete koristiti chat!");
	if(gettime() < hPomoc[playerid]) return SCM(playerid, -1, "Ovu komandu mozete koristiti svakih 120 sekundi!");
    if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste zatvoreni!");
	new adm = 0;
	foreach(new i : Player) { if(PlayerInfo[i][pGM] > 0 || PlayerInfo[i][pAdmin] > 0) adm++; }
	if(adm == 0) return SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Nema Admina & GameMastera Online pa ne mozete slati pitanje!");
	SPD(playerid,3131, DIALOG_STYLE_MSGBOX, ""BELA"PITAJTE", "Odaberite kome zelite postaviti pitanje:", "Admin", "GameMaster");
	hPomoc[playerid] = GetTimeEx() + 120;
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:lp( playerid, params[] )
{
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTestAdmin] >= 1) {

		strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
		for( new i = 1; i < MAX_ASKQS; i++ ) {
			format( DialogStrgEx, sizeof( DialogStrgEx ), "%sPitanje %d - %s(%d)\n", DialogStrgEx, i, adMaskqList[ i ][ askqOwner ], adMaskqList[ i ][ askqID ] );
		}
		SPD( playerid, 424, DSL, "Lista pitanja", DialogStrgEx, "Odaberi", "Odustani" );
	}
	else if( PlayerInfo[ playerid ][ pGM ] >= 1 ) {
	    strdel( DialogStrgEx, 0, sizeof( DialogStrgEx ) );
		for( new i = 1; i < MAX_ASKQS; i++ ) {
			format( DialogStrgEx, sizeof( DialogStrgEx ), "%sPitanje %d - %s(%d)\n", DialogStrgEx, i, GMaskqList[ i ][ askqOwnerA ], GMaskqList[ i ][ askqIDA ] );
		}
		SPD( playerid, 8372, DSL, "Lista pitanja", DialogStrgEx, "Odaberi", "Odustani" );
	}
	else return SCM( playerid, -1, ""VARADERO"[V:RPG] "BELA"Samo Staff Team!" );
    return 1;
}
CMD:pogledajodgovor(playerid, params[])
{
	if(askqInfo[playerid][askqSended] == false) return SCM(playerid, -1, "Nisi poslao pitanje.");
    if(askqInfo[playerid][askqAnswered] == false) return SCM(playerid, -1, "Nije odgovoreno na tvoje pitanje.");
	new string[256];
	format(string, sizeof(string), "Admin/GameMaster %s je odgovorio na tvoje pitanje.\n\nOdgovor: %s", askqInfo[ playerid ][ askqAdmin ], askqInfo[ playerid ][ askqAnswer ] );
	SPD(playerid, 0, DSB, "Odgovor", string, "Ok", "");
	askqInfo[playerid][askqSended] = false;
	askqInfo[playerid][askqAnswered] = false;
	strmid(askqInfo[playerid][askqAdmin], "None", 0, strlen("None"), 32);
	strmid(askqInfo[playerid][askqAnswer], "None", 0, strlen("None"), 128);
	return 1;
}
//================== KOMANDA ZA PISANJE PO EKRANU ============================//
CMD:ekran(playerid, params[])
{
    //#pragma unused help
    new tekst[128];
    new string[128];
    if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,BELA2,""SIVA"Samo Vlasnik!!");
    if(sscanf(params, "s[128]", tekst)) return SCM(playerid,COLOR_YELLOW,""VARADERO"[V:RPG] "BELA" /ekran (tekst)");
    format(string,sizeof(string),""VARADERO"A | "SIVA"%s koristi /ekran!",GetName(playerid));
	AdminGameMaster(-1, string);
    GameTextForAll(tekst,10000,3);
    return 1;
}
///------------------------- [ KOMANDA /vhelti ] ----------------------------///

CMD:vhelti(playerid, params[])
{
    //#pragma unused help
    new pplayerid,Float:health;
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
    if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"::CMD:: "SIVA"Morate biti na Administrator Duznosti!");
	if(sscanf(params, "ui", pplayerid,health)) return SCM(playerid,-1, ""VARADERO"[V:RPG] "BELA"/vhelti [ID/Ime] [Helti]");
	if(pplayerid == IPI) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Pogresan ID!");
	if(PlayerInfo[pplayerid][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
	if(!IsPlayerInAnyVehicle(pplayerid)) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Igrac mora biti u vozilu!");
	SetVehicleHealth(GetPlayerVehicleID(pplayerid),health);
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:report(playerid, params[])
{
    if(PlayerInfo[playerid][pGM] > 0 || PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pSpecteam] > 0) return SCM(playerid, -1, "Ovu komandu mogu koristiti samo obicni igraci !");
    new sat, minut, sekund;
    gettime(sat, minut, sekund);
    if(sat >= 1 && sat <= 7) return SCM(playerid, -1, "Psttttt, Staff trenutno spava! Report ne mozete slati od 1 do 7 ujutro!");
	if(ServerInfo[isReport] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Report je trenutno iskljucen pokusajte kasnije!");
//	if(PlayerInfo[player][pAdmin] >= 6) return SCM(playerid, -1, "[V:RPG] "SIVA"Sto si pajser?!");
	if(PlayerInfo[playerid][pMutiran] != 0) return SCM(playerid,-1, "[V:RPG] "SIVA"Mutirani ste ne mozete koristiti chat!");
	if(GetTimeEx() < hReport[playerid]) return SCM(playerid,-1, "Ovu komandu mozete koristiti svakih 180 sekundi!");
    if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete koristiti ovu komandu jer ste zatvoreni!");
	new adm = 0;
	foreach(new i : Player) { if(PlayerInfo[i][pGM] > 0 || PlayerInfo[i][pAdmin] > 0) adm++; }
	if(adm == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Nema Admina & GameMastera Online pa ne mozete slati report!");
	new text[80], player;
	if(sscanf(params, "us[80]", player,text)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/report [ID igraca] [tekst]");
	if(player == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/report [ID igraca] [tekst]");
	for(new i; i < strlen(text); i++) { if(!strcmp(text[i], "{")) text[i] = '['; if(!strcmp(text[i], "}")) text[i] = ']'; }
	new string[256];
	format(string, sizeof(string), ""SRWBOJA"[REPORT] "BELA"Igrac %s [ID:%d] je prijavio igraca "SRWBOJA"%s [ID:%d]"BELA": %s", GetName(playerid),playerid,GetName(player),player,text);
	AdminGameMasterSpec(-1,string);
	format(string, sizeof(string), ""SRWBOJA"Vas report na igraca %s [ID:%d] glasi: "BELA"%s",GetName(player),player,text);
	SendClientMessage(playerid,-1,string);
	SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vas report je uspesno poslat Adminima & GameMasterima!");
	hReport[playerid] = GetTimeEx() + 180;
	return 1;
}
////////////////////////////////////////////////////////////
CMD:s(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
		new result[101],text[100];
		if(sscanf(params, "s[100]",text )) return SendClientMessage(playerid, -1, ""ORANGE"[V:RPG] Pomoc | "BELA"/s (tekst)");
		new tekst1 = strlen(result);
		for(new i = 0; i<tekst1; i++){
		if(IsNumeric(result[i]))
		result[i] = '*' ;}
		format(result, sizeof(result), ""BELA"%s se dere: %s !!!",GetName(playerid), text);
		e_RadiusMSG(20.0, playerid, HEX_PROX, result);
		new trajanje = strlen(result) * 120;
		OnePlayAnim(playerid,"ON_LOOKERS","shout_01",4.0,1,0,0,1,1);
		SetTimerEx("ChatAnimacija", trajanje, false, "d", playerid);
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:tiho(playerid, params[])
{
	new result[100],text;
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
		if(sscanf(params, "s[100]",text )) return SendClientMessage(playerid, -1, ""ORANGE"[V:RPG] Pomoc | "BELA"/tiho (tekst)");
		new tekst1 = strlen(result);
		for(new i = 0; i<tekst1; i++){
		if(IsNumeric(result[i]))
		result[i] = '*' ;}
		format(result, sizeof(result), ""SRWBOJA"((Tiho)) "BELA"%s kaze: %s",GetName(playerid), text);
		e_RadiusMSG(10.0, playerid, HEX_PROX, result);
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:b(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"V:RPG | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
	new result[1024],text;
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
		if(sscanf(params, "s[1024]",text )) return SendClientMessage(playerid, -1, ""SRWBOJA"V:RPG Pomoc | "BELA"/b (tekst)");
		new tekst1 = strlen(result);
		for(new i = 0; i<tekst1; i++){ if(IsNumeric(result[i])) result[i] = '*' ;}
		format(result, sizeof(result), ""SRWBOJA"(( OOC | "BELA"%s [%d] kaze: %s "SRWBOJA"))", GetName(playerid), playerid, text);
		e_RadiusMSG(20.0, playerid, -1, result);
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:w(playerid, params[])
{
	new result[48],string[128],id,Float:Poz[3];
	if(PlayerInfo[playerid][pMutiran] == 1) { SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete pisati dok ste mutirani!"); return 1; }
	if(sscanf(params, "us[48]",id,result)) return SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/w (ID) (tekst)");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(id == playerid) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete sebi saptati!");
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac nije u vasoj blizini!");
	new tekst1 = strlen(result);
	for(new i = 0; i<tekst1; i++){
	if(IsNumeric(result[i]))
	result[i] = '*' ;}
	format(string, sizeof(string), ""SRWBOJA"%s vam sapce: "VARADERO"%s",GetName(playerid), result);
	SCM(id,-1,string);
	format(string, sizeof(string), ""SRWBOJA"Sapnuli ste %s: "VARADERO"%s",GetName(id), result);
	SCM(playerid,-1,string);
 	format(string, sizeof(string), ""VARADERO"Saputanje: "SRWBOJA"Igrac %s je sapnuo igracu %s "VARADERO"%s",GetName(playerid),GetName(id),result);
    Prisluskivanje(-1,string);
	format(string,sizeof(string),"%s sapce nesto %s-u.",GetName(playerid),GetName(id));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	return 1;
}
////////////////////////////////////////////////////////////
CMD:vreme(playerid, params[])
{

	if(PlayerInfo[playerid][pSat] == 0) return SCM(playerid,-1,"GRESKA | "VARADERO"Nemate sat!");
	new string[128], sati, minuta, sec; gettimeEx(sati, minuta, sec);
	if(PlayerInfo[playerid][pZatvor] > 0)
	{
		format(string, sizeof(string), "~y~| ~w~%d:%d ~y~|~n~~y~Zatvorska kazna: ~r~%d", sati,minuta, PlayerInfo[playerid][pZatvorenVreme]);
	}
	else
	{
		format(string, sizeof(string), "~y~| ~w~%d:%d ~y~|", sati,minuta, PlayerInfo[playerid][pZatvorenVreme]);
	}
	GameTextForPlayer(playerid, string, 5000, 3);
    OnePlayAnim(playerid, "COP_AMBIENT", "Coplook_watch", 3.5, 0, 0, 0, 0, 0);
	format(string, sizeof(string), "* %s podize ruku i gleda na sat.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	return 1;
}
///////////////////////////////////////////////////////////
CMD:kupi(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
		if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
		{
			if(FirmaInfo[i][fVrsta] == VRSTA_MARKET)
			{
				x++;
				if( UsaoFirma[playerid] == -1 ) return SCM( playerid,-1,""ZPLAVA"[Firma]: "BELA"Morate biti u firmi!");
				if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    new string1[275], string2[275] , string[550];
				format(string1,sizeof(string1),""SRWBOJA"- "BELA"Mobilni Telefon (150$)\n"SRWBOJA"- "BELA"Imenik (50$)\n"SRWBOJA"- "BELA"Cigare (20$)\n"SRWBOJA"- "BELA"Upaljac (10$)\n"SRWBOJA"- "BELA"Dopuna od 100$\n"SRWBOJA"- "BELA"GPS 10000$\n"SRWBOJA"- "BELA"Kanap (350$)\n");
				format(string2,sizeof(string2),""SRWBOJA"- "BELA"Naocare (300$)\n"SRWBOJA"- "BELA"Povez (100$)\n"SRWBOJA"- "BELA"Sok (10$)\n"SRWBOJA"- "BELA"Pivo (10$)\n"SRWBOJA"- "BELA"MP3 (700$)\n"SRWBOJA"- "BELA"Sprej (70$)\n"SRWBOJA"- "BELA"Sat (130$)\n"SRWBOJA"- "BELA"Marama (500$)\n"SRWBOJA"- "BELA"Hrana (300$)\n");
			    format(string, sizeof(string), "%s%s", string1, string2);
			    SPD(playerid, 86, DIALOG_STYLE_LIST, ""BELA"Market Kupovina", string, "Kupi", "Izlaz");
				break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_SEXSHOP)
			{
				x++;
				if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
				SPD(playerid, 88, DIALOG_STYLE_LIST, ""BELA"Sex Shop", ""LJUB"- "BELA"Sivi Vibrator (50$)\n"LJUB"- "BELA"Beli Vibrator (50$)\n"LJUB"- "BELA"Ljubicasti Vibrator (70$)\n"LJUB"- "BELA"Cvece (10$)", "Kupi", "Izlaz");
				break;
			}
            else if(FirmaInfo[i][fVrsta] == VRSTA_GUNSHOP)
			{
				x++;
				if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
				if(PlayerInfo[playerid][pGunDozvola] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Morate imati dozvolu za oruzije da bi kupili oruzije!");
				if(PlayerInfo[playerid][pDisarm] == 1 && PlayerInfo[playerid][pDisarmVreme] > 0) return SCM(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Imas Disarm ");
				if(Stranica[ playerid ] > 0) { for(new e; e < 15; e++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ e ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); } }
                else { for(new e; e < 15; e++) { PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 348); PlayerTextDrawShow(playerid, GunTD[ playerid ][ e ]); Stranica[ playerid ] = 1; SelectTextDraw(playerid, 0xFFA500FF); PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Deagle"); PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "4000$"); } }
				break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_KLADIONICA)
   			{
   			    x++;
   			    new broj, brojk = random(300), string[128];
				if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
   			    if(sscanf(params, "i",broj)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "BELA"/kupi [BROJ 1- 300 (100$)]");
                if(broj < 1 || broj > 300) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Ne mozete ici ispod 1 i vise od 300!");
				if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Nemate dovoljno novca!");
				KladionicaBroj[playerid] = broj; g_NovacMinus(playerid, 100);
				if(KladionicaBroj[playerid] == brojk)
			    {
			        SCM(playerid,-1,""SPLAVA"[Kladionica]: "SIVA"Cestitamo pogodili ste broj, osvojili ste 20000$!");
	                g_NovacPlus(playerid, 1500);
	                format(string,sizeof(string),"[V:RPG] "SPLAVA"Igrac %s je osvojio na kladionici 20000$!",GetName(playerid));
					AdminGameMaster(-1, string);
					FirmaInfo[UsaoFirma[playerid]][fProizvodi]--; FirmaNovac(UsaoFirma[playerid], 50);
			    }
			    else
			    {
			        SCM(playerid,-1,""SRWBOJA"[Kladionica]: "SIVA"Zao nam je ovaj put niste osvojili na kladionici!");
                    FirmaInfo[UsaoFirma[playerid]][fProizvodi]--; FirmaNovac(UsaoFirma[playerid], 50);
				}
				break;
   			}
		}
	}
	for(new i = 86; i < 91; i++)
   	{
   	    if(IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
		{
   			if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ)
			{
				x++;
				KioskKupovina[playerid] = i;
				SPD(playerid, 222, DIALOG_STYLE_LIST, ""BELA"Trafika", ""SRWBOJA"- "BELA"Dopuna (20$)\n"SRWBOJA"- "BELA"Dopuna (50$)\n"SRWBOJA"- "BELA"Dopuna (100$)\n"SRWBOJA"- "BELA"Sok (10$)\n"SRWBOJA"- "BELA"Cigare (20$)\n"SRWBOJA"- "BELA"Upaljac (10$)\n"SRWBOJA"- "BELA"Cokoladica (10$)\n"SRWBOJA"- "BELA"Halo Kartica (50$)", "Odaberi", "Izlaz");
                break;
			}
   		}
	}
	return 1;
}
///////////////////////////////////////////////////////////
CMD:meni(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
	    if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]))
	    {
		    if(FirmaInfo[i][fVrsta] == VRSTA_RESTORAN)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    new string1[275], string2[292], string[567];
				format(string1,sizeof(string1),""VARADERO"- "BELA"Supa (20$)\n"VARADERO"- "BELA"Pasulj (30$)\n"VARADERO"- "BELA"Riblja Corba (40$)\n"VARADERO"- "BELA"Slovenski Kern's Kulen (60$)\n"VARADERO"- "BELA"Pita od sira (30$)\n"VARADERO"- "BELA"Raznjici (70$)\n");
				format(string2,sizeof(string2),""VARADERO"- "BELA"Palacinke (10$)\n"VARADERO"- "BELA"Cvarci (30$)\n"VARADERO"- "BELA"Biftek (90$)\n"VARADERO"- "BELA"Bllade's Proja (50$)\n"VARADERO"- "BELA"Coca-Cola (10$)\n"VARADERO"- "BELA"Viski (100$)\n"VARADERO"-. "BELA"Pivo (10$)\n"VARADERO"- "BELA"Gusti Sok (10$)");
			    format(string, sizeof(string), "%s%s", string1, string2);
			    SPD(playerid, 92, DIALOG_STYLE_LIST, ""BELA"Restoran - Meni", string, "Jedi", "Izlaz");
			    break;
			}
		    else if(FirmaInfo[i][fVrsta] == VRSTA_BURG)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    new string1[275], string2[275], string[550];
				format(string1,sizeof(string1),""ZELENA"- "BELA"Hamburger (10$)\n"ZELENA"- "BELA"Cheeseburger (15$)\n"ZELENA"- "BELA"Pomfrit (15$)\n"ZELENA"- "BELA"Pileci Medaljoni (20$)\n"ZELENA"- "BELA"Mijesana Salata (25$)\n");
				format(string2,sizeof(string2),""ZELENA"- "BELA"Kafa (10$)\n"ZELENA"- "BELA"Caj (15$)\n"ZELENA"- "BELA"Sladoled (20$)\n"ZELENA"- "BELA"Coca Cola (10$)\n"ZELENA"- "BELA"Voda (10$)");
			    format(string, sizeof(string), "%s%s", string1, string2);
			    SPD(playerid, 94, DIALOG_STYLE_LIST, ""BELA"Restoran - Meni", string, "Jedi", "Izlaz");
			    break;
			}
		    else if(FirmaInfo[i][fVrsta] == VRSTA_CLUCKIN)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    new string1[275], string2[275], string[550];
				format(string1,sizeof(string1),""SRWBOJA"- "BELA"Hamburger (10$)\n"SRWBOJA"- "BELA"Sladoledna torta (20$)\n"SRWBOJA"- "BELA"Sendvic (10$)\n"SRWBOJA"- "BELA"Burek (20$)\n");
				format(string2,sizeof(string2),""SRWBOJA"- "BELA"Krofna (15$)\n"SRWBOJA"- "BELA"Kakao (15$)\n"SRWBOJA"- "BELA"Coca Cola (10$)\n"SRWBOJA"- "BELA"Kafa (10$)");
			    format(string, sizeof(string), "%s%s", string1, string2);
			    SPD(playerid, 100, DIALOG_STYLE_LIST, ""BELA"Cluckin - Meni", string, "Jedi", "Izlaz");
			    break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_PIZZA)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
				SPD(playerid, 102, DIALOG_STYLE_LIST, ""BELA"Pizza - Meni", ""SRWBOJA"- "BELA"Capricoza (30$)\n"SRWBOJA"- "BELA"Margarita (25$)\n"SRWBOJA"- "BELA"Piletina (15$)\n"SRWBOJA"- "BELA"Pomfrit (15$)\n"SRWBOJA"- "BELA"Limunada (10$)\n"SRWBOJA"- "BELA"Kafa (10$)", "Jedi", "Izlaz");
			    break;
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:naruci(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(IsPlayerInRangeOfPoint(playerid, 25.0, 1455.5018,-1896.7522,23.1622))
	{
		new str[350];
		format(str, sizeof(str), ""ORANGE"- "BELA"Pivo (10$)\n"ORANGE"- "BELA"Rakija (20$)\n"ORANGE"- "BELA"Viski (Jack Daniels 50$)\n"ORANGE"- "BELA"Liker (40$)\n"ORANGE"- "BELA"Pelinkovac (35$)\n"ORANGE"- "BELA"Vodka (30$)\n"ORANGE"- "BELA"Lozovaca (25$)\n"ORANGE"- "BELA"Vino (Vranac 30$)\n"ORANGE"- "BELA"Voda (10$)");
		SPD(playerid, 104, DIALOG_STYLE_LIST, ""BELA"Pice - Meni", str, "Odaberi", "Izlaz");
	}
	return 1;
}
///////////////////////////////////////////////////////////
CMD:disco(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
	    if(IsPlayerInRangeOfPoint(playerid, 25.0, -2653.1223,1410.0814,906.2734))
	    {
		    if(FirmaInfo[i][fVrsta] == VRSTA_DISCO)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    new str[350];
			    format(str, sizeof(str), ""ORANGE"- "BELA"Pivo (10$)\n"ORANGE"- "BELA"Rakija (20$)\n"ORANGE"- "BELA"Viski (Jack Daniels 50$)\n"ORANGE"- "BELA"Liker (40$)\n"ORANGE"- "BELA"Pelinkovac (35$)\n"ORANGE"- "BELA"Vodka (30$)\n"ORANGE"- "BELA"Lozovaca (25$)\n"ORANGE"- "BELA"Vino (Vranac 30$)\n"ORANGE"- "BELA"Voda (10$)");
				SPD(playerid, 104, DIALOG_STYLE_LIST, ""BELA"Pice - Meni", str, "Odaberi", "Izlaz");
			    break;
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:pice(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
	    if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
	    {
		    if(FirmaInfo[i][fVrsta] == VRSTA_PIGPEN || FirmaInfo[i][fVrsta] == VRSTA_BAR || FirmaInfo[i][fVrsta] == VRSTA_DISCO)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    new str[350];
			    format(str, sizeof(str), ""ORANGE"- "BELA"Pivo (10$)\n"ORANGE"- "BELA"Rakija (20$)\n"ORANGE"- "BELA"Viski (Jack Daniels 50$)\n"ORANGE"- "BELA"Liker (40$)\n"ORANGE"- "BELA"Pelinkovac (35$)\n"ORANGE"- "BELA"Vodka (30$)\n"ORANGE"- "BELA"Lozovaca (25$)\n"ORANGE"- "BELA"Vino (Vranac 30$)\n"ORANGE"- "BELA"Voda (10$)");
				SPD(playerid, 104, DIALOG_STYLE_LIST, ""BELA"Pice - Meni", str, "Odaberi", "Izlaz");
			    break;
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:teretana(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
		if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
	    {
			if(FirmaInfo[i][fVrsta] == VRSTA_GYM)
			{
				x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    SPD(playerid, 106, DIALOG_STYLE_LIST, ""BELA"Teretana", ""VARADERO"- "BELA"Normalni Trening (100$)\n"VARADERO"- "BELA"Box Trening (200$)\n"VARADERO"- "BELA"Kung Fu Trening (300$)\n"VARADERO"- "BELA"KneeHead Trening (400$)\n"VARADERO"- "BELA"Grabkick Trening (500$)\n"VARADERO"- "BELA"Elbow Trening (600$)", "Odaberi", "Izlaz");
			    break;
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:frizura(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
	    if(IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
	    {
		    if(FirmaInfo[i][fVrsta] == VRSTA_BARBER)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    SPD(playerid, 108, DIALOG_STYLE_LIST, ""BELA"Frizure", ""LJUB"- "BELA"Klasicna Frizura (100$)\n"LJUB"- "BELA"Elvis Frizura (200$)\n"LJUB"- "BELA"Afro Frizura (300$)", "Odaberi", "Odustani");
			    break;
			}
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:odjeca(playerid, params[])
{
    //#pragma unused help
	new x; if(PlayerInfo[playerid][pLider] != 0 || PlayerInfo[playerid][pClan] != 0) return SCM(playerid,-1,""ZELENA"[V:RPG] "SIVA"Clanovi organizacije ne mogu menjati odelo!");
	for(new i; i < MAX_FIRMI; i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
        {
            if(FirmaInfo[i][fVrsta] == VRSTA_BINCO)
            {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    if(GetPlayerInterior(playerid) == 15) Interijer[playerid] = VRSTA_BINCO;
			    SetPlayerVirtualWorld(playerid, FirmaInfo[i][fVW]); SetPlayerInterior(playerid, FirmaInfo[i][fInt]);
				SetPlayerPos(playerid, 215.7672,-99.8672,1005.2578);
			    TogglePlayerControllable(playerid, 0);
            	ShowModelSelectionMenu(playerid, skinlist, "Butik");
			    break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_SUBURBAN)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    if(GetPlayerInterior(playerid) == 1) Interijer[playerid] = VRSTA_SUBURBAN;
			    SetPlayerVirtualWorld(playerid, FirmaInfo[i][fVW]); SetPlayerInterior(playerid, FirmaInfo[i][fInt]);
				SetPlayerPos(playerid, 214.3559,-41.4176,1002.0234);
			    TogglePlayerControllable(playerid, 0);
	        	ShowModelSelectionMenu(playerid, skinlist, "Butik");
			    break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_VICTIM)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    if(GetPlayerInterior(playerid) == 5) Interijer[playerid] = VRSTA_VICTIM;
			    SetPlayerVirtualWorld(playerid, FirmaInfo[i][fVW]); SetPlayerInterior(playerid, FirmaInfo[i][fInt]);
				SetPlayerPos(playerid, 217.6989,-8.7642,1001.2109);
		        TogglePlayerControllable(playerid, 0);
        		ShowModelSelectionMenu(playerid, skinlist, "Butik");
			    break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_ZIP)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
			    if(GetPlayerInterior(playerid) == 5) Interijer[playerid] = VRSTA_VICTIM;
			    SetPlayerVirtualWorld(playerid, FirmaInfo[i][fVW]); SetPlayerInterior(playerid, FirmaInfo[i][fInt]);
				SetPlayerPos(playerid, 217.6989,-8.7642,1001.2109);
			    TogglePlayerControllable(playerid, 0);
	         	ShowModelSelectionMenu(playerid, skinlist, "Butik");
			    break;
			}
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////
CMD:naocare(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pNaocare] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas naocare!");
	new string[128];
	if(Naocare[playerid] == true)
	{
	    RemovePlayerAttachedObject(playerid, NAOCARE_SLOT);
	    format(string,sizeof(string), "* %s skida naocare.", GetName(playerid));
	    e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	    Naocare[playerid] = false;
	}
	else
	{
        SetPlayerAttachedObject(playerid, NAOCARE_SLOT, 19006, 2, 0.09, 0.04, 0, 88, 75, 0);
	    format(string,sizeof(string), "* %s stavlja naocare.", GetName(playerid));
	    e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	    Naocare[playerid] = true;
	}
	return 1;
}
///////////////////////////////////////////////////////////
CMD:govornica(playerid, params[])
{

    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if(PlayerInfo[playerid][pMutiran] != 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Mutirani ste pa ne mozete koristiti tu komandu!");
	if(PlayerInfo[playerid][pKartica] == 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nemate halo karticu (( Kupite u Trafici ))!");
	if(!IgracKodGovornice(playerid)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti kod telefonske govornice da pozovete!");
	if(TelefonZvoni[playerid] == true) return SCM(playerid, -1, "[V:RPG] Telecom | "SRWBOJA"Zvoni vam telefon prvo se javite ili odbijte poziv!" );
	new broj, string[100];
	if(sscanf(params, "i", broj))
	{
		SCM(playerid, -1, "[V:RPG] Pomoc | "SPLAVA"/call [broj telefona]");
		SCM(playerid, -1, "Servisi | "SPLAVA"Policija (555) | Bolnica (556) | Mehanicar (557)");
		return 1;
	}
	if(broj == 0) return SCM(playerid, -1, "[V:RPG] Telecom | "SPLAVA"Ne mozete zvati taj broj!");
	if(broj == PlayerInfo[playerid][pMobilni]) return SCM(playerid, -1, "[V:RPG] Telecom | "SPLAVA"Ne mozete zvati taj broj!");
    if(broj == 555)
	{
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pLider] == 1 || PlayerInfo[i][pClan] == 1) {
				format(string, charsmax(string), "Poziv | "HZELENA"%s je potrebana policija | Lokacija igraca: %s.", GetName(playerid), GetPlayerLocation(playerid)); //conver
				SCM(i, -1, string);
			}
		}
		SCM(playerid,-1,""HZELENA"Uspesno ste pozvali policiju, sacekajte na mestu gde se trenutno nalazite!");
		return 1;
	}
	if(broj == 556)
	{
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pPosao] == POSAO_BOLNICAR) {
				format(string, charsmax(string), "Poziv | "HZELENA"%s je potreban bolnicar | Lokacija igraca: %s.", GetName(playerid), GetPlayerLocation(playerid)); //conver
				SCM(i, -1, string);
			}
		}
		SCM(playerid,-1,""HZELENA"Uspesno ste pozvali bolnicara, sacekajte na mestu gde se trenutno nalazite!");
		return 1;
	}
	if(broj == 557)
	{
		foreach(new i : Player)
		{
			if(PlayerInfo[i][pPosao] == POSAO_MEHANICAR) {
				format(string, charsmax(string), "Poziv | "HZELENA"%s je potreban mehanicar | Lokacija igraca: %s", GetName(playerid), GetPlayerLocation(playerid)); //conver
				SCM(i, -1, string);
			}
		}
		SCM(playerid,-1,""HZELENA"Uspesno ste pozvali mehanicara, sacekajte na mestu gde se trenutno nalazite!");
		return 1;
	}
	foreach(new i : Player)
	{
	    if(IsPlayerConnected(i))
		{
			if(broj == PlayerInfo[i][pMobilni])
			{
				if(TelefonZvoni[i] == true) return SCM(playerid, -1, "[V:RPG] Telecom | "VARADERO"Od tog igraca telefon vec zvoni!");
                if(TelefonRazgovor[i] != -1) return SCM(playerid, -1, "[V:RPG] Telecom | "VARADERO"Igrac vec prica sa nekim!");
                if(UpaljenTelefon[i] != 0) return SCM(playerid, -1, "[V:RPG] Telecom | "VARADERO"Igrac je ugasio telefon!");
				TelefonZvoni[i] = true;
				TelefonRazgovor[playerid] = i;
                TelefonRazgovor[TelefonRazgovor[playerid]] = playerid;
				format(string, sizeof(string), "[V:RPG] Telecom | "VARADERO"Zvoni vam telefon | Pozivatelj: %d | /p - za javljanje | /h - za prekidanje", PlayerInfo[playerid][pMobilni]);
				SCM(i, -1, string);
            	format(string,sizeof(string), "* Mobilni od %s zvoni.", GetName(i));
				e_RadiusMSG(20.0, i, HEX_PROX, string);
				format(string,sizeof(string), "* %s vadi mobilni iz dzepa.", GetName(playerid));
				e_RadiusMSG(20.0, playerid, HEX_PROX, string);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
				SetPlayerAttachedObject(playerid, TELEFON_SLOT, 330, 6, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
				return 1;
			}
		}
	}
	return SCM(playerid, -1, "[V:RPG] Telecom | "SPLAVA"Izabrali ste ne postojeci broj!");
}CMD:call(playerid, params[])
{
    //#pragma unused help
    if(Zavezan[playerid] == 1) return SCM(playerid, -1, "(GRESKA) "SIVA"Zavezan si ne mozes to.");
    if(StavljeneLisice[playerid] == 1) return SCM(playerid, -1, "Imas lisice.");
    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u zatvoru.");
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
	if(PlayerInfo[playerid][pMutiran] != 0) return SCM(playerid, -1, "Mutirani ste pa ne mozete koristiti tu komandu.");
	if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid, -1, "Nemate mobilni telefon.");
    if(PlayerInfo[playerid][pImenik] == 0) return SCM(playerid, -1, "Nemate imenik.");
	if(TelefonZvoni[playerid] == true) return SCM(playerid, -1, "Telecom | "VARADERO"Zvoni vam telefon prvo se javite ili odbijte poziv!" );
	if(PlayerInfo[playerid][pMobKredit] <= 0) return SCM(playerid, -1, "Telecom | "VARADERO"Nemate kredita.");
	new broj, string[100];
	if(sscanf(params, "i", broj))
	{
		SCM(playerid, -1, ""BELA"[ V:RPG ]  "VARADERO"/call [broj telefona]");
		SCM(playerid, -1, "Servisi | "VARADERO"Policija (555) | Bolnica (556) | Mehanicar (557)");
		return 1;
	}
	if(broj == 0) return SCM(playerid, -1, "Telecom | "VARADERO"Ne mozete zvati taj broj.");
	if(broj == PlayerInfo[playerid][pMobilni]) return SCM(playerid, -1, "Telecom | "VARADERO"Ne mozete zvati taj broj.");
    if(broj == 555)
	{
		foreach(new i: Player)
		{
			if(PlayerInfo[i][pLider] == 1 || PlayerInfo[i][pClan] == 1) va_SendClientMessage(i, -1, "Poziv | "SZELENA"%s je potrebana policija | Lokacija igraca: %s.", GetName(playerid), GetPlayerLocation(playerid));
		}
		PlayerInfo[playerid][pMobKredit]--;
		SCM(playerid,-1,""HZELENA"Uspesno ste pozvali policiju, sacekajte na mestu gde se trenutno nalazite.");
		return 1;
	}
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
		{
			if(broj == PlayerInfo[i][pMobilni])
			{
				if(TelefonZvoni[i] == true) return SCM(playerid, -1, "Telecom | "VARADERO"Od tog igraca telefon vec zvoni.");
                if(TelefonRazgovor[i] != -1) return SCM(playerid, -1, "Telecom | "VARADERO"Igrac vec prica sa nekim.");
                if(UpaljenTelefon[i] != 0) return SCM(playerid, -1, "Telecom | "VARADERO"Igrac je ugasio telefon.");
				TelefonZvoni[i] = true;
				TelefonRazgovor[playerid] = i;
                TelefonRazgovor[TelefonRazgovor[playerid]] = playerid;
				format(string, sizeof(string), "[ V:RPG ]  Telecom | "VARADERO"Zvoni vam telefon | Pozivatelj: %d | /p - za javljanje | /h - za prekidanje", PlayerInfo[playerid][pMobilni]);
				SCM(i, -1, string);
            	format( string, sizeof( string ),  "* Mobilni od %s zvoni.", GetName(i));
				e_RadiusMSG(20.0, i, HEX_PROX, string);
				format( string, sizeof( string ),  "* %s vadi mobilni iz dzepa.", GetName(playerid));
				e_RadiusMSG(20.0, playerid, HEX_PROX, string);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
				SetPlayerAttachedObject(playerid, TELEFON_SLOT, 330, 6, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
				return 1;
			}
		}
	}
	return SCM(playerid, -1, "Telecom | "SRWBOJA"Korisnik trenutno nije dostupan.");
}
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//
CMD:p(playerid, params[])
{
    new id;
    if(Zavezan[playerid] == 1) return SCM(playerid, -1, "(GRESKA) "SIVA"Zavezan si ne mozes to.");
    if(StavljeneLisice[playerid] == 1) return SCM(playerid, -1, "Imas lisice.");
    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u zatvoru.");
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
	if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid, -1, "Nemate mobilni telefon.");
	if(TelefonRazgovor[playerid] == -1) return SCM(playerid, -1, "Telecom | "VARADERO"Ne zvoni vam telefon.");
 	if(TelefonZvoni[playerid] == false) return SCM(playerid, -1, " Telecom | "VARADERO"Ne zvoni vam telefon.");
	if(id == playerid) return SCM(playerid, -1, "Telecom | "VARADERO"Ne mozete se javiti ako ste vi pozvali.");
	new string[100];
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(TelefonRazgovor[i] == playerid)
			{
			    TelefonZvoni[playerid] = false;
				SCM(TelefonRazgovor[playerid], -1, "[ V:RPG ]  Telecom | "VARADERO"Igrac se javio na telefon!" );
				SCM(TelefonRazgovor[playerid], -1, "[ V:RPG ]  Telecom | "VARADERO"Sada mozete pricati na telefon sa T.");
				SCM(playerid, -1, "[ V:RPG ]  Telecom | "VARADERO"Javili ste se na telefon.");
			    SCM(playerid, -1, "[ V:RPG ]  Telecom | "VARADERO"Sada mozete pricati na telefon sa T.");
			    format( string, sizeof( string ),  "* %s se javlja na telefon.", GetName(playerid));
				e_RadiusMSG(20.0, playerid, HEX_PROX, string);
				Poziv[playerid] = 1;
				Poziv[i] = 1;
				PlayerInfo[i][pMobKredit] -= 20;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
				SetPlayerAttachedObject(playerid, TELEFON_SLOT, 330, 6, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
			}
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////
CMD:h(playerid, params[])
{
    //#pragma unused help
    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u zatvoru.");
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
    if(PlayerInfo[playerid][pMobilni] == 0 && PlayerInfo[playerid][pKartica] == 0) return SCM(playerid, -1, "Nemate mobilni telefon.");
	if(TelefonRazgovor[playerid] != -1)
	{
		TelefonZvoni[playerid] = false;
		TelefonZvoni[TelefonRazgovor[playerid]] = false;
		SCM(TelefonRazgovor[playerid], -1, "[ V:RPG ]  Telecom | "VARADERO"Igrac sa kojim ste pricali je prekinuo poziv!"),
		SetPlayerSpecialAction(TelefonRazgovor[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(TelefonRazgovor[playerid], TELEFON_SLOT), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, TELEFON_SLOT);
		Poziv[playerid] = -1;
		Poziv[TelefonRazgovor[playerid]] = -1;
		TelefonRazgovor[TelefonRazgovor[playerid]] = -1, TelefonRazgovor[playerid] = -1;
		SCM(playerid, -1, "[ V:RPG ]  Telecom | "VARADERO"Prekinuli ste poziv.");
	}
	else return SCM(playerid, -1, "Telecom | "VARADERO"Niste u pozivu.");
    return 1;
}
/////////////////////////////////////////////////////////////////
CMD:sms(playerid, params[])
{
    //#pragma unused help
    if(Zavezan[playerid] == 1) return SCM(playerid, -1, "(GRESKA) "SIVA"Zavezan si ne mozes to.");
    if(StavljeneLisice[playerid] == 1) return SCM(playerid, -1, "Imas lisice.");
    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "Ne mozete koristiti ovu komandu jer ste u zatvoru.");
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
	if(PlayerInfo[playerid][pMutiran] != 0) return SCM(playerid, -1, "Mutirani ste pa ne mozete koristiti tu komandu.");
	if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid, -1, "Nemate mobilni telefon.");
    if(PlayerInfo[playerid][pImenik] == 0) return SCM(playerid, -1, "Nemate imenik.");
    new broj, poruka[128], string[100];
	if(sscanf(params, "is[128]", broj, poruka)) return SCM(playerid, -1, ""VARADERO"/sms [broj telefona] [tekst poruke]" );
	if(broj == 0) return SCM(playerid, -1, "Telecom | "VARADERO"Ne mozete zvati taj broj.");
	if(broj == PlayerInfo[playerid][pMobilni]) return SCM(playerid, -1, "Telecom | "VARADERO"Ne mozete zvati taj broj.");
    if(PlayerInfo[playerid][pMobKredit] <= 0) return SCM(playerid, -1, "Telecom | "VARADERO"Nemate kredita.");
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
		{
			if(broj == PlayerInfo[i][pMobilni])
			{
                if(UpaljenTelefon[i] != 0) return SCM(playerid, -1, "Telecom | "VARADERO"Igrac je ugasio telefon.");
				format(string, sizeof(string), "Nova Poruka | "SZELENA"Posiljac: %d | Ime: %s", PlayerInfo[playerid][pMobilni], GetName(playerid));
				SCM(i, -1, string);
				format(string, sizeof(string), "Tekst Poruke | "SZELENA"%s", poruka);
				SCM(i, -1, string);
				format(string, sizeof(string), "[ V:RPG ]  Telecom | "SZELENA"Uspesno ste poslali poruku na broj %d!", broj);
				SCM(playerid, -1, string);
				format(string, sizeof(string), "Tekst Poslate Poruke | "SZELENA"%s", poruka);
				SCM(playerid, -1, string);
				PlayerInfo[playerid][pMobKredit] --;
				return 1;
			}
		}
	}
 	return 1;
}
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//
CMD:broj(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
    if(PlayerInfo[playerid][pImenik] == 0) return SCM(playerid, -1, "Nemate imenik.");
    new id;
    if(sscanf(params, "u", id)) return SCM(playerid, -1, "/broj [ID/Ime]");
    if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SIVA"Igrac je offline.");
    if(PlayerInfo[id][pMobilni] == 0) return SCM(playerid, -1, "Igrac nema mobilni telefon.");
    va_SendClientMessage(playerid, -1, ""SRWBOJA"[ V:RPG ]  Telecom | "SIVA"Igrac: %s | Broj: %d", GetName(id), PlayerInfo[id][pMobilni]);
    return 1;
}
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//
CMD:mobon(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
    if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid, -1, "Nemate mobilni telefon.");
	UpaljenTelefon[playerid] = 0;
	SCM(playerid,-1, ""SRWBOJA"[ V:RPG ]  "SIVA"Upalili ste telefon.");
    return 1;
}
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//
CMD:moboff(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, "Nisi ulogovan.");
    if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid, -1, "Nemate mobilni telefon.");
	UpaljenTelefon[playerid] = 1;
	SCM(playerid,-1, ""SRWBOJA"[ V:RPG ]  "SIVA"Ugasili ste telefon.");
	return 1;
}
////////////////////////////////////////////////////////////////////////
CMD:zapalicigaru(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pCigare] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas cigara!");
	if(PlayerInfo[playerid][pUpaljac] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas upaljac!");
	if(PlayerInfo[playerid][pCigare] > 0) PlayerInfo[playerid][pCigare]--;
	PlayerInfo[playerid][pUpaljac]--;
	if(PlayerInfo[playerid][pUpaljac] == 0) SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Istrosili ste upaljac | Kupite novi.");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	new string[128];
	format(string,sizeof(string), "* %s vadi upaljac iz dzepa i pali cigaru.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SavePlayer(playerid);
	return 1;
}
////////////////////////////////////////////////////////////////////////
CMD:ugasicigaru(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_SMOKE_CIGGY) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas cigaru!");
	new string[128];
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	format(string,sizeof(string), "* %s zavrsava cigaru i baca je na pod.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	return 1;
}
/////////////////////////////////////////////////////////////////////////
CMD:povez(playerid, params[])
{

	new id, string[160];
	if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if(PlayerInfo[playerid][pPovezVreme] != 0) {
		format(string, charsmax(string), "[V:RPG] "SRWBOJA"Morate sacekati jos %d sekundi da bi mogli ponovo stavljati povez!", PlayerInfo[playerid][pPovez]); //conver
		return SCM(playerid, -1, string);
	}
	if(PlayerInfo[playerid][pPovez] <= 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate povez!");
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/povez [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
    if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete zavezati sebe!");
	if(PlayerInfo[id][pZatvor] != 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozes staviti povez igracu koji je u zatvoru!");
    if(!DaljinaIgraca(5.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije blizu tebe!");
	if(GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid)) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac nije sa vama u vozilu!");
	if(IgracTazovan[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je tazovan ne mozes ga vezati!");
	if(IgracOboren[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je oboren ne mozes ga vezati!");
	if(StavljeneLisice[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac ima lisice ne mozes ga vezati!");
   	if(IgracTazovan[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Tazovan si ne mozes nikoga vezati!");
	if(StavljeneLisice[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Imas lisice ne mozes nikoga vezati!");
    if(GetPlayerState(id) == PLAYER_STATE_DRIVER) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozete zavezati vozaca!");
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Vi ste zavezani ne mozete nikome da stavite povez!");
	Povez[id] = 1;
	TogglePlayerControllable(id, 0);
	GameTextForPlayer(id, "~r~Stavljen Povez!", 5, 5000);
	format(string,sizeof(string),""VARADERO"Stavili ste povez igracu %s!",GetName(id));
	SCM(playerid,-1,string);
	format(string,sizeof(string),""VARADERO"Igrac %s vam stavio povez!",GetName(playerid));
	SCM(id,-1,string);
	format(string,sizeof(string), "* %s uzima povez iz dzepa i stavlja na %s.", GetName(playerid),GetName(id));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	PlayerInfo[playerid][pPovezVreme] = 3000;
	TextDrawShowForPlayer(id, Zapovez);
 	SavePlayer(playerid);
	return 1;
}
/////////////////////////////////////////////////////////////////////////
CMD:skinipovez(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new id, string[160];
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/skinipovez [ID/Ime]");
	if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Pogresan ID!");
	if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozetes skinuti sebi povez !");
	if(PlayerInfo[id][pZatvor] != 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozete skinuti povez igracu koji je u zatvoru!!");
	if(IgracTazovan[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je tazovan ne mozes ga odvezati!");
	if(IgracOboren[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je oboren ne mozes mu skines povez!");
	if(StavljeneLisice[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac ima lisice ne mozes mu staviti povez!");
    if(!DaljinaIgraca(5.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije blizu tebe!");
	if(Povez[id] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igracu nije stavljen povez!");
	Povez[id] = 0;
	TogglePlayerControllable(id, 1);
	GameTextForPlayer(id, "~g~Skinut vam je povez !", 5, 5000);
	format(string,sizeof(string),""VARADERO"Skinu li ste povez igracu %s!",GetName(id));
	SCM(playerid,-1,string);
	format(string,sizeof(string),""VARADERO"Igrac %s vam skino povez!!",GetName(playerid));
	SCM(id,-1,string);
	TextDrawHideForPlayer(id, Zapovez);
	SavePlayer(playerid);
	return 1;
}
/////////////////////////////////////////////////////////////////////////
CMD:zavezi(playerid, params[])
{

	new id, string[160];
	if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if(PlayerInfo[playerid][pKonopacVreme] != 0) {
		format(string, charsmax(string), "[V:RPG] "SRWBOJA"Morate sacekati jos %d sekundi da bi mogli ponovo vezati ljude!", PlayerInfo[playerid][pKonopacVreme]); //conver
		return SCM(playerid, -1, string);
	}
	if(PlayerInfo[playerid][pKanap] <= 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate kanap!");
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/zavezi [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
    if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete zavezati sebe!");
	if(PlayerInfo[id][pLevel] == 6 || PlayerInfo[id][pLevel] == 7 || PlayerInfo[id][pLevel] == 8) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozes vezati civila!");
	if(PlayerInfo[id][pZatvor] != 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozes vezati igraca koji je u zatvoru!");
    if(!DaljinaIgraca(5.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije blizu tebe!");
	if(GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid)) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac nije sa vama u vozilu!");
	if(IgracTazovan[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je tazovan ne mozes ga vezati!");
	if(IgracOboren[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je oboren ne mozes ga vezati!");
	if(StavljeneLisice[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac ima lisice ne mozes ga vezati!");
   	if(IgracTazovan[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Tazovan si ne mozes nikoga vezati!");
	if(StavljeneLisice[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Imas lisice ne mozes nikoga vezati!");
    if(GetPlayerState(id) == PLAYER_STATE_DRIVER) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozete zavezati vozaca!");
	if(Zavezan[id] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac je vec zavezan!");
	if(Zavezan[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Vi ste zavezani ne mozete nikoga vezati!");
	Zavezan[id] = 1;
	TogglePlayerControllable(id, 0);
	GameTextForPlayer(id, "~r~Zavezani ste!", 5, 5000);
	format(string,sizeof(string),""VARADERO"Zavezali ste igraca %s!",GetName(id));
	SCM(playerid,-1,string);
	format(string,sizeof(string),""VARADERO"Igrac %s vas je svezao | Ukoliko izadjete sa servera skinuce vam se 20k!",GetName(playerid));
	SCM(id,-1,string);
	format(string,sizeof(string), "* %s uzima kanap i veze %s.", GetName(playerid),GetName(id));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	PlayerInfo[playerid][pKonopacVreme] = 5000;
 	SavePlayer(playerid);
	return 1;
}
/////////////////////////////////////////////////////////////////////////
CMD:odvezi(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new id, string[160];
	if(sscanf(params, "u", id)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] Pomoc | "SIVA"/odvezi [ID/Ime]");
	if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Pogresan ID!");
	if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozetes odvezati sebe!");
	if(PlayerInfo[id][pZatvor] != 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Ne mozete odvezivati igraca koji je u zatvoru!!");
	if(IgracTazovan[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je tazovan ne mozes ga odvezati!");
	if(IgracOboren[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac je oboren ne mozes ga odvezati!");
	if(StavljeneLisice[id] == 1) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Igrac ima lisice ne mozes ga odvezati!");
    if(!DaljinaIgraca(5.0,playerid,id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Taj igrac nije blizu tebe!");
	if(Zavezan[id] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac nije zavezan!");
	Zavezan[id] = 0;
	TogglePlayerControllable(id, 1);
	GameTextForPlayer(id, "~g~Odvezani ste!", 5, 5000);
	format(string,sizeof(string),""VARADERO"Odvezali ste igraca %s!",GetName(id));
	SCM(playerid,-1,string);
	format(string,sizeof(string),""VARADERO"Igrac %s vas je odvezao!",GetName(playerid));
	SCM(id,-1,string);
	format(string,sizeof(string), "* %s uzima noz i preseca kanap igracu %s.", GetName(playerid),GetName(id));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SavePlayer(playerid);
	return 1;
}
//////////////////////////////////////////////////////////////////////////
CMD:kockica(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	new kockica = random(8)+1;
	new string[128];
	if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if (Kockica[playerid] == 1)
	{
		format(string,sizeof(string), "* %s baca kockicu koja staje na %d broju.", GetName(playerid),kockica);
		e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	}
	else
	{
		SendClientMessage(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Nemas kockicu.");
		return 1;
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////
CMD:mutirajg(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new string[256], play;
		if(sscanf(params, "ud", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "VARADERO"/mutirajg [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
     	PlayerInfo[play][pMuteg] = 1;
		format(string, 256, ""ORANGE2"#!: Mutirani ste na /g chatu od strane Vlasnika !");
		SendClientMessage(play, -1, string);
		format(string, 256, ""ORANGE2"#!: Mutirali ste igraca %s [%d] na /g chatu !", GetName(play), play);
		SendClientMessage(playerid, -1, string);
		SavePlayer(play);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}
CMD:unmutirajg(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		new string[256], play;
		if(sscanf(params, "ud", play)) return SendClientMessage(playerid, -1, "[V:RPG] Pomoc | "VARADERO"/unmutirajg [ID/Ime]");
		if(!IsPlayerConnected(play)) return SCM(playerid, -1,""SRWBOJA"[V:RPG] "BELA"Pogresan ID!");
        PlayerInfo[play][pMuteg] = 0;
		format(string, 256, ""ORANGE2"#!: Unmutirani ste na /g chatu od strane Vlasnika !");
		SendClientMessage(play, -1, string);
		format(string, 256, ""ORANGE2"#!: Unmutirali ste igraca %s [%d] na /g chatu !", GetName(play), play);
		SendClientMessage(playerid, -1, string);
		SavePlayer(play);
	}
	else
	{
	    SendClientMessage(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	}
	return 1;
}

CMD:marama(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(Marama[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Nemate maramu!");
	new string[80];
	if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
	if(Marama[playerid] == 1)
	{
		SetPlayerAttachedObject(playerid, MARAMA_SLOT, 18913, 2, -0.08, 0.03, 0.0, 90, -180, -90);
		format(string, sizeof(string), "* %s stavlja maramu.", GetName(playerid));
		e_RadiusMSG(20.0, playerid, HEX_PROX, string);
		SCM(playerid,-1,""SPLAVA"Stavili ste maramu da je skinete kucajte /marama!");
		Marama[playerid] = 2;
        foreach(new i:Player)
        {
            ShowPlayerNameTagForPlayer(i, playerid, 0);
        }
	}
	else if(Marama[playerid] == 2)
	{
		RemovePlayerAttachedObject(playerid, MARAMA_SLOT);
		format(string, sizeof(string), "* %s skida maramu.", GetName(playerid));
		e_RadiusMSG(20.0, playerid, HEX_PROX, string);
		SCM(playerid,-1,""SPLAVA"Skinuli ste maramu da je ponovo stavite kucajte /marama!");
		Marama[playerid] = 1;
        foreach(new i:Player)
        {
            ShowPlayerNameTagForPlayer(i, playerid, 1);
        }
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////
CMD:roleri(playerid, params[])
{
    new string[128],vreme;
    if(IsPlayerInRangeOfPoint(playerid,1,851.9899,853.5080,-4.4804))
    {
        if(sscanf(params,"i",vreme)) return SendClientMessage(playerid, -1,"Koriscenje:/roleri [vreme]");
        if(SafeGetPlayerMoney(playerid) < 1000) return SendClientMessage(playerid, -1,"Nemate dovoljno novca!");
        iznajmio[playerid] = 1;
        g_NovacMinus(playerid, 1000);
        SetTimerEx("Neiznajmljuje", Min(vreme),0,"i",playerid);
        Update_Skin(playerid, 99);
        format(string, sizeof(string),"Uspesno ste iznajmili rolere na %imin.",vreme);
        SendClientMessage(playerid,-1,string);
    }
    else
    {
        SendClientMessage(playerid,-1,"Niste na mestu iznajmljivanja rolera");
    }
    return 1;
}
///////////////////////////////////////


CMD:pravila(playerid, params[])
{
	new string[128];
	format(string, sizeof(string), "* Igrac %s gleda pravila (/pravila).", GetName(playerid));
	new info[4096];
	strcat(info, ""SPLAVA"___________________________________________________________________________________________________\n\n", sizeof(info));
	strcat(info, ""SPLAVA"- PowerKuca | [PG] "BELA"Radnja koju je nemoguce izvesti u stvarnom zivotu u datom trenutku ili u bilo kojem trenutku.\n", sizeof(info));
    strcat(info, ""SPLAVA"- MetaKuca | [MG] "BELA"Koriscenje OOC informacija za IC korist.\n", sizeof(info));
	strcat(info, ""SPLAVA"- Bunny Hopping | [BH] "BELA"Skakanje jednom, dva puta ili vise puta prilikom trcanja\n", sizeof(info));
    strcat(info, ""SPLAVA"- DeathMatching | [DM] "BELA"Ubijanje ljudi bez pravog RPG razloga.\n", sizeof(info));
    strcat(info, ""SPLAVA"- Kill on Sight| KOS "BELA"Ubijanje igraca po vidjenju, bez upozorenja, koriscenja chata\n", sizeof(info));
    strcat(info, ""SPLAVA"- SpawnKill | [SK] "BELA"Ubijanje igraca na mestu spawna\n", sizeof(info));
    strcat(info, ""SPLAVA"- NinjaJack| [NJ] "BELA"Kradja i uskakanje u vozila koja su u pokretu\n", sizeof(info));
    strcat(info, ""SPLAVA"- Drive Bying | [DB]  "BELA"DB odnosi na stetu nanetu drugom igracu iz vozila. Pokazacu vam par primera\n", sizeof(info));
    strcat(info, ""SPLAVA"- Revenge Killing | [RK] "BELA"Kao sto i samo ime pojma govori, ubistvo iz osvete\n", sizeof(info));
    strcat(info, ""SPLAVA"- Non-Roleplaying | nonRP "BELA"Ometanja RPG radnji koje izvrsavaju drugi igraci krsenjem pravila\n", sizeof(info));
    strcat(info, ""SPLAVA"- RPSuperman "BELA"RPG Supermen je ponasanje igraca kao da mu niko nista ne moze\n", sizeof(info));
    strcat(info, ""SPLAVA"- Gun From ASS | GFA "BELA"Predstavlja nonRP vadjenje oruzja, bez koriscenja komanda /me i /do.\n", sizeof(info));
    strcat(info, ""SPLAVA"- Drug From ASS | DFA "BELA"Predstavlja nonRP koriscenje droge, bez koriscenja komanda /me i /do.\n", sizeof(info));
    strcat(info, ""SPLAVA"- NPlayer vs Player | PvP "BELA"Predstavlja napadanje neduznog civila bez razloga izivljavanje na njemu.\n", sizeof(info));
    strcat(info, ""SPLAVA"- Player vs Enviroment| PvE "BELA"Divljanje i pucanje po okolini i ugrozavanje necije imovine\n", sizeof(info));
    strcat(info, ""SPLAVA"- ChickenRunning| [CR] "BELA"je trcanje cik cak kako bi izbegli metkove i preziveli\n", sizeof(info));
    strcat(info, ""SPLAVA"- CaracterKill| [CK] "BELA"je teranje igraca da napravi novi account. Npr. Stalno ga mucite ili ga stavite u jail na 9999999\n", sizeof(info));
    strcat(info, ""SPLAVA"- CrackShoting| [CS]  "BELA"je iskoriscavanje bugova sa oruzjem, deagle,combat shotgun, silenced pucaju vecom brzinom iz vozila.\n", sizeof(info));
    strcat(info, ""SPLAVA"- QuickSwapping| [QS] "BELA"je brzo menjanje oruzje na Q E bez koriscenja /me i /do komande.\n", sizeof(info));
    strcat(info, ""SPLAVA"- RP2WIN "BELA"jPonavljano  koriscenje neke komande ili ponavljano menjanje IC price kako bi izasli kao pobednik iz Rpanja\n", sizeof(info));
    strcat(info, ""SPLAVA"- Spamming "BELA"Pisanje iste reci ili recenice dva ili vise puta za redom\n", sizeof(info));
    strcat(info, ""SPLAVA"- Exploiting "BELA"Koriscenje bilo kakvih poznatih/nepoznatih bugova/propusta u igri ili skripti.\n", sizeof(info));
    strcat(info, ""SPLAVA"- Administrator Abusing| AA "BELA"Koriscenje Administorske pozicije za pretnje/korist sebi ili na stetu drugima. \n", sizeof(info));
    strcat(info, ""SPLAVA"- Administrator PG| APG "BELA"Iskoriscavanje Administrator komandi ili koriscenje komandi na nacin na koji nisu predvidjene da se koriste\n", sizeof(info));
    strcat(info, ""SPLAVA"- Logging to avoid "BELA"Napustanje igrice da bi nesto izbegli, npr hapsenje, napustanje u toku obracuna sa drugom bandom\n", sizeof(info));
    strcat(info, ""SPLAVA"- Exploiting the red circle "BELA"Iskoriscavanje crvenih check pointa u burgu, cluckin bellu i drugim prodavnicama\n", sizeof(info));
    strcat(info, ""SPLAVA"- NAPOMENA "BELA"Svako nepostovanje pravila je strogo kaznjivo, ako vidite nekog da nepostuje pravila slikajte i prijavite ga na forumu!\n\n", sizeof(info));
	SPD(playerid, 336, DIALOG_STYLE_MSGBOX, "PRAVILA", info, "Uredu", "");
	format(string, sizeof(string), "(( * %s cita pravila servera. ))", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	return 1;
}

//////////////////////////////////////////////////////////////////
CMD:koristi(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
    if(StavljeneLisice[playerid] > 0 || IgracTazovan[playerid] > 0 || IgracOboren[playerid] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu imate lisice ili ste tazovani!");
    if(PlayerInfo[playerid][pWar] >= 1) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete koristiti ovu komandu jer ste u waru!");
	new koristi[32], string[80];
	if(sscanf(params, "s[32]", koristi)) return SCM(playerid,-1,""SPLAVA"[V:RPG] Pomoc | "BELA"/koristi ["VARADERO"drogu "BELA"| "VARADERO"hranu"BELA""BELA"| "VARADERO"gorivo"BELA"]");
	if(!strcmp(koristi, "drogu"))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozes koristiti tu komandu kad si u vozilu!");
	    if(PlayerInfo[playerid][pDroga] < 15) return SCM(playerid,-1,""SIVA"Nemate droge | Potrebno vam je 15g!");
		if(KoristiDrogu[playerid] == 1) return SCM(playerid,-1,""SIVA"Vec koristis drogu, sacekaj da prodje efekat!");
		new Float:ar, Float:nar; GetPlayerArmour(playerid, ar);
		if(ar >= 99.0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Previse ste naduvani!");
		nar = floatadd(ar, 49.5); SetPlayerArmour(playerid, nar);
		format(string, sizeof(string), "* %s koristi drogu.", GetName(playerid));
		e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		SCM(playerid,-1,""SIVA"Uspesno ste uzeli drogu, efekat droge ce proci za 30 sekundi!");
		SetTimerEx("DrogaEfekat", 30000, false, "d", playerid); PlayerInfo[playerid][pDroga] -= 15;
		SetPlayerWeather(playerid, -30); KoristiDrogu[playerid] = 1;
		if(nar > 100.0) SetPlayerArmour(playerid, 99.0);
	}
	else if(!strcmp(koristi, "hranu"))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozes koristiti tu komandu kad si u vozilu!");
	    if(PlayerInfo[playerid][pHrana] <= 0) return SCM(playerid,-1,""SIVA"Nemate hrane!");
	    new Float:hp, Float:nhp; GetPlayerHealth(playerid, hp);
	    if(hp >= 99.0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste gladni!");
		nhp = floatadd(hp, 49.5); SetPlayerHealth(playerid, nhp);
		PlayerInfo[playerid][pHrana] --; SCM(playerid,-1,""SIVA"Uspesno ste se najeli!");
		if(nhp > 99.0) SetPlayerHealth(playerid, 99.0);
	}
	else if(!strcmp(koristi, "gorivo"))
	{
		new o = GetPlayerVehicleID(playerid);
	    if(PlayerInfo[playerid][pKantica] <= 0) return SCM(playerid,-1,""SIVA"Nemate kanticu!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Moras biti u autu!");
	    if(VoziloJeAvion(GetVehicleModel(o)) || VoziloJeBrod(GetVehicleModel(o)) || VoziloJeKamion(GetVehicleModel(o))) Fuel[o] = 85;
		else if(VoziloJeMotor(GetVehicleModel(o))) Fuel[o] = 45;
		else if(VoziloJeBicikla(GetVehicleModel(o)) || GetVehicleModel(o) == 538) Fuel[o] = 1000000;
		else Fuel[o] = 45;
		new strings[30];
		
		format(strings, sizeof(string), "~w~GORIVO:_%d_l", Fuel[o]);
        PlayerTextDrawSetString(playerid, Brzinomer[playerid][8], strings);

		PlayerInfo[playerid][pKantica] = 0;
		SCM(playerid,-1,""SIVA"Uspesno ste napunili vozilo gorivom!");
	}
	else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nepoznato ime!");
	return 1;
}
//////////////////////////////////////////////////////////
CMD:intervju(playerid, params[])
{

    new id, veh = GetPlayerVehicleID(playerid);
    if(PlayerInfo[playerid][pClan] != 6 && PlayerInfo[playerid][pLider] != 6) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo clanovi LSN!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti u vozilu LSN!");
	if(!NovinariVozila(veh)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti u vozilu LSN!");
	if(sscanf(params, "u", id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SPLAVA"/intervju [ID/Ime]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(id == playerid) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sami sebi ponuditi !");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac kojem ste ponudili intervju nije u vasem vozilu!");
	IntervjuGotov[id] = playerid;
	new string[128];
	format(string, charsmax(string), ""ORANGE"[LSN]: "BELA"Pozvali ste %s na intervju.", GetName(id)); //conver
	SCM(playerid, -1, string);
	format(string, charsmax(string), ""ORANGE"[LSN]: "BELA"Novinar %s vas je pozvao na intervju | Kucajte /prihvati intervju ili /odbij intervju.", GetName(playerid)); //conver
	SCM(id, -1, string);
	return 1;
}
///////////////////////////////////////////////////////////
CMD:pintervju(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PricauIntervju[playerid] == 255) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na intervju!");
	if(PricauIntervju[playerid] != 255)
	{
		SCM(playerid, -1, ""ORANGE"[LSN] "BELA"Intervju zavrsen!");
		SCM(PricauIntervju[playerid], -1, ""ORANGE"[LSN] "BELA"Intervju zavrsen!");
		TogglePlayerControllable(playerid, 1);
		TogglePlayerControllable(PricauIntervju[playerid], 1);
		PricauIntervju[PricauIntervju[playerid]] = 255;
		PricauIntervju[playerid] = 255;
	}
	return 1;
}
////////////////////////////////////////////////////////////
CMD:vesti(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    new result[256], text, veh = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pClan] == 6)
	{
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti u vozilu LSN!");
	if(!NovinariVozila(veh)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti u vozilu LSN!");
	if(sscanf(params, "s[100]", text)) return SCM(playerid,-1,  ""SPLAVA"[V:RPG] Pomoc | "BELA"/vesti [tekst]");
    new tekst1 = strlen(result); for(new i = 0; i<tekst1; i++){ if(IsNumeric(result[i])) result[i] = '*' ;}
	format(result, sizeof(result), ""SRWBOJA"[LSN] "BELA"Vesti "SRWBOJA"%s: "BELA"%s", GetName(playerid), text);
	SCMTA(-1,result);
	} else SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo clanovi LSN!");
    return 1;
}
/////////////////////////////////////////////////////////////
CMD:oglasi(playerid, params[])
{
    //#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    new result[256], text, veh = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pClan] != 6 || PlayerInfo[playerid][pLider] != 6) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Samo clanovi LSN!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti u vozilu LSN!");
	if(!NovinariVozila(veh)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti u vozilu LSN!");
	if(sscanf(params, "s[100]", text)) return SCM(playerid,-1,  ""SPLAVA"[V:RPG] Pomoc | "BELA"/oglasi [tekst]");
    new tekst1 = strlen(result); for(new i = 0; i<tekst1; i++){ if(IsNumeric(result[i])) result[i] = '*' ;}
	format(result, sizeof(result), ""SPLAVA"[LSN] "BELA"Oglasi "SPLAVA"%s: "BELA"%s", GetName(playerid), text);
	SCMTA(-1,result);
    return 1;
}
///////////////////////////////////////////////////////////////
CMD:oglas(playerid, params[])
{

    new result[128],string[128];
    if(ServerInfo[isOglas] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ova komanda je trenutno iskljucena, pokusajte kasnije!");
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 1782.4839,-1797.2479,-43.3141)) return SCM(playerid,-1,""SIVA"Niste na mestu davanja oglasa!");
    if(PlayerInfo[playerid][pLevel] < 5) return SCM(playerid, -1, ""SIVA"Morate biti level 5 za davanje oglasa!");
	if(sscanf(params, "s[100]", result)) return SCM(playerid,-1,  ""SPLAVA"[V:RPG] Pomoc | "BELA"/oglasi [tekst]");
    if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1,""SIVA"Za oglas vam treba 50$!");
    if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid,-1,""SIVA"Nemate mobilni!");
    if(GetTimeEx() < toglas) return SCM(playerid, -1, ""SIVA"Oglas se moze koristiti svakih 60 sekundi!");
    if(ServerInfo[isOglas] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Oglas je trenutno iskljucena, pokusajte kasnije!");
	new tekst1 = strlen(result); for(new i = 0; i<tekst1; i++){ if(IsNumeric(result[i])) result[i] = '*' ;}
    g_NovacMinus(playerid, 50); toglas = GetTimeEx() + 60;
	format(string, sizeof(string), ""SPLAVA"OGLAS | "VARADERO"Kontakt: "BELA"%d", PlayerInfo[playerid][pMobilni]);
	SCMTA(-1,string);
	format(string, sizeof(string), ""SPLAVA"OGLAS | "VARADERO"Tekst: "BELA"%s", result);
	SCMTA(-1,string);
	format(string, sizeof(string), ""SRWBOJA"Oglas dat od strane "BELA"%s-a [%d] ", GetName(playerid), playerid);
	AdminGameMaster(-1,string);
	GameTextForPlayer(playerid,"~w~Uspesno ste dali oglas za ~r~50$!",5000,3);
    return 1;
}
//////////////////////////////////////////////////////////////////
CMD:lpanel(playerid, params[])
{
	//#pragma unused help
	if(PlayerInfo[playerid][pLider] < 0) return SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA"Samo Lideri !");
	SPD(playerid, 3321, DIALOG_STYLE_LIST, "LIDER PANEL", ""BELA"Dozvola Ubaci\nDozvola Izbaci\nDozvola Dodelirank\nDozvola Sverc", "Odaberi", "Nazad");
	return 1;
}
//////////////////////////////////////////////////////////////////////////////
CMD:komande(playerid, params[])
{
	#pragma unused params
	SPD(playerid, 600, DIALOG_STYLE_LIST, "SERVER KOMANDE", ""BELA"Osnovne Komande\nImovina\nPosao\nOrganizacija\nImanje", "Odaberi", "Nazad");
	return 1;
}
//----------------------------------------------------------------------------//
CMD:ah(playerid, params[])
{
	new info[1750];
	if(PlayerInfo[playerid][pAdmin] == 0) return SCM(playerid, -1, "Niste Admin !");
	if(PlayerInfo[playerid][pTestAdmin] >= 1)
	{
	    strcat(info, "\t"VARADERO"Test-Admin:\n\n", sizeof(info));
	    strcat(info, ""BELA"Komande su u izradi. Trenutne: /aduty", sizeof(info));
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    strcat(info, "\t"VARADERO"Admin Level 1:\n\n", sizeof(info));
		strcat(info, ""BELA"/specon /specoff /count /proverfs /proveri /aduty /apopravi /cc /kick /goto /osamari /freeze /unfreeze /rtc /mlista /zatvori\n", sizeof(info));
		strcat(info, ""BELA"/kill /gethere /podesihp /agorivo /jetpack /kazni /djlink /podesipancir /a (A/GM Chat) /ao (OOC) /uzmiip /nitro /ban /odg /zlista\n", sizeof(info));
        strcat(info, ""BELA"/apu /ugasialtchat /upalialtchat /glasanje /prekiniglasanje\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	    strcat(info, "\t"VARADERO"Admin Level 2:\n\n", sizeof(info));
		strcat(info, ""BELA"/podesisat /vportvozilo /apu /vcarrespawn /apu /podesivreme /mute /warn /offban /rtc /uvozilo /portvozilo\n\n", sizeof(info));
    }
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
	    strcat(info, "\t"VARADERO"Admin Level 3:\n\n", sizeof(info));
		strcat(info, ""BELA"/gotopos /umute /skiniwarn /portkuca /portstan /portvikendica /portfirma\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
	    strcat(info, "\t"VARADERO"Admin Level 4:\n\n", sizeof(info));
		strcat(info, ""BELA"/fban /aocistidosijesvima /bojavozila /rac /racc /unban /banip /unbanip\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
	    strcat(info, "\t"VARADERO"Admin Level 5 (Head-Admin):\n\n", sizeof(info));
		strcat(info, ""BELA"/adozvole /aoruzije /sviheal /svipancir /veh /avehdelete /sacuvajacounte /pstats\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
	    strcat(info, "\t"VARADERO"Admin Level 6 (Direktor):\n\n", sizeof(info));
		strcat(info, ""BELA"/kreirajkucu /izbrisikucu /kreirajfirmu /izbrisifirmu /efirmu\n", sizeof(info));
		strcat(info, ""BELA"/efirmu2 /aprodajkucu /ekucu /estan /kreirajstan /aprodajstan\n", sizeof(info));
		strcat(info, ""BELA"/kreirajvikendicu /evikendicu /aprodajvikendicu /av(prodaj, parkiraj)\n", sizeof(info));
        strcat(info, ""BELA"/apl(prodaj, parkiraj) /am(prodaj, parkiraj) /ab(parkiraj) /ale(parkiraj, prodaj) /daj2kljuca\n", sizeof(info));
        strcat(info, ""BELA"/napravizonu /obrisizonu /kreirajulicu /obrisiulicu /eulicu /kreirajimanje /obrisiimanje /eimanje\n", sizeof(info));
        strcat(info, ""BELA"/kreirajbankomat /ebankomat /portbankomat /mutirajg /unmutirajg /zatvorioff\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
	    strcat(info, "\t"VARADERO"Vlasnik:\n\n", sizeof(info));
		strcat(info, ""BELA"/apanel (Odobri/Zabrani Komande) /postaviadmina /changename /spodesavanja /hostname\n", sizeof(info));
	}
	SPD(playerid, 609, DIALOG_STYLE_MSGBOX, "ADMIN KOMANDE", info, "Ok", "");
	return 1;
}
//----------------------------------------------------------------------------//
CMD:gmh(playerid, params[])
{
	new info[8192];
	if(PlayerInfo[playerid][pGM] == 0) return SCM(playerid, -1, "Niste GameMaster !");
	if(PlayerInfo[playerid][pGM] >= 1)
	{
	    strcat(info, "\t"VARADERO"GameMaster 1:\n\n", sizeof(info));
		strcat(info, ""BELA"/specon /specoff /ugasialtchat /upalialtchat /apopravi /count /gmduty /cc (ocisti chat) /kick /goto /osamari /avozilo\n\n", sizeof(info));
		strcat(info, ""BELA"/rtc /flip /gmo /ga /kazni /g /uzmiip /ateleport /odg /zlista /zatvori\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pGM] >= 2)
	{
	    strcat(info, "\t"VARADERO"GameMaster 2:\n\n", sizeof(info));
		strcat(info, ""BELA"/freeze /unfreeze /kill /gethere /nitro /podesihp /podesipancir\n\n", sizeof(info));
    }
	SPD(playerid, 609, DIALOG_STYLE_MSGBOX, "GAMEMASTER KOMANDE", info, "Ok", "");
	return 1;
}
CMD:viph(playerid, params[])
{
	new info[8192];
	if(PlayerInfo[playerid][pVip] == 0) return SCM(playerid, -1, "Niste Vip !");
 	if(PlayerInfo[playerid][pVip] >= 1)
	{
	    strcat(info, "\t"VARADERO"Vip Level 1:\n\n", sizeof(info));
		strcat(info, ""BELA"/g (vip chat) /goto /vipskin /boombox /togtag\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pVip] >= 2)
	{
	    strcat(info, "\t"VARADERO"Vip Level 2:\n\n", sizeof(info));
		strcat(info, ""BELA"/g (vip chat) /goto /ateleport /vipskin /boombox /togtag\n\n", sizeof(info));
    }
	if(PlayerInfo[playerid][pVip] >= 3)
	{
	    strcat(info, "\t"VARADERO"Vip Level 3:\n\n", sizeof(info));
		strcat(info, ""BELA"/g (vip chat) /goto /vrtc /ateleport /vipskin /boombox /vipmenu /dodacioff /togtag\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pVip] >= 4)
	{
	    strcat(info, "\t"VARADERO"Vip Level 4:\n\n", sizeof(info));
		strcat(info, ""BELA"/g (vip chat) /goto /vrtc /ateleport /vipmenu /boombox  /vipskin /togtag\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pVip] >= 5)
	{
	    strcat(info, "\t"VARADERO"Vip Level 5 (Premium):\n\n", sizeof(info));
		strcat(info, ""BELA"Sve komande od Vipa 1 do Vipa 4 + unique boja, custom nick setovanje (/nick)\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pVip] >= 6)
	{
	    strcat(info, "\t"VARADERO"Vip Level 6 (Elite):\n\n", sizeof(info));
		strcat(info, ""BELA"Sve komande od Vipa 1 do Vipa 4 + povecane plate, dupli respekti, no timer za /vpopravi\n", sizeof(info));
	}
	SPD(playerid, 609, DIALOG_STYLE_MSGBOX, "VIP KOMANDE", info, "Ok", "");
	return 1;
}
CMD:ph(playerid, params[])
{
	new info[8192];
	if(PlayerInfo[playerid][pPromoter] == 0) return SCM(playerid, -1, "Niste Promoter !");
	if(PlayerInfo[playerid][pPromoter] >= 1)
	{
	    strcat(info, "\t"VARADERO"Promoter Level 1:\n\n", sizeof(info));
		strcat(info, ""BELA"/g (vip chat) /goto /ppopravi /vrtc /ateleport /vipmenu /boombox /vipskin /togtag\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pPromoter] >= 2)
	{
	    strcat(info, "\t"VARADERO"Promoter Level 2:\n\n", sizeof(info));
		strcat(info, ""BELA"Sve komande od Promotera 1\n\n", sizeof(info));
	}
	if(PlayerInfo[playerid][pPromoter] >= 3)
	{
	    strcat(info, "\t"VARADERO"Promoter Level 3:\n\n", sizeof(info));
		strcat(info, ""BELA"Sve komande od Promotera 1 + nema timera za /ppopravi\n", sizeof(info));
	}
	SPD(playerid, 609, DIALOG_STYLE_MSGBOX, "PROMOTER KOMANDE", info, "Ok", "");
	return 1;
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMD:registracija(playerid, params[])
{
    //#pragma unused help
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    if(PlayerInfo[playerid][pPosedovanjeAuta] == -1 && PlayerInfo[playerid][pPosedovanjeAuta2] == -1) return SCM(playerid, -1, ""CRVENA"* "BELA"Ne posedujes vozilo/a!");
    if(!IsPlayerInRangeOfPoint(playerid, 6.0, 2510.6069,-1542.3040,26.0105)) return SCM(playerid, -1, ""CRVENA"* "BELA"Niste na mestu za registraciju vozila!");
    new voziloid;
    if(sscanf(params, "i", voziloid)) return SCM(playerid, -1, ""CRVENA"* "BELA"/registracija [Broj kljuca vozila (1-2)])");
    if(voziloid < 1 || voziloid > 2) return SCM(playerid, -1, ""CRVENA"* "BELA"Broj kljuca ne moze biti ispod 1 i iznad 2!");
    if(PlayerInfo[playerid][pNovacDzep] < 800) return SCM(playerid, -1, ""CRVENA"* "BELA"Nemate dovoljno novca (800$)!");
    if(voziloid == 1)
    {
    	new Vozilo_1 = PlayerInfo[playerid][pPosedovanjeAuta];
    	if(Vozilo_1 == -1) return SCM(playerid, -1, ""CRVENA"* "BELA"Nemate vozilo na slotu 1, kucajte /v da pogledate listu vozila koje posedujete i broj kljuca!");
		if(VoziloInfo[Vozilo_1][vRegistracija] != 0) return SCM(playerid, -1, ""CRVENA"* "BELA"Vase vozilo na slotu 1 je vec registrovano!");
		if(VoziloInfo[Vozilo_1][vTehnickiPregled] == 0) return SCM(playerid, -1, ""CRVENA"* "BELA"Vase vozilo na slotu 1 nije proslo tehnicki pregled!");
		g_NovacMinus(playerid, 800); 
		VoziloInfo[Vozilo_1][vRegistracija] = 1; SacuvajVozilo(Vozilo_1); SetVehicleToRespawn(VoziloInfo[Vozilo_1][vID]);
	}
	else if(voziloid == 2)
    {
    	new Vozilo_2 = PlayerInfo[playerid][pPosedovanjeAuta2];
    	if(Vozilo_2 == -1) return SCM(playerid, -1, "Nemate vozilo na slotu 2, kucajte /v da pogledate listu vozila koje posedujete i broj kljuca!");
		if(VoziloInfo[Vozilo_2][vRegistracija] != 0) return SCM(playerid, -1, "Vase vozilo na slotu 2 je vec registrovano!");
		if(VoziloInfo[Vozilo_2][vTehnickiPregled] == 0) return SCM(playerid, -1, "Vase vozilo na slotu 2 nije proslo tehnicki pregled!");
		g_NovacMinus(playerid, 800); 
		VoziloInfo[Vozilo_2][vRegistracija] = 1; SacuvajVozilo(Vozilo_2); SetVehicleToRespawn(VoziloInfo[Vozilo_2][vID]);
	}
	return 1;
}
////////////////////////////////////////////////////////////////
CMD:promenispawn(playerid, params[])
{
    //#pragma unused help
	SPD(playerid, 152, DIALOG_STYLE_LIST, "PROMENA SPAWNA", "[1] Varadero Spawn\n[2] Kuca\n[3] Baza\n[4] Rent Kuca\n[5] Stan\n[6] Vikendica\n[7] LV Aerodrom\n[8] Vip Baza", "Potvrdi", "Izadji");
	return 1;
}
//////////////////////////
CMD:djlink(playerid, params[])
{
    new url[256];
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"Morate se ulogovati !");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,"Samo Admini !");
    if(sscanf(params,"s[256]",url)) return SCM(playerid,-1,""VARADERO"[KORISCENJE] "BELA"/djlink [URL]");
    else
    {
        foreach(new i : Player)
        {
			new string[512];
            StopAudioStreamForPlayer(i);
            PlayAudioStreamForPlayer(i, url);
            format(string, 512, ""SIVA"(V-Music) "SZELENA"Odvrnite zvucnike jer svira %s ! Da zaustavite muziku koristite "SIVA"/stopmusic", url);
			SCMTA(-1, string);
		}
    }
    return 1;
}
/////////////////////////////////////////////////////////////////
CMD:kreirajkucu(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Samo Vlasnik, DE SI POSAO?!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new vrsta,level,cena, idkuce; 
	if(sscanf(params, "iii",vrsta,level,cena))
	{
	    SCM(playerid,-1,""SRWBOJA"Varadero Pomoc | "SIVA"/kreirajkucu [Vrsta] [Level] [Cena]");
	    SCM(playerid,-1,""SRWBOJA"Vrste Kuca | "SIVA" 0: Mala | 1: Srednja | 2: Velika | 3: Villa");
	    return 1;
	}		

	new q[128];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `kuce` SET `Vrsta` = '%d', `Level` = '%d', `Cena` = '%d'",	vrsta,level,cena);		
	mysql_tquery(SQL, q, "_sqlInsertKuca", "ddddd", idkuce, playerid, vrsta, level, cena);
	return 1;
}
function: _sqlInsertKuca(idkuce,playerid,vrsta,level,cena)
{
	GetPlayerPos(playerid,X,Y,Z);
	idkuce = cache_insert_id();
	KucaInfo[idkuce][kSQLID] = idkuce;

	new string[500];
	if(vrsta == 0) // MALA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 223.0732;
    	KucaInfo[idkuce][kIzlazY] = 1288.3668;
    	KucaInfo[idkuce][kIzlazZ] = 1082.1406;
    	KucaInfo[idkuce][kInt] = 1;
    	strmid(KucaInfo[idkuce][kVrsta],"Mala Kuca",0,strlen("Mala Kuca"),255);
    	KucaInfo[idkuce][kVrstaIntKuce] = 1;
	}
	else if(vrsta == 1) // SREDNJA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 2365.2822;
    	KucaInfo[idkuce][kIzlazY] = -1134.5186;
    	KucaInfo[idkuce][kIzlazZ] = 1050.8750;
    	KucaInfo[idkuce][kInt] = 8;
    	strmid(KucaInfo[idkuce][kVrsta],"Srednja Kuca",0,strlen("Srednja Kuca"),255);
    	KucaInfo[idkuce][kVrstaIntKuce] = 2;
	}
	else if(vrsta == 2) // VELIKA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 2317.8977;
    	KucaInfo[idkuce][kIzlazY] = -1025.7722;
    	KucaInfo[idkuce][kIzlazZ] = 1050.2109;
    	KucaInfo[idkuce][kInt] = 9;
    	strmid(KucaInfo[idkuce][kVrsta],"Velika Kuca",0,strlen("Velika Kuca"),255);
    	KucaInfo[idkuce][kVrstaIntKuce] = 3;
	}
	else if(vrsta == 3) // VILLA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 140.2605;
    	KucaInfo[idkuce][kIzlazY] = 1367.4221;
    	KucaInfo[idkuce][kIzlazZ] = 1083.8615;
    	KucaInfo[idkuce][kInt] = 5;
    	strmid(KucaInfo[idkuce][kVrsta],"Villa",0,strlen("Villa"),255);
    	KucaInfo[idkuce][kVrstaIntKuce] = 4;
	}
	else if(vrsta == 4) // VILLA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 2164.1731;
	    KucaInfo[idkuce][kIzlazY] = 457.7707;
	    KucaInfo[idkuce][kIzlazZ] = 420.4090;
    	KucaInfo[idkuce][kInt] = 6;
    	strmid(KucaInfo[idkuce][kVrsta],"Apartman",0,strlen("Apartman"),255);
    	KucaInfo[idkuce][kVrstaIntKuce] = 5;
	}
	KucaInfo[idkuce][kCena] = cena; 
	KucaInfo[idkuce][kLevel] = level; 
	KucaInfo[idkuce][kUlazX] = X; 
	KucaInfo[idkuce][kUlazY] = Y; 
    KucaInfo[idkuce][kUlazZ] = Z; 
	KucaInfo[idkuce][kVW] = idkuce; 

	KucaInfo[idkuce][kHrana] =  
    KucaInfo[idkuce][kProveraVlasnika] = 
    KucaInfo[idkuce][kFrizder] = 
    KucaInfo[idkuce][kNovac] =     
    KucaInfo[idkuce][kZvono] =     
    KucaInfo[idkuce][kMunicija] = 
    KucaInfo[idkuce][kRent] =     
    KucaInfo[idkuce][kMats] = 
    KucaInfo[idkuce][kDroga] =  
    KucaInfo[idkuce][kOdjeca] = 0; 

    KucaInfo[idkuce][kCenaRenta] = 50;
	KucaInfo[idkuce][kZatvoreno] = 1; 
    KucaInfo[idkuce][kOruzije] = -1; 

    strmid(KucaInfo[idkuce][kVlasnik],"Niko",0,strlen("Niko"),255);
    format(string,sizeof(string),""HZELENA"[ KUCA NA PRODAJU ]\nVrsta: "BELA"%s\n"HZELENA"Cena: "BELA"%d$\n"HZELENA"Level: "BELA"%d\n"HZELENA"Adresa: "BELA"%s\n"HZELENA"Za kupovinu kuce /kupikucu",KucaInfo[idkuce][kVrsta],KucaInfo[idkuce][kCena],KucaInfo[idkuce][kLevel],UlicaKuce(idkuce));
    KucaLabel[idkuce] = CreateDynamic3DTextLabel(string ,0x00C0FFAA,X,Y,Z,80, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);

    KucaPickup[idkuce] = CreateDynamicPickup(19522, 1, KucaInfo[idkuce][kUlazX], KucaInfo[idkuce][kUlazY], KucaInfo[idkuce][kUlazZ]);
    SacuvajKucu(idkuce);
	va_SendClientMessage(playerid, -1, ""CRVENA"[V:RPG] "SIVA"Kuca je uspesno kreirana (ID Kuce: %d)!", idkuce); //conver
	va_SendClientMessage(playerid, -1, "uspesno je kreirana kuca id %d", KucaInfo[idkuce][kSQLID]);
	SCM(playerid,-1, string);
	return 1;
}
/////////////////////////////////////////////////////////////////
CMD:premjestikucu(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new idkuce; GetPlayerPos(playerid,X,Y,Z);
	if(sscanf(params, "i",idkuce))
	{
	    SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/premjestikucu [ID]");
	    return 1;
	}
    KucaInfo[idkuce][kUlazX] = X;
    KucaInfo[idkuce][kUlazY] = Y;
	KucaInfo[idkuce][kUlazZ] = Z;
    SacuvajKucu(idkuce);
    KuceLP(idkuce);
    SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"Uspesno ste Premestili kucu!");
	return 1;
}
CMD:premjestistan(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new idstan; GetPlayerPos(playerid,X,Y,Z);
	if(sscanf(params, "i",idstan))
	{
	    SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/premjestistan [ID]");
	    return 1;
	}
    StanInfo[idstan][sUlazX] = X;
    StanInfo[idstan][sUlazY] = Y;
	StanInfo[idstan][sUlazZ] = Z;
    SacuvajStan(idstan);
    StanLP(idstan);
	SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"Uspesno ste premestili stan!");
	return 1;
}
CMD:premjestivikendicu(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new idvi; GetPlayerPos(playerid,X,Y,Z);
	if(sscanf(params, "i",idvi))
	{
	    SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/premjestivikendicu [ID]");
	    return 1;
	}
    VikendiceInfo[idvi][viUlazX] = X;
    VikendiceInfo[idvi][viUlazY] = Y;
	VikendiceInfo[idvi][viUlazZ] = Z;
    SacuvajVikendicu(idvi);
    VikendicaLP(idvi);
	SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"Uspesno ste Premestili vikendicu!");
	return 1;
}
/////////////////////////////////////////////////////////////////
CMD:premjestifirmu(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new idfirme; GetPlayerPos(playerid,X,Y,Z);
	if(sscanf(params, "i",idfirme))
	{
	    SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/premjestifirmu [ID]");
	    return 1;
	}
    FirmaInfo[idfirme][fUlazX] = X;
    FirmaInfo[idfirme][fUlazY] = Y;
	FirmaInfo[idfirme][fUlazZ] = Z;
    SacuvajFirmu(idfirme);
    FirmaLabelIPickup(idfirme);
	SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"Uspesno ste Premestili Firmu!");
	return 1;
}
//////////////////////////////////////////////////////////////////
CMD:kupikucu(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    for(new i; i < sizeof(KucaInfo); i++)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
    	{
    		if(!strcmp(KucaInfo[i][kVlasnik], "Niko", true) && KucaInfo[i][kProveraVlasnika] == 0)
    		{
		        if(PlayerInfo[playerid][pPosedovanjeKuce] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] | "SIVA"Vec imas kucu!");
		        if(GetPlayerScore(playerid) < KucaInfo[i][kLevel]) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Nemate dovoljan level za kupovinu kuce!");
		        if(PlayerInfo[playerid][pNovacDzep] < KucaInfo[i][kCena]) return SCM(playerid,-1, "[V:RPG] | "SRWBOJA"Nemate dovoljno novca za kupovinu kuce!");
				if(PlayerInfo[playerid][pRent] != -1) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Rentate kucu prvo unrentajte kucu da bi kupili ovu!");
				strmid(KucaInfo[i][kVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 255);
		        KucaInfo[i][kProveraVlasnika] = 1; SetPlayerInterior(playerid, KucaInfo[i][kInt]); PlayerInfo[playerid][pPosedovanjeKuce] = i;
		        SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]); SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
		        KucaInfo[i][kZatvoreno] = 1; g_NovacMinus(playerid, KucaInfo[i][kCena]); KuceLP(i); SacuvajKucu(i); SavePlayer(playerid);
		        SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Cestitamo, kupili ste kucu!");
		        SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Za komande kuce koristite /kuca!");
		        SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Za ulaz u kucu koristi tipku F!");
		        return 1;
			}
			else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ta kuca se ne prodaje!");
		}
	}
    return 1;
}
//////////////////////////////////////////////////////////////////
CMD:kuca(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Moras se ulogovati da bi koristio ovu komandu!");
    new string1[275],string2[275],string3[275],string[550];
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Nemate kucu!");
	if(strcmp(KucaInfo[PlayerInfo[playerid][pPosedovanjeKuce]][kVlasnik], GetName(playerid), true)) return SCM(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Niste vlasnik te kuce!");
    format(string1,sizeof(string1),""ZELENA"(1). "BELA"Informacije\n"ZELENA"(2). "BELA"Otkljucaj\n"ZELENA"(3). "BELA"Zakljucaj\n"ZELENA"(4). "BELA"Ostavi u kuci\n"ZELENA"(5). "BELA"Uzmi iz kuce\n");
    format(string2,sizeof(string2),""ZELENA"(6). "BELA"Prodaj kucu\n"ZELENA"(7). "BELA"Dozvoli/Zabrani Rent\n"ZELENA"(8). "BELA"Cena Renta\n"ZELENA"(9). "BELA"Nadogradi  -  Preuredi\n"ZELENA"(10). "BELA"Namernice iz frizdera\n"ZELENA"(10). "BELA"Prodaj kucu igracu\n"ZELENA"(11). "BELA"Lociraj kucu\n");
    format(string3,sizeof(string3),""ZELENA"(12). "BELA"Promijeni ime kuce");
	format(string, sizeof(string), "%s%s%s", string1, string2, string3);
    SPD(playerid, 154, DIALOG_STYLE_LIST, ""ZELENA"Kuca", string, "Odaberi", "Izlaz");
	return 1;
}
////////////////////////////////////////////////////
CMD:iznajmisobu(playerid, params[])
{
   	for(new i = 0; i < MAX_KUCA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
		{
	        if(PlayerInfo[playerid][pPosedovanjeKuce] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec imas kucu pa ne mozes rentati!");
			if(KucaInfo[i][kRent] == 0) return SCM(playerid,-1,"[V:RPG] "VARADERO"U toj kuci rent nije dozvoljen!");
		    if(PlayerInfo[playerid][pNovacDzep] < KucaInfo[i][kCenaRenta]) return SCM(playerid,-1,"[V:RPG] "VARADERO"Nemas dovoljno novca za rent!");
	        g_NovacMinus(playerid, KucaInfo[i][kCenaRenta]); KucaInfo[i][kNovac] += KucaInfo[i][kCenaRenta];
		    PlayerInfo[playerid][pRent] = i; SetPlayerInterior(playerid, KucaInfo[i][kInt]); SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
			SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]); SacuvajKucu(i);
			SavePlayer(playerid);
			new string[128];
			format(string, charsmax(string), "[V:RPG] "VARADERO"Uspesno ste rentali kucu za %d$!", KucaInfo[i][kCenaRenta]); //conver
			SCM(playerid,-1, string);
			return 1;
		}
	}
    return 1;
}
////////////////////////////////////////////////////
CMD:zvoni(playerid, params[])
{
	for(new i = 0; i < sizeof(KucaInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
		{
	        if(KucaInfo[i][kZvono] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ta kuca nema zvono!");
			SCM(playerid,-1,"[V:RPG] "SRWBOJA"Zvonite na vrata...");
			foreach(new k:Player)
			{
				if (IsPlayerInRangeOfPoint(k,25.0,KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
				{
	            	SCM(k,-1, "[V:RPG] "SRWBOJA"Neko zvoni na vratima.");
				}
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////
CMD:unrentaj(playerid, params[])
{
	#pragma unused params
	//#pragma unused help
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosedovanjeKuce] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Imas kucu ne mozes to!");
	if(PlayerInfo[playerid][pRent] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ne rentas kucu!");
	PlayerInfo[playerid][pRent] = -1; SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Unrent ste kucu!");
	return 1;
}
///////////////////////////////////////////////////
CMD:ekucu(playerid, params[])
{
	//#pragma unused help
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new sta[20],ide,string[100];
	if(sscanf(params, "s[20]i",sta,ide)) return SCM(playerid,-1,"E | "VARADERO"/ekucu [level,cena,novac,info] [kol]");
    for(new i; i < MAX_KUCA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
		{
			if(!strcmp(sta, "level", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        KucaInfo[i][kLevel] = ide;
				KuceLP(i);
				SacuvajKucu(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste level kuce(ID: %d) u %d!",i,KucaInfo[i][kLevel]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "cena", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        KucaInfo[i][kCena] = ide;
		        KuceLP(i);
				SacuvajKucu(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste cenu kuce(ID: %d) u %d!",i,KucaInfo[i][kCena]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "novac", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        KucaInfo[i][kNovac] = ide;
		        KuceLP(i);
				SacuvajKucu(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste novac u kuci(ID: %d) u %d!",i,KucaInfo[i][kNovac]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "info", true))
	        {
			new string1[275], string2[275], string3[550], z[3], o[3], g[3]; if(KucaInfo[i][kZatvoreno] == 1) z = "Da"; else z = "Ne"; if(KucaInfo[i][kOdjeca] == 0) o = "Ne"; else o = "Da"; if(KucaInfo[i][kOruzije] == -1) g = "Ne"; else g = "Da";
			format(string1,sizeof(string1),""BELA"_______________________________________\n\n"HZELENA"Vlasnik kuce: "SRWBOJA"%s\n"HZELENA"Level: "BELA"%d\n"HZELENA"Cena: "BELA"%d$\n"HZELENA"Cena Renta: "BELA"%d\n",KucaInfo[i][kVlasnik],KucaInfo[i][kLevel],KucaInfo[i][kCena],KucaInfo[i][kCenaRenta]);
			format(string2,sizeof(string2),""HZELENA"ID: "BELA"%d\n"HZELENA"Zatvoreno: "BELA"%s\n"HZELENA"Novac: "BELA"%d\n"HZELENA"Droga: "BELA"%d\n"HZELENA"Mats: "BELA"%d\n"HZELENA"Odjeca: "BELA"%s\n"HZELENA"Oruzije: "BELA"%s\n_______________________________________",i,z,KucaInfo[i][kNovac],KucaInfo[i][kDroga],KucaInfo[i][kMats],o,g);
			format(string3, sizeof(string3), "%s%s", string1, string2);
			SPD(playerid, 9999, DIALOG_STYLE_MSGBOX, ""BELA"Kuca Informacije", string3, "Ok", "Izlaz");
           }
		}
	}
	return 1;
}
/////////////////////////////////////////////////////
CMD:aprodajkucu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new id,string[80];
	if(sscanf(params,"i",id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "VARADERO"/aprodajkucu [ID]");
    if(id >= MAX_KUCA || id < 1) {
        SCM(playerid,-1,"[V:RPG] "SRWBOJA"ID Kuce nije validan!");
        return 1;
    }
	if(KucaInfo[id][kProveraVlasnika] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ta kuca nema vlasnika pa je ne mozete prodati!");
	KucaInfo[id][kProveraVlasnika] = 0;
	KucaInfo[id][kFrizder] = 0;
	KucaInfo[id][kOruzije] = -1;
	KucaInfo[id][kOdjeca] = 0;
    KucaInfo[id][kNovac] = 0;
	KucaInfo[id][kZatvoreno] = 1;
	KucaInfo[id][kZvono] = 0;
	KucaInfo[id][kDroga] = 0;
	KucaInfo[id][kNeaktivnost] = 0;
    KucaInfo[id][kMunicija] = 0;
	KucaInfo[id][kRent] = 0;
	KucaInfo[id][kMats] = 0;
	KuceLP(id);
    strmid(KucaInfo[id][kVlasnik],"Niko",0,strlen("Niko"),255);
	SacuvajKucu(id);
	format(string,sizeof(string),"[V:RPG] "SRWBOJA"Prodali ste kucu ID: %d!",id);
	SCM(playerid,-1,string);
	return 1;
}
///////////////////////////////////////////////////
CMD:portkuca(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Admini (AL 3+)!");

	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new id;
	if(sscanf(params,"i",id)) return SCM(playerid,-1,"[V:RPG] "VARADERO"/portkuca [ID]");

    if(id >= MAX_KUCA || id < 1) {
        SCM(playerid,-1,"[V:RPG] "SRWBOJA"ID Kuce nije validan!");
        return 1;
    }
    SetPlayerPos(playerid,KucaInfo[id][kUlazX], KucaInfo[id][kUlazY], KucaInfo[id][kUlazZ]);
    SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
	return 1;
}
////////////////////////////////////////////////////
CMD:kreirajstan(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new idstan,level,cena; 
	
	if(sscanf(params, "ii",level,cena)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/kreirajstan [Level] [Cena]");

	new q[128];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `stanovi` SET `Level` = '%d', `Cena` = '%d'", level, cena);		
	mysql_tquery(SQL, q, "_sqlInsertStan", "dddd", idstan, playerid, level, cena);
	return 1;

}

function: _sqlInsertStan(idstan, playerid, cena,level)
{
	GetPlayerPos(playerid,X,Y,Z);

	idstan = cache_insert_id();
	StanInfo[idstan][sSQLID] = idstan;	

    StanInfo[idstan][sIzlazX] = 244.1522; 
	StanInfo[idstan][sIzlazY] = 305.0730; 
	StanInfo[idstan][sIzlazZ] = 999.1484; 
	StanInfo[idstan][sVW] = idstan;
	StanInfo[idstan][sCena] = cena; 
	StanInfo[idstan][sLevel] = level; 
	StanInfo[idstan][sUlazX] = X;
    StanInfo[idstan][sUlazY] = Y; 
    StanInfo[idstan][sUlazZ] = Z; 
    StanInfo[idstan][sProveraVlasnika] = 
    StanInfo[idstan][sNovac] = 
    StanInfo[idstan][sMunicija] = 0;
    StanInfo[idstan][sZatvoreno] =  
    StanInfo[idstan][sInt] = 1;    
    StanInfo[idstan][sOruzije] = -1;    
    strmid(StanInfo[idstan][sVlasnik],"Niko",0,strlen("Niko"),255);

    new szString[194];
	format(szString, charsmax(szString),"Stan na prodaju!({FFFFFF}%d{48E31C})\nAdresa :{FFFFFF} %s\n{48E31C}Cena :{FFFFFF} $%d{48E31C} | Level :{FFFFFF} %d\n{48E31C}Za kupovinu upisite {FFFFFF}/kupistan", idstan, UlicaStana(idstan), StanInfo[idstan][sCena], StanInfo[idstan][sLevel]);
 	StanLabel[idstan] = CreateDynamic3DTextLabel(szString ,0x33CCFFAA,StanInfo[idstan][sUlazX], StanInfo[idstan][sUlazY], StanInfo[idstan][sUlazZ],25,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	StanPickup[idstan] = CreateDynamicPickup(19605, 1, StanInfo[idstan][sUlazX], StanInfo[idstan][sUlazY], StanInfo[idstan][sUlazZ]);
	format(szString, charsmax(szString), ""CRVENA"[V:RPG] "SIVA"Stan je uspesno kreiran (ID Stana: %d)!",idstan);
	SCM(playerid,-1, szString);
	SacuvajStan(idstan);
	return 1;
}
/////////////////////////////////////////////////////
CMD:portstan(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Admini (AL 3+)!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new id;
	if(sscanf(params,"i",id)) {
        return SCM(playerid,-1,"[V:RPG] "VARADERO"/portstan [ID]");
    }

    if(id < 0 || id > MAX_STANOVA) {
        return SCM(playerid,-1, ""SRWBOJA"[ Varadero ] "SIVA"ID Stana nije validan!");
    }
    SetPlayerPos(playerid,StanInfo[id][sUlazX], StanInfo[id][sUlazY], StanInfo[id][sUlazZ]);
    SetPlayerInterior(playerid,0);
    SetPlayerVirtualWorld(playerid,0);
    new string[94];
    format(string, charsmax(string), ""SRWBOJA"[ Varadero ] "SIVA"Uspesno ste se teleportovali do stana #%d!", id);
    SCM(playerid,-1, string);
	return 1;
}
/////////////////////////////////////////////////////
CMD:estan(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");

	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new sta[20],ide,string[100];
	if(sscanf(params, "s[64]i",sta,ide)) return SCM(playerid,-1,"E | "VARADERO"/estan [level,cena,novac,info] [kol]");
    for(new i; i < MAX_STANOVA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
		{
			if(!strcmp(sta, "level", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        StanInfo[i][sLevel] = ide;
				StanLP(i);
				SacuvajStan(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste level stana(ID: %d) u %d!",i,StanInfo[i][sLevel]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "cena", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        StanInfo[i][sCena] = ide;
				StanLP(i);
				SacuvajStan(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste cenu stana(ID: %d) u %d!",i,StanInfo[i][sCena]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "novac", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        StanInfo[i][sNovac] = ide;
				StanLP(i);
				SacuvajStan(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste novac u stanu(ID: %d) u %d!",i,StanInfo[i][sNovac]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "info", true))
			{
			new string1[400],z[3],o[3]; if(StanInfo[i][sZatvoreno] == 1) z = "Da"; else z = "Ne"; if(StanInfo[i][sOruzije] == -1) o = "Ne"; else o = "Da";
			format(string1,sizeof(string1),""BELA"_______________________________________\n\n"VARADERO"Vlasnik stana: "SRWBOJA"%s\n"VARADERO"Level: "BELA"%d\n"VARADERO"Cena: "BELA"%d$\n"VARADERO"ID: "BELA"%d\n"VARADERO"Zatvoreno: "BELA"%s\n"VARADERO"Oruzije: "BELA"%s\n"VARADERO"Novac: "BELA"%d$\n_______________________________________",StanInfo[i][sVlasnik],StanInfo[i][sLevel],StanInfo[i][sCena],i,z,o,StanInfo[i][sNovac]);
			SPD(playerid, 182, DIALOG_STYLE_MSGBOX, ""BELA"Stan Informacije", string1, "Ok", "Izlaz");
			}
		}
	}
	return 1;
}
/////////////////////////////////////////////////////
CMD:aprodajstan(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) {
        return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
    }
	if(AdminDuty[playerid] == 0) {
        return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
    }

	new id;
	if(sscanf(params,"i",id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "VARADERO"/aprodajstan [ID]");
    if(id < 0 || id > MAX_STANOVA) {
        return SCM(playerid,-1, ""SRWBOJA"[ Varadero ] "SIVA"ID Stana nije validan!");
    }
	if(StanInfo[id][sProveraVlasnika] == 0) {
        return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Taj stan nema vlasnika pa ne mozete ga prodati!");
    }
	StanInfo[id][sProveraVlasnika] = 0;
    StanInfo[id][sOruzije] = -1;
    StanInfo[id][sNovac] = 0;
    StanInfo[id][sZatvoreno] = 1;
    StanInfo[id][sMunicija] = 0;
    StanInfo[id][sNeaktivnost] = 0;
    StanLP(id);
    new string[80];
    strmid(StanInfo[id][sVlasnik],"Niko",0,strlen("Niko"),255);
	format(string,sizeof(string),"[V:RPG] "SRWBOJA"Prodali ste stan ID: %d!",id);
    SacuvajStan(id);
	SCM(playerid,-1,string);
	return 1;
}
////////////////////////////////////////////////////
CMD:kupistan(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    for(new i; i < sizeof(StanInfo); i++)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
    	{
    		if(!strcmp(StanInfo[i][sVlasnik], "Niko", true) && StanInfo[i][sProveraVlasnika] == 0)
    		{
		        if(PlayerInfo[playerid][pPosedovanjeStana] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] | "SIVA"Vec imas stan!");
		        if(GetPlayerScore(playerid) < StanInfo[i][sLevel]) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Nemate dovoljan level za kupovinu stana!");
		        if(PlayerInfo[playerid][pNovacDzep] < StanInfo[i][sCena]) return SCM(playerid,-1, "[V:RPG] | "SRWBOJA"Nemate dovoljno novca za kupovinu stana!");
				strmid(StanInfo[i][sVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 255);
		        StanInfo[i][sProveraVlasnika] = 1; 
		        PlayerInfo[playerid][pPosedovanjeStana] = i;
		        StanInfo[i][sZatvoreno] = 1; 
		        g_NovacMinus(playerid, StanInfo[i][sCena]); 

		        StanLP(i); 
		        SacuvajStan(i); 
		        SavePlayer(playerid);
		        SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Cestitamo, kupili ste stan!");
		        SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Za komande kuce koristite /stan!");
		        SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Za ulaz u stan koristi tipku F!");
		        return 1;
			}
			else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Taj stan se ne prodaje!");
		}
	}
    return 1;
}
///////////////////////////////////////////////////
CMD:stan(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    new string1[350];
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	if(strcmp(StanInfo[PlayerInfo[playerid][pPosedovanjeStana]][sVlasnik], GetName(playerid), true)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Niste vlasnik tog stana!");
    format(string1,sizeof(string1),""VARADERO"(1). "BELA"Informacije\n"VARADERO"(2). "BELA"Otkljucaj\n"VARADERO"(3). "BELA"Zakljucaj\n"VARADERO"(4). "BELA"Ostavi u stanu\n"VARADERO"(5). "BELA"Uzmi iz stana\n"VARADERO"(6). "BELA"Prodaj stan\n"VARADERO"(7). "BELA"Preuredi\n"VARADERO"(8). "BELA"Lociraj stan");
    SPD(playerid, 180, DIALOG_STYLE_LIST, ""VARADERO"Stan", string1, "Odaberi", "Izlaz");
	return 1;
}
/////////////////////////////////////////////////////
CMD:kreirajvikendicu(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new idvi,level,cena; 
	if(sscanf(params, "ii",level,cena)) return SCM(playerid,-1,""SRWBOJA"[V:RPG] Pomoc | "SIVA"/kreirajvikendicu [Level] [Cena]");
   
	new q[128];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `vikendice` SET `Level` = '%d', `Cena` = '%d'", level, cena);		
	mysql_tquery(SQL, q, "_sqlInsertVikendica", "dddd", idvi, playerid, level, cena);
	return 1;

}

function: _sqlInsertVikendica(idvi, playerid, level, cena)
{
	GetPlayerPos(playerid,X,Y,Z);

	idvi = cache_insert_id();
	VikendiceInfo[idvi][vSQLID] = idvi;	


	VikendiceInfo[idvi][viIzlazX] = 421.9191; 
	VikendiceInfo[idvi][viIzlazY] = 2536.4529; 
	VikendiceInfo[idvi][viIzlazZ] = 10.0000;
	VikendiceInfo[idvi][viInt] = 10; 
	VikendiceInfo[idvi][viCena] = cena; 
	VikendiceInfo[idvi][viLevel] = level; 
	VikendiceInfo[idvi][viUlazX] = X;
    VikendiceInfo[idvi][viUlazY] = Y; 
    VikendiceInfo[idvi][viUlazZ] = Z; 
    VikendiceInfo[idvi][viProveraVlasnika] = 0;
    VikendiceInfo[idvi][viDroga] = 0; 
    VikendiceInfo[idvi][viZatvoreno] = 1; 
    VikendiceInfo[idvi][viVW] = idvi; 
    VikendiceInfo[idvi][viMats] = 0;
    strmid(VikendiceInfo[idvi][viVlasnik],"Niko",0,strlen("Niko"),255);
	VikendiceInfo[idvi][viUlazX] = X;
    VikendiceInfo[idvi][viUlazY] = Y; 
    VikendiceInfo[idvi][viUlazZ] = Z;
    new string[500];
	format(string,sizeof(string),""SPLAVA"[ VIKENDICA NA PRODAJU ]\n"SPLAVA"Cena: "BELA"%d$\n"SPLAVA"Level: "BELA"%d\n"SPLAVA"Za kupovinu /kupivikendicu",VikendiceInfo[idvi][viCena], VikendiceInfo[idvi][viLevel]);
    VikendicaLabel[idvi] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,X,Y,Z,80, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
	VikendicaPickup[idvi] = CreateDynamicPickup(1272, 1, VikendiceInfo[idvi][viUlazX], VikendiceInfo[idvi][viUlazY], VikendiceInfo[idvi][viUlazZ]);
    format(string, charsmax(string), ""CRVENA"[V:RPG] "SIVA"Vikendica je uspesno kreiran (ID Vikendice: %d)!",idvi);
    SCM(playerid,-1, string);
	SacuvajVikendicu(idvi);
	return 1;
}
//////////////////////////////////////////////////////
CMD:portvikendica(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Admini (AL 3+)!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");

	new id;
	if(sscanf(params,"i",id)) return SCM(playerid,-1,"[V:RPG] "VARADERO"/portvikendica [ID]");

    if(id < 0 || id > MAX_VIKENDICA) {
        return SCM(playerid,-1, ""SRWBOJA"[ Varadero ] "SIVA"ID Vikendice nije validan!");
    }

    SetPlayerPos(playerid,VikendiceInfo[id][viUlazX], VikendiceInfo[id][viUlazY], VikendiceInfo[id][viUlazZ]);
    SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
////////////////////////////////////////////////////////
CMD:evikendicu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");

	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new sta[20],ide,string[100];
	if(sscanf(params, "s[64]i",sta,ide)) return SCM(playerid,-1,"E | "VARADERO"/evikendicu [level,cena,droga,mats,info] [kol]");
    for(new i; i < MAX_VIKENDICA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ]))
		{
			if(!strcmp(sta, "level", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        VikendiceInfo[i][viLevel] = ide;
				VikendicaLP(i);
				SacuvajVikendicu(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste level vikendice(ID: %d) u %d!",i,VikendiceInfo[i][viLevel]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "cena", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        VikendiceInfo[i][viCena] = ide;
				VikendicaLP(i);
				SacuvajVikendicu(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste cenu vikendice(ID: %d) u %d!",i,VikendiceInfo[i][viCena]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "droga", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        VikendiceInfo[i][viDroga] = ide;
				VikendicaLP(i);
				SacuvajVikendicu(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste drogu u vikendici(ID: %d) u %d!",i,VikendiceInfo[i][viDroga]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "mats", true))
			{
                if(ide < 0 || ide > 10000000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Mora biti ispod 10000000!");
		        VikendiceInfo[i][viMats] = ide;
				VikendicaLP(i);
				SacuvajVikendicu(i);
				format(string,sizeof(string),""VARADERO"Izmenili ste mats u vikendici(ID: %d) u %d!",i,VikendiceInfo[i][viMats]);
				SCM(playerid,-1,string);
			}
			else if(!strcmp(sta, "info", true))
			{
			new string3[275],string1[275],string2[550],z[3]; if(VikendiceInfo[i][viZatvoreno] == 1) z = "Da"; else z = "Ne";
			format(string3,sizeof(string3),""BELA"_______________________________________\n\n"SRWBOJA"Vlasnik vikendice: "BELA"%s\n"SRWBOJA"Level: "BELA"%d\n"SRWBOJA"Cena: "BELA"%d$\n"SRWBOJA"ID: "BELA"%d\n",VikendiceInfo[i][viVlasnik],VikendiceInfo[i][viLevel],VikendiceInfo[i][viCena],i);
			format(string1,sizeof(string1),""SRWBOJA"Zatvoreno: "BELA"%s\n"SRWBOJA"Droga: "BELA"%d\n"SRWBOJA"Mats: "BELA"%d\n_______________________________________", z,VikendiceInfo[i][viDroga],VikendiceInfo[i][viMats]);
			format(string2, sizeof(string2), "%s%s", string3, string1);
			SPD(playerid, 9999, DIALOG_STYLE_MSGBOX, ""BELA"Vikendica Informacije", string2, "Ok", "Izlaz");
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////////
CMD:aprodajvikendicu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Samo Vlasnik!");
	if(AdminDuty[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na Administrator duznosti!");
	new id;
	if(sscanf(params,"i",id)) return SCM(playerid,-1,"[V:RPG] Pomoc | "VARADERO"/aprodajvikendicu [ID]");

    if(id < 0 || id > MAX_VIKENDICA) {
        return SCM(playerid,-1, ""SRWBOJA"[ Varadero ] "SIVA"ID Vikendice nije validan!");
    }

	if(VikendiceInfo[id][viProveraVlasnika] == 0)
		return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ta vikendica nema vlasnika pa ne mozete je prodati!");

	VikendiceInfo[id][viProveraVlasnika] = 0;
	VikendiceInfo[id][viDroga] = 0;
	VikendiceInfo[id][viMats] = 0;
	VikendiceInfo[id][viZatvoreno] = 1;
	VikendiceInfo[id][viNeaktivnost] = 0;
	VikendicaLP(id);
    strmid(VikendiceInfo[id][viVlasnik],"Niko",0,strlen("Niko"),255);
	new string[89];
	format(string,sizeof(string),"[V:RPG] "SRWBOJA"Prodali ste vikendicu ID: %d!",id);
	SacuvajVikendicu(id);
	SCM(playerid,-1,string);
	return 1;
}
////////////////////////////////////////////////////////
CMD:kupivikendicu(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    for(new i; i < sizeof(VikendiceInfo); i++)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 3.0, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ]))
    	{
    		if(!strcmp(VikendiceInfo[i][viVlasnik], "Niko", true) && VikendiceInfo[i][viProveraVlasnika] == 0)
    		{
		        if(PlayerInfo[playerid][pPosedovanjeVikendice] != -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] | "SIVA"Vec imas vikendicu!");
		        if(GetPlayerScore(playerid) < VikendiceInfo[i][viLevel]) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Nemate dovoljan level za kupovinu vikendice!");
		        if(PlayerInfo[playerid][pNovacDzep] < VikendiceInfo[i][viCena]) return SCM(playerid,-1, "[V:RPG] | "SRWBOJA"Nemate dovoljno novca za kupovinu vikendice!");
				strmid(VikendiceInfo[i][viVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 255);
		        VikendiceInfo[i][viProveraVlasnika] = 1; PlayerInfo[playerid][pPosedovanjeVikendice] = i;
		        VikendiceInfo[i][viZatvoreno] = 1; g_NovacMinus(playerid, VikendiceInfo[i][viCena]); VikendicaLP(i); SacuvajVikendicu(i); SavePlayer(playerid);
		        SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Cestitamo, kupili ste vikendicu!");
		        SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Za komande vikendice koristite /vikendica!");
		        SCM(playerid,-1, ""SPLAVA"[V:RPG] "SIVA"Za ulaz u kucu koristi tipku F!");
		        return 1;
			}
			else return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Ta vikendica se ne prodaje!");
		}
	}
    return 1;
}
//////////////////////////////////////////////////////////
CMD:vikendica(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    new string1[350];
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	if(strcmp(VikendiceInfo[PlayerInfo[playerid][pPosedovanjeVikendice]][viVlasnik], GetName(playerid), true)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Niste vlasnik te vikendice!");
    format(string1,sizeof(string1),""SPLAVA"(1). "BELA"Informacije\n"SPLAVA"(2). "BELA"Otkljucaj\n"SPLAVA"(3). "BELA"Zakljucaj\n"SPLAVA"(4). "BELA"Ostavi u vikendici\n"SPLAVA"(5). "BELA"Uzmi iz vikendice\n"SPLAVA"(6). "BELA"Prodaj vikendicu\n"SPLAVA"(7). "BELA"Preuredi");
    SPD(playerid, 200, DIALOG_STYLE_LIST, ""SPLAVA"Vikendica", string1, "Odaberi", "Izlaz");
	return 1;
}
/////////////////////////////////////////////////////////
CMD:gorivo(playerid, params[])
{

	if(!IgracNaBenzinskoj(playerid)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti na benzinskoj pumpi da bi sipali gorivo!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti u vozilu!");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Morate biti na mestu vozaca!");
	if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete sipati gorivo u biciklo!");
	new l;
	if(sscanf(params, "i", l))
	{
		SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/gorivo [Litara]");
		SCM(playerid,-1,"INFO | "SRWBOJA"Cena po 1 litru je 8$!");
		return 1;
	}
	if(l < 1 || l > 80) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Minimalno Litara 1 - Maximalno Litara 20 odjednom!");
	if(PlayerInfo[playerid][pNovacDzep] < l*8) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca!");
    if(PuniGorivo[playerid] == true) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Vec tocite gorivo!");
    if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid))))
	{
	    if(floatadd(Fuel[GetPlayerVehicleID(playerid)], l) > 45) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Zapremina tog rezervoara je 45 litara!");
	}
	if(VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid))) || VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))) || VoziloJeKamion(GetVehicleModel(GetPlayerVehicleID(playerid))))
	{
	    if(floatadd(Fuel[GetPlayerVehicleID(playerid)], l) > 85) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Zapremina tog rezervoara je 85 litara!");
	}
	else
	{
		if(floatadd(Fuel[GetPlayerVehicleID(playerid)], l) > 45) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Zapremina tog rezervoara je 45 litara!");
	}
	Fuel[GetPlayerVehicleID(playerid)] = Fuel[GetPlayerVehicleID(playerid)] += l;
	g_NovacMinus(playerid, l*8); PuniGorivo[playerid] = true;
	new string[128];
	format(string, charsmax(string), ""SRWBOJA"INFO | "BELA"Tocenje Goriva | Litara: %d | Cena: %d$ |.", l, l*8); //conver
	SCM(playerid,-1, string);
	g_freeze[playerid] = SetTimerEx("GorivoFriz", 7000, false, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}
CMD:kupikanticu(playerid, params[])
{
	if(!IgracNaBenzinskoj(playerid)) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti na benzinskoj pumpi da bi kupili kanticu za gorivo!");
	if(PlayerInfo[playerid][pKantica] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Mozete imati samo 1 kanticu!");
	if(PlayerInfo[playerid][pNovacDzep] < 250) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca!");
	g_NovacMinus(playerid, 250);
	PlayerInfo[playerid][pKantica] = 1;
	SCM(playerid,-1,"[V:RPG] "SRWBOJA"Kupio si kanticu za gorivo (/koristi gorivo)!");
	return 1;
}
//////////////////////////////////////////
CMD:otkaz(playerid, params[])
{

	if(PlayerInfo[playerid][pPosao] == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Nemate posao!");
	if(PlayerInfo[playerid][pPosaoUgovor] != 0) {
		new string[128];
		format(string, charsmax(string), ""SRWBOJA"[V:RPG] "SIVA"Ostalo vam je jos %d sati/a do ispunjena ugovora.", PlayerInfo[playerid][pPosaoUgovor]); //conver
		return SCM(playerid, -1, string);
	}
	PlayerInfo[playerid][pPosao] = 0; PlayerInfo[playerid][pPosaoUgovor] = 0;
	SavePlayer(playerid);
	SCM(playerid, -1, ""HZELENA"[V:RPG] "SIVA"Dali ste otkaz, srecno u novom poslu!");
	return 1;
}
////////////////////////////////////////////////////
CMD:linija(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosao] != POSAO_BUSVOZAC) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Nemas posao bus vozaca!");
	if(BusLinija[playerid] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Vec imas aktiviranu liniju, kucaj /prekiniposao!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(!BusVozila(GetPlayerVehicleID(playerid))) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Niste u busu!");
	SPD(playerid, 224, DIALOG_STYLE_LIST, ""BELA"Odaberite liniju", ""SPLAVA"(1). "BELA"LS Linija 1\n"SPLAVA"(2). "BELA"LS Linija 2\n"SPLAVA"(3). "BELA"LS Linija 3\n"SPLAVA"(4). "BELA"LV Linija 4", "Odaberi", "Izlaz");
	return 1;
}
////////////////////////////////////////////////////
CMD:skinirotaciju(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    if(!Policajac(playerid)) return SCM(playerid, -1, "Nisi policajac");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
    new VID = GetPlayerVehicleID(playerid);
	DestroyDynamicObject(ObjektSirena[VID]);
	return 1;
}
///////////////////////////////////////////////////
CMD:stavirotaciju(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Niste u vozilu!");
    if(!Policajac(playerid)) return SCM(playerid, -1, "Nisi policajac");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	new VID = GetPlayerVehicleID(playerid);
	ObjektSirena[VID] = CreateDynamicObject(18646, 10.0, 10.0, 10.0, 0, 0, 0);
	AttachDynamicObjectToVehicle(ObjektSirena[VID], VID, -0.43, 0.0, 0.785, 0.0, 0.1, 0.0);
	return 1;
}
//////////////////////////////////////////////////
CMD:kositravu(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_KOSACTRAVE) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Nemas posao kosaca trave!");
	if(KosenjeTrave[playerid] != 0) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Vec imas aktivirano kosenje, kucaj /prekiniposao!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(!KosenjeVozila(GetPlayerVehicleID(playerid))) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Niste u kosilici!");
	new kosenje = random(sizeof(KosiTravuRand));
	SetPlayerCheckpoint(playerid, KosiTravuRand[kosenje][0], KosiTravuRand[kosenje][1], KosiTravuRand[kosenje][2], 5.0);
	KosenjeTrave[playerid] = 1;
	SCM(playerid,-1,""HZELENA"[V:RPG] | "BELA"Krenuli ste sa kosenjem trave, pratite crvene markere!");
	SetTimerEx("WarpHack", 1000, false, "i", playerid); // how we do it xd thats 1 second  chpeck
	SetPVarInt(playerid, "WarpHack", 3);
	return 1;
}
////////////////////////////////////////////////////
CMD:radionica(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1816.7518, -1434.8579, 13.6016)) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Niste u mehanicarskoj radionici!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "SIVA"Morate biti u vozilu!");
	SPD(playerid, 230, DIALOG_STYLE_LIST, ""SRWBOJA"Popravka vozila", "Popravi Gume (200$)\nPopravi motor (250$)\nPopravi sve (500$)", "Popravi", "Odustani");
	return 1;
}
CMD:ribari(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_RIBAR) return SCM(playerid,-1, ""SRWBOJA"ERROR: "SRWBOJA"Niste ribar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SRWBOJA"ERROR: "SRWBOJA"Niste uzeli opremu za posao (/oprema)!");
    if(Ribari[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"ERROR: "SRWBOJA"Imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= ribvozilo[0] && GetPlayerVehicleID(playerid) <= ribvozilo[5])
	            {
		           	new posta = random(sizeof(RibRand));
					SetPlayerCheckpoint(playerid, RibRand[posta][0], RibRand[posta][1], RibRand[posta][2], 3.0);
					Ribari[playerid] = 1;
					SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Krenuli ste sa ribarenjem!");
	     			SetTimerEx("WarpHack", 10000, false, "i", playerid);
	                SetPVarInt(playerid, "WarpHack", 3);
				}
				else return SCM(playerid,-1,""SRWBOJA"ERROR: "SRWBOJA"Niste u vozilu za ribarenje!");
    return 1;
 }
////////////////////////////////////////////////////
CMD:popravi(playerid, params[])
{

	if(PlayerInfo[playerid][pPosao] != POSAO_MEHANICAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste mehanicar!");
    if(PlayerInfo[playerid][pLevel] < 5) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti lvl 5+!");
	if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete to dok ste u vozilu!");
 	new id, cena, Float:Poz[3];
 	if(sscanf(params, "ui", id, cena)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/popravi [ID/Ime] [Cena popravke]");
 	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
 	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
 	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac nije blizu tebe!");
 	if(!IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac mora biti u vozilu!");
 	if(GetPlayerState(id) != PLAYER_STATE_DRIVER) SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac mora biti vozac!");
 	if(cena < 1 || cena > 55000) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Cena ne moze biti manja od 1$,ni vec od 55000$!");
 	PonudioPopravku[id] = playerid; CenaPopravke[id] = cena;
	new string[128];
	format(string, charsmax(string), "[V:RPG] "HZELENA"Ponudili ste popravku vozila igracu %s za %d$.", GetName(id), cena); //conver
	SCM(playerid, -1, string);
	format(string, charsmax(string), "[V:RPG] "HZELENA"Mehanicar %s vam je ponudio popravku vozila za %d$ | Da prihvatite /prihvati popravku!", GetName(playerid), cena); //conver
	SCM(id, -1, string);
	return 1;
}
////////////////////////////////////////////////////
CMD:napuni(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_MEHANICAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste mehanicar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete to dok ste u vozilu!");
	new id, cena, Float:Poz[3];
 	if(sscanf(params, "ui", id, cena)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/napuni [ID/Ime] [Cena goriva]");
 	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
 	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
 	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac nije blizu tebe!");
 	if(!IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac mora biti u vozilu!");
 	if(GetPlayerState(id) != PLAYER_STATE_DRIVER) SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac mora biti vozac!");
	if(cena < 1 || cena > 55000) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Cena ne moze biti manja od 1$,ni vec od 55000$!");
    if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(id)))) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sipati gorivo u biciklo!");
	PonudioGorivo[id] = playerid; CenaGoriva[id] = cena;
	new string[128];
	format(string, charsmax(string), "[V:RPG] "HZELENA"Ponudili ste gorivo za vozilo igracu %s za %d$.", GetName(id), cena); //conver
	SCM(playerid, -1, string);
	format(string, charsmax(string), "[V:RPG] "HZELENA"Mehanicar %s vam je ponudio gorivo za vozila za %d$ | Da prihvatite /prihvati gorivo!", GetName(playerid), cena); //conver
	SCM(id, -1, string);
	return 1;
}
/////////////////////////////////////////////////////
CMD:posta(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosao] != POSAO_POSTAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste postar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
    if(PostaPreuzmi[playerid] != 0 || PostaRaznesi[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktivirano raznosenje/preuzimanje poste!");
    SPD(playerid, 232, DIALOG_STYLE_LIST, ""BELA"Posta", ""VARADERO"(1). "BELA"Raznesi Postu\n"VARADERO"(2). "BELA"Preuzmi Postu", "Odaberi", "Izlaz");
    return 1;
 }
/////////////////////////////////////////////////////
CMD:komunalno(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosao] != POSAO_KOMUNALAC) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste komunalac!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
    if(SmeceSakuplja[playerid] != 0 || CistiUlice[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktivirano prikupljanje/ciscenje!");
    SPD(playerid, 234, DIALOG_STYLE_LIST, ""BELA"Komunalno", ""VARADERO"(1). "BELA"Pokupi Smece\n"VARADERO"(2). "BELA"Operi ulice - Linija 1\n"VARADERO"(3). "BELA"Operi ulice - Linija 2", "Odaberi", "Izlaz");
    return 1;
}
/////////////////////////////////////////////////////
CMD:malter(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosao] != POSAO_GRADJEVINAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste gradjevinar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(MalterDovozi[playerid] != 0 || PoravnaBagerom[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Vec imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= vgradjevinar[0] && GetPlayerVehicleID(playerid) <= vgradjevinar[3])
	{
		SetPlayerCheckpoint(playerid, 440.9109,-1730.9922,9.2477, 5.0); MalterDovozi[playerid] = 1;
		SCM(playerid,-1,"[V:RPG] "SPLAVA"Krenuli ste sa dovozom maltera otidjite utovariti malter!");
	}
	else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u mjesalici!");
    return 1;
}
/////////////////////////////////////////////////////
CMD:poravnaj(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_GRADJEVINAR) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste gradjevinar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(MalterDovozi[playerid] != 0 || PoravnaBagerom[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= vgradjevinar[4] && GetPlayerVehicleID(playerid) <= vgradjevinar[6])
	{
		SetPlayerCheckpoint(playerid, 1887.6544,-1572.3845,14.2844, 3.0); PoravnaBagerom[playerid] = 1;
		SCM(playerid,-1,"[V:RPG] | "SPLAVA"Krenuli ste sa poravnavanjem!");
		SetTimerEx("WarpHack", 2000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste u bageru!");
    return 1;
}
/////////////////////////////////////////////////////
CMD:izleci(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_BOLNICAR) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste bolnicar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	new id,cena;
	if(sscanf(params, "ui", id, cena)) return SCM(playerid, -1, "[V:RPG] Pomoc | "SRWBOJA"/izleci [ID/Ime] [Cena]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
    if(!DaljinaIgraca(4.0,playerid,id)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Taj igrac nije blizu tebe!");
	if(IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Morate izaci iz vozila!");
	if(!IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Taj igrac mora biti van vozila!");
	if(cena < 1 || cena > 800) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Cena mora biti manja od 1$ i veca od 800$!");
	if(PlayerInfo[id][pNovacDzep] < cena) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac nema toliko novca!");
	if(id == playerid) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete sami sebi ponuditi lecenje!");
	LecenjeOd[id] = playerid; CenaLecenja[id] = cena;
	new string[128];
	format(string, charsmax(string), "[V:RPG] "VARADERO"Ponudili ste lecenje igracu %s za %d$!", GetName(id), cena); //conver
	SCM(playerid, -1, string);
	format(string, charsmax(string), "[V:RPG] "VARADERO"Bolnicar %s vam je ponudio lecenje za %d$ | /prihvati lecenje!", GetName(playerid), cena); //conver
	SCM(id, -1, string);
    return 1;
}
/////////////////////////////////////////////////////
CMD:grobar(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_GROBAR) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste grobar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
    if(GrobarLinija[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vec imas aktiviran posao!");
    if(!GrobarVozila(GetPlayerVehicleID(playerid))) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste u vozilu od grobara!");
    new grobar = random(sizeof(GrobarRand));
	SetPlayerCheckpoint(playerid, GrobarRand[grobar][0], GrobarRand[grobar][1], GrobarRand[grobar][2], 4.0);
	GrobarLinija[playerid] = 1;
	PlayerInfo[playerid][pRadi] = 1;
	SCM(playerid,-1,""VARADERO"Krenuli ste sa poslom otidjite na lokaciju oznacenu"SRWBOJA"(crveno) "VARADERO"na mapi da pokupite telo!");
	SetTimerEx("WarpHack", 10000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	return 1;
}
/////////////////////////////////////////////////////
CMD:ukradi(playerid, params[])
{
    //#pragma unused help
	#pragma unused params
	if(AdminDuty[playerid] == 1 || GMDuty[playerid] == 1 || saduty[playerid] == 1) return SCM(playerid,-1,""SRWBOJA"ERROR "VARADERO"Ne smes biti na Administrator/GameMaster/SA DUty Duty!");
	if(PlayerInfo[playerid][pPosao] != POSAO_DZEPAROS) return SCM(playerid,-1, "[V:RPG] | "SRWBOJA"Niste dzeparos!");
	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"HAHAHHAH Desi poso bre? PD SI COVECE GLUPANDERU GLUPI!");
    if(PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"HAHAHHAH Desi poso bre? CIA SI COVECE GLUPANDERU GLUPI!!");
    if(PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"HAHAHHAH Desi poso bre? FBI SI COVECE GLUPANDERU GLUPI!");
	new string[128];
	if(PlayerInfo[playerid][pDzeparosVreme] != 0) {
	format(string, charsmax(string), "[V:RPG] | "SRWBOJA"Morate sacekati jos %d sekundi da bi mogli ponovo krasti!", PlayerInfo[playerid][pDzeparosVreme]); //conver
	return SCM(playerid, -1, string);
	}
	if(PlayerInfo[playerid][pZatvor] != 0) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Ne mozete krasti pare u zatvoru!");
	new id, Float:Poz[3], ukradeno, rand;
	if(sscanf(params, "u", id)) return SCM(playerid, -1, "[ V:RPG ] Pomoc | "SRWBOJA"/ukradi [ID/Ime]");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Igrac je offline!");
	if(PlayerInfo[id][pAdmin] > 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Ne mozes ukrasti novac od admina!");
    if(PlayerInfo[id][pGM] > 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Ne mozes ukrasti novac od GameMastera!");
    if(Policajac(id)) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Ne mozes ukrasti novac od policajca/agenta!");
	if(id == playerid) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Ne mozete krasti sami sebi pare!");
	if(PlayerInfo[id][pLevel] < 7) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Igrac mora biti level 7+ da bi mu krali pare!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Ne mozete krasti dok ste u vozilu!");
	if(IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Ne mozete krasti igraca koji je u vozilu!");

	if(PlayerInfo[id][pLevel] == 1 && PlayerInfo[id][pLevel] == 2 && PlayerInfo[id][pLevel] == 3 && PlayerInfo[id][pLevel] == 4 && PlayerInfo[id][pLevel] == 5) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA" Taj igrac je jos Civil idi kradi BurÃ…Â¾ujima!");
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Predaleko ste!");
	if(IsPlayerInRangeOfPoint(playerid, 30.0, 1457.9810,-993.2814,1301.0859)) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Ne mozete krasti pare u banci!");
    if(IsPlayerInRangeOfPoint(playerid, 40.0, 1460.8024,-1033.2006,23.6563)) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Ne mozete krasti pare ispred banke!");
	if(PlayerInfo[playerid][pNovacDzep] < 400)
	{
	    PostaviWanted(playerid, "Pokusaj kradje novcanika", "Nepoznato", 1);
	    SCM(playerid, -1, ""SRWBOJA"Niste uspeli da ukradete novac!");
		PlayerInfo[playerid][pDzeparosVreme] = 200;
	    return 1;
	}
	rand = random(2);
	switch(rand)
	{
		case 0..1:
		{
			ukradeno = PlayerInfo[id][pNovacDzep] / 100 * 5;
			if(PlayerInfo[playerid][pNovacDzep] < ukradeno) return PostaviWanted(playerid, "Pokusaj kradje novca", "Nepoznat", 1);
			g_NovacMinus(id, ukradeno); g_NovacPlus(playerid, ukradeno);
			PostaviWanted(playerid, "Kradja novca", "Nepoznat", 1);
			format(string, charsmax(string), ""HZELENA"Uspesno ste ukrali pare | Kolicina ukradenog novca "BELA"%d$!", ukradeno); //conver
			SCM(playerid, -1, string);
			PlayerInfo[playerid][pDzeparosVreme] = 400;
			format(string, charsmax(string), ""SRWBOJA"Igrac %s vam je ukrao "BELA"%d$ "SRWBOJA"novca!",GetName(playerid), ukradeno); //conver
			SCM(id, -1, string);

		}
		case 2:
		{
	    	PostaviWanted(playerid, "Pokusaj kradje novca", "Nepoznat", 1);
	    	SCM(playerid, -1, ""SRWBOJA"Niste uspeli da ukradete novac!");
			PlayerInfo[playerid][pDzeparosVreme] = 200;
		}
	}
	return 1;
}
/////////////////////////////////////////////////////
CMD:dostavicolu(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_COCA) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste Dostavljac cole!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(Dostavicolu[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= vcola[0] && GetPlayerVehicleID(playerid) <= vcola[7])
	{
		SetPlayerCheckpoint(playerid, 1518.8789,-1661.3149,13.5419, 3.0); Dostavicolu[playerid] = 1;
		SCM(playerid,-1,"[V:RPG] | "SPLAVA"Dostavi coca colu u marketima i trafikama!");
		SetTimerEx("WarpHack", 2000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste u vozilu!");
    return 1;
}
/////////////////////////////////////////////////////
CMD:oranje(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_FARMER) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste farmer!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(Oranje[playerid] != 0 || Vrsenje[playerid] != 0 || Mleko[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= vfarmer[0] && GetPlayerVehicleID(playerid) <= vfarmer[5])
	{
		SetPlayerCheckpoint(playerid, -109.2197,140.1985,3.1139, 3.0); Oranje[playerid] = 1;
		SCM(playerid,-1,"[V:RPG] | "SPLAVA"Krenuli ste sa oranjem!");
		SetTimerEx("WarpHack", 2000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste u traktoru!");
    return 1;
}
/////////////////////////////////////////////////////
CMD:vrsenje(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_FARMER) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste farmer!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(Oranje[playerid] != 0 || Vrsenje[playerid] != 0 || Mleko[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= vfarmer[6] && GetPlayerVehicleID(playerid) <= vfarmer[12])
	{
		SetPlayerCheckpoint(playerid, 22.2805,58.3967,3.1172, 3.0); Vrsenje[playerid] = 1;
		SCM(playerid,-1,"[V:RPG] | "SPLAVA"Krenuli ste sa vrsenjem!");
		SetTimerEx("WarpHack", 2000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste u kombajnu!");
    return 1;
}
/////////////////////////////////////////////////////
CMD:mleko(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_FARMER) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste farmer!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(Oranje[playerid] != 0 || Vrsenje[playerid] != 0 || Mleko[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= vfarmer[13] && GetPlayerVehicleID(playerid) <= vfarmer[18])
	{
		new mleko = random(sizeof(MlekoRand)); Mleko[playerid] = 1;
		SetPlayerCheckpoint(playerid, MlekoRand[mleko][0], MlekoRand[mleko][1], MlekoRand[mleko][2], 3.0);
		SCM(playerid,-1,"[V:RPG] | "SPLAVA"Krenuli ste sa raznosenjem mleka!");
		SetTimerEx("WarpHack", 2000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste u vozilu za raznosenje mleka!");
    return 1;
}
/////////////////////////////////////////////////////
CMD:drva(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_DRVOSECA) return SCM(playerid,-1,""VARADERO"[V:RPG] "SRWBOJA"Niste Drvoseca!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SRWBOJA"Niste uzeli opremu za posao (/oprema)!");
	if(DrvaPrevoz[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
    if(GetPlayerVehicleID(playerid) >= drvovozila[0] && GetPlayerVehicleID(playerid) <= drvovozila[7])
	{
		new drva = random(sizeof(DrvaRand)); DrvaPrevoz[playerid] = 1;
		SetPlayerCheckpoint(playerid, DrvaRand[drva][0], DrvaRand[drva][1], DrvaRand[drva][2], 3.0);
		SCM(playerid,-1,""VARADERO"[V:RPG] "ZELENA"Idite do crvenog markera i utovarite drva!");
		SetTimerEx("WarpHack", 10000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	else return SCM(playerid,-1,""VARADERO"[V:RPG] "SRWBOJA"Niste u kamionu za prevoz drva!");
    return 1;
}
CMD:voz(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_MASINOVODJA) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste masinovodja!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(VozLinija[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
	if(GetPlayerVehicleID(playerid) != VozVozilo) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste u vozu!");
	VozLinija[playerid] = 1; SetPlayerCheckpoint(playerid, 810.2866,-1362.9888,-1.6551, 5.0);
	SCM(playerid,-1,"[V:RPG] | "SPLAVA"Krenuli ste sa prevozom putnika!");
    SCM(playerid,-1,"[V:RPG] | "SPLAVA"Kad ste kod crvenog markera vozite voz ispod 10 km/h!");
	SetTimerEx("WarpHack", 10000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
    return 1;
}
/////////////////////////////////////////////////////uzmikutiju /utovari /istovari
CMD:uzmikutiju(playerid, params[])
{
    //#pragma unused help
    #pragma unused params

	if(PlayerInfo[playerid][pPosao] != POSAO_DOSTAVLJAC) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste dostavljac!");
    if(IsPlayerAttachedObjectSlotUsed(playerid, DOSTAVLJAC_SLOT)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec ste uzeli kutiju!");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1639.5282,-1900.4049,13.5521)) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste na mestu uzimanja kutije!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SIVA"Ne mozete iz vozila uzimati kutije!");
	if(UzeoKutiju[playerid] == 1) return SCM(playerid,-1,""SIVA"Vec si utovario kutiju idi je dostavi u neku firmu!");
	OnePlayAnim(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1); UzeoKutiju[playerid] = 1;
	SetPlayerAttachedObject(playerid, DOSTAVLJAC_SLOT, 1221, 1, 0.494823, 0.720993, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	SCM(playerid,-1,"[V:RPG] | "VARADERO"Uspesno ste uzeli kutiju!");
    SCM(playerid,-1,"[V:RPG] | "VARADERO"Ostavite je u vozilo za dostavu komandom /utovari");
    return 1;
}
/////////////////////////////////////////////////////
CMD:utovari(playerid, params[])
{
    //#pragma unused help
    #pragma unused params

	if(PlayerInfo[playerid][pPosao] != POSAO_DOSTAVLJAC) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste dostavljac!");
	if(ProduktiVozila[GetClosestVehicle(playerid)] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"U vozilo su vec utovareni produkti!");
	if(!IsPlayerAttachedObjectSlotUsed(playerid, DOSTAVLJAC_SLOT)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste uzeli kutiju!");
	new Float:Poz[3]; GetVehiclePos(GetClosestVehicle(playerid), Poz[0], Poz[1], Poz[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste u blizini vozila od dostavljaca!");
	if(!DostavljacVozila(GetClosestVehicle(playerid))) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste u blizini vozila od dostavljaca!");
	ProduktiVozila[GetClosestVehicle(playerid)] = 1; RemovePlayerAttachedObject(playerid, DOSTAVLJAC_SLOT); ClearAnimations(playerid);
	SCM(playerid,-1,"[V:RPG] | "VARADERO"Uspesno ste utovarili proizvode, otidjite ih odvesti u firmu kojoj su potrebni!");
    return 1;
}
/////////////////////////////////////////////////////
CMD:istovari(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] != POSAO_DOSTAVLJAC) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste dostavljac!");
	if(!DostavljacVozila(GetPlayerVehicleID(playerid))) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste u vozilu dostavljaca!");
	if(ProduktiVozila[GetPlayerVehicleID(playerid)] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"U vozilu nema produkata!");
	for(new i = 0; i < MAX_FIRMI; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
	    {
	 		if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ) return SCM(playerid,-1,""SIVA"Ne mozete dostavljati proizvode u tu firmu!");
			if(FirmaInfo[i][fImaVlasnika] != 1) return SCM(playerid,-1,""SIVA"Ta firma nema vlasnika!");
			if(FirmaInfo[i][fProizvodi] >= 300) return SCM(playerid,-1,""SIVA"Toj firmi nisu potrebni proizvodi!");
			if(FirmaInfo[i][fKasa] < 700) return SCM(playerid,-1,""SIVA"Ta firma nema dovoljno novca za proizvode!");
			ProduktiVozila[GetPlayerVehicleID(playerid)] = 0; FirmaInfo[i][fProizvodi] = 300; FirmaInfo[i][fKasa] -= 700;
			new bonus = random(100); g_NovacPlus(playerid, 1200+bonus); UzeoKutiju[playerid] = 0; FirmaNovac(102, 1200);
			new string[128];
			format(string, charsmax(string), ""VARADERO"Dostavili ste proizvode u firmu i zaradili ste 1200$ | Bonus: %d$!",bonus); //conver
			SCM(playerid,-1, string);
		}
	}
    return 1;
}
/////////////////////////////////////////////////////
CMD:tura(playerid, params[])
{
    //#pragma unused help
    #pragma unused params

	if(PlayerInfo[playerid][pPosao] != POSAO_KAMIONDZIJA) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste kamiondzija!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(TuraSF[playerid] != 0 || TuraLV[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
	if(!KamiondzijaVozila(GetPlayerVehicleID(playerid))) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste u kamionu!");
	if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Niste zakacili prikolicu!");
	SPD(playerid, 236, DIALOG_STYLE_LIST, ""BELA"Tura", ""SPLAVA"(1). "BELA"Tura LS - SF\n"SPLAVA"(2). "BELA"Tura LS - LV", "Odaberi", "Izlaz");
	return 1;
}
/////////////////////////////////////////////////////
CMD:let(playerid, params[])
{
    //#pragma unused help
    #pragma unused params

	if(PlayerInfo[playerid][pPosao] != POSAO_PILOT) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Niste pilot!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(LetSF[playerid] != 0 || LetLV[playerid] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas aktiviran posao!");
	if(!PilotVozila(GetPlayerVehicleID(playerid))) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste u avionu!");
	SPD(playerid, 238, DIALOG_STYLE_LIST, ""BELA"Let", ""SPLAVA"(1). "BELA"Let LS - SF\n"SPLAVA"(2). "BELA"Let LS - LV", "Odaberi", "Izlaz");
	return 1;
}
/////////////////////////////////////////////////////
CMD:kvar(playerid, params[])
{
	if(PlayerInfo[playerid][pElektricarVreme] != 0) {
		new string[128];
		format(string, charsmax(string), "[V:RPG] | "SRWBOJA"Morate sacekati jos %d sekundi da bi mogli ponovo /kvar!", PlayerInfo[playerid][pElektricarVreme]); //conver
		return SCM(playerid, -1, string);
	}
	if(PlayerInfo[playerid][pPosao] != POSAO_ELEKTRICAR) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Niste elektricar!");
    if(PosaoOprema[playerid] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Niste uzeli opremu za posao (/oprema)!");
	if(!ElektricarVozila(GetPlayerVehicleID(playerid))) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Morate biti u vozilu od elektricari da bi pokrenuli posao!");
	new elektricar = random(sizeof(ElektricarRand));
	SetPlayerCheckpoint(playerid, ElektricarRand[elektricar][0], ElektricarRand[elektricar][1], ElektricarRand[elektricar][2], 2.0);
	ElektricarKvar[playerid] = 1; SCM(playerid,-1,""SIVA"Otidjite na oznacenu lokaciju da popravite kvar!");
	SetTimerEx("WarpHack", 10000, false, "i", playerid);
	SetPVarInt(playerid, "WarpHack", 3);
	return 1;
}
////////////////////////////////////////////////////
CMD:vatrenaoprema(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
	if(PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pClan] == 18)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 8);
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2628.7944,-1103.3114,1045.2733)) return SCM(playerid,-1,""SRWBOJA"Morate biti u bazi!");
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
            Update_Skin(playerid, 278);
			GivePlayerWeapon(playerid, 42, 5000);
			VatraEquip[playerid] = 1;
			SetPlayerHealth(playerid, 100);
			SetPlayerArmour(playerid, 100);
		}
		else if(PosaoOprema[playerid] == 1)
		{
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			ResetPlayerWeapons(playerid);
			SetPlayerHealth(playerid, 100);
			SetPlayerArmour(playerid, 0);
			VatraEquip[playerid] = 0;
		}
	}
	return 1;
}
////////////////////////////////////////////////////
CMD:oprema(playerid, params[])
{

	if(PlayerInfo[playerid][pPosao] == 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Nemas posao!");
	if(GetTimeEx() < Opree[playerid]) return SCM(playerid, -1, ""SRWBOJA"INFO | "SIVA"Ovu komandu mozete koristiti svakih 10 minuta!");
	if(PlayerInfo[playerid][pPosao] == POSAO_BUSVOZAC)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 61);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skiniete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(BusLinija[playerid] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Imas aktiviranu liniju, ne mozes sad skinuti opremu!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_KOSACTRAVE)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 42);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(KosenjeTrave[playerid] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Imas aktivirano kosenje, ne mozes sad skinuti opremu!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_MEHANICAR)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 8);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_POSTAR)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 182);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(PostaPreuzmi[playerid] != 0 || PostaRaznesi[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktivirano raznosenje/preuzimanje poste, ne mozes skinuti opremu!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_KOMUNALAC)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 16);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(SmeceSakuplja[playerid] != 0 || CistiUlice[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktivirano prikupljanje/ciscenje ,ne mozes skinuti opremu!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_GRADJEVINAR)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 260);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(MalterDovozi[playerid] != 0 || PoravnaBagerom[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_BOLNICAR)
	{
		if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 70);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinite kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_GROBAR)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 68);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(GrobarLinija[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_RIBAR)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 182);
			SCM(playerid,-1, ""BELA"[V:RPG] "BELA"Uzeli ste opremu za posao, da je skinte kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(Ribari[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"ERROR: "SRWBOJA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1, ""BELA"[V:RPG] "BELA"Skinuli ste opremu za vas posao!");
			Ribari[playerid] = 0;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_FARMER)
	{
		if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 161);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(Oranje[playerid] != 0 || Vrsenje[playerid] != 0 || Mleko[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_MASINOVODJA)
	{
		if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 61);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(VozLinija[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_KAMIONDZIJA)
	{
		if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 133);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(TuraSF[playerid] != 0 || TuraLV[playerid] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_PILOT)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 61);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(LetSF[playerid] != 0 || LetLV[playerid] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_ELEKTRICAR)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
			Update_Skin(playerid, 8);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    if(ElektricarKvar[playerid] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_VODOINSTALATER)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
            Update_Skin(playerid, 260);
    	    SetPlayerAttachedObject( playerid, 1, 18644, 7, -0.009999, 0.119999, 0.000000, 0.000000, 270.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Screwdriver1 - srafciger
    	    SetPlayerAttachedObject( playerid, 2, 18635, 8, 0.230000, 0.079999, 0.029999, 80.000000, 270.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // GTASAHammer1 - cekiccc
            SetPlayerAttachedObject( playerid, 3, 18638, 2, 0.155000, 0.035000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // HardHat1 - slem
	        SetPlayerAttachedObject( playerid, 4, 18634, 1, -0.600000, 0.100000, 0.189999, 270.000000, 180.000000, 90.000000, 1.000000, 1.000000, 1.000000 ); // GTASACrowbar1 - pajser
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
		    //if(ElektricarKvar[playerid] != 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			RemovePlayerAttachedObject(playerid,1);
			RemovePlayerAttachedObject(playerid,2);
			RemovePlayerAttachedObject(playerid,3);
			RemovePlayerAttachedObject(playerid,4);
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_RUDAR)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
            Update_Skin(playerid, 260);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_DRVOSECA)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
            Update_Skin(playerid, 27);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
            if(DrvaPrevoz[playerid] != 0 ) return SCM(playerid,-1,""BELA"[V:RPG] "SIVA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
		else if(PlayerInfo[playerid][pPosao] == POSAO_COCA)
	{
	    if(PosaoOprema[playerid] == 0)
	    {
            Update_Skin(playerid, 294);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Uzeli ste opremu za posao, da je skinete kucajte ponovo /oprema!");
			PosaoOprema[playerid] = 1;
			PlayerInfo[playerid][pRadi] = 1;
			Opree[playerid] = GetTimeEx() + 600;
		}
		else if(PosaoOprema[playerid] == 1)
		{
            if(Dostavicolu[playerid] != 0 ) return SCM(playerid,-1,""BELA"[V:RPG] "SIVA"Imas aktiviran posao!");
			Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
			SCM(playerid,-1,"[V:RPG] "SPLAVA"Skinuli ste opremu za vas posao!");
			PosaoOprema[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			Opree[playerid] = GetTimeEx() + 600;
		}
	}
	return 1;
}
///////////////////////////////////////////////////
CMD:prekiniposao(playerid, params[])
{
	if(PlayerInfo[playerid][pPosao] == 0) return SCM(playerid, -1, ""SPLAVA"[V:RPG] "BELA"Nemas posao!");
	if(PlayerInfo[playerid][pPosao] == POSAO_BUSVOZAC)
	{
	    if(BusLinija[playerid] != 0)
	    {
	        BusLinija[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_KOSACTRAVE)
	{
	    if(KosenjeTrave[playerid] != 0)
	    {
	        KosenjeTrave[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_POSTAR)
	{
	    if(PostaPreuzmi[playerid] != 0 || PostaRaznesi[playerid] != 0)
	    {
	        PostaPreuzmi[playerid] = 0; PostaRaznesi[playerid] = 0; DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_KOMUNALAC)
	{
	    if(SmeceSakuplja[playerid] != 0 || CistiUlice[playerid] != 0)
	    {
	        SmeceSakuplja[playerid] = 0; CistiUlice[playerid] = 0; DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_GRADJEVINAR)
	{
	    if(MalterDovozi[playerid] != 0 || PoravnaBagerom[playerid] != 0)
	    {
	        MalterDovozi[playerid] = 0; PoravnaBagerom[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_GROBAR)
	{
	    if(GrobarLinija[playerid] != 0)
	    {
	        GrobarLinija[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_COCA)
	{
	    if(GrobarLinija[playerid] != 0) //staviovde
	    {
	        GrobarLinija[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_RIBAR)
	{
	    if(Ribari[playerid] != 0)
	    {
	        Ribari[playerid] = 0;
	        PlayerInfo[playerid][pRadi] = 0;
			DisablePlayerCheckpoint(playerid);
	        SCM(playerid,-1,""BELA"[V:RPG] "BELA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"ERROR: "SRWBOJA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_FARMER)
	{
	    if(Oranje[playerid] != 0 || Vrsenje[playerid] != 0 || Mleko[playerid] != 0)
	    {
	        Oranje[playerid] = 0; Vrsenje[playerid] = 0; Mleko[playerid] = 0;
	        PlayerInfo[playerid][pRadi] = 0;
 			DisablePlayerCheckpoint(playerid);
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_MASINOVODJA)
	{
	    if(VozLinija[playerid] != 0)
	    {
	        VozLinija[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_DOSTAVLJAC)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, DOSTAVLJAC_SLOT))
	    {
	        RemovePlayerAttachedObject(playerid, DOSTAVLJAC_SLOT); ClearAnimations(playerid);
	        PlayerInfo[playerid][pRadi] = 0;
	        UzeoKutiju[playerid] = 0; SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste uzeli kutije!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_KAMIONDZIJA)
	{
	    if(TuraSF[playerid] != 0 || TuraLV[playerid] != 0)
	    {
	        TuraSF[playerid] = 0; TuraLV[playerid] = 0;
	        PlayerInfo[playerid][pRadi] = 0;
 			DisablePlayerCheckpoint(playerid);
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_PILOT)
	{
	    if(LetSF[playerid] != 0 || LetLV[playerid] != 0)
	    {
	        LetSF[playerid] = 0; LetLV[playerid] = 0;
	        PlayerInfo[playerid][pRadi] = 0;
 			DisablePlayerCheckpoint(playerid);
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_DRVOSECA)
	{
	    if(DrvaPrevoz[playerid] != 0)
	    {
	        DrvaPrevoz[playerid] = 0;
	        PlayerInfo[playerid][pRadi] = 0;
 			DisablePlayerCheckpoint(playerid);
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	else if(PlayerInfo[playerid][pPosao] == POSAO_COCA)
	{
	    if(Dostavicolu[playerid] != 0)
	    {
	        Dostavicolu[playerid] = 0;
	        PlayerInfo[playerid][pRadi] = 0;
 			DisablePlayerCheckpoint(playerid);
	        SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sa poslom!");
	    }
	    else return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste zapoceli sa poslom!");
	}
	return 1;
}
////////////////////////////////////////////////////
CMD:poslovi(playerid, params[])
{
    //#pragma unused help
    #pragma unused params
	if(PlayerInfo[playerid][pPosao] != 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Vec imas posao, ne mozes videti listu poslova!");
	if(SvercMaterijala[playerid] >= 1 && SvercUlja[playerid] >= 1 && SvercDroge[playerid] >= 1 && SvercOruzija[playerid] >= 1) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Svercate, ne mozete sad koristiti tu komandu!");
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 37.0021,123.6579,495.6328))
 {
	new string1[256],string2[256],string[512];
	format(string1,sizeof(string1),"Bus Vozac (Level 1)\nKosac Trave (Level 1)\nMehanicar (Level 2)\nPostar (Level 2)\nKomunalac (Level 3)\nGradjevinar (Level 3)\nBolnicar (Level 4)\nGrobar (Level 4)\nDzeparos (Level 5)\n");
	format(string2,sizeof(string2),"Farmer (Level 5)\nMasinovodja (Level 6)\nDostavljac (Level 6)\nKamiondzija (Level 7)\nPilot (Level 7)\nElektricar (Level 8)\nVodoinstalater (Level 8)\nRudar (Level 10)\nDrvoseca (Level 10)\nRibar (Level 10)\nDostavljac Coca Cole");
	format(string,sizeof(string),"%s%s",string1,string2);
	SPD(playerid, 228, DIALOG_STYLE_LIST, ""SPLAVA"Lokacije poslova", string, "Odaberi", "Izlaz");
 }
 	return 1;
}
///////////////////////////////////////////////////////////////////////////
CMD:mo(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosedovanjeMotora] == -1) return SCM(playerid,-1,""SIVA"Ne posedujes motor!");
    if(strcmp(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mVlasnik], GetName(playerid), false)) return SCM(playerid,-1,""SIVA"Motor koji je bio u vasem vlasnistvu je prodat, zatrazite od admina skidanje kljuca!");
	SPD(playerid,272,DIALOG_STYLE_LIST, ""VARADERO"Motor", "Informacije\nZakljucaj/Otkljucaj\nLociraj motor\nParkiraj motor\nPromena boje\nProdaj motor\nProdaj motor igracu", "Odaberi", "Nazad");
	return 1;
}
////////////////////////////////////////////////////////////////////////////
CMD:le(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pPosedovanjeAviona] == -1) return SCM(playerid,-1,""SIVA"Ne posedujes letjelicu!");
    if(strcmp(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avVlasnik], GetName(playerid), false)) return SCM(playerid,-1,""SIVA"Letjelica koja je bila u vasem vlasnistvu je prodata, zatrazite od admina skidanje kljuca!");
	SPD(playerid,300,DIALOG_STYLE_LIST, ""SPLAVA"Letjelica", "Informacije\nZakljucaj/Otkljucaj\nLociraj letjelicu\nParkiraj letjelicu\nPromena boje\nProdaj letjelicu\nProdaj letjelicu igracu", "Odaberi", "Nazad");
	return 1;
}
///////////////////////////////////////////////////////////////////////////
CMD:bi(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pPosedovanjeBicikla] == -1) return SCM(playerid,-1,""SIVA"Ne posedujes biciklu!");
    if(strcmp(BiciklaInfo[PlayerInfo[playerid][pPosedovanjeBicikla]][biVlasnik], GetName(playerid), false)) return SCM(playerid,-1,""SIVA"Bicikl koji je bio u vasem vlasnistvu je prodat, zatrazite od admina skidanje kljuca!");
	SPD(playerid,288,DIALOG_STYLE_LIST, ""ZELENA"Bicikl", "Informacije\nZakljucaj/Otkljucaj\nLociraj bicikl\nParkiraj bicikl\nPromena boje\nProdaj bicikl igracu", "Odaberi", "Nazad");
	return 1;
}
//////////////////////////////////////////////////////////////////////////
CMD:v(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
	{
    if(strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vVlasnik], GetName(playerid), false)) return SCM(playerid,-1,""SIVA"Vozilo koje je bilo u vasem vlasnistvu je prodato, zatrazite od admina skidanje kljuca!");
	}
	if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
	{
    if(strcmp(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vVlasnik], GetName(playerid), false)) return SCM(playerid,-1,""SIVA"Vozilo koje je bilo u vasem vlasnistvu je prodato, zatrazite od admina skidanje kljuca!");
	}
	SPD(playerid,250,DIALOG_STYLE_LIST, ""SPLAVA"Auto", "Informacije\nZakljucaj/Otkljucaj\nLociraj vozilo\nParkiraj vozilo\nPromena boje\nOstavi u vozilu\nUzmi iz vozila\nProdaj vozilo\nUgradi radio\nRadio\nProdaj vozilo igracu\nHauba,Gepek,Alarm,Vrata", "Odaberi", "Nazad");
	return 1;
}
//////////////////////////////////////////////////////////////////////////
CMD:pl(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pPosedovanjePlovila] == -1) return SCM(playerid,-1,""SIVA"Ne posedujes plovilo!");
    if(strcmp(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plVlasnik], GetName(playerid), false)) return SCM(playerid,-1,""SIVA"Plovilo koja je bilo u vasem vlasnistvu je prodato, zatrazite od admina skidanje kljuca!");
	SPD(playerid,324,DIALOG_STYLE_LIST, ""SPLAVA"Plovilo", "Informacije\nZakljucaj/Otkljucaj\nLociraj plovilo\nParkiraj plovilo\nPromena boje\nProdaj plovilo\nProdaj plovilo igracu", "Odaberi", "Nazad");
	return 1;
}
///////////////////////////////////////////////////////////////////////////
CMD:kupikacigu(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 699.4522,-1573.1166,14.2680)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u prodavnici kaciga!");
	if(PlayerInfo[playerid][pKaciga] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec imas kacigu!");
	if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate dovoljno novca (500$)!");
	SPD(playerid, 284, DIALOG_STYLE_LIST, ""VARADERO"Kacige",""BELA"Kaciga - 1\n"BELA"Kaciga - 2\n"BELA"Kaciga - 3", "Odaberi", "Nazad");
	return 1;
}
////////////////////////////////////////////////////////////////////////////
CMD:kaciga(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	new string[128];
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(PlayerInfo[playerid][pKaciga] == -1) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Nemate kacigu!");
	if(KacigaStavljena[playerid] == 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Niste u vozilu!");
	    SetPlayerAttachedObject(playerid, KACIGA_SLOT, PlayerInfo[playerid][pKaciga], 2, 0.07, 0, 0, 88, 75, 0);
	    KacigaStavljena[playerid] = 1;
		format(string, sizeof(string), "* %s stavlja kacigu (/kaciga) .", GetName(playerid));
		e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	    SCM(playerid,-1,"[V:RPG] "HZELENA"Stavili ste kacigu!");
	}
	else if(KacigaStavljena[playerid] == 1)
	{
	    RemovePlayerAttachedObject(playerid, KACIGA_SLOT);
	    KacigaStavljena[playerid] = 0;
		format(string, sizeof(string), "* %s skida kacigu (/kaciga) .", GetName(playerid));
		e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	    SCM(playerid,-1,"[V:RPG] "HZELENA"Skinuli ste kacigu!");
	}
	return 1;
}



CMD:screen(playerid, params[])
{
	#pragma unused params
	if(Screenoff[playerid] == 1)
	{
		PlayerTextDrawSetPreviewModel(playerid, NwnEditor_PTD[playerid][8], GetPlayerSkin(playerid));
		for(new i = 0; i <= 12; i++)
		{
			PlayerTextDrawShow(playerid,NwnEditor_PTD[playerid][i]);
		}
		for(new i = 0; i <= 11; i++)
		{
			TextDrawShowForPlayer(playerid,NwnEditor_TD[i]);
		}
		
		
		info(playerid, "Prikazali ste TextDraw-ove, da ih ponovo sklonite koristite "SRWBOJA"/screen "BELA"!");
		Screenoff[playerid] = 0;
	}
	else if(Screenoff[playerid] == 0)
	{
		for(new i = 0; i <= 12; i++)
		{
			PlayerTextDrawHide(playerid,NwnEditor_PTD[playerid][i]);
		}
		for(new i = 0; i <= 11; i++)
		{
			TextDrawHideForPlayer(playerid,NwnEditor_TD[i]);
		}
		
		info(playerid, "Sklonili ste TextDraw-ove, da ih ponovo prikazete koristite "SRWBOJA"/screen "BELA"!");		
		Screenoff[playerid] = 1;
	}
	return 1;
}

///////////////////////////////////////////////////////////////////////////////
CMD:gps(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Moras se ulogovati da bi koristio ovu komandu!");
 	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "[V:RPG] "CRVENA"Niste u vozilu!");
	SPD(playerid, 312, DIALOG_STYLE_LIST, ""VARADERO"GPS", "Los Santos Lokacije\nSaloni\nLos Santos Luka\nVodoinstalater\nOstale Lokacije\nLas Vegas Lokacije\nKuce\nStanovi\nFirme\nVikendice\nIskljuci GPS", "Odaberi", "Izlaz");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:kreirajbankomat(playerid, params[])
{
    
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
    new idatm, Float:X2, Float:Y2, Float:Z2, Float:Angle;
	GetPlayerPos(playerid, X2, Y2, Z2); 
	GetPlayerFacingAngle(playerid, Angle);
	
	
	AtmInfo[idatm][aPostavljen] = 1; 
	AtmInfo[idatm][aAngle] = Angle;
    AtmInfo[idatm][aX] = X2; 
    AtmInfo[idatm][aY] = Y2; 
    AtmInfo[idatm][aZ] = Z2;
    AtmInfo[idatm][aInt] = GetPlayerInterior(playerid); 
    AtmInfo[idatm][aVW] = GetPlayerVirtualWorld(playerid);

    new q[256];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `bankomati` SET `Postavljen` = '1', `banX` = '%f', `banY` = '%f', `banZ` = '%f', `Angle` = '%f', `banInt` = '%d', `banVW` = '%d'"\
		,X2,Y2,Z2, Angle, AtmInfo[idatm][aInt], AtmInfo[idatm][aVW]);
	mysql_tquery(SQL, q, "_sqlInsertBankomat", "dd", idatm, playerid);

    return 1;
}

function: _sqlInsertBankomat(idatm, playerid)
{
	AtmInfo[idatm][banSQLID] = idatm = cache_insert_id();
	KreirajAtm(idatm); 
    SacuvajATM(idatm); 
    va_SendClientMessage(playerid,-1,"[V:RPG] "ZELENA"Kreirali ste bankomat id: %d (/ebankomat)!", idatm);
    return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:ebankomat(playerid, params[])
{
	//#pragma unused help
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
	new idatm;
	if(sscanf(params, "i",idatm)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/ebankomat [ID]");
	
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, AtmInfo[idatm][aX], AtmInfo[idatm][aY], AtmInfo[idatm][aZ])) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u blizini tog bankomata!");
	DestroyDynamic3DTextLabel(AtmInfo[idatm][aAtmLabel]); eData[playerid] = idatm; EditDynamicObject(playerid,AtmInfo[idatm][aObjekat]); SacuvajATM(idatm);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:portbankomat(playerid, params[])
{

    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo Vlasnik!");
    new idatm;
	if(sscanf(params, "i",idatm)) return SCM(playerid,-1,"[V:RPG] Pomoc | "SRWBOJA"/portbankomat [ID]");
	SendClientMessage(playerid, -1, "ako ste portani na farmu bankomat ne postoji, mrzi me da pravim proveru pozic");
	SetPlayerPos(playerid,AtmInfo[idatm][aX], AtmInfo[idatm][aY], AtmInfo[idatm][aZ]);
    SetPlayerInterior(playerid, AtmInfo[idatm][aInt]); SetPlayerVirtualWorld(playerid, AtmInfo[idatm][aVW]);
	new string[128];
	format(string, charsmax(string), "[V:RPG] "ZELENA"Teleportovani ste do bankomata ID: %d!", idatm); //conver
	SCM(playerid,-1, string);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:bankomat(playerid, params[])
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
    if(IsPlayerInAnyVehicle(playerid)) {
     return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Ne mozete koristiti ovu komandu dok ste u vozilu.");
    }
    if(PlayerInfo[playerid][pBankovniRacun] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemas otvoren bankovni racun!");
	if(KodBankomata(playerid) == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste kod bankomata!");
	if(BankomatMeni[playerid] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec pregledate bankomat!");
	SelectTextDraw(playerid, 0x878787FF); AtmTD(playerid, 1); BankomatMeni[playerid] = 1;
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:daj(playerid, params[])
{
	//#pragma unused help
	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7+ za davanje stvari!");
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
    if(PlayerInfo[playerid][pWar] >= 1) return SCM(playerid,-1,"[V:RPG] "SPLAVA"Ne mozete koristiti ovu komandu jer ste u waru!");
	new id, kolicina, stvar[16], string[100];
    if(sscanf(params, "uis[16]", id, kolicina, stvar))
	{
		SCM(playerid,-1, "[V:RPG] Pomoc | "ZELENA"/daj [ID/Ime] [Kolicina] [Ime stvari]");
		SCM(playerid,-1, "Stvari: "ZELENA"Droga | Mats | Oruzije | Novac | Zlato | Hranu |");
		return 1;
	}
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac je offline!");
	if(id == playerid) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete sami sebi davati stvari!");
	if(PlayerInfo[playerid][pZatvor] > 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete koristiti ovu komandu jer ste u zatvoru!");
    new Float:Poz[3]; GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
    if(!IsPlayerInRangeOfPoint(id, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Niste u blizini tog igraca!");
   	if(!strcmp(stvar, "droga", true))
	{
	    if(Policajac(playerid)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradiÃ…Â¡!");
	    if(PlayerInfo[playerid][pDroga] < kolicina) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate toliko droge!");
	    if(kolicina < 1 || kolicina > 2000) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 1 i iznad 2000 odjednom!");
	    PlayerInfo[playerid][pDroga] -= kolicina; PlayerInfo[id][pDroga] += kolicina; SavePlayer(id); SavePlayer(playerid);
	    format(string,sizeof(string),""VARADERO"Dali ste %dg droge igracu %s!", kolicina, GetName(id));
	    SCM(playerid, -1, string);
		format(string,sizeof(string),""VARADERO"Igrac %s vam je dao %dg droge!", GetName(playerid), kolicina);
	    SCM(id, -1, string);
	}
	else if(!strcmp(stvar, "mats", true))
	{
        if(Policajac(playerid)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradiÃ…Â¡!");
	    if(PlayerInfo[playerid][pMats] < kolicina) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate toliko materijala!");
	    if(kolicina < 1 || kolicina > 2000) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 1 i iznad 2000 odjednom!");
	    PlayerInfo[playerid][pMats] -= kolicina; PlayerInfo[id][pMats] += kolicina; SavePlayer(id); SavePlayer(playerid);
	    format(string,sizeof(string),""VARADERO"Dali ste %d materijala igracu %s!", kolicina, GetName(id));
	    SCM(playerid, -1, string);
		format(string,sizeof(string),""VARADERO"Igrac %s vam je dao %d materijala!", GetName(playerid), kolicina);
	    SCM(id, -1, string);
	}
	else if(!strcmp(stvar, "oruzije", true))
	{
	    if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradiÃ…Â¡!");
        if(PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradiÃ…Â¡!");
        if(PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Pripadnik si LS:PD to ne mozes da uradiÃ…Â¡!");
        if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ti si hitman covece!");
		if(PlayerInfo[playerid][pClan] == 1 && PlayerInfo[playerid][pLider] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Policija ne moze davati oruzije!");
		if(PlayerInfo[playerid][pDisarm] == 1 && PlayerInfo[playerid][pDisarmVreme] > 0) return SCM(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Imas Disarm ");
		if(GetPlayerWeapon(playerid) == 0) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nemate oruzije u ruci!");
		if(kolicina < 1 || kolicina > 200) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 1 i iznad 200 odjednom!");
		if(IsPlayerInAnyVehicle(id)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac kojem ste ponudili oruzije nesmije biti u vozilu");
		if(GetPlayerAmmo(playerid) < kolicina) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Nemate toliko metaka!");
		new oruzje = GetPlayerWeapon(playerid), municijaplayerid = GetPlayerAmmo(playerid), municijanova = municijaplayerid - kolicina;
		GivePlayerWeapon(id, oruzje, kolicina); SetPlayerAmmo(playerid, oruzje, municijanova);
		format(string, sizeof(string), ""VARADERO"Dali ste igracu %s oruzije sa %d metaka!", GetName(id), kolicina);
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""VARADERO"Igrac %s vam je dao oruzije sa %d metaka!", GetName(playerid), kolicina);
		SCM(id, -1, string);
		SavePlayer(id); SavePlayer(playerid);
	}
	else if(!strcmp(stvar, "novac", true))
	{
		if(PlayerInfo[playerid][pNovacDzep] < kolicina) return SCM(playerid,-1, "[V:RPG] "SRWBOJA"Nemas toliko novca!");
        if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti lvl 7+!");
		if(kolicina < 1 || kolicina > 10000) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 1 i iznad 10000 odjednom!");
		format(string, sizeof(string), ""VARADERO"Dali ste igracu %s novca %d$.", GetName(id), kolicina);
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""VARADERO"Igrac %s vam je dao %d$ novca.", GetName(playerid), kolicina);
		SCM(id, -1, string);
		format(string, sizeof(string), "* %s uzima nesto novca i daje ih %s.", GetName(playerid), GetName(id));
		e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		OnePlayAnim(playerid, "DEALER", "shop_pay", 2.5, 0, 0, 0, 0, 0);
		g_NovacMinus(playerid, kolicina); g_NovacPlus(id, kolicina); SavePlayer(id); SavePlayer(playerid);
	}
	else if(!strcmp(stvar, "zlato", true))
	{
		if(PlayerInfo[playerid][pZlato] < kolicina) return SCM(playerid,-1, "[V:RPG] "SRWBOJA"Nemas toliko zlata!");
        if(PlayerInfo[playerid][pLevel] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti lvl 6+!");
		if(kolicina < 1 || kolicina > 10) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 1 i iznad 10 odjednom!");
		format(string, sizeof(string), ""VARADERO"Dali ste igracu %s %dg zlata.", GetName(id), kolicina);
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""VARADERO"Igrac %s vam je dao %dg zlata.", GetName(playerid), kolicina);
		SCM(id, -1, string);
		format(string, sizeof(string), "* %s uzima nesto zlata i daje ga %s.", GetName(playerid), GetName(id));
		e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		OnePlayAnim(playerid, "DEALER", "shop_pay", 2.5, 0, 0, 0, 0, 0);
		PlayerInfo[playerid][pZlato] -= kolicina; PlayerInfo[id][pZlato] += kolicina; SavePlayer(id); SavePlayer(playerid);
	}
	else if(!strcmp(stvar, "hranu", true))
	{
		if(PlayerInfo[playerid][pHrana] < kolicina) return SCM(playerid,-1, "[V:RPG] "SRWBOJA"Nemas toliko hrane!");
        if(PlayerInfo[playerid][pLevel] < 6) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti lvl 6+!");
		if(kolicina > 1) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete ici ispod 1 odjednom!");
		if(PlayerInfo[id][pHrana] >= 5) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Igrac vec ima dovoljno hrane!");
		format(string, sizeof(string), ""VARADERO"Dali ste igracu %s hrane.", GetName(id));
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""VARADERO"Igrac %s vam je dao hrane.", GetName(playerid), kolicina);
		SCM(id, -1, string);
		format(string, sizeof(string), "* %s uzima hranu i daje ju %s.", GetName(playerid), GetName(id));
		e_RadiusMSG(30.0, playerid, HEX_PROX, string);
		OnePlayAnim(playerid, "DEALER", "shop_pay", 2.5, 0, 0, 0, 0, 0);
		PlayerInfo[playerid][pHrana] -= kolicina; PlayerInfo[id][pHrana] += kolicina; SavePlayer(id); SavePlayer(playerid);
	}
	else return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Pogresno ime stvari!");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
CMD:kupizeton(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(Zeton[playerid] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec imas zeton!");
	if(!IsPlayerInRangeOfPoint(playerid, 8.0, 2257.5688,-1449.7758,25.8391)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu kupovine zetona!");
	if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate dovoljno novca!");
	Zeton[playerid] = 1; SCM(playerid,-1,""VARADERO"Uspesno ste kupili zeton za 1000$!"); g_NovacMinus(playerid, 1000);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:stats(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
   	//KreirajStats(playerid);
    CheckShowStats(playerid,playerid);
	new string [128];
	format(string, sizeof(string), "* %s pregleda stats.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	return 1;
}
/////////////////////////////////////////////////////////////
CMD:pm(playerid, params[])
{
    //#pragma unused help
	new id, poruka[128];
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pGM] < 2) return SCM(playerid, -1, ""ZELENA"(Varadero) "SIVA"Samo Admini & GameMaster (AL 1+ & GM 2+)");
	if(sscanf(params, "us[128]", id, poruka)) return SCM(playerid,-1,""SRWBOJA""VARADERO"[V:RPG] "BELA"/PM [ID/Ime] [odgovor]");
	new string[156];
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, ""ZELENA"(Varadero) "SIVA"Pogresan ID!");
	format(string,sizeof string, ""SRWBOJA"Vas PM %s-u [ID:%d]: "BELA"%s", GetName(id) , id, poruka);
	SendClientMessage(playerid, -1,string);
	format(string,sizeof string ,""SRWBOJA"%s [ID:%d] vam je poslao PM: "BELA"%s",GetName(playerid),playerid,poruka);
	SendClientMessage(id, -1,string);
	return 1;
}
//----------------------------------------------------------------------------//
CMD:kreirajulicu(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1,""NS_AGENCY"[ERROR]: "BELA"Niste ovlasceni za upotrebu ove komande.");
	if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid, -1, ""ORANGE2 "* Ne mozete da koristite ovu komandu ukoliko niste na staff duznosti.");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""ORANGE2 "* Ne mozete da koristite ovu komandu ukoliko niste 'on-foot'.");
	new struk[ 30 ], igrac[24], idulicice;
	if(sscanf(params, "s[24]s[30]", igrac, struk)) return SCM(playerid, -1, ""SRWBOJA"[KORISCENJE] "BELA"/kreirajulicu [Vlasnik] [Memorial]");
	
	
	new q[128];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `ulice` SET `uVlasnik` = '%s', `uText` = '%s'",	igrac,struk);		
	mysql_tquery(SQL, q, "_sqlinsertUlica", "ddss", idulicice, playerid, igrac, struk);

	
	
    return 1;
}
function: _sqlinsertUlica(idulicice, playerid, igrac[], struk[])
{
	idulicice = cache_insert_id();
	UI[ idulicice ][ uSQLID ] = idulicice;
	va_SendClientMessage( playerid,-1, ""VARADERO"[INFO] "BELA"Ulica (ID: %d) je kreirana za igraca: %s.", idulicice, igrac );

    GetPlayerPos( playerid, X, Y, Z );
    UI[ idulicice ][ uUlicaX ] = X;
    UI[ idulicice ][ uUlicaY ] = Y;
    UI[ idulicice ][ uUlicaZ ] = Z;
    UI[ idulicice ][ uPostavljena ] = 1;
    new string[ 256 ];
    strmid( UI[ idulicice ][ uIme ],struk, 0, strlen( struk ),255 );
    strmid( UI[ idulicice ][ uVlasnik ],igrac, 0, strlen( igrac ),255 );
    format( string, sizeof( string ),"================================\n\n"BELA"ULICA ID %d\n{FFFFFF}Memorijal: {1A80D2}%s\n{FFFFFF}Vlasnik: {1A80D2}%s\n\n"BELA"================================",idulicice , UI[ idulicice ][ uIme ], UI[ idulicice ][ uVlasnik ]);
 	LabelcicUlica[idulicice] = CreateDynamic3DTextLabel( string , -1, UI[ idulicice ][ uUlicaX ], UI[ idulicice ][ uUlicaY ], UI[ idulicice ][ uUlicaZ ], 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0);
	PickupUlicee[idulicice] = CreateDynamicPickup( 1314, 1, UI[ idulicice ][ uUlicaX ], UI[ idulicice ][ uUlicaY ], UI[ idulicice ][ uUlicaZ ] );
	UlicaLabelIPickup( idulicice );
	SacuvajUlicu( idulicice );

}
CMD:obrisiulicu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1,""NS_AGENCY"[ERROR]: "BELA"Niste ovlasceni za upotrebu ove komande.");
	if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid, -1, ""ORANGE2 "* Ne mozete da koristite ovu komandu ukoliko niste na staff duznosti.");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""ORANGE2 "* Ne mozete da koristite ovu komandu ukoliko niste 'on-foot'.");
	new id;
	if(sscanf(params, "i", id)) return SCM(playerid, -1,""SRWBOJA"[KORISCENJE] "BELA"/obrisiulicu [ID]");

	new q[64];
	mysql_format( SQL, q, sizeof(q), "SELECT * FROM `ulice` where `uSQLID` = '%d'", id);
	mysql_tquery( SQL, q, "_sqlDeleteUlica", "ii", playerid, id);

	return 1;
}
function: _sqlDeleteUlica(playerid, id)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "ID te ulice nije pronadjen u bazi!");
	else 
	{
		new q[64];
		mysql_format( SQL, q, sizeof(q), "DELETE FROM `ulice` WHERE `uSQLID` = '%d'", id);
		mysql_tquery(SQL, q);
		DestroyDynamic3DTextLabel( LabelcicUlica[ id ] );
	    DestroyDynamicPickup( PickupUlicee[ id ] );
		for(new i; Ulice:i < Ulice; i++) 
		{ 
			UI[id][Ulice:i] = -1; 		
		}	

		va_SendClientMessage( playerid,-1,""VARADERO"[INFO] "BELA"Obrisao si ulicu (ID: %d).", id );
		va_SendClientMessageToAll(-1 , "Administrator: %s je obrisao ulicu ID: (%d).", GetName(playerid), id);
	}
	return 1;
}

CMD:info(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""ORANGE2 "* Ne mozete da koristite ovu komandu ukoliko niste 'on-foot'.");
    for(new i; i < MAX_ULICA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, UI[i][uUlicaX], UI[i][uUlicaY], UI[i][uUlicaZ]))
		{
			if(strlen(UI[i][uText]) < 2) return SCM(playerid,-1,""CRVENA"[ERROR]: "SIVA"Ova ulica nema ispisan memorijalni tekst.");
		    new buffer[128];
		    format( buffer, sizeof buffer , "%s",UI[i][uText]);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Ulica",buffer,"Izlaz","");
			return 1;
		}
	}
	return SCM(playerid,-1, ""ORANGE2"* Nema ulica u blizini.");
}
CMD:eulicu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid, -1,""NS_AGENCY"[ERROR]: "BELA"Niste ovlasceni za upotrebu ove komande.");
	if(AdminDuty[playerid] == 0 && GMDuty[playerid] == 0) return SCM(playerid,-1, ""ORANGE2"* Ne mozete da koristite ovu komandu ukoliko niste na staff duznosti.");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, ""ORANGE2 "* Ne mozete da koristite ovu komandu ukoliko niste 'on-foot'.");
	new sta[20],ide[128],string[100];
	if(sscanf(params, "s[20]s[128]",sta,ide)) return SCM(playerid, -1,""SRWBOJA"[KORISCENJE] "BELA"/eulicu [Vlasnik,Memorijal,Text] [Text]");
    for(new i; i < MAX_ULICA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, UI[i][uUlicaX], UI[i][uUlicaY], UI[i][uUlicaZ]))
		{
			if(!strcmp(sta, "vlasnik", true))
			{
			    DestroyDynamic3DTextLabel( LabelcicUlica[ i ] );
		        strmid( UI[ i ][ uVlasnik ],ide, 0, strlen( ide ),40 );
				SacuvajUlicu(i);
				UlicaLabelIPickup(i);
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Ulici (ID: %d) ste izmenili vlasnika u %s.",i,ide);
				SCM(playerid,-1,string);
				return 1;
			}
			else if(!strcmp(sta, "memorijal", true))
			{
			    DestroyDynamic3DTextLabel( LabelcicUlica[ i ] );
		        strmid( UI[ i ][ uIme ],ide, 0, strlen( ide ),40 );
				UlicaLabelIPickup(i);
				SacuvajUlicu(i);
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Ulici (ID: %d) ste izmenili memorijal u %s.",i,ide);
				SCM(playerid,-1,string);
				return 1;
			}
			else if(!strcmp(sta, "text", true))
			{
			    DestroyDynamic3DTextLabel( LabelcicUlica[ i ] );
		        strmid( UI[ i ][ uText ],ide, 0, strlen( ide ),128 );
				UlicaLabelIPickup(i);
				SacuvajUlicu(i);
				format(string,sizeof(string),""VARADERO"[INFO] "BELA"Ulici (ID: %d) ste izmenili text na /info u %s.",i,ide);
				SCM(playerid,-1,string);
				return 1;
			}
		}
	}
	return SCM(playerid, -1, ""ORANGE2"* Nema ulica u blizini.");
}


/////////////////////////////////////////////////////////////////
CMD:admini(playerid, params[])
{
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, ""ORANGE2"#!: Morate se ulogovati !");
	new string[3000];
	format(string, sizeof(string), "");
	foreach(new i : Player)
	{
     	if(PlayerInfo[i][pTestAdmin] >= 1)
        {
            new atext[50];
            format(atext, sizeof(atext), ""BELA"%s", GetName(i));
            strcat(string, atext);
            format(atext, sizeof(atext), ""SRWBOJA" [%d]", i);
            strcat(string, atext);
            strcat(string, ""SRWBOJA" >");
            strcat(string, ""BELA" Test Admin");
			strcat(string, ""SRWBOJA" >");
            if(AdminDuty[i] == 0)
            {
                strcat(string, ""BELA" Duty: "CRVENA"(OFF)");
            }
            if(AdminDuty[i] == 1)
            {
                strcat(string, ""BELA" Duty: "ZELENA"(ON)");
            }
            if(AFKDetekcija[i] == 1)
	        {
        		strcat(string, ""SRWBOJA" > "BELA"Status: "CRVENA"(AFK)");
            }
            if(AFKDetekcija[i] == 0)
	        {
        		strcat(string, ""SRWBOJA" > "BELA"Status: "ZELENA"(ONLINE)");
            }
			strcat(string, "\n");
		}
		if(PlayerInfo[i][pAdmin] >= 1)
        {
            new atext[50];
            format(atext, sizeof(atext), ""BELA"%s", GetName(i));
            strcat(string, atext);
            format(atext, sizeof(atext), ""SRWBOJA" [%d]", i);
            strcat(string, atext);
            strcat(string, ""SRWBOJA" >");
            strcat(string, ""BELA" Admin Level:");
            format(atext, sizeof(atext), ""SRWBOJA" %d", PlayerInfo[i][pAdmin]);
            strcat(string, atext);
			strcat(string, ""SRWBOJA" >");
            if(AdminDuty[i] == 0)
            {
                strcat(string, ""BELA" Duty: "CRVENA"(OFF)");
            }
            if(AdminDuty[i] == 1)
            {
                strcat(string, ""BELA" Duty: "ZELENA"(ON)");
            }
            if(AFKDetekcija[i] == 1)
	        {
        		strcat(string, ""SRWBOJA" > "BELA"Status: "CRVENA"(AFK)");
            }
            if(AFKDetekcija[i] == 0)
	        {
        		strcat(string, ""SRWBOJA" > "BELA"Status: "ZELENA"(ONLINE)");
            }
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return SendClientMessage(playerid, -1, ""CRVENA"[GRESKA]:"BELA" Nema online Admina.");
	SPD(playerid, 336, DIALOG_STYLE_MSGBOX, "ONLINE ADMINI", string, "OK", "");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:gamemasteri(playerid, params[])
{
    #pragma unused params
    if(UlogovanProvera[playerid] == 0) return SCM(playerid, -1, ""ORANGE2"#!: Morate se ulogovati !");
	new string[3000];
	format(string, sizeof(string), "");
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pGM] >= 1)
        {
            new atext[50];
            format(atext, sizeof(atext), ""BELA"%s", GetName(i));
            strcat(string, atext);
            format(atext, sizeof(atext), ""SRWBOJA" [%d]", i);
            strcat(string, atext);
            strcat(string, ""SRWBOJA" >");
            strcat(string, ""BELA" GameMaster:");
            format(atext, sizeof(atext), ""SRWBOJA" %d", PlayerInfo[i][pGM]);
            strcat(string, atext);
			strcat(string, ""SRWBOJA" >");
            if(GMDuty[i] == 0)
            {
                strcat(string, ""BELA" Duty: "CRVENA"(OFF)");
            }
            if(GMDuty[i] == 1)
            {
                strcat(string, ""BELA" Duty: "ZELENA"(ON)");
            }
            if(AFKDetekcija[i] == 1)
	        {
        		strcat(string, ""SRWBOJA" > "BELA"Status: "CRVENA"(AFK)");
            }
            if(AFKDetekcija[i] == 0)
	        {
        		strcat(string, ""SRWBOJA" > "BELA"Status: "ZELENA"(ONLINE)");
            }
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return SendClientMessage(playerid, -1, ""CRVENA"[GRESKA]:"BELA" Nema online GameMastera.");
	SPD(playerid, 338, DIALOG_STYLE_MSGBOX, "ONLINE GAMEMASTERI", string, "OK", "");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:vipovi(playerid, params[])
{
    #pragma unused params
    //#pragma unused help
	new string[2048];
	format(string, sizeof(string), "");
	foreach(new i : Player)
	{
		if (PlayerInfo[i][pVip] >= 1)
		{
			new atext[20];
			format(atext, sizeof(atext), "{FFFFFF}[ID %d] ", i);
			strcat(string, atext);
			strcat(string, " {00C0FF}");
			strcat(string, GetName(i));
			strcat(string, "{FFFFFF} | ");
			strcat(string, "{f81414}Vip Level: {FFFFFF}");
			format(atext, sizeof(atext), "%d", PlayerInfo[i][pVip]);
			strcat(string, atext);
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return SendClientMessage(playerid, -1, ""CRVENA"[GRESKA]:"BELA" Nema online VIP-ova.");
	SPD(playerid, 338, DIALOG_STYLE_MSGBOX, "ONLINE VIPOVI", string, "Uredu", "");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:specteam(playerid, params[])
{
    #pragma unused params
    //#pragma unused help
	new string[3000];
	format(string, sizeof(string), "");
	foreach(new i:Player)
	{
		if (PlayerInfo[i][pSpecteam] >= 1 || PlayerInfo[i][pSpecteam] >=3)
		{
			new atext[20];
			format(atext, sizeof(atext), "{FFFFFF}[ID %d] ", i);
			strcat(string, atext);
			strcat(string, " {00C0FF}");
			strcat(string, GetName(i));
			strcat(string, "{FFFFFF} | ");
			strcat(string, "{00C0FF}Spec-Team Level: {FFFFFF}");
			format(atext, sizeof(atext), "%d", PlayerInfo[i][pSpecteam]);
			strcat(string, atext);
   			if(saduty[i] == 0)
		    {
     			strcat(string, "{FFFFFF} | {F81414}Nije na duznosti!");
        	}
         	if(saduty[i] == 1)
	        {
        		strcat(string, "{FFFFFF} | {0084e3}Na duznosti!");
          	}
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return SendClientMessage(playerid, -1, ""CRVENA"[GRESKA]:"BELA" Nema online Spec-Team.");
	ShowPlayerDialog(playerid, 338, DIALOG_STYLE_MSGBOX, "ONLINE SPEC-TEAM", string, "Uredu", "");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:promoteri(playerid, params[])
{
    #pragma unused params
    //#pragma unused help
	new string[2048];
	format(string, sizeof(string), "");
	foreach(new i : Player)
	{
		if (PlayerInfo[i][pPromoter] == 1)
		{
			new atext[20];
			format(atext, sizeof(atext), "{FFFFFF}[ID %d] ", i);
			strcat(string, atext);
			strcat(string, " {00C0FF}");
			strcat(string, GetName(i));
			strcat(string, "{FFFFFF} | ");
			strcat(string, "{00C0FF}Promoter Level: {FFFFFF}");
			format(atext, sizeof(atext), "%d", PlayerInfo[i][pPromoter]);
			strcat(string, atext);
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return SendClientMessage(playerid, -1, ""CRVENA"[GRESKA]:"BELA" Nema online Promotera.");
	SPD(playerid, 338, DIALOG_STYLE_MSGBOX, "ONLINE PROMOTERA", string, "Uredu", "");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
CMD:Promoteri(playerid, params[])
{
    #pragma unused params
    //#pragma unused help
	new string[2048];
	format(string, sizeof(string), "");
	foreach(new i : Player)
	{
		if (PlayerInfo[i][pPozicioner] == 1)
		{
			new atext[20];
			format(atext, sizeof(atext), "{FFFFFF}[ID %d] ", i);
			strcat(string, atext);
			strcat(string, " {00C0FF}");
			strcat(string, GetName(i));
			strcat(string, "{FFFFFF} | ");
			strcat(string, "{00C0FF}Promoteri: {FFFFFF}");
			format(atext, sizeof(atext), "%d", PlayerInfo[i][pPozicioner]);
			strcat(string, atext);
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return SendClientMessage(playerid, -1, "[V:RPG] "SRWBOJA"Nijedan PromoterI nije trenutno online!");
	SPD(playerid, 338, DIALOG_STYLE_MSGBOX, "Promoteri Online", string, "Uredu", "");
	return 1;
}

////////////////////////////////////////////////////////////////////////////////
CMD:lideri(playerid, params[])
{
    #pragma unused params
    #pragma unused params
	new string[2224];
	format(string, sizeof(string), "");
	foreach(new i : Player)
	{
		if (PlayerInfo[i][pLider] >= 1 || PlayerInfo[i][pLider] >=6)
		{
			new admtext[64];
            new atext[20];
			if(PlayerInfo[i][pLider] == 1) { admtext = ""BELA"Los Santos Police Department"; }
		    else if(PlayerInfo[i][pLider] == 2) { admtext = ""BELA"The Vinci Family"; }
			else if(PlayerInfo[i][pLider] == 3) { admtext = ""BELA"Black Dragon Triads"; }
			else if(PlayerInfo[i][pLider] == 4) { admtext = ""BELA"Grove Street Family"; }
			else if(PlayerInfo[i][pLider] == 5) { admtext = ""BELA"Ballas"; }
			else if(PlayerInfo[i][pLider] == 6) { admtext = ""BELA"Novinari"; }
			else if(PlayerInfo[i][pLider] == 7) { admtext = ""BELA"Central Intelligence Agency"; }
			else if(PlayerInfo[i][pLider] == 8) { admtext = ""BELA"Parking Servis"; }
			else if(PlayerInfo[i][pLider] == 9) { admtext = ""BELA"Condor"; }
			else if(PlayerInfo[i][pLider] == 10) { admtext = ""BELA"Hitman"; }
			else if(PlayerInfo[i][pLider] == 11) { admtext = ""BELA"Blue Lagoon"; }
			else if(PlayerInfo[i][pLider] == 12) { admtext = ""BELA"La Cosa Nostra"; }
			else if(PlayerInfo[i][pLider] == 13) { admtext = ""BELA"Da Naga Boys"; }
			else if(PlayerInfo[i][pLider] == 14) { admtext = ""BELA"Taxi"; }
			else if(PlayerInfo[i][pLider] == 15) { admtext = ""BELA"Yakuza"; }
			else if(PlayerInfo[i][pLider] == 16) { admtext = ""BELA"Federal Bureau of Investigation"; }
			else if(PlayerInfo[i][pLider] == 17) { admtext = ""BELA"Black Cobra Corporation"; }
			else if(PlayerInfo[i][pLider] == 18) { admtext = ""BELA"Vatrogasci"; }
			else if(PlayerInfo[i][pLider] == 19) { admtext = ""BELA"Death Row"; }
			else if(PlayerInfo[i][pLider] == 20) { admtext = ""BELA"The Russia Mafia"; }
			else if(PlayerInfo[i][pLider] == 21) { admtext = ""BELA"Narco Cartel"; }
			else if(PlayerInfo[i][pLider] == 22) { admtext = ""BELA"Loca Cartel"; }
			else if(PlayerInfo[i][pLider] == 23) { admtext = ""BELA"TBB"; }
			else if(PlayerInfo[i][pLider] == 25) { admtext = ""BELA"Varrio Los Aztecas"; }
            format(atext, sizeof(atext), "{FFFFFF}[ID %d] ", i);
			strcat(string, atext);
			strcat(string, "|{F81414} ");
			strcat(string, GetName(i));
			strcat(string, "{FFFFFF} | ");
            format(admtext, sizeof(admtext), " {0084e3}Lider: {FFFFFF}%s |", admtext);
			strcat(string, admtext);
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return SendClientMessage(playerid, -1, "[V:RPG] "SRWBOJA"Nijedan lider nije online!");
	SPD(playerid, 340, DIALOG_STYLE_MSGBOX, "Online Lideri", string, "Uredu", "");
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////
forward OcistiChat(playerid, lines);
public OcistiChat(playerid, lines)
{
	for(new i = 0; i < lines; i++)
	{
		SCM(playerid, -1, " ");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
forward Neiznajmljuje(playerid);
public Neiznajmljuje(playerid)
{
iznajmio[playerid] = 0;
Update_Skin(playerid, PlayerInfo[playerid][pSkin]);
SendClientMessage(playerid,-1,"Vreme trajanja iznajmljivanja rolera je proslo, izgubili ste opremu!");
}
/////////////////////////////////////////////////////////////////////////////
forward GorivoFriz(playerid);
public GorivoFriz(playerid)
{
	TogglePlayerControllable(playerid, 1);
	GameTextForPlayer(playerid, "~y~Gorivo napunjeno", 5000, 3);
	SCM(playerid,-1,"Gorivo napunjeno.");
	PuniGorivo[playerid] = false;
	new string[50];
	format(string, sizeof(string), "~w~GORIVO:_%d_l", Fuel[GetPlayerVehicleID(playerid)]);
    PlayerTextDrawSetString(playerid, Brzinomer[playerid][8], string);
	return 1;
}
////////////////////////////////////////////////////////////////////////////
forward DrogaEfekat(playerid);
public DrogaEfekat(playerid)
{
	SetPlayerWeather(playerid, 10); ClearAnimations(playerid); KoristiDrogu[playerid] = 0;
	GameTextForPlayer(playerid,"~w~Efekat droge prosao...", 5000, 3);
  	return 1;
}
///////////////////////////////////////////////////////////////////////////
forward SendGMMessage(color, string[]);
public SendGMMessage(color, string[])
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pGM] >= 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}
/////////////////////////////////////////////////////////////////////
forward AntiSpawnkill(playerid);
public AntiSpawnkill(playerid)
{
        SetPlayerHealth(playerid, 99.0);
        return 1;
}
//////////////////////////////////////////////////////////////
forward SendAdminMessage(color, string[]);
public SendAdminMessage(color, string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pTestAdmin] >= 1)
		{
			SendClientMessage(i, color, string);
			printf("%s", string);
		}
	}
}
forward SendWarMessage(color, string[]);
public SendWarMessage(color,string[])
{
        foreach(new i : Player)
        {
            if(PlayerInfo[i][pWar] > 0)
            {
                SendClientMessage(i, color, string);
                }
        }
        return 1;
}
///////////////////////////////////////////////////////////////////////////
forward PosaljiVlasniku(color, string[]);
public PosaljiVlasniku(color, string[])
{
	foreach(new i:Player)
	{
	    if(UlogovanProvera[i] == 1 && PlayerInfo[i][pAdmin] >= 6)
	    {
			SendClientMessage(i, color, string);
        }
	}
}
forward AdminGameMasterSpec(color, string[]);
public AdminGameMasterSpec(color, string[])
{
	foreach(new i:Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pGM] >= 1 || PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pTestAdmin] >= 1 || PlayerInfo[i][pSpecteam] >= 1))
		{
			SendClientMessage(i, color, string);
		}
	}
}
///////////////////////////////////////////////////////////////////////////
forward AdminGameMaster(color, string[]);
public AdminGameMaster(color, string[])
{
	foreach(new i : Player)
    {
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pGM] >= 1 || PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pTestAdmin] >= 1))
		{
			SendClientMessage(i, color, string);
		}
	}
}
///////////////////////////////////////////////////////////////////////////
forward Prisluskivanje(color, string[]);
public Prisluskivanje(color, string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pPrisluskivanje] >= 1))
		{
			SendClientMessage(i, color, string);
		}
	}
}
forward Prislusk(color, string[]);
public Prislusk(color, string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pPrislusk] >= 1))
		{
			SendClientMessage(i, color, string);
		}
	}
}
///////////////////////////////////////////////////////////////////
forward Lider(color, string[]);
public Lider(color, string[])
{
	foreach(new i : Player)
 {
		if(PlayerInfo[i][pAdmin] >= 5|| PlayerInfo[i][pLider] >= 1 || PlayerInfo[i][pVlidera] >= 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}
/////////////////////////////////////////////////////
forward FudbalPoruka(color, string[]);
public FudbalPoruka(color, string[])
{
	foreach(new i : Player)
	{
		if(fudbaltim[i] == 1 || fudbaltim[i] == 2)
	    {
	        SCM(i, color, string);
		}
	}
}
forward AdminGameMasterVip(color, string[]);
public AdminGameMasterVip(color, string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pGM] >= 1|| PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pVip] >= 1 || PlayerInfo[i][pTestAdmin] >= 1 || PlayerInfo[i][pSpecteam] >= 1))
		{
			SendClientMessage(i, color, string);
		}
	}
}
///////////////////////////////////////////////////////////////////////////
forward Policajac(playerid);
public Policajac(playerid)
{
    if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 24 || PlayerInfo[playerid][pLider] == 24)
    {
        return 1;
    }
	return 0;
}
///////////////////////////////////////////////////////////////////////////
forward BandaL(playerid);
public BandaL(playerid)
{
    if(PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pLider] == 9)
    {
        return 1;
    }
	return 0;
}
///////////////////////////////////////////////////////////////////////////
forward MafijasL(playerid);
public MafijasL(playerid)
{
    if(PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pLider] == 20)
    {
        return 1;
    }
	return 0;
}
////////////////////////////////////////////////////////////////
forward BandaC(playerid);
public BandaC(playerid)
{
    if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pClan] == 9)
    {
        return 1;
    }
	return 0;
}
///////////////////////////////////////////////////////////////////////////
forward MafijasC(playerid);
public MafijasC(playerid)
{
    if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pClan] == 20)
    {
        return 1;
    }
	return 0;
}
///////////////////////////////////////////////////////////////////////////
forward ChatPD(Boja, const string[]);
public ChatPD(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 1 || PlayerInfo[i][pClan] == 1 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
forward CFBIPD(Boja, const string[]);
public CFBIPD(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 1 || PlayerInfo[i][pClan] == 1 || PlayerInfo[i][pClan] == 16 || PlayerInfo[i][pLider] == 16 || PlayerInfo[i][pClan] == 7 || PlayerInfo[i][pLider] == 7 || PlayerInfo[i][pClan] == 24 || PlayerInfo[i][pLider] == 24 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
forward ChatSA(Boja, const string[]);
public ChatSA(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 10 || PlayerInfo[i][pClan] == 10 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
forward ChatSPD(Boja, const string[]);
public ChatSPD(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 7 || PlayerInfo[i][pClan] == 7 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
forward CondorChat(Boja, const string[]);
public CondorChat(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 9 || PlayerInfo[i][pClan] == 9 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
forward ChatPS(Boja, const string[]);
public ChatPS(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 8 || PlayerInfo[i][pClan] == 8 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////
forward ChatVF(Boja, const string[]);
public ChatVF(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 2 || PlayerInfo[i][pClan] == 2 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////////
forward ChatTBT(Boja, const string[]);
public ChatTBT(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 3 || PlayerInfo[i][pClan] == 3 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////
forward ChatGSF(Boja, const string[]);
public ChatGSF(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 4 || PlayerInfo[i][pClan] == 4 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////
forward ChatBallas(Boja, const string[]);
public ChatBallas(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 5 || PlayerInfo[i][pClan] == 5 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatNovinari(Boja, const string[]);
public ChatNovinari(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 6 || PlayerInfo[i][pClan] == 6 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatPrivatna(Boja, const string[]);
public ChatPrivatna(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 11 || PlayerInfo[i][pClan] == 11 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatPrivatna2(Boja, const string[]);
public ChatPrivatna2(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 12 || PlayerInfo[i][pClan] == 12 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatPrivatna3(Boja, const string[]);
public ChatPrivatna3(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 13 || PlayerInfo[i][pClan] == 13 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////
forward ChatPrivatna4(const string[]);
public ChatPrivatna4(const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 20 || PlayerInfo[i][pClan] == 20 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////
forward ChatNarco(const string[]);
public ChatNarco(const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 21 || PlayerInfo[i][pClan] == 21 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////
forward ChatLoca(const string[]);
public ChatLoca(const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 22 || PlayerInfo[i][pClan] == 22 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////
forward ChatTec(const string[]);
public ChatTec(const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 23 || PlayerInfo[i][pClan] == 23 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////
forward ChatVla(const string[]);
public ChatVla(const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 25 || PlayerInfo[i][pClan] == 25 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////
forward ChatSaj(const string[]);
public ChatSaj(const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 24 || PlayerInfo[i][pClan] == 24 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatTaxi(Boja, const string[]);
public ChatTaxi(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 14 || PlayerInfo[i][pClan] == 14 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatBase(Boja, const string[]);
public ChatBase(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 15 || PlayerInfo[i][pClan] == 15 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
forward ChatLCN(Boja, const string[]);
public ChatLCN(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 19 || PlayerInfo[i][pClan] == 19 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatFBI(Boja, const string[]);
public ChatFBI(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 16 || PlayerInfo[i][pClan] == 16 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
////////////////////////////////////////////////////////////
forward ChatRB(Boja, const string[]);
public ChatRB(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 17 || PlayerInfo[i][pClan] == 17 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
forward ChatVatra(Boja, const string[]);
public ChatVatra(Boja, const string[])
{
	foreach(new i : Player)
	{
		if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pLider] == 18 || PlayerInfo[i][pClan] == 18 || PlayerInfo[i][pChatF] == 1)) SendClientMessage(i, -1, string);
	}
	return 1;
}
///////////////////////////////////////////////////////////
public OnVehicleSpawn(vehicleid)
{
	VehProtection(vehicleid);
	for(new i = 0; i < sizeof(VoziloInfo); i++)
	{
		new vFile[50];
        format(vFile, sizeof(vFile), AUTO_FILE, i);
		if(fexist(vFile))
		{
			if(vehicleid == VoziloInfo[i][vID])
			{
				for(new id = 1; id <= 17; id++)
				{
					if(VoziloInfo[i][vMod][id]!=0) { AddVehicleComponent(vehicleid,VoziloInfo[i][vMod][id]); }
				}
				if(VoziloInfo[i][vMod][0]>=0) { ChangeVehiclePaintjob(vehicleid,VoziloInfo[i][vMod][0]); }
			}
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	if(IgracPolicajac(issuerid))
	{
		if(GetPlayerWeapon(issuerid) == 23)
		{
			new string[512];
			if(PlayerInfo[playerid][pTrazeniLevel] == 0) return SCM(issuerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igrac nema Wanted Level!");
			if(IgracPolicajac(playerid)) return SCM(issuerid,-1,""SRWBOJA"INFO | "SIVA"Ne mozes tazovati PD!");
			if(PlayerInfo[issuerid][pRank] == 0) return SCM(issuerid,-1,""SRWBOJA"INFO | "SIVA"Suspendovan si!");
			if(AdminDuty[playerid] == 1) return SCM(issuerid,-1,""SRWBOJA"INFO | "SIVA"Taj igrac je Admin na duznosti!");
			format(string, sizeof(string), "%s puca tazerom na %s-a i pogadja ga.", GetName(issuerid) ,GetName(playerid));
            e_RadiusMSG(30.0, playerid, HEX_PROX, string);
			TogglePlayerControllable(playerid, 0); IgracTazovan[playerid] = 1;
			TazerTimer[playerid] = SetTimerEx("TazovanTajmer", 15000, true, "i", playerid);
			OnePlayAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
		}
	}
	return 1;
}
//////////////////////////////////////////
public OnPlayerEnterDynamicArea(playerid, areaid)
{
    if(areaid == AlarmArea && BankControls[LasersOn] && !BankControls[Alarm]) TriggerAlarm();
    foreach(new i : Player)
    {
        if(GetPVarType(i, "bboxareaid"))
        {
            new station[256];
            GetPVarString(i, "BoomboxURL", station, sizeof(station));
            if(areaid == GetPVarInt(i, "bboxareaid"))
            {
                PlayAudioStreamForPlayer(playerid, station, GetPVarFloat(i, "bposX"), GetPVarFloat(i, "bposY"), GetPVarFloat(i, "bposZ"), 30.0, 1);
                SendClientMessage(playerid, COLOR_GREY, " **Tihi zvuk prelepe muzike dolazi do tvog uha.**");
                return 1;
            }
        }
    }
    return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    foreach(new i : Player)
    {
        if(GetPVarType(i, "bboxareaid"))
        {
            if(areaid == GetPVarInt(i, "bboxareaid"))
            {
                StopAudioStreamForPlayer(playerid);
                SendClientMessage(playerid, COLOR_GREY, " Predaleko si otisao od boomboxa.");
                return 1;
            }
        }
    }
    return 1;
}
/////////////////////////////////////////////////
forward TazovanTajmer(playerid);
public TazovanTajmer(playerid)
{
	if(IgracTazovan[playerid] == 1)
	{
		IgracTazovan[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		GameTextForPlayer(playerid,"~y~Tazer zavrsen",5000,3);
		ClearAnimations(playerid);
	}
	return 1;
}
forward OborenTajmer(playerid);
public OborenTajmer(playerid)
{
	if(IgracOboren[playerid] == 1)
	{
		IgracOboren[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		GameTextForPlayer(playerid,"~y~Uspeli ste da ustanete",5000,3);
		ClearAnimations(playerid);
	}
	return 1;
}

forward Log(filename[], string[]);
public Log(filename[], string[]) {
    new szString[260], File:hFile, y, m, d, h,mi,s;
    hFile = fopen(filename, io_append);
    if(hFile) {
        getdate(y,m,d);
        gettimeEx(h,mi,s);
        format(szString, charsmax(szString), "(%d/%d/%d)[%d:%d:%d] %s\n", d,m,y,h,mi,s, string);
        fwrite(hFile, szString);
        fclose(hFile);
    }
}
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if (UlogovanProvera[playerid] != 1) {
		printf("Igrac %i salje komandu a nije ulogovan", playerid);
        SCM(playerid, -1, "Morate se ulogovati.");
		return 0;
	}
    if(PlayerInfo[playerid][pAdmin] < 1)
    {
		if( lastcommand[playerid]!=0 && gettime()-lastcommand[playerid]<2 ){
			SendClientMessage(playerid, -1, ""ORANGE2"#!: Komande se mogu koristiti svake 2 sekunde.");
			return 0;
		}
		else return 1;
    }
    return 1;
}
/////////////////////////////////////////////////
public OnPlayerText(playerid, text[])
{
    if (UlogovanProvera[playerid] != 1)
	{
		SCM(playerid,-1,""VARADERO"[V:RPG] "VARADERO"Moras biti ulogovan da bi pisao!");
		return 0;
	}
    if(PlayerInfo[playerid][pMutiran] == 1)
	{
		SCM(playerid,-1,"[V:RPG] "SRWBOJA"Mutirani ste ne mozete pisati!");
		return 0;
	}
	if(TelefonRazgovor[playerid] != -1 && Poziv[playerid] == 1)
	{
		new i = TelefonRazgovor[playerid];
	    new string[128];
		format(string, sizeof(string), ""VARADERO"(Telefon) %s kaze: "BELA"%s", GetName(playerid), text);
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""VARADERO"(Telefon) %s kaze: "BELA"%s", GetName(playerid), text);
		SCM(i, -1, string);
		return 0;
	}
    if(Marama[playerid] == 2)
    {
                new tekst1 = strlen(text),string[128];
	          	for(new i = 0; i<tekst1; i++) { if(IsNumeric(text[i])) text[i] = '*' ; }
				format(string, sizeof(string), ""BELA"Stranger kaze: {FFFFFF}%s", text);
   	            SetPlayerChatBubble(playerid, text, 0x3499CCFF, 100.0, 10000);
	         	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	         	return 0;
	}
	if(isnow)
	    if(IsNumeric(text))
		    if(rezultat == strval(text)) {
	     	    isnow = false;
	     	    new name[MAX_PLAYER_NAME];
	     	    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
	     	    g_NovacPlus(playerid, 5000);
	     	    SendClientMessage(playerid, -1, "Uspesno ste dobili "SRWBOJA"$5.000.");
	     	    format(strajt, sizeof(strajt),""SRWBOJA"[ Varadero Matematika ] -"SPLAVA" %s "BELA"je pogodio test iz matematike. (rezultat: "SRWBOJA"%d"BELA")",name,rezultat);
				SendClientMessageToAll(-1, strajt);
				return 0;
	     	}
	     	else {
                SendClientMessage(playerid, -1, "[ Varadero Matematika ] - Vas odgovor "SRWBOJA"nije tacan.");
                return 0;
	     	}
    if(MarriageCeremoney[playerid] > 0)
	{
        new string[100],giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME];
        if(strcmp("da", text))
        {
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Svestenik: %s da li uzimate %s za vasu voljenu zenu? (ukucajte 'da', sve ostalo ce prekinuti ovaj brak).", giveplayer,sendername);
					SCM(GotProposedBy[playerid], -1, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 1;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Svestenik: %s i %s proglasavam vas...Muzem i Zenom, mozete poljubiti mladu.", sendername, giveplayer);
						SCM(playerid, -1, string);
						format(string, sizeof(string), "Svestenik: %s i %s proglasavam vas...Muzem i Zenom, sada se mozete poljubiti sa svedocima.", giveplayer, sendername);
						SCM(ProposedTo[playerid], -1, string);
						format(string, sizeof(string), "Vesti sa vencanja: Imamo novi bracni par, %s i %s su vencani.", sendername, giveplayer);
						SendClientMessageToAll(-1, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
						format(string, sizeof(string), "Svestenik: %s i %s i proglasavam vas...Muzem i Muzem, mozete poljubiti mladu.", sendername, giveplayer);
						SCM(playerid, -1, string);
						format(string, sizeof(string), "Priest: %s and %s proglasavam vas...Muzem i Muzem, mozete se isljubiti sa svedocima.", giveplayer, sendername);
						SCM(ProposedTo[playerid], -1, string);
						format(string, sizeof(string), "Vesti sa vencanja: Imamo novi gej par, %s i %s su vencani.", sendername, giveplayer);
						SendClientMessageToAll(-1, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Svestenik: %s i %s proglasavam vas za...lezbo brak Zena i Zena, neka vam je bog u pomoci.", sendername, giveplayer);
						SCM(playerid, -1, string);
						format(string, sizeof(string), "Svestenik: %s i %s proglasavam vas za...lezbo brak Zena i Zena, izljubite se sa svedocima.", giveplayer, sendername);
						SCM(ProposedTo[playerid], -1, string);
						format(string, sizeof(string), "Vesti sa vencanja: Imamo novi lezbejski par, %s i %s su se vencali.", sendername, giveplayer);
						SendClientMessageToAll(-1, string);
					}
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(PlayerInfo[ProposedTo[playerid]][pMarriedTo], 30, "%s", sendername);
					format(PlayerInfo[playerid][pMarriedTo], 30, "%s", giveplayer);
					g_NovacMinus(playerid, 20000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					ProposedTo[playerid] = 999;
					return 1;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
        }
        else
        {
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), " Nisi hteo da se vencas sa %s, ups 'yes' si rekao.",giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s nije hteo da vas venca, ali je rekao 'yes' .",sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Nisi hteo da se vencas sa %s, ali ups rekao si 'yes'.",giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s nije hteo da se venca sa tobom, ali je rekao 'yes'.",sendername);
					SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
        }
        return 0;
	}
    if(PricauIntervju[playerid] != 255)
	{
	    new string[128];
		if(PlayerInfo[playerid][pClan] == 6 || PlayerInfo[playerid][pLider] == 6)
		{
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Voditelj "ORANGE"%s: "BELA"%s", GetName(playerid), text);
			SCMTA(-1, string);
		}
		else
		{
		    format(string, sizeof(string), ""ORANGE"[LSN] "BELA"Gost "ORANGE"%s: "BELA"%s", GetName(playerid), text);
			SCMTA(-1, string);
		}
		return 0;
	}
	switch(xTestBusy)
	{
		case true:
		{
			if(!strcmp(xChars, text, false))
			{
				va_SendClientMessageToAll(-1, "Igrac "SRWBOJA"%s "BELA"je prvi upisao zadatu rec i osvojio "SRWBOJA"$%d "BELA"novca.", GetName(playerid), xCash);			
				va_SendClientMessage(playerid, -1, "Prvi ste upisali zadatu rec i osvojili "SRWBOJA"$%d "BELA"novca.", xCash);
				g_NovacPlus(playerid, xCash);
				xTestBusy = false;
			}
		}
	}
	if(realchat)
	{
       	if(AdminDuty[playerid] == 1)
		{
			new tekst1 = strlen(text),string[256];
			for(new i = 0; i<tekst1; i++) { if(IsNumeric(text[i])) text[i] = '*' ; }
			format(string, sizeof(string), ""SRWBOJA"(( Admin %s: "BELA"%s "SRWBOJA"))", GetName(playerid), text);
			e_RadiusMSG(20.0, playerid, -1, string);
		}
		else if(GMDuty[playerid] == 1)
		{
			new tekst1 = strlen(text),string[256];
			for(new i = 0; i<tekst1; i++) { if(IsNumeric(text[i])) text[i] = '*' ; }
			format(string, sizeof(string), ""SRWBOJA"(( GameMaster %s: "BELA"%s "SRWBOJA"))", GetName(playerid), text);
			e_RadiusMSG(20.0, playerid, -1, string);
		}
		else
		{
		new tekst1 = strlen(text),string[128];
		for(new i = 0; i<tekst1; i++) { if(IsNumeric(text[i])) text[i] = '*' ; }
		format(string, sizeof(string), "%s kaze: %s", GetName(playerid), text);
		SetPlayerChatBubble(playerid, text, -1, 100.0, 10000);
		e_RadiusMSG(20.0, playerid, -1, string);
        }
        return 0;
	}

	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    if(!ispassenger)
    {
    foreach(new i : Player)
    {
    if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
    {
    if(UlogovanProvera[i] == 1)
    {
    new Float:cx, Float:cy, Float:cz;
    GetPlayerPos(playerid, cx, cy, cz);
    SetPlayerPos(playerid, cx, cy, cz);
  	g_freeze[playerid] = SetTimerEx("Freeze",5000, false, "i", playerid);
  	GameTextForPlayer(playerid, "~r~ZABRANJENO JE OTIMATI IGRACU VOZILO!", 2500, 5);
    new Float:hpica;
    GetPlayerHealth(playerid, hpica);
    SetPlayerHealth(playerid, hpica-50);
    }
    }
    }
    }
	new Float:Poz[3];
	GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	if(!ispassenger)
	{
		if(PolicijskaAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 1)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~b~Los Santos Police Department!", 2500, 5);
			}
		}
		if(PoAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 11)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Blue Lagoon", 2500, 5);
			}
		}
		if(PoAuta3(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 19)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~DR", 2500, 5);
			}
		}
		if(Po2Auta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 12)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~LCN", 2500, 5);
			}
		}
		if(Po3Auta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 13)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Da Naga Boys", 2500, 5);
			}
		}
		if(SaAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 10)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Hitman", 2500, 5);
			}
		}
		if(RbAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 17)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Black Cobra Corporation", 2500, 5);
			}
		}
		if(TaxiAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 14)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Taxi", 2500, 5);
			}
		}
		if(BaseAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 15)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Yakuza", 2500, 5);
			}
		}
		if(FBIAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 16)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Federal Bureau of Investigation", 2500, 5);
			}
		}
		if(VatraAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 18)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Vatrogasci", 2500, 5);
			}
		}
		if(LasVegasAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 7)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~b~Central Intelligence Agency!", 2500, 5);
			}
		}
		if(ParkingAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 8)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~b~Parking Servis!", 2500, 5);
			}
		}
		if(CondorAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 9)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Condor", 2500, 5);
			}
		}
		else if(TVFAuta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 2)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~The Vinci Family!", 2500, 5);
			}
		}
		else if(TBTVozila(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 3)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~l~Black Dragon Triads!", 2500, 5);
			}
		}
		else if(GroveVozila(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 4)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~g~Grove Street Family!", 2500, 5);
			}
		}
		else if(BallasVozila(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 5)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~w~Ballas!", 2500, 5);
			}
		}
  		else if(NovinariVozila(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 6)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~y~Los Santos Novinari!", 2500, 5);
			}
		}
		if(Po4Auta(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 20)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~The Russia Mafia", 2500, 5);
			}
		}
		if(SmithCars(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 21)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Samo clanovi Narco Cartel", 2500, 5);
				}
		}
		if(LocaCars(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 22)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Samo clanovi Loca Cartel", 2500, 5);
			}
		}
		if(TecCars(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 23)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Samo clanovi TBB", 2500, 5);
			}
		}
		if(VLACars(vehicleid))
		{
			if(PlayerInfo[playerid][pClan] != 25)
			{
				SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				GameTextForPlayer(playerid, "~r~Samo clanovi VLA", 2500, 5);
			}
		}
	}
    AntiIBV[playerid] += 1;
    AntiIBVActive[playerid] = SetTimerEx("AntiIBVActives",3000, false, "i", playerid);
    AntiIBVCounter[playerid] = SetTimerEx("AntiIBVCounters",1000, false, "i", playerid);
    return 1;
}

forward AntiIBVActives(playerid);
public AntiIBVActives(playerid)
{
	if(AntiIBV[playerid] > 0)
	{
	    AntiIBV[playerid] = 0;
		KillTimer(AntiIBVActive[playerid]);
	}
	return 1;
}

forward AntiIBVCounters(playerid);
public AntiIBVCounters(playerid)
{
	new string[512];
	if(AntiIBV[playerid] == 5 || AntiIBV[playerid] >= 5)
	{
		AntiIBV[playerid] = 0;
      	format(string, sizeof(string), "~r~V-AC: - ~w~Igrac %s moguce da baca vozila!", GetName(playerid));
        DodajWarnRed(string);
		KillTimer(AntiIBVCounter[playerid]);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerExitVehicle(playerid, vehicleid)
{
	new sendername[MAX_PLAYER_NAME];
	new stringic[64];
	new text[128];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(stringic, sizeof(stringic), " %s izlazi iz vozila.", sendername);
	e_RadiusMSG(30.0, playerid, HEX_PROX, stringic);
	if(UsingBelt[playerid] == 1)
    {
 	   SCM(playerid, -1, ""SRWBOJA"* "SIVA"Skinuli ste pojas posto ste izasli iz vozila.");
	   UsingBelt[playerid] = 0;
	   format(text,sizeof(text), "(( ~ %s otkopcava svoj pojas ~ ))", GetName(playerid));
	   e_RadiusMSG(20.0, playerid, HEX_PROX, text);
    }
    if(taxicena[playerid] > 0)
	{
		KillTimer(taxit[playerid]);
		g_NovacPlus(vozact[playerid], taxicena[playerid]);
		g_NovacMinus(playerid, taxicena[playerid]);
		vozact[playerid] = -1;
		taxicena[playerid] = 0;
	}
	if(Rentano[playerid] == vehicleid)
	{
		SetTimerEx("UNRENT", 10*60*1000, 0, "i", playerid);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
         public OnPlayerStateChange(playerid, newstate, oldstate)
         {
	    new vozilo = GetPlayerVehicleID(playerid);
        if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	    {
		new vIDs = GetPlayerVehicleID(playerid), vrsta[20];
		if(oldstate-1 && newstate)
		{
			for(new i = 0; i < 12; i++) { 
				PlayerTextDrawHide(playerid, Brzinomer[playerid][i]); 
			}
   		}
		else if(newstate == PLAYER_STATE_DRIVER)
		{
		    format(vrsta, sizeof(vrsta), "%s", ImenaVozila[GetVehicleModel(vozilo) - 400]);
		    PlayerTextDrawSetString(playerid, Brzinomer[playerid][6], vrsta);
			PlayerTextDrawSetPreviewVehCol(playerid, Brzinomer[playerid][5], 1, 1);
			PlayerTextDrawSetPreviewModel(playerid, Brzinomer[playerid][6], GetVehicleModel(vIDs));
			for(new i = 0; i < 10; i++) 
				{ 
					PlayerTextDrawShow(playerid, Brzinomer[playerid][i]); 
				}
   		}
  	    }
		if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
		{
		if(SvercDroge[playerid] == 1)
		{
		SvercDroge[playerid] = 0;
		PlayerInfo[playerid][pRadi] = 0;
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Napustili ste vozilo i prekinuli Sverc droge!");
		}
		if(SvercMaterijala[playerid] == 1)
		{
		SvercMaterijala[playerid] = 0;
		PlayerInfo[playerid][pRadi] = 0;
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Napustili ste vozilo i prekinuli Sverc Materijala!");
		}
		if(SvercUlja[playerid] == 1)
		{
		SvercUlja[playerid] = 0;
		PlayerInfo[playerid][pRadi] = 0;
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Napustili ste vozilo i prekinuli Sverc ulja!");
		}
		if(Poligon[playerid] >= 1)
 	    {
	    Poligon[playerid] = 0;
	    RemovePlayerFromVehicle(playerid);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Napustili ste vozilo i prekinuli polaganje heheheh!");
		RTC(GetPlayerVehicleID(playerid));
		}
		if(SvercOruzija[playerid] == 1)
		{
		SvercOruzija[playerid] = 0;
		PlayerInfo[playerid][pRadi] = 0;
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Napustili ste vozilo i prekinuli Sverc oruzija!");
		}
		}
		if(newstate == PLAYER_STATE_DRIVER)
		{
		pvehicleid[playerid] = GetPlayerVehicleID(playerid);
		pmodelid[playerid] = GetVehicleModel(pvehicleid[playerid]);
		SetPlayerArmedWeapon(playerid,0);

		new sendername[MAX_PLAYER_NAME], stringsfg[64],
		bool:b_found = false,
		vehicleid = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(stringsfg, sizeof(stringsfg), " %s ulazi u vozilo.", sendername);
		e_RadiusMSG(30.0, playerid, HEX_PROX, stringsfg);

		new Float:Poz[3];
		GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Usli ste u vozilo, koje je "SIVA"TEMPOMATOVANO !");
	    SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Da upalite svetla "SIVA"/svetlaon, da ugasite /svetlaoff !");
		new string[128];
		for(new i = 0; i < sizeof(VoziloInfo); i++)
		{
		if(VoziloInfo[i][vID] == vozilo)
		{
		if(VoziloInfo[i][vImaVlasnika] == 1)
		{
		 if(PlayerInfo[playerid][pAdmin] >= 5)
		 {
			format(string,sizeof(string), ""SPLAVA"Privatno Auto | "SIVA"Vlasnik: "SPLAVA"%s | "ZELENA"ID: %i", VoziloInfo[i][vVlasnik], i);
			SCM(playerid,-1,string);
		 }
		 else if(PlayerInfo[playerid][pPosedovanjeAuta] == i || PlayerInfo[playerid][pPosedovanjeAuta2] == i)
		 {
			SCM(playerid,-1,"[V:RPG] "ZELENA"Ulazite u vase vozilo!");
		 }
		 else if(VoziloInfo[i][vZakljucan] == 0)
		 {
			SCM(playerid,-1,""SPLAVA"Privatno Auto");
		 }
		 else
		 {
			RemovePlayerFromVehicle(playerid);
			SCM(playerid,-1,""SPLAVA"Auto Zakljucan");
		 }
		} else {
		if(PlayerInfo[playerid][pAdmin] == 6 || PlayerInfo[playerid][pAdmin] == 5) {
			format(string, charsmax(string), "[Varadero] "ZELENA"Ulazite u vozilo ID: %d!",i); //conver
			SCM(playerid,-1, string);
		}
		SCM(playerid,-1,""SPLAVA"Polovan auto na prodaju | /kupiauto | /izlaz");
		new cijena = CijeneAuta(GetVehicleModel(GetPlayerVehicleID(playerid)));
		format(string, charsmax(string), ""SPLAVA"Cena: "BELA"%d$ | "SPLAVA"Model: "BELA"%s",AutoSalon[cijena][1]/2, ImenaVozila[GetVehicleModel(vozilo) - 400]); //conver
		SCM(playerid,-1, string);
		UsaoAutoProdaja[playerid] = i; TogglePlayerControllable(playerid, 0);
		}
		b_found = true;
		break;
		}
		}
		if(!b_found) {
		for(new i; i < sizeof(BiciklaInfo); i++)
		{
		if(BiciklaInfo[i][biID] == vehicleid)
		{
		if(BiciklaInfo[i][biImaVlasnika] == 1)
		{
			if(PlayerInfo[playerid][pPosedovanjeBicikla] == i || BiciklaInfo[i][biZakljucan] == 0 || PlayerInfo[playerid][pAdmin] == 6 || PlayerInfo[playerid][pAdmin] == 5)
			{
				if(PlayerInfo[playerid][pAdmin] == 6) {
					format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u biciklo ID: %d!",i); //conver
					SCM(playerid,-1, string);
				}
				if(PlayerInfo[playerid][pAdmin] == 5) {
					format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u biciklo ID: %d!",i); //conver
					SCM(playerid,-1, string);
				}
				format(string,sizeof(string), ""SPLAVA"Privatno Biciklo | "SIVA"Vlasnik: "SPLAVA"%s", BiciklaInfo[i][biVlasnik]);
				SCM(playerid,-1,string);
				return 1;
			}
			else
			{
		        SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				format(string,sizeof(string), ""ZELENA"Bicikla Zakljucana | "SIVA"Vlasnik: %s", BiciklaInfo[i][biVlasnik]);
				SCM(playerid,-1,string);
				return 1;
			}
		}
		b_found = true;
		break;
		}
		}
		}
		if(!b_found) {
		for(new i = 0; i < MAX_MOTORA; i++)
		{
		if(MotorInfo[i][mID] == vehicleid)
		{
		if(MotorInfo[i][mImaVlasnika] == 1)
		{
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
				format(string,sizeof(string), ""SPLAVA"Privatni Motor | "SIVA"Vlasnik: "SPLAVA"%s | "ZELENA"ID: %i", MotorInfo[i][mVlasnik], i);
				SCM(playerid,-1,string);
			}
			else if(PlayerInfo[playerid][pPosedovanjeMotora] == i)
			{
				SCM(playerid,-1,"[V:RPG] "ZELENA"Sedate na vas motor!");
			}
			else if(MotorInfo[i][mZakljucan] == 0)
			{
				SCM(playerid,-1,""VARADERO"Privatni Motor");
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SCM(playerid,-1,""VARADERO"Motor Zakljucan");
			}
		} else {
			if(PlayerInfo[playerid][pAdmin] == 6) {
				format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u motor ID: %d!",i); //conver
				SCM(playerid,-1, string);
			}
			if(PlayerInfo[playerid][pAdmin] == 5) {
				format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u motor ID: %d!",i); //conver
				SCM(playerid,-1, string);
			}
			SCM(playerid,-1,""VARADERO"Polovan motor na prodaju | /kupivozilo | /izlaz");
			format(string, charsmax(string), ""VARADERO"Cena: "BELA"%d$ | "VARADERO"Model: "BELA"%s",MotorInfo[i][mCijena]/2, ImenaVozila[GetVehicleModel(vozilo) - 400]); //conver
			SCM(playerid,-1, string);
			UsaoMotorProdaja[playerid] = i; TogglePlayerControllable(playerid, 0);
			return 1;
		}
		b_found = true;
		break;
		}
		}
		}
		if(!b_found) {

		for(new i = 0; i < MAX_AVIONA; i++)
		{
		if(AvionInfo[i][avID] == vehicleid)
		{
		if(AvionInfo[i][avImaVlasnika] == 1)
		{
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
				format(string,sizeof(string), ""SPLAVA"Privatna Letjelica | "SIVA"Vlasnik: "SPLAVA"%s | "ZELENA"ID: %i", AvionInfo[i][avVlasnik], i);
				SCM(playerid,-1,string);
			}
			else if(PlayerInfo[playerid][pPosedovanjeAviona] == i)
			{
				SCM(playerid,-1,"[V:RPG] "ZELENA"Ulazite u vasu letjelicu!");
			}
			else if(AvionInfo[i][avZakljucan] == 0)
			{
				SCM(playerid,-1,""SRWBOJA"Privatna Letjelica");
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SCM(playerid,-1,""SRWBOJA"Letjelica Zakljucana");
			}
		} else {
			if(PlayerInfo[playerid][pAdmin] == 6) {
				format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u letjelicu ID: %d!",i); //conver
				SCM(playerid,-1, string);
			}
			if(PlayerInfo[playerid][pAdmin] == 5) {
				format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u letjelicu ID: %d!",i); //conver
				SCM(playerid,-1, string);
			}
			SCM(playerid,-1,""VARADERO"Polovana letjelica na prodaju | /kupivozilo | /izlaz");
			format(string, charsmax(string), ""VARADERO"Cena: "BELA"%d$ | "VARADERO"Model: "BELA"%s",AvionInfo[i][avCijena]/2, ImenaVozila[GetVehicleModel(vozilo) - 400]); //conver
			SCM(playerid,-1, string);
			UsaoAvionProdaja[playerid] = i; TogglePlayerControllable(playerid, 0);
			return 1;
		}
		b_found = true;
		break;
		}
		}
		}
		if(!b_found) {
		for(new i; i < MAX_PLOVILA; i++)
		{
		if(PlovilaInfo[i][plID] == vehicleid)
		{
		if(PlovilaInfo[i][plImaVlasnika] == 1)
		{
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
				format(string,sizeof(string), ""SPLAVA"Privatno Plovilo | "SIVA"Vlasnik: "SPLAVA"%s | "ZELENA"ID: %i", PlovilaInfo[i][plVlasnik], i);
				SCM(playerid,-1,string);
			}
			else if(PlayerInfo[playerid][pPosedovanjePlovila] == i)
			{
				SCM(playerid,-1,"[V:RPG] "ZELENA"Sedate u vase plovilo!");
			}
			else if(PlovilaInfo[i][plZakljucan] == 0)
			{
				SCM(playerid,-1,""SPLAVA"Privatno Plovilo");
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SCM(playerid,-1,""SPLAVA"Plovilo Zakljucano");
			}
		} else {
			if(PlayerInfo[playerid][pAdmin] == 6) {
				format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u plovilo ID: %d!",i); //conver
				SCM(playerid,-1, string);
			}
			if(PlayerInfo[playerid][pAdmin] == 5) {
				format(string, charsmax(string), "[V:RPG] "ZELENA"Ulazite u plovilo ID: %d!",i); //conver
				SCM(playerid,-1, string);
			}
			SCM(playerid,-1,""VARADERO"Polovno plovilo na prodaju | /kupivozilo | /izlaz");
			format(string, charsmax(string), ""VARADERO"Cena: "BELA"%d$ | "VARADERO"Model: "BELA"%s",PlovilaInfo[i][plCijena]/2, ImenaVozila[GetVehicleModel(vozilo) - 400]); //conver
			SCM(playerid,-1, string);
			UsaoPloviloProdaja[playerid] = i; TogglePlayerControllable(playerid, 0);
			return 1;
		}
		b_found = true;
		break;
		}
		}
		}
		if(MotoRent(vozilo))
		{
		    if (Rentano[playerid] != vozilo)
		    {
			    TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid,"~w~Mozete rentati ovaj motor ~b~/rent ~w~ili ~b~/izlaz~n~~w~Cena Renta: ~g~80$",5000,3);
			}
		}
		if(AutoRent(vozilo))
		{
		    if (Rentano[playerid] != vozilo)
		    {
                g_freeze[playerid] = SetTimerEx("Freeze",2000, false, "i", playerid);
				SPD(playerid, 1222, DIALOG_STYLE_LIST, "Rentanje vozila", "Rent 5 minuta - 20$\nRent 10 minuta - 35$\nRent 20 minuta - 50$", "Odaberi", "Odustani");
			}
		}
	    if(vehicleid >= vmotosalon[0] && vehicleid <= vmotosalon[6])
		{
		RemovePlayerFromVehicle(playerid);
		SCM(playerid,-1,"Varadero | "SRWBOJA"Ne mozete uci u izlozbeno vozilo!");
		}
		if(vehicleid == IzlozbenoAuto)
		{
		RemovePlayerFromVehicle(playerid);
		SCM(playerid,-1,"Varadero | "SRWBOJA"Ne mozete uci u izlozbeno vozilo!");
		}
		if(AutoSalonVozila(vehicleid))
		{
		RemovePlayerFromVehicle(playerid);
		SCM(playerid,-1,"Varadero | "SRWBOJA"Ne mozete uci u izlozbeno vozilo!");
		}
		if(DonatorVozila(vozilo))
		{
		if(PlayerInfo[playerid][pVip] < 1)
		{
		SCM(playerid,-1,"[Varadero] "SRWBOJA"Niste Vip!");
		RemovePlayerFromVehicle(playerid);
		return 1;
		}
		}
		if(vozilo >= vkarting[0] && vozilo <= vkarting[6])
		{
		if(Zeton[playerid] == 0)
		{
		SCM(playerid,-1,"Varadero | "SRWBOJA"Morate kupiti zeton!"); RemovePlayerFromVehicle(playerid);
		return 1;
		}
		else if(Zeton[playerid] == 1)
		{
		SCM(playerid,-1,"[Varadero] "VARADERO"Srecno u voznji, zeton traje 15 minuta!");
		zeton[playerid] = SetTimerEx("KartingZeton", 900000, false, "i", playerid);
		}
		}
		if(vozilo >= askolavozila[0] && vozilo <= askolavozila[9])
		{
			if(Poligon[playerid] == 0)
			{
				SCM(playerid, -1, ""SRWBOJA"[AS]: "CRVENA"Nemate uplaceno polaganje...");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(Poligon[playerid] == 1)
			{
				SetPlayerCheckpoint(playerid, 1544.3151,-2243.0063,13.5469, 2.5);
				SCM(playerid, -1, ""SRWBOJA"[AS]: "BELA"Krenuli ste sa polaganjem pratite crvene markere!");
			}
		}
		if(VoziloJeKamion(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		if(PlayerInfo[playerid][pKamionDozvola] <= 0)
		{
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dozvolu za kamion, kupite je u auto skoli!");
		RemovePlayerFromVehicle(playerid);
		}
		}
		if(VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		if(PlayerInfo[playerid][pAvionDozvola] <= 0)
		{
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dozvolu za letjelicu, kupite je u auto skoli!");
		RemovePlayerFromVehicle(playerid);
		}
		}
		if(VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		if(PlayerInfo[playerid][pBrodDozvola] <= 0)
		{
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dozvolu za plovilo, kupite je u auto skoli!");
		RemovePlayerFromVehicle(playerid);
		}
		}
		if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		if(PlayerInfo[playerid][pMotorDozvola] <= 0)
		{
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dozvolu za motor, kupite je u auto skoli!");
		}
		}
		if(!VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeKamion(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		if(PlayerInfo[playerid][pADozvola] <= 0)
		{
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dozvolu za voznju, kupite je u auto skoli!");
		}
		}
		if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
		}
		if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vozilo, engine, lights, alarm, doors, bonnet, boot, objective);
		if(engine == -1 && !VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
		{
		SetVehicleParamsEx(vozilo, 0, 0, alarm, doors, bonnet, boot, objective);
		}
		}
		if(BusVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_BUSVOZAC)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao bus vozac!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/linija /prekiniposao");
		}
		if(KosenjeVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_KOSACTRAVE)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao kosac trave!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/kositravu /prekiniposao");
		}
		if(MehanicarVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_MEHANICAR)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao mehanicar!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"CTRL da zakacite/otkacite vozilo | /popravi | /napuni");
		}
		if(PostaVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_POSTAR)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao postar!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/posta /prekiniposao");
		}
		if(KomunalnoVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_KOMUNALAC)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao komunalac!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/komunalno /prekiniposao");
		}
		if(GradjevinarVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_GRADJEVINAR)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao gradjevinar!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/malter /poravnaj /prekiniposao");
		}
		if(BolnicarVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_BOLNICAR)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao bolnicar!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/izleci /oprema");
		}
		if(RibarVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_RIBAR)
		{
		SCM(playerid, -1, ""SRWBOJA"ERROR: "SRWBOJA"Niste zaposleni kao ribar!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SIVA"JOB(HINT): "BELA"/ribari /prekiniposao");
		}
		if(GrobarVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_GROBAR)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao grobar!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/grobar /oprema");
		}
		if(FarmerVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_FARMER)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao farmer!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/mleko /oranje /vrsenje");
		}
		if(Cocavozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_COCA)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao dostavljac cole!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/dostavicolu /oprema /prekiniposao");
		}
		if(vozilo == VozVozilo)
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_MASINOVODJA)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao masinovodja!");
		SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]+0.5);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/voz");
		}
		if(DrvosecaVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_DRVOSECA)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao drvoseca!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/drva /prekiniposao");
		}
		if(DostavljacVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_DOSTAVLJAC)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao dostavljac!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/uzmikutiju /utovari /istovari");
		}
		if(KamiondzijaVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_KAMIONDZIJA)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao kamiondzija!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/tura /oprema");
		}
		if(PilotVozila(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_PILOT)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao pilot!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/let /oprema");
		}
		if(IsAZlatoCar(vozilo))
		{
		if(PlayerInfo[playerid][pPosao] != POSAO_RUDAR)
		{
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste zaposleni kao rudar!");
		RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/kopajzlato /predajzlato /utovarizlato /istovarizlato");
		}
		if(ElektricarVozila(vozilo))
		{
        if(PlayerInfo[playerid][pPosao] != POSAO_ELEKTRICAR)
        {
        SCM(playerid, -1, ""SRWBOJA"[V:RPG]  - : "SIVA"Niste zaposleni kao elektricar!");
        RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/kvar /oprema");
		}
		if(VodoinstalaterVozila(vozilo))
		{
        if(PlayerInfo[playerid][pPosao] != POSAO_VODOINSTALATER)
        {
        SCM(playerid, -1, ""SRWBOJA"[V:RPG]  - : "SIVA"Niste zaposleni kao vodoisnatlataer!");
        RemovePlayerFromVehicle(playerid);
		}
		else return SCM(playerid, -1, ""SPLAVA"[KOMANDE]"BELA"/pronadjikvar /oprema /zatvoriventil /popravikvar");
		}
    	}
		else
		{
		pvehicleid[playerid] = 0;
		pmodelid[playerid] = 0;
		}
		if(newstate == PLAYER_STATE_PASSENGER)
		{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerArmedWeapon(playerid, 0);

		for(new i = 0; i < MAX_AUTA; i++)
		{
		if(VoziloInfo[i][vID] == vehicleid)
		{
		if(VoziloInfo[i][vImaVlasnika] == 1)
		{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			new string[128];
			format(string,sizeof(string), ""SPLAVA"Privatno Auto | "SIVA"Vlasnik: "SPLAVA"%s | "ZELENA"ID: %i", VoziloInfo[i][vVlasnik], i);
			SCM(playerid,-1,string);
		}
		else if(PlayerInfo[playerid][pPosedovanjeAuta] == i || PlayerInfo[playerid][pPosedovanjeAuta2] == i)
		{
			SCM(playerid,-1,"[V:RPG] "ZELENA"Ulazite u vase vozilo!");
		}
		else if(VoziloInfo[i][vZakljucan] == 0)
		{
			SCM(playerid,-1,""SPLAVA"Privatno Auto");
		}
		else
		{
			new Float:Poz[3]; GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
			RemovePlayerFromVehicle(playerid);
			SCM(playerid,-1,""SPLAVA"Auto Zakljucan");
		}
		}
		break;
		}
		}
		foreach(new i:Player)
		{
		if(IsPlayerInVehicle(i, vehicleid) && TaxiAuta(GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && PlayerInfo[i][pClan] == 14)
		{
		new string[128];
		if(PlayerInfo[playerid][pNovacDzep] < 100)
		{
		SCM(playerid,-1,"[V:RPG] "ZELENA"Treba vam 100 $ da bi ste mogli uci");
		RemovePlayerFromVehicle(playerid);
		}
		else
		{
		SCM(playerid,-1,"[V:RPG] "ZELENA"Usli ste u taxi");
		SCM(playerid,-1,"[V:RPG] "ZELENA"Taximetar broji svakih 5 sekundi!");
		format(string, charsmax(string), "[V:RPG] "ZELENA"Putnik %s je usao u Taxi", GetName(playerid)); //conver
		SCM(i,-1, string);
		taxit[playerid] = SetTimerEx("Taxi", 5000, 1, "i", playerid);
		vozact[playerid] = i;
		}
		}
		}
		}
		//////////////////////////////////////////////////////
		return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
    new CID = GetPlayerVehicleID(playerid);
   	if(GetPVarInt(playerid, "WarpHack") > 0)
    {
        new warpstring[128];
        format(warpstring,sizeof(warpstring), "Igrac: %s opomenut zbog checkpoint hacka. Dajem upozorenje, na 5 banujem!", GetName(playerid));
        AdminGameMaster(-1, warpstring);
        DisablePlayerCheckpoint(playerid);
        SetPVarInt(playerid, "WarpHackDetected", GetPVarInt(playerid, "WarpHackDetected")+1);
        if(GetPVarInt(playerid,"WarpHackDetected") == 5)
        {
        SCM(playerid,-1,"[V:RPG] "ZELENA"Reklamiraj server !!");
        }
    }
    /////////////////////////////POSAO GPS////////////////////////////////////////
    if(PosaoGPS[playerid] == 1) return DisablePlayerCheckpoint(playerid), PosaoGPS[playerid] = 0, GameTextForPlayer(playerid, "~y~stigli ste na odrediste", 5000, 3);
	/////////////////////////////////ELEKTRICAR////////////////////////////////////////////
	if(ElektricarKvar[playerid] == 1)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return GameTextForPlayer(playerid, "~w~morate biti van vozila...", 5000, 3);
	    GameTextForPlayer(playerid, "~y~popravka kvara...", 13000, 3); DisablePlayerCheckpoint(playerid);
        utovar[playerid] = SetTimerEx("ElektricarVreme", 12000, false, "d", playerid);
        TogglePlayerControllable(playerid, 0); OnePlayAnim(playerid, "BOMBER", "BOM_Plant", 11.5, 30, 0, 0, 0, 0);
	}
	////////////////////////////////PILOT LET LV/////////////////////////////////////////
	if(LetLV[playerid] == 1 && PilotVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1847.4221,-2414.0798,13.5547))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~sacekajte...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, 1477.5233,1395.1841,10.8203, 5.0);
			LetLV[playerid] = 2;
			SetTimerEx("WarpHack", 4000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(LetLV[playerid] == 2 && PilotVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1477.5233,1395.1841,10.8203))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~sacekajte...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, 1879.6438,-2493.6636,13.5547, 5.0);
			LetLV[playerid] = 3;
			SetTimerEx("WarpHack", 4000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(LetLV[playerid] == 3 && PilotVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1879.6438,-2493.6636,13.5547))
		{
			new bonus = random(400), string[120];
			g_NovacPlus(playerid, 15000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili prevoz putnika!\n\n"BELA"Plata: "SPLAVA"15000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj prevoza putnika",string,"Ok","");
			LetLV[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(104, 1000);
		}
	}
	///////////////////////////////PILOT LET SF/////////////////////////////////////////
	if(LetSF[playerid] == 1 && PilotVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1847.4221,-2414.0798,13.5547))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~sacekajte...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, -1506.8629,-14.1312,14.1409, 5.0);
			LetSF[playerid] = 2;
			SetTimerEx("WarpHack", 4000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(LetSF[playerid] == 2 && PilotVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -1506.8629,-14.1312,14.1409))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~sacekajte...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, 1879.6438,-2493.6636,13.5547, 5.0);
			LetSF[playerid] = 3;
			SetTimerEx("WarpHack", 4000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(LetSF[playerid] == 3 && PilotVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1879.6438,-2493.6636,13.5547))
		{
			new bonus = random(400), string[120];
			g_NovacPlus(playerid, 15000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili prevoz putnika!\n\n"BELA"Plata: "SPLAVA"15000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj prevoza putnika",string,"Ok","");
			LetSF[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(104, 1000);
		}
	}
    if(KopacZlata[playerid] == 1)
   	{
	   	if(!IsPlayerInAnyVehicle(playerid))
	   	{
			new cashes=random(5)+60;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0x00FF00C8, "* Kada budete zeleli da prekinete kopanje izadjte iz rudnika(/predajzlato).");
			ApplyAnimation(playerid,"MISC", "plunger_01", 2.0, 0, 0, 0, 0, 0);
            SetTimerEx("Freeze",3000, false, "i", playerid);
			DisablePlayerCheckpoint(playerid);
		    PlayerInfo[playerid][pKopac] += cashes;
		    new randomize;
		    randomize = random(sizeof(KopacCheckPoints));
		    SetPlayerCheckpoint(playerid, KopacCheckPoints[randomize][0], KopacCheckPoints[randomize][1], KopacCheckPoints[randomize][2], 5.0);
		    KopacZlata[playerid] = 1;
		   	GameTextForPlayer(playerid,"~w~Kopate~n~sacekajte par sekundi",3000,4);
	   	}
		return 1;
   	}
//==============================================//
	//////////////////////////////KAMIONDZIJA TURA LV//////////////////////////////////
    if(TuraLV[playerid] == 1 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 1800.1248,-2048.2534,13.5678))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~utovar...", 5000, 3);
				utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
				SetPlayerCheckpoint(playerid, 1484.8735,721.7006,11.4031, 4.0);
				TuraLV[playerid] = 2;
				SetTimerEx("WarpHack", 4000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
		}
	}
	if(TuraLV[playerid] == 2 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 1484.8735,721.7006,11.4031))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~istovar...", 5000, 3);
				utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
				SetPlayerCheckpoint(playerid, 2346.9954,2793.3193,10.8203, 4.0);
				TuraLV[playerid] = 3;
				SetTimerEx("WarpHack", 10000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
		}
	}
	if(TuraLV[playerid] == 3 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 2346.9954,2793.3193,10.8203))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~istovar...", 5000, 3);
				utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
				SetPlayerCheckpoint(playerid, 1735.2964,-2072.6904,13.6340, 4.0);
				TuraLV[playerid] = 4;
				SetTimerEx("WarpHack", 10000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
		}
	}
	if(TuraLV[playerid] == 4 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 1735.2964,-2072.6904,13.6340))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				new bonus = random(800), string[120];
	 			g_NovacPlus(playerid, 25000+bonus);
				format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili prevoz robe!\n\n"BELA"Plata: "SPLAVA"25000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
				SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj prevoza robe",string,"Ok","");
				TuraLV[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(103, 1000);
			}
		}
	}
	///////////////////////////////KAMIONDZIJA TURA SF////////////////////////////////
    if(TuraSF[playerid] == 1 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 1631.9983,680.3541,11.4254))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~utovar...", 5000, 3);
				utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
				SetPlayerCheckpoint(playerid, -231.8090,-194.0858,2.0356, 4.0);
				TuraSF[playerid] = 2;
				SetTimerEx("WarpHack", 4000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
		}
	}
 	if(TuraSF[playerid] == 2 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, -231.8090,-194.0858,2.0356))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~istovar...", 5000, 3);
				utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
				SetPlayerCheckpoint(playerid, -1099.9640,-677.4127,32.3516, 4.0);
				TuraSF[playerid] = 3;
				SetTimerEx("WarpHack", 4000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
		}
	}
 	if(TuraSF[playerid] == 3 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, -1099.9640,-677.4127,32.3516))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~istovar...", 5000, 3);
				utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
				SetPlayerCheckpoint(playerid, -1043.5953,-655.1886,32.0078, 4.0);
				TuraSF[playerid] = 4;
				SetTimerEx("WarpHack", 4000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
		}
	}
 	if(TuraSF[playerid] == 4 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, -1043.5953,-655.1886,32.0078))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~b~istovar...", 5000, 3);
				utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
				SetPlayerCheckpoint(playerid, 1735.2964,-2072.6904,13.6340, 4.0);
				TuraSF[playerid] = 5;
				SetTimerEx("WarpHack", 4000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
		}
	}
 	if(TuraSF[playerid] == 5 && KamiondzijaVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 1735.2964,-2072.6904,13.6340))
		{
		    if(IsTrailerAttachedToVehicle(CID))
	        {
				new bonus = random(800), string[120];
	 			g_NovacPlus(playerid, 25000+bonus);
				format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili prevoz robe!\n\n"BELA"Plata: "SPLAVA"25000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
				SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj prevoza robe",string,"Ok","");
				TuraSF[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(103, 1500);
			}
		}
	}
	//=====================DRVOSECA===================//
	if(DrvaPrevoz[playerid] == 1 && CID >= drvovozila[0] && CID <= drvovozila[7] && GetPlayerState(playerid) == 2)
	{
		TogglePlayerControllable(playerid, 0);
		utovar[playerid] = SetTimerEx("utovar1", 5000, false, "d", playerid);
		GameTextForPlayer(playerid, "~g~utovar drva", 6000, 3);
		SetPlayerCheckpoint(playerid, 112.2030,1092.0083,14.2342, 3.0);
		SetTimerEx("WarpHack", 10000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
		DrvaPrevoz[playerid] = 2;
		if(IsPlayerInVehicle(playerid, drvovozila[0]))
		{
			drvence[1]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[1],drvovozila[0],0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
 		else if(IsPlayerInVehicle(playerid, drvovozila[1]))
		{
			drvence[2]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[2],drvovozila[1],0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
		else if(IsPlayerInVehicle(playerid, drvovozila[2]))
  		{
			drvence[3]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[3],drvovozila[2], 0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
		else if(IsPlayerInVehicle(playerid, drvovozila[3]))
  		{
			drvence[4]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[4],drvovozila[3], 0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
		else if(IsPlayerInVehicle(playerid, drvovozila[4]))
  		{
			drvence[5]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[5],drvovozila[4],0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
		else if(IsPlayerInVehicle(playerid, drvovozila[5]))
  		{
			drvence[6]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[6],drvovozila[5], 0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
		else if(IsPlayerInVehicle(playerid, drvovozila[6]))
  		{
			drvence[7]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[7],drvovozila[6], 0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
		else if(IsPlayerInVehicle(playerid, drvovozila[7]))
  		{
			drvence[8]=CreateDynamicObject(18609, 0, 0, 0, 0, 0, 0.00);
			AttachDynamicObjectToVehicle(drvence[8],drvovozila[7], 0.1, -3.75, 0.75, 0.0, 0.0, 3.0);
		}
	}
	if(DrvaPrevoz[playerid] == 2 && CID >= drvovozila[0] && CID <= drvovozila[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5.0,112.2030,1092.0083,14.2342))
		{
			new bonus = random(650), string[120];
 			g_NovacPlus(playerid, 4500+bonus);
			format(string,sizeof(string),""SRWBOJA"Uspesno ste prevezli drva!\n\n"BELA"Plata: "SRWBOJA"4500$\n"BELA"Bonus: "SRWBOJA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Drva doterane",string,"Ok","");
			DrvaPrevoz[playerid] = 0; DisablePlayerCheckpoint(playerid);
			if(IsPlayerInVehicle(playerid, drvovozila[0]))
        	{
		 	DestroyDynamicObject(drvence[1]);
		 	}
			 else if(IsPlayerInVehicle(playerid, drvovozila[1]))
	        {
		 	DestroyDynamicObject(drvence[2]);
			 }
			 else if(IsPlayerInVehicle(playerid, drvovozila[2]))
	        {
         	DestroyDynamicObject(drvence[3]);
			 }
			 else if(IsPlayerInVehicle(playerid, drvovozila[3]))
	        {
		 	DestroyDynamicObject(drvence[4]);
			 }
			 else if(IsPlayerInVehicle(playerid, drvovozila[4]))
	        {
		 	DestroyDynamicObject(drvence[5]);
			 }
			 else if(IsPlayerInVehicle(playerid, drvovozila[5]))
	        {
		 	DestroyDynamicObject(drvence[6]);
			 }
			  else if(IsPlayerInVehicle(playerid, drvovozila[6]))
	        {
	 		DestroyDynamicObject(drvence[7]);
			 }
			  else if(IsPlayerInVehicle(playerid, drvovozila[7]))
	        {
	 		DestroyDynamicObject(drvence[8]);
			 }
		}
	}
	//////////////////////////////MASINOVODJA LINIJA/////////////////////////////////
	if(VozLinija[playerid] == 1 && CID == VozVozilo && GetSpeed(playerid) < 10 && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 810.2866,-1362.9888,-1.6551))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~stanica...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, -1943.9296,141.2939,27.0006, 5.0);
			VozLinija[playerid] = 2;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(VozLinija[playerid] == 2 && CID == VozVozilo && GetSpeed(playerid) < 10 && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, -1943.8137,146.4598,25.7109))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~stanica...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, 1440.2815,2632.3748,10.8203, 5.0);
			VozLinija[playerid] = 3;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(VozLinija[playerid] == 3 && CID == VozVozilo && GetSpeed(playerid) < 10 && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 1440.2815,2632.3748,10.8203))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~stanica...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, 2864.9333,1287.2427,10.8203, 5.0);
			VozLinija[playerid] = 4;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(VozLinija[playerid] == 4 && CID == VozVozilo && GetSpeed(playerid) < 10 && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 2864.9333,1287.2427,10.8203))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~b~stanica...", 5000, 3);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			SetPlayerCheckpoint(playerid, 1740.3632,-1954.2498,13.5469, 5.0);
			VozLinija[playerid] = 5;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(VozLinija[playerid] == 5 && CID == VozVozilo && GetSpeed(playerid) < 10 && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 1740.3632,-1954.2498,13.5469))
		{
			new bonus = random(800), string[120];
 			g_NovacPlus(playerid, 18000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili prevoz putnika!\n\n"BELA"Plata: "SPLAVA"18000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj prevoza",string,"Ok","");
			VozLinija[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(101, 600);
		}
	}
	//////////////////////////////RibAR/////////////////////////////////
    if(Ribari[playerid] >= 1 && CID >= ribvozilo[0] && CID <= ribvozilo[5] && GetPlayerState(playerid) == 2)
	{
	    new posta = random(sizeof(RibRand));
		Ribari[playerid] ++;
		SetPlayerCheckpoint(playerid, RibRand[posta][0], RibRand[posta][1], RibRand[posta][2], 3.0);
		if(Ribari[playerid] == 8)
		{
			SetPlayerCheckpoint(playerid, 2940.6316, -1960.8490, 1.5159, 3.0);
			Ribari[playerid] = 15; SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Zavrsili ste ribarenje idite po zaradu!");
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Ribari[playerid] >= 15 && CID >= ribvozilo[0] && CID <= ribvozilo[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 2940.6316, -1960.8490, 1.5159))
		{
		    new bonus = random(200), string[120];
 			g_NovacPlus(playerid, 8000+bonus);
			format(string,sizeof(string),""VARADERO"Uspesno ste zavrsili ribarenje!\n\n"BELA"Plata: "VARADERO"8000$\n"BELA"Bonus: "VARADERO"%d$",bonus);
			SCM(playerid, -1, string);
			//SPD(playerid,DIALOG_ISPLATA,DIALOG_STYLE_MSGBOX,"Kraj raznosenja",string,"Ok","");
			Ribari[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(301, 150);
		}
	}
	/////////////////////////////////FARMER MLEKO///////////////////////////////////
	if(Mleko[playerid] == 1 && CID >= vfarmer[13] && CID <= vfarmer[18] && GetPlayerState(playerid) == 2)
	{
		TogglePlayerControllable(playerid, 0);
		utovar[playerid] = SetTimerEx("utovar1", 5000, false, "d", playerid);
		GameTextForPlayer(playerid, "~g~istovar mleka", 6000, 3);
		SetPlayerCheckpoint(playerid, -58.3007,56.1965,3.1103, 3.0);
		Mleko[playerid] = 2;
		SetTimerEx("WarpHack", 2000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	if(Mleko[playerid] == 2 && CID >= vfarmer[13] && CID <= vfarmer[18] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -58.3007,56.1965,3.1103))
		{
			new bonus = random(200), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili odvoz mleka!\n\n"BELA"Plata: "SPLAVA"5000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj odvoza",string,"Ok","");
			Mleko[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(100, 200);
		}
	}
	////////////////////////////////////FARMER VRSENJE////////////////////////////////////////
	if(Vrsenje[playerid] == 1 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 22.2805,58.3967,3.1172))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa vrsenjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 67.9025,20.8075,0.6094, 3.0);
			Vrsenje[playerid] = 2;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 2 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 67.9025,20.8075,0.6094))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa vrsenjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 66.2536,-15.1468,1.2872, 3.0);
			Vrsenje[playerid] = 3;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 3 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 66.2536,-15.1468,1.2872))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa vrsenjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 19.0863,31.6941,3.1172, 3.0);
			Vrsenje[playerid] = 4;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 4 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 19.0863,31.6941,3.1172))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa vrsenjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -12.7937,-18.7841,3.1172, 3.0);
			Vrsenje[playerid] = 5;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 5 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -12.7937,-18.7841,3.1172))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa vrsenjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 44.8589,-96.6442,0.6169, 3.0);
			Vrsenje[playerid] = 6;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 6 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 44.8589,-96.6442,0.6169))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa vrsenjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -28.3537,-99.6816,3.1172, 3.0);
			Vrsenje[playerid] = 7;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 7 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -28.3537,-99.6816,3.1172))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa vrsenjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 17.1583,-115.5828,0.6094, 3.0);
			Vrsenje[playerid] = 8;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 8 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 17.1583,-115.5828,0.6094))
		{
			GameTextForPlayer(playerid, "~y~otidjite po zaradu", 3000, 3);
			SetPlayerCheckpoint(playerid, -15.6465,26.7564,3.1172, 3.0);
			Vrsenje[playerid] = 9;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Vrsenje[playerid] == 9 && CID >= vfarmer[6] && CID <= vfarmer[12] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -15.6465,26.7564,3.1172))
		{
		    new bonus = random(100), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili oranje!\n\n"BELA"Plata: "SPLAVA"5000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj oranja",string,"Ok","");
			Oranje[playerid] = 0; Vrsenje[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(100, 200);
		}
	}
	///////////////////////////////////FARMER ORANJE/////////////////////////////////////////
	if(Oranje[playerid] == 1 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -109.2197,140.1985,3.1139))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -182.4317,-69.6712,3.1172, 3.0);
			Oranje[playerid] = 2;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 2 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -182.4317,-69.6712,3.1172))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -128.4726,154.7159,3.9592, 3.0);
			Oranje[playerid] = 3;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 3 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -128.4726,154.7159,3.9592))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -207.7803,-81.4439,3.1172, 3.0);
			Oranje[playerid] = 4;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 4 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -207.7803,-81.4439,3.1172))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -158.0166,164.2698,6.2912, 3.0);
			Oranje[playerid] = 5;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 5 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -158.0166,164.2698,6.2912))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -242.2262,-71.1670,3.1172, 3.0);
			Oranje[playerid] = 6;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 6 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -242.2262,-71.1670,3.1172))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -188.7455,167.6290,7.8016, 3.0);
			Oranje[playerid] = 7;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 7 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -188.7455,167.6290,7.8016))
		{
			GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, -251.4501,28.0379,2.2200, 3.0);
			Oranje[playerid] = 8;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 8 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -251.4501,28.0379,2.2200))
		{
			GameTextForPlayer(playerid, "~y~otidjite po zaradu", 3000, 3);
			SetPlayerCheckpoint(playerid, -115.9624,-2.3386,3.1094, 3.0);
			Oranje[playerid] = 9;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Oranje[playerid] == 9 && CID >= vfarmer[0] && CID <= vfarmer[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -115.9624,-2.3386,3.1094))
		{
		    new bonus = random(100), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili oranje!\n\n"BELA"Plata: "SPLAVA"5000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj oranja",string,"Ok","");
			Oranje[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(100, 200);
		}
	}
	
	//OVDE KAD BUDE TREBALO VOZILA
	///////////////////////////////////FARMER ORANJE/////////////////////////////////////////
	if(Dostavicolu[playerid] == 1 && CID >= vcola[0] && CID <= vcola[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1518.8789,-1661.3149,13.5419))
		{
			//GameTextForPlayer(playerid, "~y~Nastavite do drugog CP", 3000, 3);
			SetPlayerCheckpoint(playerid, 1352.1136,-1756.3646,13.5078, 3.0);
			Dostavicolu[playerid] = 2;
			SetTimerEx("WarpHack", 8000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Dostavicolu[playerid] == 2 && CID >= vcola[0] && CID <= vcola[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1352.1136,-1756.3646,13.5078))
		{
			//GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 1175.1626,-1859.0403,13.5545, 3.0);
			Dostavicolu[playerid] = 3;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Dostavicolu[playerid] == 3 && CID >= vcola[0] && CID <= vcola[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1175.1626,-1859.0403,13.5545))
		{
			//GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 1080.4282,-1700.0454,13.5469, 3.0);
			Dostavicolu[playerid] = 4;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Dostavicolu[playerid] == 4 && CID >= vcola[0] && CID <= vcola[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1080.4282,-1700.0454,13.5469))
		{
			//GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 1045.7419,-1550.0597,13.5451, 3.0);
			Dostavicolu[playerid] = 5;
			SetTimerEx("WarpHack", 8000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Dostavicolu[playerid] == 5 && CID >= vcola[0] && CID <= vcola[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1045.7419,-1550.0597,13.5451))
		{
			//GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 949.7726,-1388.6122,13.3920, 3.0);
			Dostavicolu[playerid] = 6;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Dostavicolu[playerid] == 6 && CID >= vcola[0] && CID <= vcola[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 949.7726,-1388.6122,13.3920))
		{
			//GameTextForPlayer(playerid, "~y~Nastavite sa oranjem", 3000, 3);
			SetPlayerCheckpoint(playerid, 820.4926,-1392.2510,13.3708, 3.0);
			Dostavicolu[playerid] = 7;
			SetTimerEx("WarpHack", 8000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(Dostavicolu[playerid] == 7 && CID >= vcola[0] && CID <= vcola[7] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 820.4926,-1392.2510,13.3708))
		{
		    new bonus = random(100), string[120];
 			g_NovacPlus(playerid, 30000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili Dostavljanje Coca cole!\n\n"BELA"Plata: "SPLAVA"30000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj oranja",string,"Ok","");
			Dostavicolu[playerid] = 0; DisablePlayerCheckpoint(playerid); //FirmaNovac(100, 200);
		}
	}
	////////////////////////////////////GROBAR/////////////////////////////////////////////
	if(GrobarLinija[playerid] == 1 && GrobarVozila(CID) && GetPlayerState(playerid) == 2)
	{
		TogglePlayerControllable(playerid, 0);
		utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
		GameTextForPlayer(playerid, "~b~utovar tela...", 5000, 3);
		SetPlayerCheckpoint(playerid, 907.6425,-1066.9481,24.5446, 5.0);
		GrobarLinija[playerid] = 2;
		SetTimerEx("WarpHack", 10000, false, "i", playerid);
		SetPVarInt(playerid, "WarpHack", 3);
	}
	if(GrobarLinija[playerid] == 2 && GrobarVozila(CID) && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5.0, 907.6425,-1066.9481,24.5446))
		{
			new bonus = random(100), string[120];
 			g_NovacPlus(playerid, 9000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili dovoz tela!\n\n"BELA"Plata: "SPLAVA"9000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj dovoza",string,"Ok","");
			GrobarLinija[playerid] = 0; DisablePlayerCheckpoint(playerid);
		}
	}
	/////////////////////////////////GRADJEVINAR PORAVNAVA BAGEROM////////////////////////
	if(PoravnaBagerom[playerid] == 1 && CID >= vgradjevinar[4] && CID <= vgradjevinar[6] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1887.6544,-1572.3845,14.2844))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~poravnavanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1921.0879,-1595.9056,14.8134, 3.0);
			PoravnaBagerom[playerid] = 2;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(PoravnaBagerom[playerid] == 2 && CID >= vgradjevinar[4] && CID <= vgradjevinar[6] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1921.0879,-1595.9056,14.8134))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~poravnavanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1920.5529,-1550.2625,15.3809, 3.0);
			PoravnaBagerom[playerid] = 3;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(PoravnaBagerom[playerid] == 3 && CID >= vgradjevinar[4] && CID <= vgradjevinar[6] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1920.5529,-1550.2625,15.3809))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~poravnavanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1887.6576,-1570.0760,14.4332, 3.0);
			PoravnaBagerom[playerid] = 4;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(PoravnaBagerom[playerid] == 4 && CID >= vgradjevinar[4] && CID <= vgradjevinar[6] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1887.6576,-1570.0760,14.4332))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~poravnavanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1920.6521,-1586.8871,14.8789, 3.0);
			PoravnaBagerom[playerid] = 5;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(PoravnaBagerom[playerid] == 5 && CID >= vgradjevinar[4] && CID <= vgradjevinar[6] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1920.6521,-1586.8871,14.8789))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~poravnavanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1925.6726,-1556.2346,14.4405, 3.0);
			PoravnaBagerom[playerid] = 6;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(PoravnaBagerom[playerid] == 6 && CID >= vgradjevinar[4] && CID <= vgradjevinar[6] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1925.6726,-1556.2346,14.4405))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~poravnavanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1900.0193,-1570.3002,13.6138, 3.0);
			PoravnaBagerom[playerid] = 7;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(PoravnaBagerom[playerid] == 7 && CID >= vgradjevinar[4] && CID <= vgradjevinar[6] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1900.0193,-1570.3002,13.6138))
		{
			new bonus = random(60), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili poravnavanje!\n\n"BELA"Plata: "SPLAVA"5000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj poravnavanja",string,"Ok","");
			PoravnaBagerom[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(99, 100);
		}
	}
	//////////////////////////////////GRADJEVINAR MALTER DOVOZI//////////////////////////
	if(MalterDovozi[playerid] == 1 && CID >= vgradjevinar[0] && CID <= vgradjevinar[3] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5.0, 440.9109,-1730.9922,9.2477))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar maltera...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1857.5962,-1577.4429,13.6171, 5.0);
			MalterDovozi[playerid] = 2;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(MalterDovozi[playerid] == 2 && CID >= vgradjevinar[0] && CID <= vgradjevinar[3] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1857.5962,-1577.4429,13.6171))
		{
			new bonus = random(100), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""SPLAVA"Uspesno ste zavrsili dovoz maltera!\n\n"BELA"Plata: "SPLAVA"5000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj dovoza",string,"Ok","");
			MalterDovozi[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(99, 250);
		}
	}
	//////////////////////////////////CISTI ULICE LINIJA 2/////////////////////////////
	if(CistiUlice[playerid] == 20 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1415.5536,-1589.9919,13.3638))
		{
			SetPlayerCheckpoint(playerid, 1329.2128,-1398.6622,13.3537, 4.0);
			CistiUlice[playerid] = 21;
			SetTimerEx("WarpHack", 3000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 21 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1329.2128,-1398.6622,13.3537))
		{
			SetPlayerCheckpoint(playerid, 1205.9387,-1333.8011,13.3984, 4.0);
			CistiUlice[playerid] = 22;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 22 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1205.9387,-1333.8011,13.3984))
		{
			SetPlayerCheckpoint(playerid, 1061.1249,-1165.5150,23.7258, 4.0);
			CistiUlice[playerid] = 23;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 23 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1061.1249,-1165.5150,23.7258))
		{
			SetPlayerCheckpoint(playerid, 1257.0934,-1149.0345,23.6563, 4.0);
			CistiUlice[playerid] = 24;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 24 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1257.0934,-1149.0345,23.6563))
		{
			SetPlayerCheckpoint(playerid, 1289.0148,-932.8072,41.0228, 4.0);
			CistiUlice[playerid] = 25;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 25 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1289.0148,-932.8072,41.0228))
		{
			SetPlayerCheckpoint(playerid, 1446.2896,-1037.4786,23.6563, 4.0);
			CistiUlice[playerid] = 26;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 26 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1446.2896,-1037.4786,23.6563))
		{
			SetPlayerCheckpoint(playerid, 1452.0883,-1226.9258,13.8124, 4.0);
			CistiUlice[playerid] = 27;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 27 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1452.0883,-1226.9258,13.8124))
		{
			SetPlayerCheckpoint(playerid, 1560.1630,-1558.6284,13.5469, 4.0);
			CistiUlice[playerid] = 28;
			SCM(playerid,-1,"[V:RPG] | "VARADERO"Zavrsili ste ciscenje ulica odvezite vozilo u komunalno i preuzmite platu!");
		}
	}
	if(CistiUlice[playerid] == 28 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1560.1630,-1558.6284,13.5469))
		{
			new bonus = random(60), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""VARADERO"Uspesno ste zavrsili ciscenje ulica!\n\n"BELA"Plata: "VARADERO"5000$\n"BELA"Bonus: "VARADERO"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj ciscenja",string,"Ok","");
			CistiUlice[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(98, 180);
		}
	}
	/////////////////////////////////CISTI ULICE LINIJA 1/////////////////////////////
    if(CistiUlice[playerid] == 1 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1427.2660,-1612.3313,13.3828))
		{
			SetPlayerCheckpoint(playerid, 1387.2990,-1760.2405,13.3828, 4.0);
			CistiUlice[playerid] = 2;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
    if(CistiUlice[playerid] == 2 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1387.2990,-1760.2405,13.3828))
		{
			SetPlayerCheckpoint(playerid, 1491.9597,-1875.3425,13.3828, 4.0);
			CistiUlice[playerid] = 3;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
  	if(CistiUlice[playerid] == 3 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1491.9597,-1875.3425,13.3828))
		{
			SetPlayerCheckpoint(playerid, 1713.2686,-1815.2902,13.3591, 4.0);
			CistiUlice[playerid] = 4;
			SetTimerEx("WarpHack", 4000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
 	if(CistiUlice[playerid] == 4 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1713.2686,-1815.2902,13.3591))
		{
			SetPlayerCheckpoint(playerid, 1921.6866,-1934.7831,13.3828, 4.0);
			CistiUlice[playerid] = 5;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
 	if(CistiUlice[playerid] == 5 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1921.6866,-1934.7831,13.3828))
		{
			SetPlayerCheckpoint(playerid, 1940.9844,-1749.8732,13.3828, 4.0);
			CistiUlice[playerid] = 6;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 6 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1940.9844,-1749.8732,13.3828))
		{
			SetPlayerCheckpoint(playerid, 1716.4843,-1729.7771,13.3828, 4.0);
			CistiUlice[playerid] = 7;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 7 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1716.4843,-1729.7771,13.3828))
		{
			SetPlayerCheckpoint(playerid, 1531.6858,-1648.1722,13.3828, 4.0);
			CistiUlice[playerid] = 8;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(CistiUlice[playerid] == 8 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1531.6858,-1648.1722,13.3828))
		{
			SetPlayerCheckpoint(playerid, 1560.1630,-1558.6284,13.5469, 4.0);
			CistiUlice[playerid] = 9;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			SCM(playerid,-1,"[V:RPG] | "VARADERO"Zavrsili ste ciscenje ulica odvezite vozilo u komunalno i preuzmite platu!");
		}
	}
	if(CistiUlice[playerid] == 9 && CID >= vkomunalno[6] && CID <= vkomunalno[11] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1560.1630,-1558.6284,13.5469))
		{
			new bonus = random(60), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""VARADERO"Uspesno ste zavrsili ciscenje ulica!\n\n"BELA"Plata: "VARADERO"5000$\n"BELA"Bonus: "VARADERO"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj ciscenja",string,"Ok","");
			CistiUlice[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(98, 150);
		}
	}
	///////////////////////////////KOMUNALNO/////////////////////////////////////////
    if(SmeceSakuplja[playerid] == 1 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1147.9977,-1382.6482,13.8178))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar smeca...", 5000, 3);
			SetPlayerCheckpoint(playerid, 983.4133,-1386.8303,13.6662, 4.0);
			SmeceSakuplja[playerid] = 2;
		}
	}
	if(SmeceSakuplja[playerid] == 2 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 983.4133,-1386.8303,13.6662))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar smeca...", 5000, 3);
			SetPlayerCheckpoint(playerid, 856.6075,-1383.1715,13.7518, 4.0);
			SmeceSakuplja[playerid] = 3;
		}
	}
	if(SmeceSakuplja[playerid] == 3 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 856.6075,-1383.1715,13.7518))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar smeca...", 5000, 3);
			SetPlayerCheckpoint(playerid, 418.3052,-1786.2125,5.7422, 4.0);
			SmeceSakuplja[playerid] = 4;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SmeceSakuplja[playerid] == 4 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 418.3052,-1786.2125,5.7422))
		{
      		TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar smeca...", 5000, 3);
			SetPlayerCheckpoint(playerid, 2425.2073,-1649.0073,13.5469, 4.0);
			SmeceSakuplja[playerid] = 5;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SmeceSakuplja[playerid] == 5 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 2425.2073,-1649.0073,13.5469))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar smeca...", 5000, 3);
			SetPlayerCheckpoint(playerid, 2056.1670,-1106.4991,24.3692, 4.0);
			SmeceSakuplja[playerid] = 6;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SmeceSakuplja[playerid] == 6 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 2056.1670,-1106.4991,24.3692))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar smeca...", 5000, 3);
			SetPlayerCheckpoint(playerid, 2635.0098,-1057.7490,69.6072, 4.0);
			SmeceSakuplja[playerid] = 7;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SmeceSakuplja[playerid] == 7 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 2635.0098,-1057.7490,69.6072))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~utovar smeca...", 5000, 3);
			SetPlayerCheckpoint(playerid, 2180.2048,-1984.1697,13.5510, 4.0);
			SmeceSakuplja[playerid] = 8;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SmeceSakuplja[playerid] == 8 && CID >= vkomunalno[0] && CID <= vkomunalno[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 2180.2048,-1984.1697,13.5510))
		{
		    new bonus = random(100), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""VARADERO"Uspesno ste zavrsili sakupljanje smeca!\n\n"BELA"Plata: "VARADERO"5000$\n"BELA"Bonus: "VARADERO"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj sakupljanja",string,"Ok","");
			SmeceSakuplja[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(98, 250);
		}
	}
	/////////////////////////////POSTA PREUZMI//////////////////////////////////////
    if(PostaPreuzmi[playerid] == 1 && CID >= postavozilo[6] && CID <= postavozilo[9] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 800.8698,-1596.3676,13.5469))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~preuzimanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1451.1334,-1026.6592,23.8281, 4.0);
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			PostaPreuzmi[playerid] = 2;
		}
	}
	if(PostaPreuzmi[playerid] == 2 && CID >= postavozilo[6] && CID <= postavozilo[9] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1451.1334,-1026.6592,23.8281))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~preuzimanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1454.8235,-1737.9871,13.5469, 4.0);
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			PostaPreuzmi[playerid] = 3;
		}
	}
	if(PostaPreuzmi[playerid] == 3 && CID >= postavozilo[6] && CID <= postavozilo[9] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1454.8235,-1737.9871,13.5469))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~preuzimanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1777.8666,-1823.2092,13.3828, 4.0);
			PostaPreuzmi[playerid] = 4;
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(PostaPreuzmi[playerid] == 4 && CID >= postavozilo[6] && CID <= postavozilo[9] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1777.8666,-1823.2092,13.3828))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~preuzimanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1273.0488,-1535.4268,13.5619, 4.0);
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			PostaPreuzmi[playerid] = 5;
		}
	}
	if(PostaPreuzmi[playerid] == 5 && CID >= postavozilo[6] && CID <= postavozilo[9] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 1273.0488,-1535.4268,13.5619))
		{
		    TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("preposta", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~b~preuzimanje...", 5000, 3);
			SetPlayerCheckpoint(playerid, 993.0349,-1258.3704,15.0313, 4.0);
			SetTimerEx("WarpHack", 2000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			PostaPreuzmi[playerid] = 6;
		}
	}
	if(PostaPreuzmi[playerid] == 6 && CID >= postavozilo[6] && CID <= postavozilo[9] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, 993.0349,-1258.3704,15.0313))
		{
		    new bonus = random(60), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""VARADERO"Uspesno ste zavrsili preuzimanje poste!\n\n"BELA"Plata: "VARADERO"5000$\n"BELA"Bonus: "VARADERO"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj raznosenja",string,"Ok","");
			PostaPreuzmi[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(97, 150);
		}
	}
	//////////////////////////////POSTA RAZNOSENJE/////////////////////////////////
    if(PostaRaznesi[playerid] >= 1 && CID >= postavozilo[0] && CID <= postavozilo[5] && GetPlayerState(playerid) == 2)
	{
	    new posta = random(sizeof(PostaRand));
		PostaRaznesi[playerid] ++;
		SetPlayerCheckpoint(playerid, PostaRand[posta][0], PostaRand[posta][1], PostaRand[posta][2], 3.0);
		if(PostaRaznesi[playerid] == 8)
		{
			SetPlayerCheckpoint(playerid, 993.0349,-1258.3704,15.0313, 3.0);
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			PostaRaznesi[playerid] = 15; SCM(playerid,-1,"[V:RPG] | "VARADERO"Zavrsili ste raznosenje otidjite do poste po zaradu!");
		}
	}
	if(PostaRaznesi[playerid] >= 15 && CID >= postavozilo[0] && CID <= postavozilo[5] && GetPlayerState(playerid) == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 993.0349,-1258.3704,15.0313))
		{
		    new bonus = random(60), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""VARADERO"Uspesno ste zavrsili raznosenje poste!\n\n"BELA"Plata: "VARADERO"5000$\n"BELA"Bonus: "VARADERO"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj raznosenja",string,"Ok","");
			PostaRaznesi[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(97, 200);
		}
	}
	////////////////////////////KOSAC TRAVE//////////////////////////////////////
    if(KosenjeTrave[playerid] >= 1 && KosenjeVozila(CID) && GetPlayerState(playerid) == 2)
	{
	    new kosenje = random(sizeof(KosiTravuRand));
		KosenjeTrave[playerid] ++; // uhm its grass farmer, how do i fix this?
		SetPlayerCheckpoint(playerid, KosiTravuRand[kosenje][0], KosiTravuRand[kosenje][1], KosiTravuRand[kosenje][2], 5.0);
		SetPVarInt(playerid, "WarpHack", 3);
		SetTimerEx("WarpHack", 1000, false, "i", playerid);
		if(KosenjeTrave[playerid] == 20)
		{
			new bonus = random(100), string[120];
 			g_NovacPlus(playerid, 5000+bonus);
			format(string,sizeof(string),""HZELENA"Uspesno ste zavrsili kosenje trave!\n\n"BELA"Plata: "HZELENA"5000$\n"BELA"Bonus: "HZELENA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj kosenja",string,"Ok","");
			KosenjeTrave[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(95, 100);
		}
	}
    //////////////////////////BUS VOZAC LINIJA 1////////////////////////////////
    if(BusLinija[playerid] == 1 && BusVozila(CID) && GetPlayerState(playerid) == 2) // enters checkpoint
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1818.7271,-1908.1355,13.3938))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2023.3424,-1939.5215,13.3283, 5.0);
			BusLinija[playerid] = 2;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 2 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2023.3424,-1939.5215,13.3283))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2259.1887,-1896.1573,13.3719, 5.0);
			BusLinija[playerid] = 3;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 3 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2259.1887,-1896.1573,13.3719))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2517.1418,-1934.7615,13.3786, 5.0);
			BusLinija[playerid] = 4;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 4 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2517.1418,-1934.7615,13.3786))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2765.2625,-1996.5121,13.3839, 5.0);
			BusLinija[playerid] = 5;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 5 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2765.2625,-1996.5121,13.3839))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2454.8188,-1731.1853,13.4710, 5.0);
			BusLinija[playerid] = 6;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 6 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2454.8188,-1731.1853,13.4710))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1819.3469,-1776.5176,13.3828, 5.0);
			BusLinija[playerid] = 7;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 7 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1819.3469,-1776.5176,13.3828))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1803.8405,-1913.4005,13.3958, 5.0);
			BusLinija[playerid] = 8;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 8 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1803.8405,-1913.4005,13.3958))
		{
            new bonus = random(50), string[120];
            g_NovacPlus(playerid, 8000+bonus);
			format(string,sizeof(string),""HZELENA"Uspesno ste zavrsili bus liniju!\n\n"BELA"Plata: "HZELENA"8000$\n"BELA"Bonus: "HZELENA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj ture",string,"Ok","");
			BusLinija[playerid] = 0; DisablePlayerCheckpoint(playerid);  FirmaNovac(94, 150);
		}
	}
	//////////////////////////BUS LINIJA 2//////////////////////////////////////
	if(BusLinija[playerid] == 15 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1836.7954,-1178.5555,23.6376))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1502.3647,-1032.7407,23.6430, 5.0);
			BusLinija[playerid] = 16;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 16 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1502.3647,-1032.7407,23.6430))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1239.3563,-927.8101,42.5192, 5.0);
			BusLinija[playerid] = 17;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 17 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1239.3563,-927.8101,42.5192))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1190.2120,-1151.4117,23.7126, 5.0);
			BusLinija[playerid] = 18;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 18 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1190.2120,-1151.4117,23.7126))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1227.1282,-1574.4497,13.3906, 5.0);
			BusLinija[playerid] = 19;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 19 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1227.1282,-1574.4497,13.3906))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1451.4758,-1874.8219,13.3906, 5.0);
			BusLinija[playerid] = 20;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 20 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1451.4758,-1874.8219,13.3906))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1803.8405,-1913.4005,13.3958, 5.0);
			BusLinija[playerid] = 21;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 21 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1803.8405,-1913.4005,13.3958))
		{
            new bonus = random(50), string[120];
            g_NovacPlus(playerid, 8000+bonus);
			format(string,sizeof(string),""HZELENA"Uspesno ste zavrsili bus liniju!\n\n"BELA"Plata: "HZELENA"8000$\n"BELA"Bonus: "HZELENA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj ture",string,"Ok","");
			BusLinija[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(94, 100);
		}
	}
	////////////////////////////BUS LINIJA 3 ///////////////////////////////////
	if(BusLinija[playerid] == 30 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1819.9722,-1908.8911,13.3928))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2024.6489,-1939.7678,13.3333, 5.0);
			BusLinija[playerid] = 31;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 31 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2024.6489,-1939.7678,13.3333))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1836.6730,-1178.6085,23.6376, 5.0);
			BusLinija[playerid] = 32;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 32 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1836.6730,-1178.6085,23.6376))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1239.2528,-927.3990,42.5191, 5.0);
			BusLinija[playerid] = 33;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 33 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1239.2528,-927.3990,42.5191))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1190.4569,-1152.4602,23.7119, 5.0);
			BusLinija[playerid] = 34;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 34 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1190.4569,-1152.4602,23.7119))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1085.7972,-1854.7701,13.3885, 5.0);
			BusLinija[playerid] = 35;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 35 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1085.7972,-1854.7701,13.3885))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1451.7990,-1875.0665,13.3906, 5.0);
			BusLinija[playerid] = 36;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 36 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1451.7990,-1875.0665,13.3906))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1803.8405,-1913.4005,13.3958, 5.0);
			BusLinija[playerid] = 37;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 37 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1803.8405,-1913.4005,13.3958))
		{
            new bonus = random(150), string[120];
            g_NovacPlus(playerid, 8000+bonus);
			format(string,sizeof(string),""HZELENA"Uspesno ste zavrsili bus liniju!\n\n"BELA"Plata: "HZELENA"8000$\n"BELA"Bonus: "HZELENA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj ture",string,"Ok","");
			BusLinija[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(94, 200);
		}
	}
		////////////////////////////LV BUS LINIJA 4 ///////////////////////////////////
	if(BusLinija[playerid] == 50 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1924.6313,2314.9143,10.6719))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1924.2472,2117.0271,10.7596, 5.0);
			BusLinija[playerid] = 51;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 51 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1924.2472,2117.0271,10.7596))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2844.0730,2208.4734,10.6719, 5.0);
			BusLinija[playerid] = 52;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 52 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2844.0730,2208.4734,10.6719))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 2307.0251,2516.6968,10.6719, 5.0);
			BusLinija[playerid] = 53;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 53 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2307.0251,2516.6968,10.6719))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1693.3704,1445.2698,10.7641, 5.0);
			BusLinija[playerid] = 54;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 54 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1693.3704,1445.2698,10.7641))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovarbus", 5000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~Stanica", 5000, 3);
			SetPlayerCheckpoint(playerid, 1911.2743,2343.9797,10.8203, 5.0);
			BusLinija[playerid] = 57;
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(BusLinija[playerid] == 57 && BusVozila(CID) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1911.2743,2343.9797,10.8203))
		{
            new bonus = random(150), string[120];
            g_NovacPlus(playerid, 8000+bonus);
			format(string,sizeof(string),""HZELENA"Uspesno ste zavrsili bus liniju!\n\n"BELA"Plata: "HZELENA"8000$\n"BELA"Bonus: "HZELENA"%d$",bonus);
			SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj ture",string,"Ok","");
			BusLinija[playerid] = 0; DisablePlayerCheckpoint(playerid); FirmaNovac(94, 200);
		}
	}
	/////////////////////////SVERC ORUZIJA/////////////////////////////////////
    if(SvercOruzija[playerid] == 1 && CID == pocar[14] || CID == pocar[22]  && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -1705.5632,14.6603,3.2085))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar oruzija...", 5000, 3);
			SetPlayerCheckpoint(playerid, -700.1981,953.2935,11.9949, 5.0);
			SvercOruzija[playerid] = 2;
			SCM(playerid,-1,""SPLAVA"[Blue Lagoon]: "BELA"Posle utovara odvezite oruzije u bazu...");
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
    if(SvercOruzija[playerid] == 2 && CID == pocar[14] || CID == pocar[22]  && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -700.1981,953.2935,11.9949))
		{
			new droga;
			droga = 2;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 11)
				{
					droga += 1;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar oruzija...", 5000, 3);
			DisablePlayerCheckpoint(playerid); SvercOruzija[playerid] = 0;
			OrgInfo[PoOruzije] += droga;
			PlayerInfo[playerid][pRadi] = 0;
			SacuvajOrgInfo();
			new string[128];
			format(string, charsmax(string), ""SPLAVA"[Blue Lagoon]: "BELA"Zavrsili ste sa svercom i resursi za oruzije su povecani za %d!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC ORUZIJA/////////////////////////////////////
    if(SvercOruzija[playerid] == 1 && (CID == basecar[19] || CID == basecar[20] || CID == basecar[21]) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -1008.4321,-688.1726,32.1262))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar oruzija...", 5000, 3);
			SetPlayerCheckpoint(playerid, -23.2834,-274.7886,5.5430, 5.0);
			SvercOruzija[playerid] = 2;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			SCM(playerid,-1,""SPLAVA"[Yakuza]: "BELA"Posle utovara odvezite oruzije u bazu...");
       }
	}
	else if(SvercOruzija[playerid] == 2 && (CID == basecar[19] || CID == basecar[20] || CID == basecar[21]) && GetPlayerState(playerid) == 2)
	{
        if(IsPlayerInRangeOfPoint(playerid, 5.0, -23.2834,-274.7886,5.5430)) {

			new droga;
			droga = 2;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 15)
				{
					droga += 1;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar oruzija...", 5000, 3);
			DisablePlayerCheckpoint(playerid);
            SvercOruzija[playerid] = 0;
			OrgInfo[BaseOruzije] += droga;
			PlayerInfo[playerid][pRadi] = 0;
			SacuvajOrgInfo();
			new string[128];
			format(string, charsmax(string), ""SPLAVA"[Yakuza]: "BELA"Zavrsili ste sa svercom i resursi za oruzije su povecani za %d!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	if(SvercOruzija[playerid] == 1 && (CID == pocar3[8] || CID == pocar3[9]) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 25.0, -1008.4321,-688.1726,32.1262))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~sverc droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, -1109.2406,-1295.2731,129.2705, 5.0);
			SvercOruzija[playerid] = 2;
			SCM(playerid,-1,""SPLAVA"[DR]: "BELA"Posle utovara odvezite oruzije u bazu...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercOruzija[playerid] == 2 && (CID == pocar3[8] || CID == pocar3[9]) && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 25.0, -1109.2406,-1295.2731,129.2705))
		{
			new droga;
			droga = 300;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 19)
				{
					droga += 300;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~sverc droge...", 5000, 3);
			DisablePlayerCheckpoint(playerid); SvercOruzija[playerid] = 0;
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			PlayerInfo[playerid][pRadi] = 0;
			SacuvajOrgInfo();
			new string[128];
			format(string, charsmax(string), ""SPLAVA"[DR]: "BELA"Zavrsili ste sa svercom i kolicina droge je povecana za %d!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC ORUZIJA/////////////////////////////////////
    if(SvercOruzija[playerid] == 1 && CID == condorcar[8] || CID == condorcar[7] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2286.9797,-2015.7365,13.3084))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar oruzija...", 5000, 3);
			SetPlayerCheckpoint(playerid, 667.1016,-1233.0569,14.4792, 5.0);
			SvercOruzija[playerid] = 2;
			SCM(playerid,-1,""SPLAVA"[Condor]: "BELA"Posle utovara odvezite oruzije u bazu...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercOruzija[playerid] == 2 && CID == condorcar[8] || CID == condorcar[7] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 667.1016,-1233.0569,14.4792))
		{
	 		new droga;
			droga = 2;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 9)
				{
					droga += 1;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar oruzija...", 5000, 3);
			DisablePlayerCheckpoint(playerid); SvercOruzija[playerid] = 0;
			OrgInfo[CondorOruzije] += droga;
			PlayerInfo[playerid][pRadi] = 0;
			SacuvajOrgInfo();
			new string[128];
			format(string, charsmax(string), ""SPLAVA"[Condor]: "BELA"Zavrsili ste sa svercom i resursi za oruzije su povecani za %d!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
    /////////////////////////SVERC ORUZIJA/////////////////////////////////////
    if(SvercOruzija[playerid] == 1 && CID == vballas[10] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -120.9831,-1648.5916,2.1757))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar oruzija...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1915.4187,-1051.4404,23.9803, 5.0);
			SvercOruzija[playerid] = 2;
			SCM(playerid,-1,""BALLASC"[Ballas]: "BELA"Posle utovara odvezite oruzije u bazu...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercOruzija[playerid] == 2 && CID == vballas[10] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1915.4187,-1051.4404,23.9803))
		{
			new droga;
			droga = 2;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 5)
				{
					droga += 1;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar oruzija...", 5000, 3);
			DisablePlayerCheckpoint(playerid); SvercOruzija[playerid] = 0;
			OrgInfo[BallasOruzije] += droga;
			PlayerInfo[playerid][pRadi] = 0;
			SacuvajOrgInfo();
			new string[128];
			format(string, charsmax(string), ""BALLASC"[Ballas]: "BELA"Zavrsili ste sa svercom i resursi za oruzije su povecani za %d!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == rbcar[7] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2399.2444,2760.1504,10.8203))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, 2332.1375, 549.4020, 7.7806, 5.0);
			SvercDroge[playerid] = 2;
			SCM(playerid,-1,""VARADERO"[BCC]: "BELA"Posle utovara odvezite drogu u skladiste...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercDroge[playerid] == 2 && CID == rbcar[7] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, 2332.1375, 549.4020, 7.7806))
		{
			new droga;
			droga = 300;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 17)
				{
					droga += 200;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""VARADERO"[Black Cobra Corporation]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
    /////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == tbt[13] || CID == tbt[14] || CID == tbt[15] || CID == tbt[16] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 212.1458,-228.5909,1.7786))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, -1108.1185,-1620.9246,76.3672, 5.0);
			SvercDroge[playerid] = 2;
			SCM(playerid,-1,""VARADERO"[BDT]: "BELA"Posle utovara odvezite drogu u skladiste...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercDroge[playerid] == 2 && CID == tbt[13] || CID == tbt[14] || CID == tbt[15] || CID == tbt[16] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -1108.1185,-1620.9246,76.3672))
		{
			new droga;
			droga = 150;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 3)
				{
					droga += 250;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""VARADERO"[BDT]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == Locacar[15] || CID == Locacar[0] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1549.5334,-1385.5892,14.0234))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid,  57.6361,-1935.6486,4.2434, 5.0);
			SvercDroge[playerid] = 2;
			SCM(playerid,-1,""VARADERO"[Loca Cartel]: "BELA"Posle utovara odvezite drogu u skladiste...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercDroge[playerid] == 2 && CID == Locacar[15] || CID == Locacar[0] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0,  57.6361,-1935.6486,4.2434))
		{
			new droga;
			droga = 300;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 3)
				{
					droga += 300;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""VARADERO"[Loca Cartel]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
		/////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == TECcar[2] || CID == TECcar[3] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -126.7526,-1668.8661,1.0940))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, -634.3427,-1588.5818,24.6269, 5.0);
			SvercDroge[playerid] = 2;
			SCM(playerid,-1,""VARADERO"[TBB]: "BELA"Posle utovara odvezite drogu u skladiste...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercDroge[playerid] == 2 && CID == TECcar[2] || CID == TECcar[3] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -634.3427,-1588.5818,24.6269))
		{
			new droga;
			droga = 150;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 3)
				{
					droga += 300;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""VARADERO"[TBB]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == Smithcar[0] || CID == Smithcar[1] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -1883.4282,-200.3275,16.0549))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, -2132.6167,-247.8245,35.3265, 5.0);
			SvercDroge[playerid] = 2;
			SCM(playerid,-1,""VARADERO"[Narco Cartel]: "BELA"Posle utovara odvezite drogu u skladiste...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercDroge[playerid] == 2 && CID == Smithcar[0] || CID == Smithcar[1] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -2132.6167,-247.8245,35.3265))
		{
			new droga;
			droga = 150;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 3)
				{
					droga += 230;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""VARADERO"[Narco Cartel]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == po2car[1] || CID == po2car[0] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, -550.0393,-185.5822,78.4676))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, 2833.4529, 2732.0811, 10.8666, 5.0);
			SvercDroge[playerid] = 2;
			SetPVarInt(playerid, "WarpHack", 3);
			SCM(playerid,-1,""VARADERO"[Blue Terra]: "BELA"Posle utovara odvezite drogu u bazu...");
		}
	}
	if(SvercDroge[playerid] == 2 && CID == po2car[1] || CID == po2car[0] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, 2833.4529, 2732.0811, 10.8666))
		{
			new droga;
			droga = 150;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 12)
				{
					droga += 200;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""VARADERO"[Blue Terra]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga);
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == po4car[4] || CID == po4car[5] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, -1906.1149,-1670.4601,22.5864))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, -2312.0989,-1595.4381,484.0190, 5.0);
			SvercDroge[playerid] = 2;
			SCM(playerid,-1,""CRVENA"[Russian Mafia]: "BELA"Posle utovara odvezite drogu u bazu...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercDroge[playerid] == 2 && CID == po4car[4] || CID == po4car[5] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, -2312.0989,-1595.4381,484.0190))
		{
			new droga;
			droga = 150;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 20)
				{
					droga += 300;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""CRVENA"[Russian Mafia]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
	/////////////////////////SVERC DROGE//////////////////////////////////////
    if(SvercDroge[playerid] == 1 && CID == po3car[1] || CID == po3car[2] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -2112.1416,-2406.5862,31.4320))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar droge...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1263.5160,-2010.9749,59.4269, 5.0);
			SvercDroge[playerid] = 2;
			SCM(playerid,-1,""VARADERO"[DNB]: "BELA"Posle utovara odvezite drogu u bazu...");
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
	}
	if(SvercDroge[playerid] == 2 && CID == po3car[1] || CID == po3car[2] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1263.5160,-2010.9749,59.4269))
		{
			new droga;
			droga = 150;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 13)
				{
					droga += 300;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar droge...", 5000, 3);
			PlayerInfo[playerid][pDroga] += droga; SvercDroge[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			new string[128];
			format(string, charsmax(string), ""VARADERO"[DNB]: "BELA"Zavrsili ste sverc i dobili ste %dg droge!", droga); //conver
			SCM(playerid,-1, string);
		}
	}
    ///////////////////////SVERC ULJA////////////////////////////////////////
    if(SvercUlja[playerid] == 1 && CID == tvf[3] || CID == tvf[4] || CID == tvf[5] || CID == tvf[6] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -132.7977,-1670.5424,1.0940))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar ulja", 5000, 3);
			SetPlayerCheckpoint(playerid, 2119.5740,-2295.1865,13.5049, 5.0);
			SvercUlja[playerid] = 2;
			SCM(playerid,-1,""ZELENA"[TVF]: "BELA"Posle utovara odvezite ulje u bazu.");
		}
	}
	if(SvercUlja[playerid] == 2 && CID == tvf[3] || CID == tvf[4] || CID == tvf[5] || CID == tvf[6] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2119.5740,-2295.1865,13.5049))
		{
			new droga;
			droga = 5;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 2)
				{
					droga += 1;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar ulja", 5000, 3);
			new string[128];
			format(string, charsmax(string), ""ZELENA"[TVF]: "BELA"Zavrsili ste sverc i dozevli ste u masinu %dL ulja!", droga); //conver
			SCM(playerid,-1, string);
			OrgInfo[TvfMasina] += droga;
			PlayerInfo[playerid][pRadi] = 0;
			SacuvajOrgInfo();
			DisablePlayerCheckpoint(playerid); SvercUlja[playerid] = 0;
		}
	}
	///////////////////////SVERC MATERIJALA////////////////////////////
    if(SvercMaterijala[playerid] == 1 && CID == tvf[3] || CID == tvf[4] || CID == tvf[5] || CID == tvf[6] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 210.9088,-228.5437,1.7786))
		{
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~utovar materijala", 5000, 3);
			SetPlayerCheckpoint(playerid, 2133.8552,-2296.7241,13.4270, 5.0);
			SvercMaterijala[playerid] = 2;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
			SCM(playerid,-1,""SPLAVA"[TVF]: "BELA"Posle utovara odvezite materijale u bazu.");
		}
	}
	if(SvercMaterijala[playerid] == 2 && CID == tvf[3] || CID == tvf[4] || CID == tvf[5] || CID == tvf[6] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2133.8552,-2296.7241,13.4270))
		{
			new droga;
			droga = 250;
			for(new i=1; i <= 4; i++)
			{
				if(tCP[i] == 2)
				{
					droga += 50;
				}
			}
			TogglePlayerControllable(playerid, 0);
			utovar[playerid] = SetTimerEx("utovar1", 7000, false, "d", playerid);
			GameTextForPlayer(playerid, "~y~istovar materijala", 5000, 3);
			new string[128];
			format(string, charsmax(string), ""SPLAVA"[TVF]: "BELA"Zavrsili ste sverc i dobili ste %d materijala!", droga); //conver
			SCM(playerid,-1, string);
			PlayerInfo[playerid][pMats] += droga;
			PlayerInfo[playerid][pRadi] = 0;
			DisablePlayerCheckpoint(playerid); SvercMaterijala[playerid] = 0;
		}
	}
	////////////////////////POLAGANJE ZA AUTO/////////////////
    if(Poligon[playerid] == 1 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5, 1544.3151,-2243.0063,13.5469))
		{
			Poligon[playerid] = 2;
			SetPlayerCheckpoint(playerid, 1524.7186,-2228.2156,13.5469, 2.5);
			SCM(playerid,-1,""SRWBOJA"[AS] "BELA"Sada predjite preko lezeci, pazite da ne ostetite vozilo!");
		}
	}
	if(Poligon[playerid] == 2 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 2.5, 1524.7186,-2228.2156,13.5469))
		{
			Poligon[playerid] = 3;
			SetPlayerCheckpoint(playerid, 1512.0778,-2211.6062,13.5547, 2.5);
			SCM(playerid,-1,""SRWBOJA"[AS] "BELA"Sada se parkirajte, pazite da ne ostetite vozilo!");
		}
	}
	if(Poligon[playerid] == 3 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 2.5, 1512.0778,-2211.6062,13.5547))
		{
			Poligon[playerid] = 4;
			SetPlayerCheckpoint(playerid, 1499.3431,-2212.2930,13.5469, 2.5);
			SCM(playerid,-1,""SRWBOJA"[AS] "BELA"Sada se parkirajte u rikverc, pazite da ne ostetite vozilo!");
		}
	}
	if(Poligon[playerid] == 4 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 2.5, 1499.3431,-2212.2930,13.5469))
		{
			Poligon[playerid] = 5;
			SetPlayerCheckpoint(playerid, 1499.3431,-2212.2930,13.5469, 2.5);
		}
	}
	if(Poligon[playerid] == 5 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 2.5, 1499.3431,-2212.2930,13.5469))
		{
			Poligon[playerid] = 6;
			SetPlayerCheckpoint(playerid, 1490.7458,-2228.1094,13.5469, 2.5);
			SCM(playerid,-1,""SRWBOJA"[AS] "BELA"Sada obidjite kruzni tok, pazite da ne ostetite vozilo!");
		}
	}
	if(Poligon[playerid] == 6 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 2.5, 1490.7458,-2228.1094,13.5469))
		{
			Poligon[playerid] = 7;
			SetPlayerCheckpoint(playerid, 1536.3997,-2213.1919,13.5547, 2.5);
		}
	}
	if(Poligon[playerid] == 7 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5, 1536.3997,-2213.1919,13.5547))
		{
			Poligon[playerid] = 8;
			SetPlayerCheckpoint(playerid, 1547.5824,-2271.5928,13.5455, 2.5);
			SCM(playerid,-1,""ZELENA"[AS] "BELA"Prosli ste poligon sad sledi gradska voznja...");
			SCM(playerid,-1,""ZELENA"[AS] "BELA"Ukoliko prekoracite briznu od 100KM/H necete poloziti vozacki!");
		}
	}
	if(Poligon[playerid] == 8 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5, 1547.5824,-2271.5928,13.5455))
		{
			Poligon[playerid] = 9;
			SetPlayerCheckpoint(playerid, 1427.1464,-2299.7761,13.3828, 2.5);
		}
	}
	if(Poligon[playerid] == 9 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1427.1464,-2299.7761,13.3828))
		{
			Poligon[playerid] = 10;
			SetPlayerCheckpoint(playerid, 1472.3563,-2344.6311,13.3828, 2.5);
		}
	}
	if(Poligon[playerid] == 10 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1472.3563,-2344.6311,13.3828))
		{
			Poligon[playerid] = 11;
			SetPlayerCheckpoint(playerid, 1271.2698,-2364.5977,19.6370, 2.5);
		}
	}
	if(Poligon[playerid] == 11 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1271.2698,-2364.5977,19.6370))
		{
			Poligon[playerid] = 12;
			SetPlayerCheckpoint(playerid, 1318.4866,-2408.0859,12.7298, 2.5);
		}
	}
	if(Poligon[playerid] == 12 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1318.4866,-2408.0859,12.7298))
		{
			Poligon[playerid] = 13;
			SetPlayerCheckpoint(playerid, 1310.9717,-2447.3264,7.6563, 2.5);
		}
	}
	if(Poligon[playerid] == 13 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1310.9717,-2447.3264,7.6563))
		{
			Poligon[playerid] = 14;
			SetPlayerCheckpoint(playerid, 1065.3621,-1856.1887,13.3984, 2.5);
		}
	}
	if(Poligon[playerid] == 14 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1065.3621,-1856.1887,13.3984))
		{
			Poligon[playerid] = 15;
			SetPlayerCheckpoint(playerid, 1312.9026,-1834.6270,13.3828, 2.5);
		}
	}
	if(Poligon[playerid] == 15 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1312.9026,-1834.6270,13.3828))
		{
			Poligon[playerid] = 16;
			SetPlayerCheckpoint(playerid, 1348.9650,-1734.3535,13.3906, 2.5);
		}
	}
	if(Poligon[playerid] == 16 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1348.9650,-1734.3535,13.3906))
		{
			Poligon[playerid] = 17;
			SetPlayerCheckpoint(playerid, 1431.5728,-1710.5485,13.3828, 2.5);
		}
	}
	if(Poligon[playerid] == 17 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1431.5728,-1710.5485,13.3828))
		{
			Poligon[playerid] = 18;
			SetPlayerCheckpoint(playerid, 1484.2681,-1146.0125,23.9063, 2.5);
		}
	}
	if(Poligon[playerid] == 18 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1484.2681,-1146.0125,23.9063))
		{
			Poligon[playerid] = 19;
			SetPlayerCheckpoint(playerid, 1371.0405,-1023.9050,26.5194, 2.5);
		}
	}
	if(Poligon[playerid] == 19 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1371.0405,-1023.9050,26.5194))
		{
			Poligon[playerid] = 20;
			SetPlayerCheckpoint(playerid, 1530.2841,-1009.5331,42.3824, 2.5);
		}
	}
	if(Poligon[playerid] == 20 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1530.2841,-1009.5331,42.3824))
		{
			Poligon[playerid] = 21;
			SetPlayerCheckpoint(playerid, 1593.7981,-1489.1472,28.6565, 2.5);
		}
	}
	if(Poligon[playerid] == 21 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1593.7981,-1489.1472,28.6565))
		{
			Poligon[playerid] = 22;
			SetPlayerCheckpoint(playerid, 1292.8439,-2263.1499,13.4297, 2.5);
		}
	}
	if(Poligon[playerid] == 22 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1292.8439,-2263.1499,13.4297))
		{
			Poligon[playerid] = 23;
			SetPlayerCheckpoint(playerid, 1472.8040,-2213.8513,13.3731, 2.5);
		}
	}
	if(Poligon[playerid] == 23 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5,  1472.8040,-2213.8513,13.3731))
		{
			Poligon[playerid] = 24;
			SetPlayerCheckpoint(playerid, 1559.1577,-2272.1094,13.5469, 2.5);
			SCM(playerid, -1,""SRWBOJA"[AS] "BELA"Sad parkirajte auto na parking i sacekajte rezultate polaganja!");
		}
	}
	if(Poligon[playerid] == 24 && CID >= askolavozila[0] && CID <= askolavozila[9] && GetPlayerState(playerid) == 2)
    {
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1559.1577,-2272.1094,13.5469))
    	{
		    Poligon[playerid] = 0; DisablePlayerCheckpoint(playerid); new Float:HP; GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
		    if(HP < 600.0) { SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vase vozilo je previse osteceno pa ste pali na polaganju!"); RTC(GetPlayerVehicleID(playerid)); return 1; }
			SCM(playerid, -1, ""ZELENA"[V:RPG] "BELA"Cestitamo, polozili ste vozacki ispit i dobili ste dozvolu!");
		    RTC(GetPlayerVehicleID(playerid)); PlayerInfo[playerid][pADozvola] = 1; SavePlayer(playerid);
	    }
	}
	/////////////////////////////////////////
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerEnterRaceCheckpoint(playerid)
{
// =============================================================================================================================================
// ================================================================== [ EVENTI SISTEM ] ==============================================================
// =============================================================================================================================================
	new string [128];
	new carid = GetPlayerVehicleID(playerid);
	if(ecp[playerid] == 18)
	{
        if(IsAEvent(carid) &&(GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(PlayerToPoint(15.0, playerid,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(NGRTRKA[playerid] < 10)
				{
					PlayerInfo[playerid][pCistacX] = gNRG[NGRTRKA[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gNRG[NGRTRKA[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gNRG[NGRTRKA[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        NGRTRKA[playerid] = NGRTRKA[playerid]+1;
				}
				else
				{
			   		if(event == 18)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
			      		mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			      		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
						NGRTRKA[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);

				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				NGRTRKA[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 17)
	{
        if(IsAEvent(carid) &&(GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 8)
				{
					PlayerInfo[playerid][pCistacX] = gSacnchez2[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gSacnchez2[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gSacnchez2[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 17)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
		      		    {
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 16)
	{
        if(IsAEvent(carid) &&(GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 24)
				{
					PlayerInfo[playerid][pCistacX] = gMorski[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gMorski[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gMorski[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 16)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
		      			{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
                        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 15)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0,4329.0850, 1780.8180, 50.1147))
		{
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			DisablePlayerRaceCheckpoint(playerid);
			if(event == 15)
			{
				DisablePlayerRaceCheckpoint(playerid);
				ecp[playerid] = 0;
				new ciljime[MAX_PLAYER_NAME];
				GetPlayerName(playerid, ciljime, sizeof(ciljime));
				mjesta++;
				new novac;
				if(mjesta == 1)
				{
					novac = (15000 + random(5000));
					g_NovacPlus(playerid, novac);
				}
				else if(mjesta == 2)
				{
					novac = (12500 + random(2500));
					g_NovacPlus(playerid, novac);
				}
				else if(mjesta == 3)
				{
					novac = (10000 + random(2500));
					g_NovacPlus(playerid, novac);
				}
				format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
				if(mjesta < 4)
				{
					SendClientMessageToAll(COLOR_RED,string);
				}
				vorcp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
				PlayerInfo[playerid][pCistacX] = 0;
				PlayerInfo[playerid][pCistacY] = 0;
				PlayerInfo[playerid][pCistacZ] = 0;
				return 1;
			}
		}
		else
		{
			vorcp[playerid] = 0;
			ecp[playerid] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			PlayerInfo[playerid][pCistacX] = 0;
			PlayerInfo[playerid][pCistacY] = 0;
			PlayerInfo[playerid][pCistacZ] = 0;
			SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			DisablePlayerRaceCheckpoint(playerid);
			return 1;
		}
	}
	else if(ecp[playerid] == 14)
	{
        if(IsAEvent(carid) &&(GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 35)
				{
					PlayerInfo[playerid][pCistacX] = gKART[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gKART[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gKART[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 14)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
					    mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 13 && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
	{
        if(IsAEvent(carid))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 27)
				{
					PlayerInfo[playerid][pCistacX] = gQUAD2[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gQUAD2[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gQUAD2[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 13)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 12 && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
	{
        if(IsAEvent(carid))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 28)
				{
					PlayerInfo[playerid][pCistacX] = gQUAD[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gQUAD[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gQUAD[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 12)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 11 && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
	{
        if(IsAEvent(carid))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 38)
				{
					PlayerInfo[playerid][pCistacX] = gRelly2[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gRelly2[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gRelly2[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 11)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 10 && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
	{
        if(IsAEvent(carid))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 57)
				{
					PlayerInfo[playerid][pCistacX] = gRelly[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gRelly[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gRelly[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 10)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 9)
	{
        if(IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	           	DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 23)
				{
					PlayerInfo[playerid][pCistacX] = gJETMAX[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gJETMAX[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gJETMAX[vorcp[playerid]][2];
					SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 9)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 8)
	{
        if(IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 56)
				{
					PlayerInfo[playerid][pCistacX] = gRACE[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gRACE[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gRACE[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 8)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 7)
	{
        if(IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 57)
				{
					PlayerInfo[playerid][pCistacX] = gDRIFT2[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gDRIFT2[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gDRIFT2[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 7)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 6)
	{
        if(IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 37)
				{
					PlayerInfo[playerid][pCistacX] = gDRIFT1[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gDRIFT1[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gDRIFT1[vorcp[playerid]][2];
			        SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 6)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	else if(ecp[playerid] == 5)
	{
        if(IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
	 		if(IsPlayerInRangeOfPoint(playerid, 15.0,PlayerInfo[playerid][pCistacX],PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ]))
		  	{
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
				if(vorcp[playerid] < 32)
				{
					PlayerInfo[playerid][pCistacX] = gVORTEX[vorcp[playerid]][0];
					PlayerInfo[playerid][pCistacY] = gVORTEX[vorcp[playerid]][1];
					PlayerInfo[playerid][pCistacZ] = gVORTEX[vorcp[playerid]][2];
					SetPlayerRaceCheckpoint(playerid,2,PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],PlayerInfo[playerid][pCistacX], PlayerInfo[playerid][pCistacY],PlayerInfo[playerid][pCistacZ],10);
			        vorcp[playerid] = vorcp[playerid]+1;
				}
				else
				{
			   		if(event == 5)
					{
						DisablePlayerRaceCheckpoint(playerid);
			      		ecp[playerid] = 0;
			   			new ciljime[MAX_PLAYER_NAME];
					    GetPlayerName(playerid, ciljime, sizeof(ciljime));
						mjesta++;
			      		new novac;
			      		if(mjesta == 1)
			       		{
							novac = (15000 + random(5000));
                            g_NovacPlus(playerid, novac);
					  	}
					  	else if(mjesta == 2)
					  	{
							novac = (12500 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
					  	else if(mjesta == 3)
					  	{
							novac = (10000 + random(2500));
                            g_NovacPlus(playerid, novac);
						}
						format(string,sizeof(string),""BOJA"[EVENT] "SIVA"Igrac "BOJA"%s "SIVA"je zavrsio trku na "BOJA"%d mestu.",ciljime,mjesta);
						if(mjesta < 4)
						{
							SendClientMessageToAll(COLOR_RED,string);
						}
	                    vorcp[playerid] = 0;
						DisablePlayerRaceCheckpoint(playerid);
				   		PlayerInfo[playerid][pCistacX] = 0;
				        PlayerInfo[playerid][pCistacY] = 0;
				        PlayerInfo[playerid][pCistacZ] = 0;
				        return 1;
					}
				}
			}
			else
			{
   				vorcp[playerid] = 0;
     			ecp[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
		   		PlayerInfo[playerid][pCistacX] = 0;
		        PlayerInfo[playerid][pCistacY] = 0;
		        PlayerInfo[playerid][pCistacZ] = 0;
				SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
			 	DisablePlayerRaceCheckpoint(playerid);
			 	return 1;
			}
        }
	    return 1;
	}
	//event 2 (Desert Drive)
 	else if(eecp[playerid] == 11 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-464.9647,2590.2058,50.2128))
	  	{
            eecp[playerid] = 12;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-378.0200,2559.1409,39.6213,-378.0200,2559.1409,39.6213,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
		 	return 1;

	 	}
  	}
  	else if(eecp[playerid] == 12 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-378.0200,2559.1409,39.6213))
	  	{
            eecp[playerid] = 13;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-354.1865,2509.5281,36.1661,-354.1865,2509.5281,36.1661,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
		 	return 1;

		}
 	}
 	else if(eecp[playerid] == 13 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-354.1865,2509.5281,36.1661))
	  	{
            eecp[playerid] = 14;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-487.9483,2437.4766,52.3001,-487.9483,2437.4766,52.3001,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
		 	return 1;
		}
 	}
 	else if(eecp[playerid] == 14 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-487.9483,2437.4766,52.3001))
	  	{
            eecp[playerid] = 15;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-694.4960,2517.3049,75.0215,-694.4960,2517.3049,75.0215,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
		 	return 1;
		}
 	}
 	else if(eecp[playerid] == 15 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-694.4960,2517.3049,75.0215))
	  	{
            eecp[playerid] = 16;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-722.6255,2661.4148,60.2633,-722.6255,2661.4148,60.2633,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
		 	return 1;

		}
 	}
 	else if(eecp[playerid] == 16 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-722.6255,2661.4148,60.2633))
	  	{
            eecp[playerid] = 17;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-699.6299,2693.2786,55.5243,-699.6299,2693.2786,55.5243,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 17 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -699.6299,2693.2786,55.5243))
	  	{
            eecp[playerid] = 18;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-770.9343,2699.2280,46.5509,-770.9343,2699.2280,46.5509,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
  	else if(eecp[playerid] == 18 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -770.9343,2699.2280,46.5509))
	  	{
            eecp[playerid] = 19;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-863.2164,2728.9233,45.3915,-863.2164,2728.9233,45.3915,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 19 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-863.2164,2728.9233,45.3915))
	  	{
            eecp[playerid] = 20;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1250.0481,2677.7410,47.0962,-1250.0481,2677.7410,47.0962,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 20 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-1250.0481,2677.7410,47.0962))
	  	{
            eecp[playerid] = 21;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1439.6582,2447.8940,59.4194,-1439.6582,2447.8940,59.4194,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 21 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-1439.6582,2447.8940,59.4194))
	  	{
            eecp[playerid] = 22;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1351.1957,2155.3284,47.2228,-1351.1957,2155.3284,47.2228,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 22 && IsAEvent(carid))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-1351.1957,2155.3284,47.2228))
	  	{
            eecp[playerid] = 23;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1217.5916,1868.7471,40.5118,-1217.5916,1868.7471,40.5118,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 23 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -1217.5916,1868.7471,40.5118))
	  	{
            eecp[playerid] = 24;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1052.0552,1841.4481,53.6045,-1052.0552,1841.4481,53.6045,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);

		}
 	}
  	else if(eecp[playerid] == 24 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -1052.0552,1841.4481,53.6045))
	  	{
            eecp[playerid] = 25;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-890.9316,1792.3468,59.6843,-890.9316,1792.3468,59.6843,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 25 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -890.9316,1792.3468,59.6843))
	  	{
            eecp[playerid] = 26;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-835.3023,2014.1450,59.7518,-835.3023,2014.1450,59.7518,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 26 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -835.3023,2014.1450,59.7518))
	  	{
            eecp[playerid] = 27;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-449.0349,2030.1443,60.1912,-449.0349,2030.1443,60.1912,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 27 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-449.0349,2030.1443,60.1912))
	  	{
            eecp[playerid] = 28;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-380.6185,2064.7151,60.5565,-380.6185,2064.7151,60.5565,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 28 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -380.6185,2064.7151,60.5565))
	  	{
            eecp[playerid] = 29;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-482.7137,1937.0267,86.1542,-482.7137,1937.0267,86.1542,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 29 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -482.7137,1937.0267,86.1542))
	  	{
            eecp[playerid] = 30;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-432.8048,1759.6516,71.6326,-432.8048,1759.6516,71.6326,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
  	else if(eecp[playerid] == 30 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -432.8048,1759.6516,71.6326))
	  	{
            eecp[playerid] = 31;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-412.7090,1915.2793,57.2441,-412.7090,1915.2793,57.2441,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 31 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -412.7090,1915.2793,57.2441))
	  	{
            eecp[playerid] = 32;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-398.2184,1760.8228,43.2969,-398.2184,1760.8228,43.2969,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 32 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -398.2184,1760.8228,43.2969))
	  	{
            eecp[playerid] = 33;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-306.2119,1734.5758,42.2557,-306.2119,1734.5758,42.2557,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 33 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -306.2119,1734.5758,42.2557))
	  	{
            eecp[playerid] = 34;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-296.0934,1776.4517,42.2443,-296.0934,1776.4517,42.2443,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 34 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -296.0934,1776.4517,42.2443))
	  	{
            eecp[playerid] = 35;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-296.0934,1776.4517,42.2443,-296.0934,1776.4517,42.2443,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 35 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
		if(event == 2)
		{
			eecp[playerid] = 34+1;
			DisablePlayerRaceCheckpoint(playerid);
      		ecp[playerid] = 0;
        	eecp[playerid] = 0;
   			new ciljime[MAX_PLAYER_NAME];
		    GetPlayerName(playerid, ciljime, sizeof(ciljime));
			mjesta++;
 			new novac;
  			if(mjesta == 1)
   			{
				novac = (15000 + random(5000));
                g_NovacPlus(playerid, novac);
	  		}
	  		else if(mjesta == 2)
	  		{
				novac = (12500 + random(2500));
                g_NovacPlus(playerid, novac);
			}
			else if(mjesta == 3)
  			{
				novac = (10000 + random(2500));
                g_NovacPlus(playerid, novac);
			}
			format(string,sizeof(string),""SPLAVA"[TRKA] "SIVA"Igrac "CRVENA"%s "SIVA"je zavrsio trku na "CRVENA"%d MESTU.",ciljime,mjesta);
			if(mjesta < 4)
			{
				SendClientMessageToAll(COLOR_RED,string);
			}
            return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 10, -2925.4790,-551.3060,3.8676) && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
	if(event == 22)
		{
			DisablePlayerRaceCheckpoint(playerid);
      		ecp[playerid] = 0;
        	eecp[playerid] = 0;
   			new ciljime[MAX_PLAYER_NAME];
		    GetPlayerName(playerid, ciljime, sizeof(ciljime));
			mjesta++;
 			new novac;
  			if(mjesta == 1)
   			{
				novac = (15000 + random(5000));
                g_NovacPlus(playerid, novac);
	  		}
	  		else if(mjesta == 2)
	  		{
				novac = (12500 + random(2500));
                g_NovacPlus(playerid, novac);
			}
			else if(mjesta == 3)
  			{
				novac = (10000 + random(2500));
                g_NovacPlus(playerid, novac);
			}
			format(string,sizeof(string),""SPLAVA"[TRKA] "SIVA"Igrac "CRVENA"%s "SIVA"je zavrsio trku na "CRVENA"%d MESTU.",ciljime,mjesta);
			if(mjesta < 4)
			{
				SendClientMessageToAll(COLOR_RED,string);
			}
            return 1;
		}
	}
	//Suna Race
 	else if(eecp[playerid] == 36 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-325.1706,-2248.8979,33.5046))
	  	{
            eecp[playerid] = 37;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-597.4570,-2404.4929,29.3132,-597.4570,-2404.4929,29.3132,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Niste isli putanjom eventa, diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
	 	}
  	}
  	else if(eecp[playerid] == 37 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-597.4570,-2404.4929,29.3132))
	  	{
            eecp[playerid] = 38;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-681.2627,-2546.2275,51.1518,-681.2627,-2546.2275,51.1518,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 38 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-681.2627,-2546.2275,51.1518))
	  	{
            eecp[playerid] = 39;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-766.5535,-2682.4795,83.7735,-766.5535,-2682.4795,83.7735,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 39 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-766.5535,-2682.4795,83.7735))
	  	{
            eecp[playerid] = 40;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1177.0337,-2637.6208,11.3035,-1177.0337,-2637.6208,11.3035,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 40 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-1177.0337,-2637.6208,11.3035))
	  	{
            eecp[playerid] = 41;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1687.8584,-2597.5212,32.5742,-1687.8584,-2597.5212,32.5742,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 41 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-1687.8584,-2597.5212,32.5742))
	  	{
            eecp[playerid] = 42;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1886.6205,-2405.4514,32.2512,-1886.6205,-2405.4514,32.2512,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 42 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -1886.6205,-2405.4514,32.2512))
	  	{
            eecp[playerid] = 43;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1625.6265,-2150.3423,26.2773,-1625.6265,-2150.3423,26.2773,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
  	else if(eecp[playerid] == 43 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -1625.6265,-2150.3423,26.2773))
	  	{
            eecp[playerid] = 44;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1282.6255,-2211.9915,21.9021,-1282.6255,-2211.9915,21.9021,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 44 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-1282.6255,-2211.9915,21.9021))
	  	{
            eecp[playerid] = 45;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-1138.4730,-2370.8696,27.4629,-1138.4730,-2370.8696,27.4629,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 45 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-1138.4730,-2370.8696,27.4629))
	  	{
            eecp[playerid] = 46;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-960.0324,-2298.9758,55.6061,-960.0324,-2298.9758,55.6061,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 46 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-960.0324,-2298.9758,55.6061))
	  	{
            eecp[playerid] = 47;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-881.0465,-2182.2312,27.3002,-881.0465,-2182.2312,27.3002,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 47 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0,-881.0465,-2182.2312,27.3002))
	  	{
            eecp[playerid] = 48;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-743.7061,-2126.2551,24.9449,-743.7061,-2126.2551,24.9449,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 48 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -743.7061,-2126.2551,24.9449))
	  	{
            eecp[playerid] = 49;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-585.3354,-2027.5360,44.8629,-585.3354,-2027.5360,44.8629,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
  	else if(eecp[playerid] == 49 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -585.3354,-2027.5360,44.8629))
	  	{
            eecp[playerid] = 50;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-436.9301,-1926.6368,6.6865,-436.9301,-1926.6368,6.6865,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 50 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -436.9301,-1926.6368,6.6865))
	  	{
            eecp[playerid] = 51;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-312.1693,-1913.2491,12.7382,-312.1693,-1913.2491,12.7382,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 51 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
  		if(IsPlayerInRangeOfPoint(playerid, 25.0, -312.1693,-1913.2491,12.7382))
	  	{
            eecp[playerid] = 52;
		  	DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,2,-312.1693,-1913.2491,12.7382,-312.1693,-1913.2491,12.7382,10);
		}
		else
	 	{
			SendClientMessage(playerid, 0x9A6735FF, "Otisli ste sa putanje,diskvalifikovani ste!");
		 	DisablePlayerRaceCheckpoint(playerid);
            return 1;
		}
 	}
 	else if(eecp[playerid] == 52 && IsAEvent(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
  	{
		if(event == 3)
		{
			eecp[playerid] = 51+1;
			DisablePlayerRaceCheckpoint(playerid);
      		ecp[playerid] = 0;
        	eecp[playerid] = 0;
   			new ciljime[MAX_PLAYER_NAME];
		    GetPlayerName(playerid, ciljime, sizeof(ciljime));
			mjesta++;
 			new novac;
  			if(mjesta == 1)
			{
				novac = (15000 + random(5000));
                g_NovacPlus(playerid, novac);
	  		}
		  	else if(mjesta == 2)
		  	{
				novac = (12500 + random(2500));
                g_NovacPlus(playerid, novac);
			}
  			else if(mjesta == 3)
		  	{
				novac = (10000 + random(2500));
                g_NovacPlus(playerid, novac);
			}
			format(string,sizeof(string),""SPLAVA"[TRKA] "SIVA"Igrac "CRVENA"%s "SIVA"je zavrsio trku na "CRVENA"%d MESTU.",ciljime,mjesta);
			if(mjesta < 4)
			{
				SendClientMessageToAll(COLOR_RED,string);
			}
            return 1;
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnRconCommand(cmd[])
{
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerRequestSpawn(playerid)
{
	if(UlogovanProvera[playerid] == 0)
	{
		Kick(playerid);
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if(pickupid == lspdlift)
	{
        if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
    	{
            SPD(playerid, 42, DIALOG_STYLE_LIST, ""BELA"Lift - Zgrada LSPD", ""SRWBOJA"(1). "BELA"Garaza\n"SRWBOJA"(2). "BELA"Krov", "Odaberi", "Izadji");
        }
        else return SCM(playerid,-1,"[LSPD]: "SRWBOJA"Samo clanovi LSPD!");
   	}
	///////////////////////////////////////
    else if(pickupid == tvforuzije)
	{
        if(PlayerInfo[playerid][pLider] == 2)
        {
            if(OrgInfo[TvfMasina] == 0) return SCM(playerid,-1,""SIVA"U masini nema dovoljno ulja da bi mogla raditi, morate nasvercati ulja!");
            SPD(playerid,72,DSL,""SPLAVA"Masina za preradu","- Noz (50 Materijala)\n- Palica (50 Materijala)\n- Dezert (100 Materijala)\n- Uzi (200 Materijala)\n- Kalas (400 Materijala)\n- M4 (400 Materijala)\n- Snajper (500 Materijala)","Odaberi","Izlaz");
        }
        else return SCM(playerid,-1,"[TVF]: "SRWBOJA"Samo clanovi The Vinci Family!");
	}
   	//////////////////////////////////////////////////
    else if(pickupid == bdtoruzije)
	{
        if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
        {
        	SPD(playerid,72,DSL,""SPLAVA"Masina za preradu","- Noz (50 Materijala)\n- Palica (50 Materijala)\n- Dezert (100 Materijala)\n- Uzi (200 Materijala)\n- Kalas (400 Materijala)\n- M4 (400 Materijala)\n- Snajper (500 Materijala)","Odaberi","Izlaz");
    	}
        else return SCM(playerid,-1,"[BDT]: "SRWBOJA"Samo clanovi Black Dragon Triads!");
	}
	///////////////////////////////////////////////////
	else if(pickupid == pbusvozac)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~bus vozac"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~1"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	else if(pickupid == pbusvozac2)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~bus vozac"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~1"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pkosactrave)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~kosac trave"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~1"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pmehanicar)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~mehanicar"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~2"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == ppostar)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~postar"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~2"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pkomunalac)
	{
		if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~komunalac"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pgradjevinar)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~gradjevinar"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pbolnicar)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~bolnicar"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~4"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pgrobar)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~grobar"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~4"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	
	///////////////////////////////////////////////////
	else if(pickupid == pcoca)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~Cocacola"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~3"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~4"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	else if(pickupid == pdrvoseca)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~drvoseca"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~10"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pdzeparos)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~dzeparos"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~4"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pfarmer)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~farmer"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~4"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pmasinovodja)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~masinovodja"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~4"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~6"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pdostavljac)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~dostavljac"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~4"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~6"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pkamiondzija)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~kamiondzija"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~7"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == ppilot)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~pilot"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~7"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	///////////////////////////////////////////////////
	else if(pickupid == pelektricar)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~elektricar"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~8"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	//////////////////////////////////////////////////
		///////////////////////////////////////////////////
	else if(pickupid == pvodoinstalater)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~vodoinstalater"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~8"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
	}
	else if(pickupid == prudar)
	{
	    if(PrikazanTextDraw[playerid] == 0)
		{
		    new string[80];
	        format(string, sizeof(string), "- Posao ~b~rudar"),PlayerTextDrawSetString(playerid,TDPOSAO[6][playerid], string);
	        format(string, sizeof(string), "- Duzina ugovora: ~y~5"),PlayerTextDrawSetString(playerid,TDPOSAO[3][playerid], string);
	        format(string, sizeof(string), "- Potrebni level: ~y~10"),PlayerTextDrawSetString(playerid,TDPOSAO[2][playerid], string);
			PlayerTextDrawShow(playerid, TDPOSAO[0][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[2][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[4][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[6][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawShow(playerid, TDPOSAO[8][playerid]); PlayerTextDrawShow(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawShow(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 1;
		}
    }
	return 1;
}
RespawnNearbyVehicles(playerid, Float:radi, ignoreveicle = INVALID_PLAYER_ID)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i=1; i<MAX_VEHICLES; i++)
	{
		if(ignoreveicle != i && GetVehicleModel(i))
		{
			new Float:posx, Float:posy, Float:posz;
			new Float:tempposx, Float:tempposy, Float:tempposz;
			GetVehiclePos(i, posx, posy, posz);
			tempposx = (posx - x);
			tempposy = (posy - y);
			tempposz = (posz - z);
			if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{
				RTC(i);
			}
		}
	}
}
GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if (GetPlayerVehicleID(playerid))
	{
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
forward Probusenegume(playerid);
public Probusenegume(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
    {
    new panels, doors, lights, tires;
    GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, tires);
    UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, 5);
    }
    return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	///////////////////////////////////////////////////////////////////////////////
    if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) OnePlayAnim(playerid, "GYMNASIUM", "gym_jog_falloff", 1.5, 0, 0, 0, 0, 0);
    if(newkeys & KEY_SPRINT && !(oldkeys & KEY_SPRINT) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) OnePlayAnim(playerid, "GYMNASIUM", "gym_jog_falloff", 1.5, 0, 0, 0, 0, 0);
 	/////////////////////////////////////////////////////////////////////////////
    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
    {
	    new panels, doors, lights, tires;
	    GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, tires);
	    if(tires != 5)
	    {
		    if (PRESSED(KEY_SPRINT | KEY_JUMP))
		    {
		        busigumetimer[playerid] = SetTimerEx("Probusenegume", 5000, false, "i", playerid);
		    }
		    else if (RELEASED(KEY_SPRINT | KEY_JUMP))
		    {
		        KillTimer(busigumetimer[playerid]);
		    }
	    }
    }
	if(newkeys & KEY_NO)
	{
     	new Float:Xx, Float:Yy, Float:Zz;
		if(dodajezonu[playerid] > -1)
		{
			if(zonalvl[playerid] == 1)
			{
				zonalvl[playerid] = 2;
				new dz = dodajezonu[playerid];
				GetPlayerPos(playerid, Xx,Yy,Zz);
				GZ[dz][mX69] = Xx;
				GZ[dz][mY69] = Yy;
				SCM(playerid, -1, "Sada idite diagonalno u drugu tacku!");
				SacuvajZonu(dz);
				return 1;
			}
			if(zonalvl[playerid] == 2)
			{
				zonalvl[playerid] = 3;
				new dz = dodajezonu[playerid];
				GetPlayerPos(playerid, Xx,Yy,Zz);
				GZ[dz][vX69] = Xx;
				GZ[dz][vY69] = Yy;
				ZonaID[dz] = GangZoneCreate(GZ[dz][mX69], GZ[dz][mY69], GZ[dz][vX69], GZ[dz][vY69]);
				SacuvajZonu(dz);
			    if(GZ[dz][zonaTeam] == 1)	//<<<<----The Vinci Family
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xAA3333AA);
			    }
			    if(GZ[dz][zonaTeam] == 2)    //<<<<----BDT
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xF5DEB3FF);
			    }
			    if(GZ[dz][zonaTeam] == 3)    //<<<<----Groove Street Family
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0x06e006DD);
			    }
			    if(GZ[dz][zonaTeam] == 4)    //<<<<----Ballas
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0x800080FF);
			    }
			    if(GZ[dz][zonaTeam] == 5)    //<<<<----Condor
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xFFDD48EE);
			    }
			    if(GZ[dz][zonaTeam] == 6)    //<<<<----Placenici
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0x729b1aDD);
			    }
			    if(GZ[dz][zonaTeam] == 7)    //<<<<----Blue Lagoon
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0x0000BBDD);
			    }
			    if(GZ[dz][zonaTeam] == 8)    //<<<<----La Cosa Nostra
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0x33CCFFAA);
			    }
			    if(GZ[dz][zonaTeam] == 9)    //<<<<----Da Naga Boys
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xB8860BAA);
			    }
			    if(GZ[dz][zonaTeam] == 10)    //<<<<----Yakuza
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xFF8040EE);
			    }
			    if(GZ[dz][zonaTeam] == 11)    //<<<<----Black Cobra Corporation
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0x000000EE);
			    }
			    if(GZ[dz][zonaTeam] == 12)    //<<<<----DeathRow
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0x872424EE);
			    }
			    if(GZ[dz][zonaTeam] == 13)    //<<<<----The Russia Mafia
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xFF9AFFEE);
			    }
			    if(GZ[dz][zonaTeam] == 14)    //<<<<----Narco Cartel
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xFF9AFFEE);
			    }
			    if(GZ[dz][zonaTeam] == 15)    //<<<<----Loca Cartel
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xFF9AFFEE);
			    }
			    if(GZ[dz][zonaTeam] == 16)    //<<<<----TBB
			    {
			    	GangZoneShowForAll(ZonaID[dz], 0xFF9AFFEE);
			    }
				SCM(playerid, -1, "Sada oznacite tacku preuzimanja unutar zone!");
				return 1;
			}
			if(zonalvl[playerid] == 3)
			{
				zonalvl[playerid] = 4;
				new dz = dodajezonu[playerid];
				GetPlayerPos(playerid, Xx,Yy,Zz);
				GZ[dz][gPickupx] = Xx;
				GZ[dz][gPickupy] = Yy;
				GZ[dz][gPickupz] = Zz;
				SacuvajZonu(dz);
				new string[256];
				new status[64];
				if(GZ[dz][zonaTeam] == 1) { status = "The Vinci Family"; }
				else if(GZ[dz][zonaTeam] == 2) { status = "Black Dragon Triads"; }
				else if(GZ[dz][zonaTeam] == 3) { status = "Groove Street Family"; }
				else if(GZ[dz][zonaTeam] == 4) { status = "Ballas"; }
				else if(GZ[dz][zonaTeam] == 5) { status = "Condor"; }
				else if(GZ[dz][zonaTeam] == 6) { status = "Placenici"; }
				else if(GZ[dz][zonaTeam] == 7) { status = "Blue Lagoon"; }
				else if(GZ[dz][zonaTeam] == 8) { status = "La Cosa Nostra"; }
				else if(GZ[dz][zonaTeam] == 9) { status = "Da Naga Boys"; }
				else if(GZ[dz][zonaTeam] == 10) { status = "Yakuza"; }
				else if(GZ[dz][zonaTeam] == 11) { status = "Black Cobra Corporation"; }
				else if(GZ[dz][zonaTeam] == 12) { status = "DeathRow"; }
				else if(GZ[dz][zonaTeam] == 13) { status = "The Russia Mafia"; }
				else if(GZ[dz][zonaTeam] == 14) { status = "Narco Cartel"; }
				else if(GZ[dz][zonaTeam] == 15) { status = "Loca Cartel"; }
				else if(GZ[dz][zonaTeam] == 15) { status = "TBB"; }
				format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
				ZonaLabel[dz] = CreateDynamic3DTextLabel(string ,0x19B0E3FF,GZ[dz][gPickupx], GZ[dz][gPickupy], GZ[dz][gPickupz],15);
				ZonaPickup[dz] = CreateDynamicPickup(1254, 1, GZ[dz][gPickupx], GZ[dz][gPickupy], GZ[dz][gPickupz]);
				SCM(playerid, -1,"Zona uspesno napravljena!");
				zonalvl[playerid] = -1;
				SacuvajZonu(dz);
				zonalvl[playerid] = -1;
				dodajezonu[playerid] = -1;
				return 1;
			}
		}
	}
	/////////////////////////////////////////////////////////////
	if(newkeys & KEY_FIRE && oldkeys & KEY_CROUCH && IsCbugWeapon(playerid))
    {
        CallLocalFunction("OnPlayerMakeCBug", "i", playerid);
        ClearAnimations(playerid);
		new string[235];
		ResetPlayerWeapons(playerid);
		Frezovan[playerid] = SetTimerEx("Freeze",3000, false, "i", playerid);
	    TogglePlayerControllable(playerid, 0);
		format(string, sizeof(string), "Igrac ~r~%s ~w~mozda koristi ~r~c-bug ~w~! /specon [~w~%d]", GetName(playerid), playerid);
		DodajWarnRed(string);
		TextDrawSetString(WarnTD, string);
	}
	if(KupovinaAuta[playerid] == true)
	{
		new string[128];
		if(newkeys & KEY_RIGHT && !(oldkeys & KEY_RIGHT))
		{
			AutoModel++;
			if(AutoModel > PRODAJA_AUTA-1) { AutoModel = 0; }
			DestroyVehicle(IzlozbenoAuto);
			IzlozbenoAuto = CreateVehicle(AutoSalon[AutoModel][0], AIZLOZBENO_X,AIZLOZBENO_Y,AIZLOZBENO_Z,AIZLOZBENO_A, 1, 1, 30000);
			format(string,sizeof(string),"%s",ImenaVozila[GetVehicleModel(IzlozbenoAuto) - 400]);
			PlayerTextDrawSetString(playerid,TDProdajaVozila[2][playerid],string);
			format(string,sizeof(string),"Cena: ~g~%d$",AutoSalon[AutoModel][1]);
			PlayerTextDrawSetString(playerid,TDProdajaVozila[3][playerid],string);
		}
		else if(newkeys & KEY_LEFT && !(oldkeys & KEY_LEFT))
		{
			AutoModel--;
			if(AutoModel < 0) { AutoModel = PRODAJA_AUTA-1; }
			DestroyVehicle(IzlozbenoAuto);
			IzlozbenoAuto = CreateVehicle(AutoSalon[AutoModel][0], AIZLOZBENO_X,AIZLOZBENO_Y,AIZLOZBENO_Z,AIZLOZBENO_A, 1, 1, 30000);
			format(string,sizeof(string),"%s",ImenaVozila[GetVehicleModel(IzlozbenoAuto) - 400]);
			PlayerTextDrawSetString(playerid,TDProdajaVozila[2][playerid],string);
			format(string,sizeof(string),"Cena: ~g~%d$",AutoSalon[AutoModel][1]);
			PlayerTextDrawSetString(playerid,TDProdajaVozila[3][playerid],string);
		}
		else if(newkeys & KEY_SECONDARY_ATTACK)
		{
			if(PlayerInfo[playerid][pPosedovanjeAuta] != -1 && PlayerInfo[playerid][pPosedovanjeAuta2] != -1) return SCM(playerid,-1," "CRVENA"Vec posedujes 2 auta!");
			if(PlayerInfo[playerid][pNovacDzep] < AutoSalon[AutoModel][1]) return SCM(playerid,-1,"[V:RPG] "CRVENA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(VoziloInfo); i++)
			{
			    new Fajl[64];
   			 	format(Fajl, sizeof(Fajl), AUTO_FILE, i);
       			if(!fexist(Fajl))
       			{
				    new poz = random(sizeof(RandomAutoSpawn));
				    new poz1 = random(sizeof(RandomAutoSpawnLV));
				    g_NovacMinus(playerid,AutoSalon[AutoModel][1]);
				    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1) { PlayerInfo[playerid][pPosedovanjeAuta2] = i; } else PlayerInfo[playerid][pPosedovanjeAuta] = i;
	 				VoziloInfo[i][vModel] = AutoSalon[AutoModel][0];
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 2172.9819,1400.6012,11.0625))
                    {
                    VoziloInfo[i][vPozX] = RandomAutoSpawnLV[poz1][0];
                    VoziloInfo[i][vPozY] = RandomAutoSpawnLV[poz1][1];
                    VoziloInfo[i][vPozZ] = RandomAutoSpawnLV[poz1][2];
                    VoziloInfo[i][vPozA] = RandomAutoSpawnLV[poz1][3];
                    }
                    else
                    {
                    VoziloInfo[i][vPozX] = RandomAutoSpawn[poz][0];
                    VoziloInfo[i][vPozY] = RandomAutoSpawn[poz][1];
                    VoziloInfo[i][vPozZ] = RandomAutoSpawn[poz][2];
                    VoziloInfo[i][vPozA] = RandomAutoSpawn[poz][3];
                    }
                    VoziloInfo[i][vSpawn] = 0;
					VoziloInfo[i][vBoja1] = 0;
					VoziloInfo[i][vBoja2] = 0;
					VoziloInfo[i][vImaVlasnika] = 1;
					VoziloInfo[i][vZakljucan] = 1;
					VoziloInfo[i][vDroga] = 0;
					VoziloInfo[i][vMats] = 0;
					VoziloInfo[i][vOruzije] = -1;
					VoziloInfo[i][vMunicija] = 0;
					VoziloInfo[i][vRadio] = 0;
					strmid(VoziloInfo[i][vVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					TogglePlayerControllable(playerid, 1);
					VoziloInfo[i][vID] = CreateVehicle(AutoSalon[AutoModel][0], VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA], VoziloInfo[i][vBoja1], VoziloInfo[i][vBoja2], 30000);
		          	KupovinaAuta[playerid] = false; autokatalog = 0;
		          	UkloniVozilaTD(playerid); SetCameraBehindPlayer(playerid);
		          	SacuvajVozilo(i); SavePlayer(playerid); StatusMotora(playerid, 1);
		          	SetPlayerCheckpoint(playerid, VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ], 5.0);
		          	PosaoGPS[playerid] = 1; Fuel[GetPlayerVehicleID(playerid)] = 45;
		          	SCM(playerid,-1,"[V:RPG] | "VARADERO"Uspesno ste kupili auto!");
		          	SCM(playerid,-1,"[V:RPG] | "VARADERO"Autom mozete upravljati komandom /v!");
		          	SCM(playerid,-1,"[V:RPG] | "VARADERO"Lokacija vaseg auta je oznacena crveno na mapi!");
					break;
				}
			}
		}
	    else if (newkeys &  KEY_JUMP)
	    {
	    	TogglePlayerControllable(playerid, 1);
	    	SCM(playerid, -1, "[V:RPG] "CRVENA"Odustali ste od kupovine auta!");
	    	KupovinaAuta[playerid] = false; autokatalog = 0;
			UkloniVozilaTD(playerid);
			SetCameraBehindPlayer(playerid);
	    }
	}
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(newkeys & KEY_ACTION)
	{
		if(GMDuty[playerid] == 1 || AdminDuty[playerid] == 1 || saduty[playerid] == 1)
		{
			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{

				RespawnNearbyVehicles(playerid, 5.0, GetPlayerVehicleID(playerid));
				new stringtow[128];
				format(stringtow, sizeof(stringtow), ""SRWBOJA"[V:RPG] - [PARKIRAJTE KOLA LEPO ILI ODE DOZVOLA]");
				e_RadiusMSG(30.0, playerid, HEX_PROX, stringtow);
			}
		}
	}
	if(newkeys & KEY_ACTION)
	{
		if(PolicajacNaDuznosti[playerid] == 1)
		{
			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{

				new stringtow[128];
				format(stringtow, sizeof(stringtow), ""VARADERO"| POLICIJA | Zaustavite vozilo sa strane, ugasite motor naredjuje vam Policija");
				e_RadiusMSG(30.0, playerid, HEX_PROX, stringtow);
			}
		}
	}
	if(newkeys & KEY_YES&& !(oldkeys & KEY_YES))
	{
		if(gettime() < tempomatt[playerid]) return 1;
		new Float:vhp;
		GetVehicleHealth(GetPlayerVehicleID(playerid), vhp);
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) != 481 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 509 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 510 && vhp > 500.0)
		{
			new vid = GetPlayerVehicleID(playerid);
			if(GetSpeed(playerid) == 0) return false;
			new Float:x, Float:y, Float:z;
			GetVehicleVelocity(vid, x, y, z);
			GetVehicleZAngle(vid, PlayerHeadingAngle[playerid]);
			DistanceFlat(0, 0, x, y, PlayerCruiseSpeed[playerid]);
			GameTextForPlayer(playerid, "~w~Tempomat~n~~g~upaljen", 1000, 1);
			SetTimerEx("CruiseControl", 500, false, "d", playerid);
			tempomatt[playerid] = gettime() + 30;
		}
	}
	else if(PlayerCruiseSpeed[playerid] != 0.00 && (newkeys & KEY_HANDBRAKE))
	{
	    PlayerCruiseSpeed[playerid] = 0.00;
		GameTextForPlayer(playerid, "~w~Tempomat~n~~r~ugasen", 1000, 1);
	}
	if(HOLDING( KEY_FIRE ))
	{
		if(IsPlayerInRangeOfPoint(playerid, 7, PozarX, PozarY, PozarZ))
		{
			if(Pozarcic == 1)
			{
				if(GetPlayerWeapon(playerid) == 42)
				{
					if(PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pClan] == 18)
					{
						if(VatraEquip[playerid] == 1)
						{
							GameTextForPlayer(playerid, "~w~Gasite ~r~vatru~w~!~n~Prskajte ~r~vatru ~b~10 sekundi~n~~w~da biste je ugasili~n~i zaradili novac!", 3000, 3);
							SetTimerEx("TestGasenje",10000, false, "i", playerid);
						}
					}
				}
			}
		}
	}
	if(HOLDING( KEY_FIRE | KEY_HANDBRAKE))
	{
		if(IsPlayerInRangeOfPoint(playerid, 7, PozarX, PozarY, PozarZ))
		{
			if(Pozarcic == 1)
			{
				if(GetPlayerWeapon(playerid) == 42)
				{
					if(PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pClan] == 18)
					{
						if(VatraEquip[playerid] == 1)
						{
						GameTextForPlayer(playerid, "~w~Gasite ~r~vatru~w~!~n~Prskajte ~r~vatru ~b~10 sekundi~n~~w~da biste je ugasili~n~i zaradili novac!", 3000, 3);
						SetTimerEx("TestGasenje",10000, false, "i", playerid);
						}
					}
				}
			}
		}
	}
	if((newkeys == KEY_YES))
    {
		new string[100];
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 299.9264,1416.3710,727.4360))
		{
			if(PlayerInfo[playerid][pNovacDzep] <= KupovnaCena) return GameTextForPlayer(playerid, "~r~Nemate dovoljno novca", 5000, 1);
			format(string, sizeof(string), "* Kupili ste 1 zlatnik za $%d.", KupovnaCena);
			SendClientMessage(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pZlato] += 1;
			KupovnaCena++;
			ProdajnaCena++;
			g_NovacMinus(playerid, KupovnaCena);
			new berzastr[300];
			format(berzastr, sizeof(berzastr), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g",KupovnaCena, ProdajnaCena);
			UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
			return 1;
		}
	}
    if((newkeys == KEY_NO))
    {
    	new string[100];
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 299.9264,1416.3710,727.4360))
		{
		if(PlayerInfo[playerid][pZlato] < 1) return SendClientMessage(playerid, COLOR_GREY, "  Nemate zlata!");
		format(string, sizeof(string), "* Prodali ste 1 zlatnik za $%d.", ProdajnaCena);
		SendClientMessage(playerid, COLOR_WHITE, string);
		PlayerInfo[playerid][pZlato] -= 1;
		ProdajnaCena--;
		KupovnaCena--;
		g_NovacPlus(playerid, ProdajnaCena);
		new berzastr1[300];
		format(berzastr1, sizeof(berzastr1), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna cena zlata: %d / g", KupovnaCena, ProdajnaCena);
		UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr1);
		return 1;
		}
	}
	if(newkeys & KEY_CROUCH)
	{
    new string[100];
    if(IsPlayerInRangeOfPoint(playerid, 10.0, 1590.4000244141, -1638, 15.199999809265)) //PD KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(kapijapd1,1597.4000244141, -1638 ,15.199999809265, 2.00);
	KapijeTimer[playerid] = SetTimer("pdkapija1", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[LSPD] "BELA"Samo clanovi LSPD!");
	}
	///////////////////////////////////////////////////////////////////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -2314.92310, -1639.14685, 484.40109))   // RM KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
	MoveDynamicObject(orgnabrdukapija[0], -2324.29517, -1636.64746, 484.40109, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeRM", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"Russian Mafia | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[BDT]: "BELA"Samo clanovi Russian Mafia!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1487.04, -1762.43, 3284.27))   // PD MINI ZATVOR
	{
	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(lspdz, 1487.04, -1761.07, 3284.27, 2.0);
	KapijeTimer[playerid] = SetTimer("Zatvaranje1", 7000, 0);
	format(string, sizeof(string), "* %s uzima kljuc i otvara vrata.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Vrata su otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[LSPD] "BELA"Samo clanovi LSPD!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,1544.6999511719, -1630.8000488281, 13.10000038147)) //PD RAMPA
	{
	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	DestroyDynamicObject(pdrampazatvorena);
	pdrampaotvorena = CreateDynamicObject(968, 1544.6999511719, -1630.8000488281, 13.10000038147, 0, 353.99993896484, 269.99996948242);
	KapijeTimer[playerid] = SetTimer("pdrampazatvori", 7000, 0);
	format(string, sizeof(string), "* %s otvara rampu.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Rampa je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[LSPD] "BELA"Samo clanovi LSPD!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 15.0, -723.1874,912.6880,12.1328))//Blue Lagoon
	{
	if(PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(kapijapo, -713.94, 911.94, 11.83, 2.0);
	format(string, sizeof(string), "* %s otvara rampu.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SetTimer("PoKapija", 7000, 0);
	}
	else return SCM(playerid,-1, ""SRWBOJA"[Blue Lagoon] "BELA"Samo clanovi Privatne org!");
	}
    else if(IsPlayerInRangeOfPoint(playerid, 10.0, 24.2000000,1898.1999500,19.4000000))   // Hangar kapija
    {
    if(PlayerInfo[playerid][pLider] != 0 || PlayerInfo[playerid][pClan] != 0 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
	MoveDynamicObject(kapijahangar,24.3000000,1898.1999500,13.9000000, 3.0 );
	KapijeTimer[playerid] = SetTimer("hkapijadole", 7000, 0);
    format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"Hangar | "BELA"Kapija je spustena vratice se automatski!");
    }
    else return SCM(playerid,-1, ""VARADERO"[Hangar]: "BELA"Samo clanovi Mafija i bandi!");
    }
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -658.20, 921.77, 11.84))//Blue Lagoon 1
	{
	if(PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(kapijapo1, -658.20,921.77,6.99, 2.0);
	format(string, sizeof(string), "* %s otvara rampu.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SetTimer("PoKapija1", 7000, 0);
	}
	else return SCM(playerid,-1, ""SRWBOJA"[Blue Lagoon] "BELA"Samo clanovi Privatne org!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 15.0, 1264.89, -2045.90, 60.73))//Blue Lagoon
	{
	if(PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(kapijapo3, 1277.9554, -2046.4263, 62.3843, 2.0);
	format(string, sizeof(string), "* %s otvara rampu.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SetTimer("Po3Kapija", 7000, 0);
	}
	else return SCM(playerid,-1, ""SRWBOJA"[DNB] "BELA"Samo clanovi DNB!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -1064.71167, -1277.46326, 129.95421))//Privatna org 3
    {
    if(PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
    MoveDynamicObject(mafiakapija, -1064.7117, -1268.1353, 129.9542, 2.0);
    format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
    e_RadiusMSG(20.0, playerid, HEX_PROX, string);
    KapijeTimer[playerid] = SetTimer("ZatvaranjeDeathRow", 7000, 0);
    }
    else return SCM(playerid,-1, ""SRWBOJA"[Death Row] "BELA"Samo clanovi Death Row!");
    }
	else if(IsPlayerInRangeOfPoint(playerid, 15.0, 2806.94922, 2663.75562, 4.85827))//La Cosa Nostra
	{
	if(PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(kapija2po, 2806.94922, 2663.75562, 4.85827, 2.0);
	format(string, sizeof(string), "* %s otvara rampu.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SetTimer("Po2Kapija", 7000, 0);
	}
	else return SCM(playerid,-1, ""SRWBOJA"[La Cosa Nostra] "BELA"Samo clanovi La Cosa Nostra-a!");
    }
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1026.2448,-386.9195,70.8473))   // SA KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(sakapija, 1036.1999500,-367.8999900,75.6000000, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeSAS", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"Hitman | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[Hitman]: "BELA"Samo clanovi Hitman-a!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1024.5835,-362.5315,73.6403))   // SA KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(sakapija, 1036.1999500,-367.8999900,75.6000000, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeSAS", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"Hitman | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[Hitman]: "BELA"Samo clanovi Hitman-a!");
    }
    ////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1286.0385, -1652.5621, 13.5469)) //INTERVENTNA KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(interventnakapija,1285.58533, -1652.17957, 8.51164, 2.00);
	KapijeTimer[playerid] = SetTimer("interventnakapija1", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"CIA | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[Central Intelligence Agency] "BELA"Samo clanovi Central Intelligence Agency!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 269.85248, 3204.38403, 4.96086)) //BAZA
	{
	if(PlayerInfo[playerid][pSuky] == 4 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1 )
	{
	MoveDynamicObject(ostrvo,269.85248, 3204.38403, -0.69955, 2.00);
	KapijeTimer[playerid] = SetTimer("Ostrvoo", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(20.0, playerid, HEX_PROX, string);
	}
	else return SCM(playerid,-1, ""SRWBOJA"[Ostrvo] "BELA"Samo clanovi Staff-Tima!");
	}
	///////////////////////////////////////////////////////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 2234.4287, -2215.4099, 13.5469))   // TVF KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(tvfkapija1, 2239.8999023438, -2220.8999023438, 14.39999961853, 2.0);
	MoveDynamicObject(tvfkapija2, 2228.8000488281, -2210, 14.39999961853, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeTVF", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"TVF | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[TVF]: "BELA"Samo clanovi TVF!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -75.9113, -352.2065, 3.1565))   // BASE KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(basekapija, -75.6983, -364.0204, 3.1565, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeBASE", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"Yakuza | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[Yakuza]: "BELA"Samo clanovi Yakuza-a!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -75.8444, -326.9831, 6.1236))   // BASE KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
    MoveDynamicObject(basekapija1, -75.8444, -326.9831, 2.5254, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeBASE1", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"Yakuza | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[Base 5]: "BELA"Samo clanovi Yakuza!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 785.59997558594, -1152.4000244141, 25.200000762939))   // Condor KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(condorkapija, 785.59997558594, -1152.4000244141, 19.700000762939, 1.00);
	KapijeTimer[playerid] = SetTimer("kapijacondor", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"CONDOR | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[CONDOR] "BELA"Ovu kapiju mogu otvoriti samo clanovi Condora !");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1638.6042, -1142.5026, 23.9063))   // Condor KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 8 || PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(pskapija, 1637.73047, -1142.15271, 20.06953, 1.00);
	KapijeTimer[playerid] = SetTimer("kapijaps", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"Parking Servis | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else
	{
	if(PlayerInfo[playerid][pNovacDzep] < 10001) return SCM(playerid, -1, "[V:RPG] | "SRWBOJA"Nemate dovoljno novca da otvorite kapiju!");
	MoveDynamicObject(pskapija, 1637.73047, -1142.15271, 20.06953, 1.00);
	KapijeTimer[playerid] = SetTimer("kapijaps", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"Parking Servis | "BELA"Kapija je otvorena i zatvorice se automatski!");
	g_NovacMinus(playerid, 10000);
	OrgInfo[PSSef] += 10000;
	SacuvajOrgInfo();
	}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 2178.9497, -2254.9697, 14.7734))   // TVF GARAZA
	{
	if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(tvfgaraza, 2178, -2255.3999023438, 18.799999237061, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeTVFG", 7000, 0);
	format(string, sizeof(string), "* %s otvara garazu.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""SRWBOJA"TVF | "BELA"Garaza je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SRWBOJA"[TVF]: "BELA"Samo clanovi TVF!");
	}
	/////////////////////////////////////////////////////////////////////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1245.1999511719, -767, 93.900001525879))   // BDT KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
	MoveDynamicObject(bdtkapija, 1255.6999511719, -766.90002441406, 93.900001525879, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeBDT", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"BDT | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[BDT]: "BELA"Samo clanovi BDT!");
	}
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -652.613647, -1538.440796, 22.677771))   // TBB KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pAdmin] == 6)
	{
	MoveDynamicObject(Tbbkapija, -652.61365, -1538.44080, 18.84884, 3.00);
	KapijeTimer[playerid] = SetTimer("zatvoritec", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""LJUB"TBB | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""SPLAVA"[TBB] "BELA"Samo clanovi TBB-a !");
	}
	////////////////////////////////////////////////////////////////////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 2285.4829,601.8503,10.4300))
	{
	if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(Bcckapija, 2287.34961, 602.69586, -3.35805, 3.00);
	KapijeTimer[playerid] = SetTimer("ZatvoriBCC", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""CRVENA"BCC | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""CRVENA"[BCC] "BELA"Ovu kapiju mogu otvoriti samo clanovi BCC-A !");
	}
	////////////////////////////////////////////////////////////////////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 43.50505, -1834.50879, 5.7971))
	{
	if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(Lockapija, 43.50505, -1834.50879, 0.00216, 3.00);
	KapijeTimer[playerid] = SetTimer("ZatvoriLoc", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""CRVENA"LC | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""CRVENA"[LC] "BELA"Ovu kapiju mogu otvoriti samo clanovi LC-A !");
	}
	/////////////////////////////////////////////////////////////////////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1304.4070, -798.0610, 84.1406))   // BDT KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
	MoveDynamicObject(bdttkapija, 1303.99194, -789.92285, 85.79224, 2.0);//
	KapijeTimer[playerid] = SetTimer("ZatvaranjeBDTT", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"BDT | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[BDT]: "BELA"Samo clanovi BDT!");
	}
	//////////////////////////////
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -2127.13623, -81.05120, 37.13630))   // NC KAPIJA
	{
	if(PlayerInfo[playerid][pClan] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
    {
	MoveDynamicObject(smithkapija, -2127.13623, -81.05120, 31.54313, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeSmith", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"Narco Cartel | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[Narco Cartel]: "BELA"Samo clanovi Narco Cartel!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0, -1079.0999755859, -1647, 76.300003051758))   // BDT MESTO ZA DROGU
    {
	if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	{
	MoveDynamicObject(bdtdroga, -1079, -1641.8000488281, 76.300003051758, 2.0);
	KapijeTimer[playerid] = SetTimer("ZatvaranjeBDTD", 7000, 0);
	format(string, sizeof(string), "* %s otvara kapiju.", GetName(playerid));
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	SCM(playerid,-1,""VARADERO"BDT | "BELA"Kapija je otvorena i zatvorice se automatski!");
	}
	else return SCM(playerid,-1, ""VARADERO"[BDT]: "BELA"Samo clanovi BDT!");
	}
	return 1;
	}
	if(fudbaltim[playerid] == 2 || fudbaltim[playerid] == 1)
	{
	new Float:x, Float:y, Float:z;
	GetDynamicObjectPos(lopta, x, y, z);
	if(newkeys & KEY_FIRE)
	{
	if(IsPlayerInRangeOfPoint(playerid, 2.5, x, y, z))
	{
	GetPlayerPos(playerid, x, y, z);
	GetXYInFrontOfPlayer(playerid, x, y, 8.0);
	MoveDynamicObject(lopta,x,y,10.2,8.0,0,0,0);
	strelac = playerid;
	}
	}
	}
	if(newkeys & KEY_ACTION)
	{
	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(MehanicarVozila(GetPlayerVehicleID(playerid)))
	    	{
	    		if(PlayerInfo[playerid][pPosao] != POSAO_MEHANICAR) return SCM(playerid, -1, ""VARADERO"[V:RPG] "BELA"Nemas posao mehanicara!");
				new Float:pX, Float:pY, Float:pZ;
				GetPlayerPos(playerid, pX, pY, pZ);
				new Float:vX1, Float:vY1, Float:vZ1;
				new Found = 0, vid = 0;
				while((vid < MAX_VOZILA) && (!Found))
				{
					vid++;
					GetVehiclePos(vid,vX1,vY1,vZ1);
					if((floatabs(pX - vX1) < 7.0) && (floatabs(pY - vY1) < 7.0) && (floatabs(pZ - vZ1) < 7.0) && (vid != GetPlayerVehicleID(playerid)))
					{
						Found = 1;
						if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
						{
						    DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						    SCM(playerid,-1,"[V:RPG] | "HZELENA"Vozilo je otkaceno!");
						}
						else
						{
							AttachTrailerToVehicle(vid, GetPlayerVehicleID(playerid));
							SCM(playerid,-1,"[V:RPG] | "HZELENA"Vozilo je zakaceno!");
						}
					}
				}
				if(!Found)
	   			{
					SCM(playerid,-1,"[V:RPG] | "SRWBOJA"Nema vozila u blizini!");
				}
			}
		}
	}
	/////////////////////////////////////////////////////////////////////////////
	if( newkeys == KEY_SECONDARY_ATTACK )
	{
		for(new i; i < MAX_FIRMI; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]) && !IsPlayerInAnyVehicle(playerid))
			{
			    if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Ne mozete uci u tu firmu!");
			    if(FirmaInfo[i][fZatvoreno] == 1) return GameTextForPlayer(playerid,"~w~Firma ~b~zakljucana",5000,3);
				SetPlayerVirtualWorld(playerid, FirmaInfo[i][fVW]);
				SetPlayerInterior(playerid, FirmaInfo[i][fInt]);
				SetPlayerPos(playerid, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]);
				UsaoFirma[playerid] = i;
				if(FirmaInfo[i][fVrsta] == VRSTA_SEXSHOP) GameTextForPlayer(playerid,"~w~Usli ste u sex shop~n~~r~/kupi",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_RESTORAN) GameTextForPlayer(playerid,"~w~Usli ste u restoran~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_BURG) GameTextForPlayer(playerid,"~w~Usli ste u burg~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_CLUCKIN) GameTextForPlayer(playerid,"~w~Usli ste u cluckin~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_PIZZA) GameTextForPlayer(playerid,"~w~Usli ste u piceriju~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_DISCO) GameTextForPlayer(playerid,"~w~Usli ste u disco~n~~b~/pice",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_BAR) GameTextForPlayer(playerid,"~w~Usli ste u bar~n~~b~/pice",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_PIGPEN) GameTextForPlayer(playerid,"~w~Usli ste u pig pen~n~~b~/pice",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_GYM) GameTextForPlayer(playerid,"~w~Usli ste u teretanu~n~~b~/teretana",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_BARBER) GameTextForPlayer(playerid,"~w~Usli ste u frizerski salon~n~~b~/frizura",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_BINCO) GameTextForPlayer(playerid,"~w~Usli ste u binco butik~n~~b~/odeca",5000,3);
				else if(FirmaInfo[i][fVrsta] == VRSTA_VICTIM) GameTextForPlayer(playerid,"~w~Usli ste u victim butik~n~~b~/odeca",5000,3);
				else if(FirmaInfo[i][fVrsta] == VRSTA_SUBURBAN) GameTextForPlayer(playerid,"~w~Usli ste u suburban butik~n~~b~/odeca",5000,3);
				else if(FirmaInfo[i][fVrsta] == VRSTA_ZIP) GameTextForPlayer(playerid,"~w~Usli ste u zip butik~n~~b~/odeca",5000,3);
                else if(FirmaInfo[i][fVrsta] == VRSTA_KLADIONICA) GameTextForPlayer(playerid,"~w~Usli ste u kladionicu~n~~w~za kupovinu listica ~r~/kupi",5000,3);
				return 1;
			}
        	if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])
	        && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW] && !IsPlayerInAnyVehicle(playerid))
	        {
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]);
				TogglePlayerControllable(playerid, 0);
			    g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);
				UsaoFirma[playerid] = -1;
				return 1;
			}
		}
		for(new i; i < MAX_KUCA; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
			{
    			if(PlayerInfo[playerid][pPosedovanjeKuce] == i || KucaInfo[i][kZatvoreno] == 0)
    		   	{					
                    SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
                    SetPlayerInterior(playerid, KucaInfo[i][kInt]);
                 	SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
					TogglePlayerControllable(playerid, 0);
					g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);                 	
                }
                else
                {
                    GameTextForPlayer(playerid,"~w~Kuca ~r~zakljucana ~w~- /zvoni",5000,3);
                    return 1;
                }
			}
            if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]) && GetPlayerVirtualWorld(playerid) == KucaInfo[i][kVW])
	        {
             	SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
             	SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
             	TogglePlayerControllable(playerid, 0);
			    g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);
             	return 1;
            }
		}
		for(new i; i < MAX_STANOVA; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
			{
    			if(PlayerInfo[playerid][pPosedovanjeStana] == i || StanInfo[i][sZatvoreno] == 0)
    		   	{
                    SetPlayerVirtualWorld(playerid, StanInfo[i][sVW]);
                    SetPlayerInterior(playerid, StanInfo[i][sInt]);
                 	SetPlayerPos(playerid, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]);
					TogglePlayerControllable(playerid, 0);
					g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);
				}
                else
                {
                    GameTextForPlayer(playerid,"~w~Stan ~y~zakljucan",5000,3);
                    return 1;
                }
			}
            if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]) && GetPlayerVirtualWorld(playerid) == StanInfo[i][sVW])
	        {
             	SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]);
				TogglePlayerControllable(playerid, 0);
			    g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);
             	return 1;
            }
		}
		for(new i; i < MAX_VIKENDICA; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ]))
			{
    			if(PlayerInfo[playerid][pPosedovanjeVikendice] == i || VikendiceInfo[i][viZatvoreno] == 0)
    		   	{
                    SetPlayerVirtualWorld(playerid, VikendiceInfo[i][viVW]);
                    SetPlayerInterior(playerid, VikendiceInfo[i][viInt]);
                 	SetPlayerPos(playerid, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ]);
					TogglePlayerControllable(playerid, 0);
					g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);
                }
                else
                {
                    GameTextForPlayer(playerid,"~w~Vikendica ~b~zakljucana",5000,3);
                    return 1;
                }
			}
            if(IsPlayerInRangeOfPoint(playerid, 3.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ]) && GetPlayerVirtualWorld(playerid) == VikendiceInfo[i][viVW])
	        {
             	SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ]);
				TogglePlayerControllable(playerid, 0);
			    g_freeze[playerid] =  SetTimerEx("Freeze",3000, false, "i", playerid);
             	return 1;
            }
		}
	}
   	//////////////////////////////////////////////////////////////////////////////
    if(newkeys & KEY_SUBMISSION)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new engine, lights, alarm, doors, bonnet, boot, objective, string[100];
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			if(engine == 0 || engine == -1)
			{
				new Float:HP;
				GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
				if(HP < 400.0) return SCM(playerid,-1, ""SIVA"Vozilo vam je previse osteceno, pozovite mehanicara!");
				if(Fuel[GetPlayerVehicleID(playerid)] <= 0) return SCM(playerid,-1, ""SIVA"Nemate goriva u vozilu pa ne mozete upaliti motor!");
                SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
				format(string,sizeof(string), "* %s pali motor na vozilu.", GetName(playerid));
				e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			}
			else if(engine == 1)
			{
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, alarm, doors, bonnet, boot, objective);
				format(string,sizeof(string), "* %s gasi motor na vozilu.", GetName(playerid));
				e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			}
		}
	}
 	//////////////////////////////////////////////////////////////////////////////
    if(newkeys == KEY_SECONDARY_ATTACK) // ULAZIUENTERIJERE
	{
	    if(StavljeneLisice[playerid] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Imate lisice pa ne mozete to!");
		if(GetPlayerState(playerid) == 1) UlaziuInterior(playerid);
	}
/////////////////////////////////////////////////////////////////////////////////
    if(newkeys == KEY_SPRINT) // SEF ORGANIZACIJA
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2120.9382,-2270.8269,20.6719))
		{
		   //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "The Vinci Family Sef", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""SRWBOJA"[TVF]: "BELA"Samo clanovi TVF!");
		}
 	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -415.1507, -1633.5364, -68.4132))
	    {
	        //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Black Dragon Triads", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""VARADERO"[BDT]: "BELA"Samo clanovi BDT!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 308.1252,1120.6827,1083.8828))
		{
            //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Grove Street Family", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""ZELENA"[GSF]: "BELA"Samo clanovi GSF!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2455.6946,-1706.6046,1013.5078))
		{
            //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Ballas", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[BALLAS]: "BELA"Samo clanovi Ballas!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1711.8944,-1640.0162,20.2239))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Condor", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[Condor]: "BELA"Samo clanovi Condora!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2451.2080,-1685.5591,1013.5078))
		{
            //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pLider] == 5)
			{
				SPD(playerid, 148, DIALOG_STYLE_LIST, "Ballas Oruzaonica", "Pistol 9mm "SRWBOJA"(1 resurs)\n"BELA"AK47 "SRWBOJA"(2 resursa)\n"BELA"Tec-9 "SRWBOJA"(2 resursa)", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[BALLAS]: "BELA"Samo clanovi Ballas!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 950.0635,831.9800,524.7799))//DR
		{
            //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pLider] == 19)
			{
				SPD(playerid, 1484, DIALOG_STYLE_LIST, "DR Oruzaonica", "Pistol 9mm "SRWBOJA"(1 resurs)\n"BELA"AK47 "SRWBOJA"(2 resursa)\n"BELA"Tec-9 "SRWBOJA"(2 resursa)", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[DR]: "BELA"Samo clanovi DR!");
        }
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1734.1084,-1660.5541,20.2427))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pLider] == 9)
			{
				SPD(playerid, 1481, DIALOG_STYLE_LIST, "Condor Oruzaonica", "Pistol 9mm "SRWBOJA"(1 resurs)\n"BELA"AK47 "SRWBOJA"(2 resursa)\n"BELA"Tec-9 "SRWBOJA"(2 resursa)", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""SRWBOJA"[Condor]: "BELA"Samo clanovi Condora!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -684.3718,933.5969,13.6328))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pLider] == 11)
			{
				SPD(playerid, 1482, DIALOG_STYLE_LIST, "Blue Lagoon Oruzaonica", "Pistol 9mm "SRWBOJA"(1 resurs)\n"BELA"AK47 "SRWBOJA"(2 resursa)\n"BELA"Tec-9 "SRWBOJA"(2 resursa)", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""SRWBOJA"[Blue Lagoon]: "BELA"Samo Lider!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -691.7795,939.8020,13.6328))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Blue Lagoon", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[Blue Lagoon]: "BELA"Samo clanovi Privatne Org!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -53.7273,1118.3241,-6.6925))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "La Cosa Nostra", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[La Cosa Nostra]: "BELA"Samo clanovi La Cosa Nostra-a!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 305.7284,-1511.2084,5.6959))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Russian Mafia", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""SRWBOJA"[Russian Mafia]: "BELA"Samo clanovi Russian Mafia!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 754.1263,-40.3540,1000.5906))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Da Naga Boys", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[Da Naga Boys]: "BELA"Samo clanovi Da Naga Boys!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 265.5046,1844.0194,-29.4295))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Yakuza", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[Yakuza]: "BELA"Samo clanovi Yakuza!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 333.8751,1746.6344,1008.8220))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Black Cobra Corporation", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[Black Cobra Corporation]: "BELA"Samo clanovi Black Cobra Corporation-a!");
		    }
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 261.2585,1832.3589,1010.9294))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Yakuza", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[Yakuza]: "BELA"Samo clanovi Yakuz-a!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2174.5754,-265.4722,36.5156))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 21 || PlayerInfo[playerid][pLider] == 21)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "Narco Cartel", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[Narco Cartel]: "BELA"Samo clanovi Narco Cartel-a!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -430.3754,1306.1533,2.4242))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "DR", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[DR]: "BELA"Samo clanovi DR-a!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 956.5885,103.8902,1001.2659))
		{
			if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "[LC]", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[LC]: "BELA"Samo clanovi LC-a!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1470.0063,1180.0138,-45.9757))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
				SPD(playerid, 120, DIALOG_STYLE_LIST, "[TBB]", "Stanje u sefu\nUzmi mats\nOstavi mats\nUzmi novac\nOstavi novac\nUzmi drogu\nOstavi drogu", "Odaberi", "Izlaz");
			}
			else return SCM(playerid,-1, ""BALLASC"[TBB]: "BELA"Samo clanovi TBB-a!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1071.8682,-896.5525,1043.3033))
		{
		    //if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Morate biti level 7 da bi stavili novac u sef !");
			if(PlayerInfo[playerid][pLider] == 8)
			{
				new string[256];
				format(string, sizeof(string), "Stanje u sefu je %d\nUpisite kolicinu koju zelite da podignete", OrgInfo[PSSef]);
				SPD(playerid, 128, DSI, "Parking Servis", string, "Uredu", "Izlaz");
			}
			else return SCM(playerid,-1, ""VARADERO"[Parking Servis]: "BELA"Samo lider PS-a!");
		}
		if(!IsPlayerInAnyVehicle(playerid))
		{
			for(new b; b < 199; b++)//Loops through all the businesses.
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.0, GarageInfo[b][gEntranceX], GarageInfo[b][gEntranceY], GarageInfo[b][gEntranceZ]))//Checks if player is near the entrance.
				{
					if(GarageInfo[b][gLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ova garaza je zakljucana");//Checks it it is locked/
					SetPlayerPos(playerid, GarageInfo[b][gExitX], GarageInfo[b][gExitY], GarageInfo[b][gExitZ]);
					SetPlayerFacingAngle(playerid, GarageInfo[b][gExitA]);
					SetPlayerVirtualWorld(playerid, GarageInfo[b][gInsideWorld]);
					InsideGarage[playerid] = b;
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 2.0, GarageInfo[b][gExitX], GarageInfo[b][gExitY], GarageInfo[b][gExitZ]) && GetPlayerVirtualWorld(playerid) == GarageInfo[b][gInsideWorld])//Checks if player is in near the exit.
				{
					SetPlayerPos(playerid, GarageInfo[b][gEntranceX], GarageInfo[b][gEntranceY], GarageInfo[b][gEntranceZ]);
					SetPlayerFacingAngle(playerid, GarageInfo[b][gEntranceA]);

					SetPlayerVirtualWorld(playerid, GarageInfo[b][gWorld]);
					InsideGarage[playerid] = 0;
					return 1;
				}
			}
		}

		if(IsPlayerInAnyVehicle(playerid))
		{
			for(new b; b < 199; b++)//Loops through all the businesses.
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.0, GarageInfo[b][gEntranceX], GarageInfo[b][gEntranceY], GarageInfo[b][gEntranceZ]))//Checks if player is near the entrance.
				{
					if(GarageInfo[b][gLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ova garaza je zakljucana");//Checks it it is locked/
					SetVehiclePos(GetPlayerVehicleID(playerid), GarageInfo[b][gExitX], GarageInfo[b][gExitY], GarageInfo[b][gExitZ]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid), GarageInfo[b][gExitA]);
					SetPlayerVirtualWorld(playerid, GarageInfo[b][gInsideWorld]);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GarageInfo[b][gInsideWorld]);
					InsideGarage[playerid] = b;
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 2.0, GarageInfo[b][gExitX], GarageInfo[b][gExitY], GarageInfo[b][gExitZ]) && GetPlayerVirtualWorld(playerid) == GarageInfo[b][gInsideWorld])//Checks if player is in near the exit.
				{
					SetVehiclePos(GetPlayerVehicleID(playerid), GarageInfo[b][gEntranceX], GarageInfo[b][gEntranceY], GarageInfo[b][gEntranceZ]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid), GarageInfo[b][gEntranceA]);
					SetPlayerVirtualWorld(playerid, GarageInfo[b][gWorld]);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GarageInfo[b][gWorld]);
					InsideGarage[playerid] = 0;
					return 1;
				}
			}
		}
	}
	//////////////////////////////////////////////////////////////////////////////////
	if(newkeys & KEY_FIRE)
	{
	    if(PrikazanTextDraw[playerid] == 1)
	    {
		    PlayerTextDrawHide(playerid, TDPOSAO[0][playerid]); PlayerTextDrawHide(playerid, TDPOSAO[1][playerid]);
	        PlayerTextDrawHide(playerid, TDPOSAO[2][playerid]); PlayerTextDrawHide(playerid, TDPOSAO[3][playerid]);
	        PlayerTextDrawHide(playerid, TDPOSAO[4][playerid]); PlayerTextDrawHide(playerid, TDPOSAO[5][playerid]);
	        PlayerTextDrawHide(playerid, TDPOSAO[6][playerid]); PlayerTextDrawHide(playerid, TDPOSAO[7][playerid]);
	        PlayerTextDrawHide(playerid, TDPOSAO[8][playerid]); PlayerTextDrawHide(playerid, TDPOSAO[9][playerid]);
			PlayerTextDrawHide(playerid, TDPOSAO[10][playerid]); PrikazanTextDraw[playerid] = 0;
		}
	}

	
    /////////////////////////////////////////////////////////////////////////////////
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnRconLoginAttempt(ip[], password[], success)
{
    new string [128]; new ime[MAX_PLAYER_NAME]; new ip2[16];
    if(!success)
   	{
        foreach(new i:Player)
   	    {
   	    	GetPlayerIp(i, ip2, sizeof(ip2));
     		if(!strcmp(ip, ip2, true))
	    	{
				RCONPokusaji[i]++;
				format(string, sizeof(string), ""CRVENA"[AC] "SIVA"Pogresio si sifru po %d put, kad pokusaji dodju do 3/3, dobijas ban!",RCONPokusaji[i]);
				SendClientMessage(i, -1, string);
				if(RCONPokusaji[i] == 3)
				{
				    if(PlayerInfo[i][pAdmin] != 6)
				    {
				    	GetPlayerName(i, ime, sizeof(ime));
						format(string, sizeof(string), ""CRVENA"[AC] "SIVA"Igrac %s je banovan zbog pokusaja upada u RCON [3/3]!",ime);
						AdminGameMaster(-1, string);
				        Ban(i);
					}
					if(PlayerInfo[i][pAdmin] >= 6)
				    {
				        RCONPokusaji[i] = 0;
				    }
				}
			}
		}
   	}
   	if(success)
   	{
        foreach(new i:Player)
   	    {
   	        GetPlayerIp(i, ip2, sizeof(ip2));
     		if(!strcmp(ip, ip2, true))
	    	{
				SPD(i,852,DIALOG_STYLE_PASSWORD,"RCON Provera","Da bi mogli da koristite RCON admina, morate da ukucate sigurnosni RCON kodn\nMolimo vas da kod unesete ispod!","Potvrdi","Kick");
			}
		}
	}
	return 1;
}
fDialog(852)
	{
	    if(response)
	    {
	        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
            if(!strcmp(Typed[playerid], "225883", true))
			{
					SendClientMessage(playerid,SVETLOPLAVA,"Imas li ti momak dozvolu za ovo? Uspesno si se ulogovao na RCON!");
		  	}
		  	else
		 	{
		     	Kick(playerid);
			}
		}
		else
		{
		    Kick(playerid);
		}
	}
forward necuupdate();
public necuupdate()
{
        foreach(new playerid:Player)
        {
			zadnjiupdate[playerid] = GetTickCount();		
	  		static zadnjiid[MAX_PLAYERS], menjanjeida[MAX_PLAYERS], promenavremena[MAX_PLAYERS];
	    	new idodvozila = GetPlayerVehicleID(playerid), str[256];
	    	if(idodvozila > 0)
	    	{
        		if(idodvozila != zadnjiid[playerid])
	   			{
	   				if(GetTickCount() - promenavremena[playerid] < 5000)
	    			{
	   					menjanjeida[playerid]++;
	    				if(menjanjeida[playerid] > 3)
    					{
    						new string[100];
							format(string, sizeof(string), ""SRWBOJA"[V:RPG] "SIVA"Djubre po imenu %s je upravo pokusao da baci vozila po serveru pa je kikovan!",GetName(playerid));
							SetVehicleToRespawn(idodvozila); 
							AdminGameMaster(-1, string);
							Kick(playerid);
							return 0;
    					}
        			}
 	  	  			else menjanjeida[playerid] = 1;
        		}
				zadnjiid[playerid] = idodvozila; promenavremena[playerid] = GetTickCount();
	   		}
	    	
			if(PlayerInfo[playerid][pZatvorenVreme] > 0)
				{
					if(UlogovanProvera[playerid] == 1)
					{
						format(str, sizeof(str), "~n~~n~~n~~w~-~b~ ZATVOR~w~ -~n~~b~zatvorska kazna:~r~ %d", PlayerInfo[playerid][pZatvorenVreme]);
						GameTextForPlayer(playerid, str, 1000, 3);
					}
				}
				
		////////////////////////////////////////////////////////////////////////////
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
				OstecenjeVozila(playerid);
	        
			if(IsPlayerInAnyVehicle(playerid))
			{
				if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
				{
					new sspeed[50];
					format(sspeed, sizeof(sspeed), "%d", GetSpeed(playerid));
					PlayerTextDrawSetString(playerid, Brzinomer[playerid][10], sspeed);
					new Float: Pos[4];
					GetVehicleVelocity(GetPlayerVehicleID(playerid), Pos[0], Pos[1], Pos[2]);
					new keys, ud, lr;
					GetPlayerKeys(playerid, keys, ud, lr);
				
				}
			}
		}
		
		return 1;
}
public OnPlayerUpdate(playerid)
{
    
    return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == JEDIVOCE)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(PlayerInfo[playerid][pKruska] < 1) return SCM(playerid, -1, "Nemas dovoljno.");
	                if(JeoBrt[playerid] == 1) return SCM(playerid, -1, "Sacekaj malo!");
	                JeoBrt[playerid] = 1;
	                SetTimerEx("JeoBroto", 45000, false, "i", playerid);
					new Float:hgl;
	              	GetPlayerHealth(playerid, hgl);
			     	SetPlayerHealth(playerid, hgl + 20.0);
					PlayerInfo[playerid][pKruska]--;
					SavePlayer(playerid);
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					new str[128];
					format(str, sizeof(str), "* %s jede krusku.", GetName(playerid));
					e_RadiusMSG(30.0, playerid, HEX_PROX, str);
	            }
                case 1:
	            {
	                if(PlayerInfo[playerid][pJabuka] < 1) return SCM(playerid, -1, "Nemas dovoljno.");
	                if(JeoBrt[playerid] == 1) return SCM(playerid, -1, "Sacekaj malo!");
	                JeoBrt[playerid] = 1;
	                SetTimerEx("JeoBroto", 45000, false, "i", playerid);
	                new Float:hgl;
	              	GetPlayerHealth(playerid, hgl);
			     	SetPlayerHealth(playerid, hgl + 23.0);
					PlayerInfo[playerid][pJabuka]--;
					SavePlayer(playerid);
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					new str[128];
					format(str, sizeof(str), "* %s jede jabuku.", GetName(playerid));
					e_RadiusMSG(30.0, playerid, HEX_PROX, str);
	            }
	            case 2:
	            {
	                if(PlayerInfo[playerid][pSljiva] < 1) return SCM(playerid, -1, "Nemas dovoljno.");
	                if(JeoBrt[playerid] == 1) return SCM(playerid, -1, "Sacekaj malo!");
	                JeoBrt[playerid] = 1;
	                SetTimerEx("JeoBroto", 45000, false, "i", playerid);
	                new Float:hgl;
	              	GetPlayerHealth(playerid, hgl);
			     	SetPlayerHealth(playerid, hgl + 25.0);
					PlayerInfo[playerid][pSljiva]--;
					SavePlayer(playerid);
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					new str[128];
					format(str, sizeof(str), "* %s jede sljivu.", GetName(playerid));
					e_RadiusMSG(30.0, playerid, HEX_PROX, str);
	            }
			}
		}
     }
	/////////////////////////////////////////
	if(strfind(inputtext, "%", true) != -1)
	{
	SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozes koristiti znak procenta u dialogu!!!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerCommandPerformed(playerid,cmdtext[ ],success)
{
    if(success){
		lastcommand[playerid] = gettime();
    }
	if (isnull(cmdtext))
	{
		printf("pokusava cmd exploit %i.", playerid);
		// You can add other crash detect/warning code here.
		return 0;
	}

    if(!success) return SCM(playerid,0xFF0000aa,"[ERROR]: {FFFFFF}Komanda koju ste ukucali ne postoji!");
	return 1;
}


forward warTD();
public warTD()
{
	new str1[256],str2[256];
	format(str1, sizeof str1, "%d",WarBrojanje1);
	TextDrawSetString(TDwar2, str1);
	format(str2, sizeof str2, "%d",WarBrojanje2);
	TextDrawSetString(TDwar5, str2);
	if(WarTrajanje > 0)
	{
		WarTrajanje --;
	}
	else if(WarTrajanje == 0)
	{
		WarTimeR();
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////
forward PayPoeni();
public PayPoeni()
    {
    new sat, minut, sekund, godina, mesec, dan;
    gettimeEx( sat, minut, sekund );
    getdate( godina, mesec, dan );
    foreach(new i : Player) 
    {
    	if( i != IPI && IsPlayerConnected( i ) && UlogovanProvera[ i ] == 1 ) 
		    {
		    PlayerInfo[ i ][ pPayDayPoeni ]++;
		    if( minut >= 0 && minut <= 3 ) 
		    {
	            if( DobioPay[ i ] == 0 ) 
	            {
	            	PayDay( i );
	            }
		    }
    		else if( minut > 3 ) 
    		DobioPay[ i ] = 0;
        }
    }
    return 1;
}
///////////////////////////////////////////////////////////////////////////
forward PayDay(i);
public PayDay(i)
{
	if(!IsPlayerConnected(i) || UlogovanProvera[i] == 0) return 1;
	Neaktivnosti();
	new stariiznos = PlayerInfo[i][pNovacBanka];
	if(PlayerInfo[i][pRent] != -1)
	{
		if(PlayerInfo[i][pNovacBanka] < KucaInfo[PlayerInfo[i][pRent]][kCenaRenta])
		{
			PlayerInfo[i][pRent] = -1;
			PlayerInfo[i][pProveraSpawna] = SPAWN_NORMAL;
			SCM(i, -1, ""SRWBOJA"[V:RPG] "SIVA"Niste imali da platiti kiriju za kucu, iseljeni ste!");
		}
		PlayerInfo[i][pNovacBanka] -= KucaInfo[PlayerInfo[i][pRent]][kCenaRenta];
	}
	if(PlayerInfo[i][pPreostaloZaOtplatu] > 0)
	{
	    if(PlayerInfo[i][pPreostaloZaOtplatu] < PlayerInfo[i][pIznosRate])
	    {
	        PlayerInfo[i][pIznosRate] = PlayerInfo[i][pPreostaloZaOtplatu];
		}
	    PlayerInfo[i][pPreostaloZaOtplatu] -= PlayerInfo[i][pIznosRate];
	    PlayerInfo[i][pNovacBanka] -= PlayerInfo[i][pIznosRate];
	    if(PlayerInfo[i][pPreostaloZaOtplatu] == 0) { PlayerInfo[i][pIznosKredita] = 0; PlayerInfo[i][pIznosRate] = 0; }
	}
    if(PlayerInfo[i][pPayDayPoeni] < 45)
	{
		SCM(i, -1, "[V:RPG] "VARADERO"* Niste igrali dovoljno dugo da dobijete platu!");
		DobioPay[i] = 1;
		return 1;
	}
	if(PlayerInfo[i][pOrgUgovor] > 0)
	{
		PlayerInfo[i][pOrgUgovor]--;
		if(PlayerInfo[i][pOrgUgovor] == 0) SCM(i, -1, ""SRWBOJA"[ Varadero ] "SIVA"Vasa kazna za ulazak u organizaciju je istekla!");
	}
	if(PlayerInfo[i][pPosaoUgovor] > 0) { PlayerInfo[i][pPosaoUgovor]--; }
    new iznosplate = 0, osnova = 0, iskustvo = 0, prihod = 0, rashod = 0, struja = 0, voda = 0, smece = 0, grijanje = 0, porez = 0, kucanajam = 0;
	osnova = 200 + random(250);
	if(PlayerInfo[i][pPromoter] >= 1) { osnova += (50 + random(70)); }
	if(PlayerInfo[i][pVip] >= 1) { osnova += (70 + random(100)); }
	iznosplate = osnova*PlayerInfo[i][pLevel];
    PlayerInfo[i][pExp]++;
    PlayerInfo[i][pBonus]++;
	PlayerInfo[i][pSatiIgre]++;
	iskustvo = (PlayerInfo[i][pLevel] * 2) + 2;
	if(PlayerInfo[i][pPosedovanjeKuce] != -1) { struja += (10 + random(150)); voda += (10 + random(50)); porez += 100; smece += 80; grijanje += 50; }
	if(PlayerInfo[i][pPosedovanjeStana] != -1) { struja += (3 + random(50)); voda += (5 + random(80)); porez += 100; smece += 40; grijanje += 30; }
	if(PlayerInfo[i][pPosedovanjeVikendice] != -1) { struja += (4 + random(5)); voda += (5 + random(100)); porez += 100; smece += 50; grijanje += 40; }
	if(PlayerInfo[i][pPosedovanjeFirme] != -1) { porez += 1000; }
	if(PlayerInfo[i][pPosedovanjeAuta] != -1 && PlayerInfo[i][pPosedovanjeAuta2] != -1) { porez += 2000; }
	if(PlayerInfo[i][pPosedovanjeMotora] != -1) { porez += 1000; }
	if(PlayerInfo[i][pPosedovanjeAviona] != -1) { porez += 5000; }
	if(PlayerInfo[i][pRent] == -1) kucanajam = 0;
	else if(PlayerInfo[i][pRent] != -1) kucanajam = KucaInfo[PlayerInfo[i][pRent]][kCenaRenta];
	new strp1[300],strp2[300],strp[600];
    if(DupliRespekti == 1)
    {
		PlayerInfo[i][pExp]++;
    }
	if(PlayerInfo[i][pLevel] < 20)
	{
		PlayerInfo[i][pExp]+=1;
    }
    if(PlayerInfo[i][pBonus] == 6)
    {
		PlayerInfo[i][pBonus] = 0;
		g_NovacPlus(i, 25000);
    }
    if(PlayerInfo[i][pVip] == 6)
    {
		PlayerInfo[i][pExp]+=2;
    }
    if (PlayerInfo[i][pGM] >= 1 || PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pSpecteam] >= 1 || PlayerInfo[i][pTestAdmin] >= 1)
    {
		PlayerInfo[i][pSatiIgreS]++;
    }
	if(PlayerInfo[i][pExp] >= iskustvo)
	{
		PlayerInfo[i][pLevel]++;
		SetPlayerScore(i, PlayerInfo[i][pLevel]);
		PlayerInfo[i][pExp] -= iskustvo;
		SCM(i, -1, ""VARADERO"Cestitamo presli ste u sledeci level | "CRVENA"LEVELUP!");
		if(PlayerInfo[i][pLevel] == 55)
		{
			SCM(i, -1, ""VARADERO"Cestitamo uspjesno ste se penzionisali");
			PlayerInfo[i][pPosao] = 0; PlayerInfo[i][pPosaoUgovor] = 0;
		}
	}
	new penzia;
	if(PlayerInfo[i][pLevel] < 55)
	{
		format(strp1,sizeof(strp1), ""SIVA"Banka Los Santos | Plata je stigla na vas racun\n\n"SPLAVA"Plata: "BELA"%d$\n\n"CRVENA"Kredit Informacije\n"SPLAVA"Iznos kredita: "ZELENA"%d$\n"SPLAVA"Iznos rate: "ZELENA"%d$\n"SPLAVA"Za otplatu: "ZELENA"%d%\n\n", iznosplate, PlayerInfo[i][pIznosKredita], PlayerInfo[i][pIznosRate], PlayerInfo[i][pPreostaloZaOtplatu]);
		format(strp2,sizeof(strp2), ""CRVENA"Platili ste\n"SPLAVA"Porez na imovinu: "BELA"%d$\n"SPLAVA"Struja: "BELA"%d$\n"SPLAVA"Voda: "BELA"%d$\n"SPLAVA"Smece: "BELA"%d$\n"SPLAVA"Grijanje: "BELA"%d$\n"SPLAVA"Iznajmljena kuca: "BELA"%d$\n\n"CRVENA"Stari iznos: "BELA"%d$\n"ZELENA"Novi iznos: "BELA"%d$", porez, struja, voda, smece,grijanje,kucanajam, stariiznos,PlayerInfo[i][pNovacBanka]+iznosplate);
		format(strp, sizeof(strp), "%s%s", strp1, strp2);
		SCM(i,-1,"V:RPG| "HZELENA"Plata je stigla na vas bankovni racun!");
		penzia = 0;
	}
	else
	{
		penzia = 500;
		format(strp1,sizeof(strp1), ""SIVA"Banka Los Santos | Penzija je stigla na vas racun\n\n"SPLAVA"Penzia: "BELA"%d$\n\n", iznosplate + penzia);
		format(strp2,sizeof(strp2), ""CRVENA"Platili ste\n"SPLAVA"Porez na imovinu: "BELA"%d$\n"SPLAVA"Struja: "BELA"%d$\n"SPLAVA"Voda: "BELA"%d$\n"SPLAVA"Smece: "BELA"%d$\n"SPLAVA"Grijanje: "BELA"%d$\n"SPLAVA"Iznajmljena kuca: "BELA"%d$\n\n"CRVENA"Stari iznos: "BELA"%d$\n"ZELENA"Novi iznos: "BELA"%d$", porez, struja, voda, smece,grijanje,kucanajam, stariiznos,PlayerInfo[i][pNovacBanka]+iznosplate);
		format(strp, sizeof(strp), "%s%s", strp1, strp2);
		SCM(i,-1,"V:RPG| "HZELENA"Penzija je stigla na vas bankovni racun!");
	}

	SPD(i, 218, DIALOG_STYLE_MSGBOX, ""BELA"Los Santos Banka", strp, "Izadji", "");
	prihod = iznosplate + penzia;
	rashod = struja + voda + porez + smece + grijanje;
	PlayerInfo[i][pNovacBanka] += prihod;
	PlayerInfo[i][pNovacBanka] -= rashod;
	PlayerInfo[i][pPayDayPoeni] = 0;
	DobioPay[i] = 1;
	new stringlevel[9+5];
	format(stringlevel, sizeof(stringlevel),"LEVEL:_%d",PlayerInfo[i][pLevel]);	
	PlayerTextDrawSetString(i, NwnEditor_PTD[i][11], stringlevel);
	SavePlayer(i);
	return 1;

}
/////////////////////////////////////////////CUVANJA/CITANJA////////////////////////////////////////////////////

forward _sqlLoadAccount(playerid);
public _sqlLoadAccount(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return (false);
	else 
	{
		cache_get_value_int(0, "SQLID",PlayerInfo[playerid][pSQLID]);
		cache_get_value_name(0, "Name",PlayerInfo[playerid][pName], 32);
		cache_get_value_name(0, "Password", PlayerInfo[playerid][pPassword]);
		cache_get_value_int(0, "Adminpin",PlayerInfo[playerid][pAdminpin]);
		cache_get_value_int(0, "NovacDzep",PlayerInfo[playerid][pNovacDzep]);
	    cache_get_value_int(0, "Admin",PlayerInfo[playerid][pAdmin]);
	    cache_get_value_int(0, "DLider",PlayerInfo[playerid][pDozvola1]);
	    cache_get_value_int(0, "DGM",PlayerInfo[playerid][pDozvola2]);
	    cache_get_value_int(0, "DAdmin",PlayerInfo[playerid][pDozvola3]);
	    cache_get_value_int(0, "DRPE",PlayerInfo[playerid][pDozvola4]);
	    cache_get_value_int(0, "DVIP",PlayerInfo[playerid][pDozvola5]);
	    cache_get_value_int(0, "DPromoter",PlayerInfo[playerid][pDozvola6]);
	    cache_get_value_int(0, "DNagrade",PlayerInfo[playerid][pDozvola7]);
	    cache_get_value_int(0, "DPStats",PlayerInfo[playerid][pDozvola8]);
	    cache_get_value_int(0, "DChangeName",PlayerInfo[playerid][pDozvola9]);
	    cache_get_value_int(0, "Ubistava",PlayerInfo[playerid][pUbistava]);
	    cache_get_value_int(0, "Smrti",PlayerInfo[playerid][pSmrti]);
	    cache_get_value_int(0, "Level",PlayerInfo[playerid][pLevel]);
	    cache_get_value_int(0, "Gamemaster",PlayerInfo[playerid][pGM]);
	    cache_get_value_int(0, "Skin",PlayerInfo[playerid][pSkin]);
	    cache_get_value_int(0, "Godine",PlayerInfo[playerid][pGodine]);
	    cache_get_value_int(0, "Disarm",PlayerInfo[playerid][pDisarm]);
	    cache_get_value_int(0, "DisarmVreme",PlayerInfo[playerid][pDisarmVreme]);
	    cache_get_value_int(0, "Drzava",PlayerInfo[playerid][pDrzava]);
	    cache_get_value_int(0, "Pol",PlayerInfo[playerid][pSex]);
	    cache_get_value_int(0, "Tutorial",PlayerInfo[playerid][pTutorial]);
	    cache_get_value_name(0, "Email",PlayerInfo[playerid][pEmail], 128);
		cache_get_value_name(0, "LastSeen",PlayerInfo[playerid][pLastSeen], 50);
	    cache_get_value_int(0, "Lider",PlayerInfo[playerid][pLider]);
	    cache_get_value_int(0, "Clan",PlayerInfo[playerid][pClan]);
	    cache_get_value_int(0, "Rank",PlayerInfo[playerid][pRank]);
	    cache_get_value_int(0, "Mutiran",PlayerInfo[playerid][pMutiran]);
	    cache_get_value_int(0, "NovacBanka",PlayerInfo[playerid][pNovacBanka]);
	    cache_get_value_int(0, "Warn",PlayerInfo[playerid][pWarn]);
	    cache_get_value_int(0, "BankovniRacun",PlayerInfo[playerid][pBankovniRacun]);
	    cache_get_value_int(0, "Zatvor",PlayerInfo[playerid][pZatvor]);
	    cache_get_value_int(0, "ZatvorenVreme",PlayerInfo[playerid][pZatvorenVreme]);
	    cache_get_value_int(0, "MutiranVreme",PlayerInfo[playerid][pMutiranVreme]);
	    cache_get_value_int(0, "Respekti",PlayerInfo[playerid][pExp]);
	    cache_get_value_int(0, "UhapsenPuta",PlayerInfo[playerid][pUhapsenPuta]);
	    cache_get_value_int(0, "Droga",PlayerInfo[playerid][pDroga]);
	    cache_get_value_int(0, "Mats",PlayerInfo[playerid][pMats]);
	    cache_get_value_int(0, "PayDayPoeni",PlayerInfo[playerid][pPayDayPoeni]);
	    cache_get_value_int(0, "SatiIgre",PlayerInfo[playerid][pSatiIgre]);
	    cache_get_value_int(0, "IznosRate",PlayerInfo[playerid][pIznosRate]);
	    cache_get_value_int(0, "IznosKredita",PlayerInfo[playerid][pIznosKredita]);
	    cache_get_value_name(0, "RankName",PlayerInfo[playerid][pRankName], 128);	   
	    cache_get_value_int(0, "PreostaloZaOtplatu",PlayerInfo[playerid][pPreostaloZaOtplatu]);
	    cache_get_value_int(0, "ADozvola",PlayerInfo[playerid][pADozvola]);
	    cache_get_value_int(0, "KamionDozvola",PlayerInfo[playerid][pKamionDozvola]);
	    cache_get_value_int(0, "AvionDozvola",PlayerInfo[playerid][pAvionDozvola]);
	    cache_get_value_int(0, "MotorDozvola",PlayerInfo[playerid][pMotorDozvola]);
	    cache_get_value_int(0, "BrodDozvola",PlayerInfo[playerid][pBrodDozvola]);
	    cache_get_value_int(0, "GunDozvola",PlayerInfo[playerid][pGunDozvola]);
	    cache_get_value_int(0, "Skinuto",PlayerInfo[playerid][pSkinuto]);
	    cache_get_value_int(0, "PosedovanjeFirme",PlayerInfo[playerid][pPosedovanjeFirme]);
	    cache_get_value_int(0, "Mobilni",PlayerInfo[playerid][pMobilni]);
	    cache_get_value_int(0, "Kartica",PlayerInfo[playerid][pKartica]);
	    cache_get_value_int(0, "Imenik",PlayerInfo[playerid][pImenik]);
	    cache_get_value_int(0, "MobKredit",PlayerInfo[playerid][pMobKredit]);
	    cache_get_value_int(0, "Cigare",PlayerInfo[playerid][pCigare]);
	    cache_get_value_int(0, "Upaljac",PlayerInfo[playerid][pUpaljac]);
	    cache_get_value_int(0, "Kanap",PlayerInfo[playerid][pKanap]);
	    cache_get_value_int(0, "Povez",PlayerInfo[playerid][pPovez]);
	    cache_get_value_int(0, "Naocare",PlayerInfo[playerid][pNaocare]);
	    cache_get_value_int(0, "Sat",PlayerInfo[playerid][pSat]);
	    cache_get_value_int(0, "BorbeniStil",PlayerInfo[playerid][pBorbeniStil]);
	    cache_get_value_int(0, "Posao",PlayerInfo[playerid][pPosao]);
	    cache_get_value_int(0, "Hrana",PlayerInfo[playerid][pHrana]);
		cache_get_value_int(0, "Radio",PlayerInfo[playerid][pRadio]);
	    cache_get_value_int(0, "PosedovanjeKuce",PlayerInfo[playerid][pPosedovanjeKuce]);
	    cache_get_value_int(0, "ProveraSpawna",PlayerInfo[playerid][pProveraSpawna]);
	    cache_get_value_int(0, "Rent",PlayerInfo[playerid][pRent]);
	    cache_get_value_int(0, "PosedovanjeStana",PlayerInfo[playerid][pPosedovanjeStana]);
	    cache_get_value_int(0, "PosedovanjeVikendice",PlayerInfo[playerid][pPosedovanjeVikendice]);
	    cache_get_value_int(0, "OrgUgovor",PlayerInfo[playerid][pOrgUgovor]);
	    cache_get_value_int(0, "PosaoUgovor",PlayerInfo[playerid][pPosaoUgovor]);
	    cache_get_value_int(0, "PosedovanjeAuta",PlayerInfo[playerid][pPosedovanjeAuta]);
	    cache_get_value_int(0, "PosedovanjeAuta2",PlayerInfo[playerid][pPosedovanjeAuta2]);
	    cache_get_value_int(0, "DzeparosVreme",PlayerInfo[playerid][pDzeparosVreme]);
	    cache_get_value_int(0, "PosedovanjeMotora",PlayerInfo[playerid][pPosedovanjeMotora]);
	    cache_get_value_int(0, "Kaciga",PlayerInfo[playerid][pKaciga]);
	    cache_get_value_int(0, "PosedovanjeBicikla",PlayerInfo[playerid][pPosedovanjeBicikla]);
	    cache_get_value_int(0, "PosedovanjeAviona",PlayerInfo[playerid][pPosedovanjeAviona]);
	    cache_get_value_int(0, "PosedovanjePlovila",PlayerInfo[playerid][pPosedovanjePlovila]);
	    cache_get_value_int(0, "Promoter",PlayerInfo[playerid][pPromoter]);
	    cache_get_value_int(0, "Specteam",PlayerInfo[playerid][pSpecteam]);
	    cache_get_value_int(0, "Promoter",PlayerInfo[playerid][pPozicioner]);
	    cache_get_value_int(0, "Minus",PlayerInfo[playerid][pMinus]);
	    cache_get_value_int(0, "Plus",PlayerInfo[playerid][pPlus]);
	    cache_get_value_int(0, "Vip",PlayerInfo[playerid][pVip]);
		cache_get_value_int(0, "DrvoSljiva",PlayerInfo[playerid][pDrvoSljiva]);
		cache_get_value_int(0, "DrvoJabuka",PlayerInfo[playerid][pDrvoJabuka]);
		cache_get_value_int(0, "DrvoKruska",PlayerInfo[playerid][pDrvoKruska]);
		cache_get_value_int(0, "KljucImanja",PlayerInfo[playerid][pPosedovanjeImanja]);
		cache_get_value_int(0, "Jabuka",PlayerInfo[playerid][pJabuka]);
		cache_get_value_int(0, "Sljiva",PlayerInfo[playerid][pSljiva]);
	    cache_get_value_int(0, "Nemas",PlayerInfo[playerid][pNemas]);
	    cache_get_value_int(0, "Goto",PlayerInfo[playerid][pGoto]);
	    cache_get_value_int(0, "Prisluskivanje",PlayerInfo[playerid][pPrisluskivanje]);
	    cache_get_value_int(0, "Prislusk",PlayerInfo[playerid][pPrislusk]);
	    cache_get_value_int(0, "GPS",PlayerInfo[playerid][pGPS]);
	    cache_get_value_int(0, "Pomocnik",PlayerInfo[playerid][pPomocnik]);
	    cache_get_value_int(0, "Cmarenje",PlayerInfo[playerid][pCmarenje]);
	    cache_get_value_int(0, "Radi",PlayerInfo[playerid][pRadi]);
	    cache_get_value_int(0, "Suky",PlayerInfo[playerid][pSuky]);
	    cache_get_value_int(0, "ChatF",PlayerInfo[playerid][pChatF]);
	    cache_get_value_int(0, "RobBank",PlayerInfo[playerid][pRobbankVreme]);
	    cache_get_value_int(0, "KonopacVreme",PlayerInfo[playerid][pKonopacVreme]);
	    cache_get_value_int(0, "PovezVreme",PlayerInfo[playerid][pPovezVreme]);
	    cache_get_value_int(0, "ElektricarVremeDoKraja",PlayerInfo[playerid][pElektricarVreme]);
	    cache_get_value_int(0, "Narucen",PlayerInfo[playerid][pNarucen]);
	    cache_get_value_int(0, "Skripter",PlayerInfo[playerid][pSkripter]);
		cache_get_value_int(0, "DvaV",PlayerInfo[playerid][pDvaV]);
	    cache_get_value_int(0, "Mutirang",PlayerInfo[playerid][pMuteg]);
	    cache_get_value_int(0, "Mutiranl",PlayerInfo[playerid][pMutel]);
	    cache_get_value_int(0, "Diploma",PlayerInfo[playerid][pDiploma]);
	    cache_get_value_int(0, "Vabjuzera",PlayerInfo[playerid][pVabjuzer]);
		cache_get_value_int(0, "Vlidera",PlayerInfo[playerid][pVlidera]);
		cache_get_value_int(0, "Turcin",PlayerInfo[playerid][pTurcin]);
		cache_get_value_int(0, "VAdmin",PlayerInfo[playerid][pVA]);
		cache_get_value_int(0, "VGM",PlayerInfo[playerid][pVGM]);
		cache_get_value_int(0, "Probaj",PlayerInfo[playerid][pProbaj]);
		cache_get_value_int(0, "TestAdmin",PlayerInfo[playerid][pTestAdmin]);
		cache_get_value_int(0, "PUBG",PlayerInfo[playerid][pPUBG]);
		cache_get_value_int(0, "Kantica",PlayerInfo[playerid][pKantica]);
	    cache_get_value_int(0, "abjuzera",PlayerInfo[playerid][pAbjuzer]);
	    cache_get_value_int(0, "Pasos",PlayerInfo[playerid][pPasos]);
	    cache_get_value_int(0, "Kzlato",PlayerInfo[playerid][pKzlato]);
	    cache_get_value_int(0, "Married",PlayerInfo[playerid][pMarried]);
	    cache_get_value_int(0, "UPUBG",PlayerInfo[playerid][pUPUBG]);
	    cache_get_value_name(0, "MarriedTo",PlayerInfo[playerid][pMarriedTo], MAX_PLAYER_NAME);
	    cache_get_value_int(0, "War",PlayerInfo[playerid][pWar]);
	    cache_get_value_int(0, "Skinuto",PlayerInfo[playerid][pSkinuto]);
	    cache_get_value_int(0, "Privilegija",PlayerInfo[playerid][pPrivilegija]);
	    cache_get_value_int(0, "LPodg",PlayerInfo[playerid][pLPodg]);
	    cache_get_value_int(0, "Ddodelirank",PlayerInfo[playerid][pDdodelirank]);
	    cache_get_value_int(0, "Bonus",PlayerInfo[playerid][pBonus]);
	    cache_get_value_int(0, "Imunitet",PlayerInfo[playerid][pImunitet]);
	    cache_get_value_int(0, "Imunitett",PlayerInfo[playerid][pImunitett]);
	    cache_get_value_int(0, "BrojBanned",PlayerInfo[playerid][pBrojBanned]);
	    cache_get_value_int(0, "BrojWarn",PlayerInfo[playerid][pBrojWarn]);
	    cache_get_value_int(0, "BrojMute",PlayerInfo[playerid][pBrojMute]);
	    cache_get_value_int(0, "BrojJail",PlayerInfo[playerid][pBrojJail]);
	    cache_get_value_int(0, "SatiIgreS",PlayerInfo[playerid][pSatiIgreS]);
	    cache_get_value_int(0, "Zlato",PlayerInfo[playerid][pZlato]);
	    cache_get_value_int(0, "LotoBr1",PlayerInfo[playerid][pLottoNr]);
		cache_get_value_int(0, "Wanted",PlayerInfo[playerid][pTrazeniLevel]);
		cache_get_value_float(0, "PositionX", positionx[playerid]);
		cache_get_value_float(0, "PositionY", positiony[playerid]);
		cache_get_value_float(0, "PositionZ", positionz[playerid]);
		cache_get_value_int(0, "PositionInt",positionint[playerid]);
		cache_get_value_int(0, "PositionVw",positionvw[playerid]);
		cache_get_value_int(0, "PistolSkill",PlayerInfo[playerid][pPistSkill]);
		cache_get_value_int(0, "SilencedSkill",PlayerInfo[playerid][pSilenSkill]);
		cache_get_value_int(0, "DesertSkill",PlayerInfo[playerid][pDesertSkill]);
		cache_get_value_int(0, "ShotgunSkill",PlayerInfo[playerid][pShotgSkill]);
		cache_get_value_int(0, "SawnoffSkill",PlayerInfo[playerid][pSawnSkill]);
		cache_get_value_int(0, "CombatSkill",PlayerInfo[playerid][pCombSkill]);
		cache_get_value_int(0, "UziSkill",PlayerInfo[playerid][pUziSkill]);
		cache_get_value_int(0, "SMGSkill",PlayerInfo[playerid][pSmgSkill]);
		cache_get_value_int(0, "AK47Skill",PlayerInfo[playerid][pAkSkill]);
		cache_get_value_int(0, "M4Skill",PlayerInfo[playerid][pM4Skill]);
		cache_get_value_int(0, "RPucitelj",PlayerInfo[playerid][pRPucitelj]);
		cache_get_value_int(0, "Dme",PlayerInfo[playerid][pDme]);
		cache_get_value_int(0, "Rpe",PlayerInfo[playerid][pRPE]);
		cache_get_value_int(0, "PosedovanjeRanca",PlayerInfo[playerid][pPosedovanjeRanca]);
		cache_get_value_int(0, "Donate",PlayerInfo[playerid][pDonate]);
		cache_get_value_int(0, "DutyTime", PlayerInfo[playerid][pDutyTime]);  
		cache_get_value_int(0, "Fchat", PlayerInfo[playerid][pChatF]);
	}

	return 1;
}
////////////////////////////////////////////////
SavePlayer(playerid)
{
    if(UlogovanProvera[playerid] == 1)
    {
    	new query[400];
		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Name` = '%e', `Password` = '%e', `NovacDzep` = %d, `Admin` = %d, `DLider` = %d, `DGM` = %d, `DAdmin` = '%d' WHERE `SQLID` = '%d'",
		GetName(playerid),
		PlayerInfo[playerid][pPassword],
		PlayerInfo[playerid][pNovacDzep],
		PlayerInfo[playerid][pAdmin],
		PlayerInfo[playerid][pDozvola1],
		PlayerInfo[playerid][pDozvola2],
		PlayerInfo[playerid][pDozvola3],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `DRPE` = '%d', `DPromoter` = '%d', `DNagrade` = %d, `DPStats` = %d, `DChangeName` = %d, `DGM` = %d, `Ubistava` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pDozvola4],
		PlayerInfo[playerid][pDozvola5],
		PlayerInfo[playerid][pDozvola6],
		PlayerInfo[playerid][pDozvola7],
		PlayerInfo[playerid][pDozvola8],
		PlayerInfo[playerid][pDozvola9],
		PlayerInfo[playerid][pUbistava],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `DutyTime` = '%d', `Smrti` = '%d', `Level` = %d, `Gamemaster` = %d, `Skin` = %d, `Godine` = %d, `Drzava` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pDutyTime],
		PlayerInfo[playerid][pSmrti],
		PlayerInfo[playerid][pLevel],
		PlayerInfo[playerid][pGM],
		PlayerInfo[playerid][pSkin],
		PlayerInfo[playerid][pGodine],
		PlayerInfo[playerid][pDrzava],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

	    
	    mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Pol` = '%d', `Tutorial` = '%d', `Email` = '%e', `LastSeen` = '%e', `Lider` = %d, `Clan` = %d, `Rank` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pSex],
		PlayerInfo[playerid][pTutorial],
		PlayerInfo[playerid][pEmail],
		PlayerInfo[playerid][pLastSeen],
		PlayerInfo[playerid][pLider],
		PlayerInfo[playerid][pClan],
		PlayerInfo[playerid][pRank],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);
	   
	   
	   	mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Mutiran` = '%d', `NovacBanka` = '%d', `DisarmVreme` = '%d', `Disarm` = '%d', `Warn` = '%d', `BankovniRacun` = '%d', `Zatvor` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pMutiran],
		PlayerInfo[playerid][pNovacBanka],
		PlayerInfo[playerid][pDisarmVreme],
		PlayerInfo[playerid][pDisarm],
		PlayerInfo[playerid][pWarn],
		PlayerInfo[playerid][pBankovniRacun],
		PlayerInfo[playerid][pZatvor],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `ZatvorenVreme` = '%d', `MutiranVreme` = '%d', `Respekti` = '%d', `UhapsenPuta` = '%d', `Droga` = '%d', `RankName` = '%s', `Mats` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pZatvorenVreme],
		PlayerInfo[playerid][pMutiranVreme],
		PlayerInfo[playerid][pExp],
		PlayerInfo[playerid][pUhapsenPuta],
		PlayerInfo[playerid][pDroga],
		PlayerInfo[playerid][pRankName],
		PlayerInfo[playerid][pMats],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `PayDayPoeni` = '%d', `SatiIgre` = '%d', `IznosRate` = %d, `IznosKredita` = %d, `PreostaloZaOtplatu` = %d, `ADozvola` = %d, `KamionDozvola` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pPayDayPoeni],
	    PlayerInfo[playerid][pSatiIgre],
	    PlayerInfo[playerid][pIznosRate],
	    PlayerInfo[playerid][pIznosKredita],
	    PlayerInfo[playerid][pPreostaloZaOtplatu],
	    PlayerInfo[playerid][pADozvola],
	    PlayerInfo[playerid][pKamionDozvola],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


	    mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `AvionDozvola` = '%d', `Prisluskivanje` = '%d', `Prislusk` = %d, `MotorDozvola` = %d, `BrodDozvola` = %d, `GunDozvola` = %d, `PosedovanjeFirme` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pAvionDozvola],
		PlayerInfo[playerid][pPrisluskivanje],
		PlayerInfo[playerid][pPrislusk],
		PlayerInfo[playerid][pMotorDozvola],
		PlayerInfo[playerid][pBrodDozvola],
		PlayerInfo[playerid][pGunDozvola],
		PlayerInfo[playerid][pPosedovanjeFirme],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Mobilni` = '%d', `Kartica` = '%d', `Imenik` = %d, `MobKredit` = %d, `Cigare` = %d, `Upaljac` = %d, `Kanap` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pMobilni],
	    PlayerInfo[playerid][pKartica],
	    PlayerInfo[playerid][pImenik],
	    PlayerInfo[playerid][pMobKredit],
	    PlayerInfo[playerid][pCigare],
	    PlayerInfo[playerid][pUpaljac],
	    PlayerInfo[playerid][pKanap],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


	   	mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Naocare` = '%d', `Povez` = '%d', `Sat` = %d, `BorbeniStil` = %d, `Posao` = %d, `Privilegija` = %d, `LPodg` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pNaocare],
        PlayerInfo[playerid][pPovez],
	    PlayerInfo[playerid][pSat],
	    PlayerInfo[playerid][pBorbeniStil],
	    PlayerInfo[playerid][pPosao],
        PlayerInfo[playerid][pPrivilegija],
	    PlayerInfo[playerid][pLPodg],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


	    mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `SatiIgreS` = '%d', `Ddodelirank` = '%d', `Hrana` = %d, `Radio` = %d, `BrojBanned` = %d, `BrojWarn` = %d, `BrojMute` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pSatiIgreS],
		PlayerInfo[playerid][pDdodelirank],
		PlayerInfo[playerid][pHrana],
		PlayerInfo[playerid][pRadio],
		PlayerInfo[playerid][pBrojBanned],
		PlayerInfo[playerid][pBrojWarn],
		PlayerInfo[playerid][pBrojMute],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);
	    
		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `BrojJail` = '%d', `PosedovanjeKuce` = '%d', `ProveraSpawna` = %d, `Rent` = %d, `PosedovanjeStana` = %d, `PosedovanjeVikendice` = %d, `OrgUgovor` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pBrojJail],
		PlayerInfo[playerid][pPosedovanjeKuce],
		PlayerInfo[playerid][pProveraSpawna],
		PlayerInfo[playerid][pRent],
		PlayerInfo[playerid][pPosedovanjeStana],
		PlayerInfo[playerid][pPosedovanjeVikendice],
		PlayerInfo[playerid][pOrgUgovor],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `PosaoUgovor` = '%d', `PosedovanjeAuta` = '%d', `PosedovanjeAuta2` = %d, `DzeparosVreme` = %d, `PosedovanjeMotora` = %d, `Kaciga` = %d, `PosedovanjeBicikla` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pPosaoUgovor],
		PlayerInfo[playerid][pPosedovanjeAuta],
		PlayerInfo[playerid][pPosedovanjeAuta2],
		PlayerInfo[playerid][pDzeparosVreme],
		PlayerInfo[playerid][pPosedovanjeMotora],
		PlayerInfo[playerid][pKaciga],
		PlayerInfo[playerid][pPosedovanjeBicikla],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `PosedovanjeAviona` = '%d', `PosedovanjePlovila` = '%d', `Promoter` = %d, `Specteam` = %d, `Minus` = %d, `Plus` = %d, `Promoter` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pPosedovanjeAviona],
		PlayerInfo[playerid][pPosedovanjePlovila],
		PlayerInfo[playerid][pPromoter],
		PlayerInfo[playerid][pSpecteam],
		PlayerInfo[playerid][pMinus],
		PlayerInfo[playerid][pPlus],
		PlayerInfo[playerid][pPozicioner],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Vip` = '%d', `Goto` = '%d', `Pomocnik` = %d, `Nemas` = %d, `GPS` = %d, `DrvoSljiva` = %d, `DrvoJabuka` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pVip],
		PlayerInfo[playerid][pGoto],
		PlayerInfo[playerid][pPomocnik],
		PlayerInfo[playerid][pNemas],
		PlayerInfo[playerid][pGPS],
		PlayerInfo[playerid][pDrvoSljiva],
		PlayerInfo[playerid][pDrvoJabuka],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `DrvoKruska` = '%d', `KljucImanja` = '%d', `Jabuka` = %d, `Kruska` = %d, `Sljiva` = %d, `Cmarenje` = %d, `Suky` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pDrvoKruska],
		PlayerInfo[playerid][pPosedovanjeImanja],
		PlayerInfo[playerid][pJabuka],
		PlayerInfo[playerid][pKruska],
		PlayerInfo[playerid][pSljiva],
		PlayerInfo[playerid][pCmarenje],
		PlayerInfo[playerid][pSuky],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Fchat` = '%d', `Radi` = '%d', `RobBank` = %d, `KonopacVreme` = %d, `PovezVreme` = %d, `ElektricarVremeDoKraja` = %d, `Narucen` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pChatF],
		PlayerInfo[playerid][pRadi],
		PlayerInfo[playerid][pRobbankVreme],
		PlayerInfo[playerid][pKonopacVreme],
		PlayerInfo[playerid][pPovezVreme],
		PlayerInfo[playerid][pElektricarVreme],
		PlayerInfo[playerid][pNarucen],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `PosedovanjeRanca` = '%d', `Skripter` = '%d', `DvaV` = %d, `Mutirang` = %d, `Mutiranl` = %d, `Diploma` = %d, `Vabjuzera` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pPosedovanjeRanca],
		PlayerInfo[playerid][pSkripter],
		PlayerInfo[playerid][pDvaV],
		PlayerInfo[playerid][pMuteg],
		PlayerInfo[playerid][pMutel],
		PlayerInfo[playerid][pDiploma],
		PlayerInfo[playerid][pVabjuzer],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `Vlidera` = '%d', `Turcin` = '%d', `Kantica` = %d, `abjuzera` = %d, `Pasos` = %d, `Kzlato` = %d, `Married` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pVlidera],
		PlayerInfo[playerid][pTurcin],
		PlayerInfo[playerid][pKantica],
		PlayerInfo[playerid][pAbjuzer],
		PlayerInfo[playerid][pPasos],
		PlayerInfo[playerid][pKzlato],
		PlayerInfo[playerid][pMarried],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `VAdmin` = '%d', `VGM` = '%d', `Probaj` = %d, `TestAdmin` = %d, `PUBG` = %d, `UPUBG` = %d, `MarriedTo` = '%e' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pVA],
		PlayerInfo[playerid][pVGM],
		PlayerInfo[playerid][pProbaj],
		PlayerInfo[playerid][pTestAdmin],
		PlayerInfo[playerid][pPUBG],
		PlayerInfo[playerid][pUPUBG],
		PlayerInfo[playerid][pMarriedTo],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `War` = '%d', `Bonus` = '%d', `Imunitet` = %d, `Imunitett` = %d, `Zlato` = %d, `LotoBr1` = %d, `Wanted` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pWar],
		PlayerInfo[playerid][pBonus],
		PlayerInfo[playerid][pImunitet],
		PlayerInfo[playerid][pImunitett],
		PlayerInfo[playerid][pZlato],
		PlayerInfo[playerid][pLottoNr],
		PlayerInfo[playerid][pTrazeniLevel],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `PositionX` = '%f', `PositionY` = '%f', `PositionZ` = %f, `PositionInt` = %d, `PositionVw` = %d, `PistolSkill` = %d, `SilencedSkill` = '%d' WHERE `SQLID` = '%d'",
		positionx[playerid],
		positiony[playerid],
		positionz[playerid],
		positionint[playerid],
		positionvw[playerid],
		PlayerInfo[playerid][pPistSkill],
		PlayerInfo[playerid][pSilenSkill],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);

		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `DesertSkill` = '%d', `ShotgunSkill` = '%d', `SawnoffSkill` = %d, `CombatSkill` = %d, `UziSkill` = %d, `SMGSkill` = %d, `AK47Skill` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pDesertSkill],
		PlayerInfo[playerid][pShotgSkill],
		PlayerInfo[playerid][pSawnSkill],
		PlayerInfo[playerid][pCombSkill],
		PlayerInfo[playerid][pUziSkill],
		PlayerInfo[playerid][pSmgSkill],
		PlayerInfo[playerid][pAkSkill],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);


		mysql_format(SQL, query, sizeof query, "UPDATE `players` SET `M4Skill` = '%d', `RPucitelj` = '%d', `Dme` = %d, `Donate` = %d, `Rpe` = '%d' WHERE `SQLID` = '%d'",
		PlayerInfo[playerid][pM4Skill],
		PlayerInfo[playerid][pRPucitelj],
		PlayerInfo[playerid][pDme],
		PlayerInfo[playerid][pDonate],
		PlayerInfo[playerid][pRPE],

		PlayerInfo[playerid][pSQLID]);
		mysql_tquery(SQL, query);
		
	}
	return 1;
}
SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, PlayerInfo[playerid][pPistSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pSilenSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDesertSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, PlayerInfo[playerid][pSawnSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, PlayerInfo[playerid][pCombSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, PlayerInfo[playerid][pUziSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pSmgSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAkSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4Skill]);
	return 1;
}
///////////////////////////////////////////////////
function: _SQLLoadOrgPodesavanja()
{
	cache_get_value_name_int(0,"TvfDroga",OrgInfo[TvfDroga]);
	cache_get_value_name_int(0,"BdtDroga",OrgInfo[BdtDroga]);
	cache_get_value_name_int(0,"GsfDroga",OrgInfo[GsfDroga]);
	cache_get_value_name_int(0,"TvfMats",OrgInfo[TvfMats]);
	cache_get_value_name_int(0,"BdtMats",OrgInfo[BdtMats]);
	cache_get_value_name_int(0,"Po3Droga",OrgInfo[Po3Droga]);
	cache_get_value_name_int(0,"Po3Mats",OrgInfo[Po3Mats]);
	cache_get_value_name_int(0,"Po3Novac",OrgInfo[Po4Novac]);
	cache_get_value_name_int(0,"Po4Droga",OrgInfo[Po4Droga]);
	cache_get_value_name_int(0,"Po4Mats",OrgInfo[Po4Mats]);
	cache_get_value_name_int(0,"Po4Novac",OrgInfo[Po3Novac]);
	cache_get_value_name_int(0,"Po2Droga",OrgInfo[Po2Droga]);
	cache_get_value_name_int(0,"Po2Mats",OrgInfo[Po2Mats]);
	cache_get_value_name_int(0,"Po2Novac",OrgInfo[Po2Novac]);
	cache_get_value_name_int(0,"GsfMats",OrgInfo[GsfMats]);
	cache_get_value_name_int(0,"TvfNovac",OrgInfo[TvfNovac]);
	cache_get_value_name_int(0,"BdtNovac",OrgInfo[BdtNovac]);
	cache_get_value_name_int(0,"GsfNovac",OrgInfo[GsfNovac]);
	cache_get_value_name_int(0,"TvfMasina",OrgInfo[TvfMasina]);
	cache_get_value_name_int(0,"BallasDroga",OrgInfo[BallasDroga]);
	cache_get_value_name_int(0,"BallasMats",OrgInfo[BallasMats]);
	cache_get_value_name_int(0,"BallasNovac",OrgInfo[BallasNovac]);
	cache_get_value_name_int(0,"BallasOruzije",OrgInfo[BallasOruzije]);
	cache_get_value_name_int(0,"CondorDroga",OrgInfo[CondorDroga]);
	cache_get_value_name_int(0,"PoDroga",OrgInfo[PoDroga]);
	cache_get_value_name_int(0,"CondorMats",OrgInfo[CondorMats]);
	cache_get_value_name_int(0,"PoMats",OrgInfo[PoMats]);
	cache_get_value_name_int(0,"CondorOruzije",OrgInfo[CondorOruzije]);
	cache_get_value_name_int(0,"PoOruzije",OrgInfo[PoOruzije]);
	cache_get_value_name_int(0,"BaseNovac",OrgInfo[BaseNovac]);
	cache_get_value_name_int(0,"BaseDroga",OrgInfo[BaseDroga]);
	cache_get_value_name_int(0,"BaseMats",OrgInfo[BaseMats]);
	cache_get_value_name_int(0,"BaseOruzije",OrgInfo[BaseOruzije]);
	cache_get_value_name_int(0,"LCNOruzije",OrgInfo[LCNOruzije]);
	cache_get_value_name_int(0,"RbNovac",OrgInfo[RbNovac]);
	cache_get_value_name_int(0,"RbDroga",OrgInfo[RbDroga]);
	cache_get_value_name_int(0,"RbMats",OrgInfo[RbMats]);
	cache_get_value_name_int(0,"LCNNovac",OrgInfo[LCNNovac]);
	cache_get_value_name_int(0,"LCNDroga",OrgInfo[LCNDroga]);
	cache_get_value_name_int(0,"LCNMats",OrgInfo[LCNMats]);
	cache_get_value_name_int(0,"LSPDClanovi",OrgInfo[LSPDClanovi]);
	cache_get_value_name_int(0,"DrzavaNovac",OrgInfo[DrzavaNovac]);
	cache_get_value_name_int(0,"PSSef",OrgInfo[PSSef]);
	cache_get_value_name_int(0,"SmithNovac",OrgInfo[SmithNovac]);
	cache_get_value_name_int(0,"SmithDroga",OrgInfo[SmithDroga]);
	cache_get_value_name_int(0,"SmithMats",OrgInfo[SmithMats]);
	cache_get_value_name_int(0,"LCSNovac",OrgInfo[SmithNovac]);
	cache_get_value_name_int(0,"LCSDroga",OrgInfo[SmithDroga]);
	cache_get_value_name_int(0,"LCSMats",OrgInfo[SmithMats]);
	cache_get_value_name_int(0,"TCNovac",OrgInfo[SmithNovac]);
	cache_get_value_name_int(0,"TCDroga",OrgInfo[SmithDroga]);
	cache_get_value_name_int(0,"TCMats",OrgInfo[SmithMats]);
	printf("[ Sistem ] Podesavanja Organizacija: Uctana su podesavanja organizacija, vreme: (%dms)", cache_get_query_exec_time(MILLISECONDS));
    return 1;
}
///////////////////////////////////////////////////
SacuvajOrgInfo()
{
	new q[1024];
	mysql_format(SQL,q, sizeof q, "UPDATE `org_podesavanja` SET `TvfDroga`= '%d', `BdtDroga` = '%d', `GsfDroga` = '%d', `TvfMats` = '%d', `BdtMats` = '%d', `Po3Droga` = '%d', `Po3Mats` = '%d', `Po3Novac` = '%d', `Po4Droga`='%d'\
	,`Po4Mats` = '%d', `Po4Novac` = '%d', `Po2Droga` = '%d', `Po2Mats` = '%d', `Po2Novac` = '%d', `GsfMats` = '%d', `TvfNovac` = '%d', `BdtNovac` = '%d', `GsfNovac` = '%d', `TvfMasina` = '%d', `BallasDroga`='%d'\
	,`BallasMats` = '%d', `BallasNovac` = '%d', `BallasOruzije` = '%d', `CondorDroga` = '%d', `PoDroga` = '%d' WHERE 1;",
	OrgInfo[TvfDroga],
	OrgInfo[BdtDroga],
	OrgInfo[GsfDroga],
	OrgInfo[Po3Droga],
	OrgInfo[Po3Mats],
	OrgInfo[Po3Novac],
	OrgInfo[Po2Droga],
	OrgInfo[Po2Mats],
	OrgInfo[Po2Novac],
	OrgInfo[Po4Droga],
	OrgInfo[Po4Mats],
	OrgInfo[Po4Novac],
	OrgInfo[TvfMats],
	OrgInfo[BdtMats],
	OrgInfo[GsfMats],
	OrgInfo[TvfNovac],
	OrgInfo[BdtNovac],
	OrgInfo[GsfNovac],
	OrgInfo[TvfMasina],
	OrgInfo[BallasDroga],
	OrgInfo[BallasMats],
	OrgInfo[BallasNovac],
	OrgInfo[BallasOruzije],
	OrgInfo[CondorDroga],
	OrgInfo[PoDroga],
	OrgInfo[CondorMats],
	OrgInfo[PoMats]);
	mysql_tquery(SQL, q);

	q[0] = EOS;
	mysql_format(SQL,q, sizeof q, "UPDATE `org_podesavanja` SET `CondorMats` = '%d', `PoMats` = '%d', `CondorOruzije` = '%d', `PoOruzije` = '%d', `BaseNovac` = '%d', \
	`BaseDroga` = '%d', `BaseMats` = '%d', `BaseOruzije` = '%d', `LCNOruzije` = '%d', `RbNovac` = '%d', `RbDroga` = '%d', `RbMats` = '%d', `LCNNovac`=['%d',`LCNDroga` = '%d', `LCNMats` = '%d', `LSPDClanovi` = '%d', \
	`DrzavaNovac` = '%d', `PSSef` = '%d', `SmithNovac` = '%d', `SmithDroga` = '%d', `SmithMats` = '%d', `LCSNovac` = '%d', `LCSDroga` = '%d', `LCSMats` = '%d', `TCNovac` = '%d', `TCDroga` = '%d', `TCMats`='%d' WHERE 1",
	OrgInfo[CondorOruzije],
	OrgInfo[PoOruzije],
	OrgInfo[BaseNovac],
	OrgInfo[BaseDroga],
	OrgInfo[BaseMats],
	OrgInfo[BaseOruzije],
	OrgInfo[LCNOruzije],
	OrgInfo[RbNovac],
	OrgInfo[RbDroga],
	OrgInfo[RbMats],
	OrgInfo[LCNNovac],
	OrgInfo[LCNDroga],
	OrgInfo[LCNMats],
	OrgInfo[LSPDClanovi],
	OrgInfo[DrzavaNovac],
	OrgInfo[PSSef],
	OrgInfo[SmithNovac],
	OrgInfo[SmithDroga],
	OrgInfo[SmithMats],
	OrgInfo[SmithNovac],
	OrgInfo[SmithDroga],
	OrgInfo[SmithMats],
	OrgInfo[SmithNovac],
	OrgInfo[SmithDroga],
	OrgInfo[SmithMats]);

	mysql_tquery(SQL, q);
	return 1;
}
//////////////////////////////////////////////////
function: _SQLLoadServer()
{	
    cache_get_value_name_int(0,"Registracija",ServerInfo[isRegistracija]);
    cache_get_value_name_int(0,"Oglas",ServerInfo[isOglas]);
    cache_get_value_name_int(0,"Pitanja",ServerInfo[isPitanja]);
    cache_get_value_name_int(0,"Report",ServerInfo[isReport]);
    cache_get_value_name_int(0,"Kupovina",ServerInfo[isdozvolakupovine]);
    printf("[ Sistem ] Server Podesavanja: Uctana su server podesavanja, vreme: (%dms)", cache_get_query_exec_time(MILLISECONDS));
    return 1;
}
//////////////////////////////////////////////////
SacuvajPodesavanja()
{
	new q[150];
	mysql_format(SQL,q, sizeof q, "UPDATE `server_podesavanja` SET `Registracija`= '%d', `Oglas`= '%d', `Pitanja`= '%d', `Report`='%d', `Kupovina`='%d' WHERE 1", \
	ServerInfo[isRegistracija],
    ServerInfo[isOglas],
    ServerInfo[isPitanja],
    ServerInfo[isReport],
    ServerInfo[isdozvolakupovine]);
	mysql_tquery(SQL, q);
    
	
	return 1;
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_RadiusMSG(Float:RadiusBa, playerid, color, const string[])
{
//    if(PlayerInfo[playerid][pSpecating] == 1) return 1;
    new Float:PosX, Float:PosY, Float:PosZ;
    GetPlayerPos(playerid, PosX, PosY, PosZ);
	for(new i = 0; i <= GetPlayerPoolSize(); i++)
	{
		if(UlogovanProvera[playerid] == 1 && UlogovanProvera[i] == 1 && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
		{
			if(IsPlayerInRangeOfPoint(i, RadiusBa, PosX, PosY, PosZ)) SCM(i, color, string);
		}
	}
    return 0;
}
///////////////////////////////////////////////////
forward ZatvaranjeRM();
public ZatvaranjeRM()
{
    MoveDynamicObject(orgnabrdukapija[0],-2314.92310, -1639.14685, 484.40109, 2.00);
    return 1;
}
////////////////////////////////////////////////
forward Ostrvoo();
public Ostrvoo()
{
	MoveDynamicObject(ostrvo,269.85248, 3204.38403, 4.94708, 2.00);
	return 1;
}
////////////////////////////////////////////////
forward interventnakapija1();
public interventnakapija1()
{
	MoveDynamicObject(interventnakapija,1285.58533, -1652.17957, 16.30103, 2.00);
	return 1;
}
//////////////////////////////////////////////////
forward Zatvaranje1();
public Zatvaranje1()
{
	MoveDynamicObject(lspdz, 1487.04, -1762.43, 3284.27,2.0);
	return 1;
}
///////////////////////////////////////////////////
forward kapijaps();
public kapijaps()
{
    MoveDynamicObject(pskapija,1637.73047, -1142.15271, 25.22402, 2.00);
    return 1;
}
///////////////////////////////////////////////////
forward Po3Kapija2();
public Po3Kapija2()
{
    MoveDynamicObject(mafiakapija, -1064.7117, -1268.1353, 129.9542, 2.0);
    return 1;
}
///////////////////////////////////////////////////
forward Po3Kapija();
public Po3Kapija()
{
    MoveDynamicObject(kapijapo3, 1264.89, -2045.90, 60.73,2.0);
    return 1;
}
///////////////////////////////////////////////////
forward PoKapija();
public PoKapija()
{
    MoveDynamicObject(kapijapo, -722.67, 912.14, 11.83,2.0);
    return 1;
}
///////////////////////////////////////////////////
forward PoKapija1();
public PoKapija1()
{
    MoveDynamicObject(kapijapo1, -658.20, 921.77, 11.84,2.0);
    return 1;
}
///////////////////////////////////////////////////
forward Po2Kapija();
public Po2Kapija()
{
    MoveDynamicObject(kapija2po, 2806.94922, 2663.75562, 12.48939,2.0);
    return 1;
}
///////////////////////////////////////////////////
forward kapijacondor();
public kapijacondor()
{
    MoveDynamicObject(condorkapija,785.59997558594, -1152.4000244141, 25.200000762939, 2.00);
    return 1;
}
///////////////////////////////////////////////////
forward ZatvaranjeBASE();
public ZatvaranjeBASE()
{
    MoveDynamicObject(basekapija,-75.9113, -352.2065, 3.1565, 2.00);
    return 1;
}
///////////////////////////////////////////////////
forward ZatvaranjeBASE1();
public ZatvaranjeBASE1()
{
    MoveDynamicObject(basekapija1,-75.8444, -326.9831, 6.1236, 2.00);
    return 1;
}
////////////////////////////////////////////////
forward pdkapija1();
public pdkapija1()
{
	MoveDynamicObject(kapijapd1,1590.4000244141, -1638, 15.199999809265, 2.00);
	return 1;
}
////////////////////////////////////////////////////////
forward ZatvaranjeDeathRow();
public ZatvaranjeDeathRow()
{
    MoveDynamicObject(mafiakapija, -1064.71167, -1277.46326, 129.95421, 2.00);
	return 1;
}
//////////////////////////////////////////////////////
forward ZatvaranjeTVF();
public ZatvaranjeTVF()
{
    MoveDynamicObject(tvfkapija1,2236.3000488281, -2217.3999023438, 14.39999961853, 2.00);
    MoveDynamicObject(tvfkapija2,2232.3999023438, -2213.5, 14.39999961853, 2.00);
	return 1;
}
///////////////////////////////////////////////////
forward ZatvaranjeSAS();
public ZatvaranjeSAS()
{
    MoveDynamicObject(sakapija,1024.8000500,-365.2999900,75.7000000, 2.00);
	return 1;
}
///////////////////////////////////////////////////////
forward ZatvaranjeBDT();
public ZatvaranjeBDT()
{
    MoveDynamicObject(bdtkapija,1245.1999511719, -767, 93.900001525879, 2.00);
	return 1;
}
///////////////////////////////////////////////////////
forward zatvoritec();
public zatvoritec()
{
    MoveDynamicObject(Tbbkapija,-652.613647, -1538.440796, 22.677771, 3.00);
    return 1;
}
///////////////////////////////////////////////////////
forward ZatvaranjeBDTT();
public ZatvaranjeBDTT()
{
    MoveDynamicObject(bdttkapija,1303.87402, -797.16248, 85.73474, 2.00);
	return 1;
}
///////////////////////////////////////////////////////
forward ZatvaranjeSmith();
public ZatvaranjeSmith()
{
    MoveDynamicObject(smithkapija,-2127.07910, -81.13335, 37.09551, 2.00);
	return 1;
}
///////////////////////////////////////////////////////
forward hkapijadole();
public hkapijadole()
{
    MoveDynamicObject(kapijahangar,24.2000000,1898.1999500,19.4000000, 4.5);
	return 1;
}
///////////////////////////////////////////////////////
forward ZatvoriBCC();
public ZatvoriBCC()
{
    MoveDynamicObject(Bcckapija, 2287.330078, 602.700317, 1.249639, 2.00);
	return 1;
}
///////////////////////////////////////////////////////
forward ZatvoriLoc();
public ZatvoriLoc()
{
    MoveDynamicObject(Lockapija, 43.50505, -1834.50879, 5.79710, 2.00);
	return 1;
}
///////////////////////////////////////////////////////
forward ZatvaranjeBDTD();
public ZatvaranjeBDTD()
{
    MoveDynamicObject(bdtdroga,-1079.0999755859, -1647, 76.300003051758, 2.00);
	return 1;
}
//////////////////////////////////////////////////////
forward ZatvaranjeTVFG();
public ZatvaranjeTVFG()
{
    MoveDynamicObject(tvfgaraza,2178, -2255.3999023438, 15.800000190735, 2.00);
	return 1;
}
//------------------------------------------------------------------------------
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ) {
    if(playerid == INVALID_PLAYER_ID) return 1;
    if(GMDuty[playerid] == 1 || AdminDuty[playerid] == 1) {
	    SetPlayerPosFindZ(playerid, fX, fY, fZ);
	}
    return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new string[512];
    format(string, 129, "{FFFFFF}Ime i Prezime: %s\nLevel: %d\nBroj Mobilnog: %d\nPing: %i",GetName(clickedplayerid), PlayerInfo[clickedplayerid][pLevel], PlayerInfo[clickedplayerid][pMobilni], GetPlayerPing(clickedplayerid));
    SPD(playerid, 129, DIALOG_STYLE_MSGBOX, "INFORMACIJE", string, "U redu", "");
	return 1;
}


/////////////////////////////////////////////////////
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if( playertextid == RegisterTD[playerid][29]) { // ovo
        new regstring[512], regname[64]; GetPlayerName(playerid,regname,sizeof(regname));
		format(regstring,sizeof(regstring),""SRWBOJA"'%s', "BELA"dobro dosao na "SRWBOJA"Varadero OGC.\n\n"BELA"Vas korisnicki nalog "CRVENA"nije registrovan "BELA"na serveru.\nMolimo vas unesite zeljenu Lozinku da bi nastavili sa Registracijom !",GetName(playerid));
		SPD(playerid,1,DIALOG_STYLE_PASSWORD,""SRWBOJA"LOZINKA",regstring,""SRWBOJA"Nastavi",""CRVENA"Odustani");
	}
    if(playertextid == RegisterTD[playerid][33])
	{
	    SPD(playerid, 3, DIALOG_STYLE_MSGBOX,""SRWBOJA"SPOL",""BELA"Odaberite vas Spol.",""SRWBOJA"Musko",""CRVENA"Zensko");
 	}
	if( playertextid == RegisterTD[playerid][31]) { // ovo
		SPD(playerid, 5, DIALOG_STYLE_LIST, ""SRWBOJA"DRZAVA", ""SRWBOJA"~ "BELA"Srbija\n"SRWBOJA"~ "BELA"BiH\n"SRWBOJA"~ "BELA"Hrvatska\n"SRWBOJA"~ "BELA"Makedonija\n"SRWBOJA"~ "BELA"Crna Gora\n"SRWBOJA"~ "BELA"Slovenija\n"SRWBOJA"~ "BELA"Ostalo", ""SRWBOJA"Nastavi", ""CRVENA"Odustani");
	}
    if( playertextid == RegisterTD[playerid][30]) { // ovo
		SPD(playerid, 4, 1, ""SRWBOJA"GODINE", ""BELA"Unesite broj vasih Godina. Godine ne mogu biti manje od 7, a vece od 60 !", ""SRWBOJA"Nastavi", ""CRVENA"Odustani");
	}
	if( playertextid == RegisterTD[playerid][32]) { // ovo
		SPD(playerid, 12, 1, ""SRWBOJA"E-MAIL", ""BELA"Unesite vas E-Mail. Molimo vas da vas E-Mail bude tacan.", ""SRWBOJA"Nastavi", ""CRVENA"Odustani");
	}
    if( playertextid == RegisterTD[playerid][34]) {
    	if( InputPassword[ playerid ] == false ) return info(playerid, "Niste odabrali lozinku." );
		if( ChoseCountry[ playerid ] == false ) return info(playerid, "Niste odabrali poreklo." );
		if( InputAge[ playerid ] == false ) return info(playerid, "Niste odabrali godine starosti." );
		if( InputMail[ playerid ] == false ) return info(playerid, "Niste uneli E-Mail." );
		if( RegSex[ playerid ] == 0 ) return info(playerid, "Niste odabrali drzavu." );
        CancelSelectTextDraw( playerid );
		for(new i = 0; i < 37; i ++) {
		PlayerTextDrawHide( playerid, RegisterTD[ playerid ] [ i ] );
		}
		CreatePlayer(playerid);
        
		//--------------------------[POCETNI STATS]---------------------------//
		PlayerInfo[ playerid ][ pNovacBanka ] = 0;
		PlayerInfo[ playerid ][ pLevel ] = 6;
		SetPlayerScore( playerid, PlayerInfo[ playerid ][ pLevel ] );
		PlayerInfo[ playerid ][ pTutorial ] = 0;
		PlayerInfo[ playerid ][ pAdmin ] = 0;
        PlayerInfo[ playerid ][ pLider ] = 0;
		PlayerInfo[ playerid ][ pVip ] = 4;
	    PlayerInfo[ playerid ][ pGM ] = 0;
        PlayerInfo[ playerid ][ pProbaj ] = 0;
		PlayerInfo[ playerid ][ pNovacDzep ] = 500000;
		PlayerInfo[ playerid ][ pDesertSkill ] = 999;
		PlayerInfo[ playerid ][ pM4Skill ] = 999;
        PlayerInfo[ playerid ][ pProveraSpawna ] = SPAWN_NORMAL;
		GivePlayerMoney( playerid, PlayerInfo[ playerid ][ pNovacDzep ] );
        Update_Skin( playerid, PlayerInfo[ playerid ][ pSkin ] );
        SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Uspesno ste se registrovali.");
        TutorialTimer[playerid] = SetTimerEx("Tutorijal",465, false, "ii", playerid, 1 );
	}
	if(playertextid == mdct[3])
    {
	    SPD(playerid,54,DSI,""BELA"Dosije",""SRWBOJA"Unesite ID igraca kome zelite da ocistite wanted\n"BELA"NAPOMENA: "SRWBOJA"Ciscenje wanteda vide svi clanovi!","Unesi","Izlaz");
        return 1;
	}
    if(playertextid == mdct[4])
    {
	    SPD(playerid,56,DSI,""BELA"Wanted Igraca",""SRWBOJA"Unesite ID igraca kome zelis da das wanted level!","Unesi","Izlaz");
        return 1;
	}
    if(playertextid == mdct[5])
    {
	    SPD(playerid,58,DSI,""BELA"Dosije",""SRWBOJA"Unesite ID igraca ciji zelis da proveris dosije...","Unesi","Izlaz");
        return 1;
	}
    if(playertextid == mdct[6])
    {
	    SPD(playerid,60,DSI,""BELA"Lociranje Igraca",""SRWBOJA"Unesite ID igraca kojeg zelis da lociras ukoliko ima wanted level!","Unesi","Izlaz");
        return 1;
	}
    if(playertextid == mdct[7])
    {
		WantedLista(playerid);
		return 1;
    }
    if(playertextid == mdct[9])
    {
	    CancelSelectTextDraw(playerid); MDC[playerid] = 0;
	    for(new i = 0; i < 10; i++) { PlayerTextDrawHide(playerid,mdct[i]); }
	    return 1;
    }
    if(playertextid == Bankomat[2][playerid])
    {
		if(PlayerInfo[playerid][pBankovniRacun] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate bankovni racun!");
		SPD(playerid, 318, DSI,""SPLAVA"Podizanje novca",""BELA"Unesi koliko zelis novca da podignes sa vaseg racuna...","Odaberi","Izlaz");
		return 1;
	}
    if(playertextid == Bankomat[3][playerid])
    {
        new string[100];
        if(PlayerInfo[playerid][pBankovniRacun] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate bankovni racun!");
        format(string, sizeof(string), ""BELA"Imate "ZELENA"%d$ "BELA"novca na vasem racunu...", PlayerInfo[playerid][pNovacBanka]);
        SPD(playerid, 320, DIALOG_STYLE_MSGBOX, ""ZELENA"Stanje Racuna", string, "Ok", "Izlaz");
        return 1;
    }
    ///////////////////////gun
    if(playertextid == GunTD[ playerid ][ 9 ])
    {
        if(Stranica[ playerid ] == 1)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 10;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 373);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Armour");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_12000$");
        }
        else if(Stranica[ playerid ] == 2)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 1;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 348);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Deagle");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_6000$");
        }
        else if(Stranica[ playerid ] == 3)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 2;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 346);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "9mm");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_5000$");
        }
        else if(Stranica[ playerid ] == 4)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 3;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 355);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "AK-47");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_8000$");
        }
        else if(Stranica[ playerid ] == 5)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 4;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 356);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "M4");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_7000$");
        }
        else if(Stranica[ playerid ] == 6)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 5;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 353);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "M5");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_5000$");
        }
        else if(Stranica[ playerid ] == 7)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 6;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 352);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Uzi");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_5700$");
        }
        else if(Stranica[ playerid ] == 8)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 7;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 372);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Tec-9");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_6000$");
        }
        else if(Stranica[ playerid ] == 9)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 8;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 349);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Shotgun");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_8000$");
        }
        else if(Stranica[ playerid ] == 10)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 9;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 358);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Sniper");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_10000$");
        }
    }
    else if(playertextid == GunTD[ playerid ][ 10 ])
    {
        if(Stranica[ playerid ] == 1)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 2;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 346);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "9mm");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_5000$");
        }
        else if(Stranica[ playerid ] == 2)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 3;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 355);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "AK-47");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_8000$");
        }
        else if(Stranica[ playerid ] == 3)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 4;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 356);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "M4");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_7000$");
        }
        else if(Stranica[ playerid ] == 4)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 5;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 353);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "M5");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_5000$");
        }
        else if(Stranica[ playerid ] == 5)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 6;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 352);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Uzi");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_5700$");
        }
        else if(Stranica[ playerid ] == 6)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 7;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 372);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Tec-9");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_6000$");
        }
        else if(Stranica[ playerid ] == 7)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 8;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 349);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Shotgun");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_9000$");
        }
        else if(Stranica[ playerid ] == 8)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 9;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 358);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Sniper");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_10000$");
        }
        else if(Stranica[ playerid ] == 9)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 10;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 373);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Armour");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_12000$");
        }
        else if(Stranica[ playerid ] == 10)
        {
            PlayerTextDrawHide(playerid, GunTD[ playerid ][ 8 ]);
            Stranica[ playerid ] = 1;
            PlayerTextDrawSetPreviewModel(playerid, GunTD[ playerid ][ 8 ], 348);
            PlayerTextDrawShow(playerid, GunTD[ playerid ][ 8 ]);
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 4 ], "Deagle");
            PlayerTextDrawSetString(playerid, GunTD[ playerid ][ 7 ], "Cena:_6000$");
        }
    }
    else if(playertextid == GunTD[ playerid ][ 13 ])
    {
        FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
        if(Stranica[ playerid ] == 1)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 6000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 6000);
            GivePlayerWeapon(playerid, 24, 100);
            FirmaNovac(UsaoFirma[playerid], 6000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili Deagle za 6000$ ( 100 metkova ).");
           	for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 2)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 5000);
            GivePlayerWeapon(playerid, 22, 100);
            FirmaNovac(UsaoFirma[playerid], 5000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili 9mm za 5000$ ( 100 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 3)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(PlayerInfo[playerid][pNovacDzep] < 8000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca!");
            g_NovacMinus(playerid, 8000);
            GivePlayerWeapon(playerid, 30, 150);
            FirmaNovac(UsaoFirma[playerid], 8000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili AK-47 za 8000$ ( 150 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 4)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 7000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 7000);
            GivePlayerWeapon(playerid, 31, 150);
            FirmaNovac(UsaoFirma[playerid], 7000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili M4 za 7000$ ( 150 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 5)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 5000);
            GivePlayerWeapon(playerid, 30, 150);
            FirmaNovac(UsaoFirma[playerid], 5000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili M5 za 5000$ ( 150 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 6)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(PlayerInfo[playerid][pNovacDzep] < 5700) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca!");
            g_NovacMinus(playerid, 5700);
            GivePlayerWeapon(playerid, 28, 150);
            FirmaNovac(UsaoFirma[playerid], 5700);
            SendClientMessage(playerid, -1, "Uspesno ste kupili Uzi za 5700$ ( 150 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 7)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 4000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 6000);
            GivePlayerWeapon(playerid, 32, 150);
            FirmaNovac(UsaoFirma[playerid], 6000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili Tec-9 za 6000$ ( 150 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 8)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 9000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 9000);
            GivePlayerWeapon(playerid, 25, 50);
            FirmaNovac(UsaoFirma[playerid], 9000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili Shotgun za 9000$ ( 50 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 9)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 10000);
            GivePlayerWeapon(playerid, 34, 30);
            FirmaNovac(UsaoFirma[playerid], 10000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili Sniper za 10000$ ( 30 metkova ).");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
        else if(Stranica[ playerid ] == 10)
        {
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
            if(GetPlayerMoney(playerid) < 12000) return SendClientMessage(playerid, -1, "Nemate dovoljno novca.");
            g_NovacMinus(playerid, 12000);
            SetPlayerArmour(playerid, 100);
            FirmaNovac(UsaoFirma[playerid], 12000);
            SendClientMessage(playerid, -1, "Uspesno ste kupili Armour za 12000$");
            for(new i; i < 15; i++) { PlayerTextDrawHide(playerid, GunTD[ playerid ][ i ]); Stranica[ playerid ] = 0; CancelSelectTextDraw(playerid); }
        }
    }
    //////////////////////////
    
    if(playertextid == Bankomat[7][playerid])
    {
		AtmTD(playerid, 2); CancelSelectTextDraw(playerid); BankomatMeni[playerid] = -1;
        return 1;
    }
	return 1;
}
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
                                   Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
                                   Float:fRotX, Float:fRotY, Float:fRotZ,
                                   Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
	new iteam = index;
    if(iteam == 0)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 0;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach1] = modelid;
       	PlayerInfo[playerid][pBone1] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
        SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:0!");
		SaveAttach(playerid);
	}
    if(iteam == 1)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 1;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach2] = modelid;
       	PlayerInfo[playerid][pBone2] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:1!");
		SaveAttach(playerid);
	}
    if(iteam == 2)
    {
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 2;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach3] = modelid;
       	PlayerInfo[playerid][pBone3] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:2!");
		SaveAttach(playerid);
	}
    if(iteam == 3)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 3;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach4] = modelid;
       	PlayerInfo[playerid][pBone4] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:3!");
		SaveAttach(playerid);
	}
    if(iteam == 4)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 4;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach5] = modelid;
       	PlayerInfo[playerid][pBone5] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:4!");
		SaveAttach(playerid);
	}
    if(iteam == 5)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 5;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach6] = modelid;
       	PlayerInfo[playerid][pBone6] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:5!");
		SaveAttach(playerid);
	}
    if(iteam == 6)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 6;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach7] = modelid;
       	PlayerInfo[playerid][pBone7] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:6!");
		SaveAttach(playerid);
	}
    if(iteam == 7)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 7;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach8] = modelid;
       	PlayerInfo[playerid][pBone8] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:7!");
		SaveAttach(playerid);
	}
    if(iteam == 8)
	{
		AttachInfo[playerid][iteam][attIndex] = index;
		AttachInfo[playerid][iteam][attModel] = modelid;
		AttachInfo[playerid][iteam][attBone] = boneid;
		AttachInfo[playerid][iteam][attFOffsetX] = fOffsetX;
		AttachInfo[playerid][iteam][attFOffsetY] = fOffsetY;
		AttachInfo[playerid][iteam][attFOffsetZ] = fOffsetZ;
		AttachInfo[playerid][iteam][attFRotX] = fRotX;
		AttachInfo[playerid][iteam][attFRotY] = fRotY;
		AttachInfo[playerid][iteam][attFRotZ] = fRotZ;
		AttachInfo[playerid][iteam][attFScaleX] = fScaleX;
		AttachInfo[playerid][iteam][attFScaleY] = fScaleY;
		AttachInfo[playerid][iteam][attFScaleZ] = fScaleZ;
       	AttachInfo[playerid][iteam][attIndex] = 8;
       	AttachInfo[playerid][iteam][attStatus] = 1;
       	PlayerInfo[playerid][pAttach9] = modelid;
       	PlayerInfo[playerid][pBone9] = boneid;
       	SetPlayerAttachedObject(playerid,iteam,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
       	SendClientMessage(playerid, 0xFFFFFFFF, "Zavrsio si sredjivanje attacha ID:8!");
		SaveAttach(playerid);
	}
    return 1;
}
///////////////////////////////////////////////////////////////////////////
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz) // u can delete this cous im only using this when i move ATM and thats once in a year xd
{
	if(response == EDIT_RESPONSE_FINAL)
	{
    switch(GetPVarInt(playerid, "EditorMode"))
	{
    case 1: // Jueix's House system plant furniture
    {
    new key = PlayerInfo[playerid][pPosedovanjeKuce];
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, KucaInfo[key][kIzlazX], KucaInfo[key][kIzlazY], KucaInfo[key][kIzlazZ]) || GetPlayerVirtualWorld(playerid) != KucaInfo[key][kVW])
	{
	return 1;
	}
    KucaInfo[key][ObjectID][PlayerEditSlot[playerid]] = FurnID[playerid];
    KucaInfo[key][ObjectPosX][PlayerEditSlot[playerid]] = x;
	KucaInfo[key][ObjectPosY][PlayerEditSlot[playerid]] = y;
	KucaInfo[key][ObjectPosZ][PlayerEditSlot[playerid]] = z;
	KucaInfo[key][ObjectPosRX][PlayerEditSlot[playerid]] = rx;
	KucaInfo[key][ObjectPosRY][PlayerEditSlot[playerid]] = ry;
    KucaInfo[key][ObjectPosRZ][PlayerEditSlot[playerid]] = rz;
    DestroyDynamicObject(FurnObject[playerid]);
    HouseObject[key][PlayerEditSlot[playerid]] = CreateDynamicObject(FurnID[playerid], x, y, z, rx, ry, rz, KucaInfo[key][kVW], KucaInfo[key][kInt], -1, 200.0);
	new String[128];
	format(String,sizeof(String),"Object %i planted and saved successfully.", PlayerEditSlot[playerid]);
	SendClientMessage(playerid, COLOR_ORANGE, String);
	DeletePVar(playerid,"EditorMode");
	}
	case 2: // ATM
    {
    new id = eData[playerid], Float:angle, string[100];
	GetPlayerFacingAngle(playerid, angle);
	if(id != -1)
	{
	AtmInfo[id][aX] = x; AtmInfo[id][aY] = y; AtmInfo[id][aZ] = z;
	AtmInfo[id][aAngle] = rz; DestroyDynamicObject(AtmInfo[id][aObjekat]);
	KreirajAtm(id); SacuvajATM(id);
	
	format(string,sizeof(string),"[V:RPG] "ZELENA"Bankomat ID %d je uspesno editovan!",id);
	SCM(playerid,-1,string);
	id = -1;
	DeletePVar(playerid,"EditorMode");
	}
	}
	}
	return 1;
	}
    if(response == EDIT_RESPONSE_FINAL)
    {
    new id = eData[playerid], Float:angle, string[100];
    GetPlayerFacingAngle(playerid, angle);
    if(id != -1)
    {
    JI[id][zX] = x;
    JI[id][zY] = y;
    JI[id][zZ] = z;
    JI[id][zAngle] = rz;
    DestroyDynamicObject(JI[id][zObjekat]);
    KreirajJelku(id);
    SacuvajJelku(id);
    format(string,sizeof(string),""SRWBOJA"INFO: "BELA"Jelka je uspesno kreirana (ID:%d)",id);
    SCM(playerid,-1,string);
    id = -1;
    return 1;
    }
    }
	if(response == EDIT_RESPONSE_CANCEL)
	{
    switch(GetPVarInt(playerid, "EditorMode"))
	{
    case 1: // Jueix's House system plant furniture
    {
    DestroyDynamicObject(FurnObject[playerid]);
    DeletePVar(playerid,"EditorMode");
    }
    case 2: // ATM
    {
    new id = eData[playerid];
    DestroyDynamicObject(AtmInfo[id][aObjekat]);
    DeletePVar(playerid,"EditorMode"); SacuvajATM(id);
    }
	}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////
WantedLista(playerid)
{
	SCM(playerid,-1,""SRWBOJA"|========= Trenutna lista trazeni =========|");
	new string[128];
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pTrazeniLevel] <= 0) return SCM(playerid,-1,"LSPD | "SRWBOJA"Nema osumnjicenih igraca!");
		if(PlayerInfo[i][pTrazeniLevel] > 0)
		{
			format(string, charsmax(string), ""SRWBOJA"- Ime: %s | Wanted Level (%d)", GetName(i), PlayerInfo[i][pTrazeniLevel]); //conver
			SCM(playerid, -1, string);
		}
	}
	return 1;
}
//______________________________________________________________________________

KreirajJelku(idJelka)
{
    if(JI[idJelka][zPostavljena] == 1)
    {
        new string[80];
        format(string, sizeof(string), ""SRWBOJA"["BELA"SRECNE NOVOGODISNJE PRAZNIKE ZELI VAM VARADERO STAFF"SRWBOJA"]", idJelka);
        JI[idJelka][zLabelJelke] = CreateDynamic3DTextLabel(string, 0x1D9F00AA, JI[idJelka][zX], JI[idJelka][zY], JI[idJelka][zZ]+1.5, 25.0,_,_,_, JI[idJelka][aVW], JI[idJelka][aInt],_,_);
        JI[idJelka][zObjekat] = CreateDynamicObject(JELKA_OBJEKAT, JI[idJelka][zX], JI[idJelka][zY], JI[idJelka][zZ], 0.0, 0.0, JI[idJelka][zAngle], JI[idJelka][aVW], JI[idJelka][aInt],_,_);
    }
    return 1;
}
///////////////////////////////////////////////////////////////////////////
forward Freeze(playerid);
public Freeze(playerid)
{
    TogglePlayerControllable(playerid, 1);
    return 1;
}
///////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
forward utovar1(id);
public utovar1(id)
{
    TogglePlayerControllable(id, 1);
    return 1;
}
////////////////////////////////////////////////////////////////////
forward utovarbus(id);
public utovarbus(id)
{
    TogglePlayerControllable(id, 1);
    GameTextForPlayer(id, "~y~Nova lokacija stanice", 3000, 3);
    return 1;
}
///////////////////////////////////////////////////////////////////
forward preposta(id);
public preposta(id)
{
    TogglePlayerControllable(id, 1);
    GameTextForPlayer(id, "~b~Nova lokacija postavljena", 3000, 3);
    return 1;
}
/////////////////////////////////////////////////////////////////////////////////
forward ElektricarVreme(playerid);
public ElektricarVreme(playerid)
{
	new bonus = random(400), string[120];
	g_NovacPlus(playerid, 2200+bonus);
	format(string,sizeof(string),""SPLAVA"Uspesno ste popravili kvar!\n\n"BELA"Plata: "SPLAVA"2200$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
	SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Kraj popravke",string,"Ok","");
	ElektricarKvar[playerid] = 0; ClearAnimations(playerid);
	GameTextForPlayer(playerid, "~y~kvar uspesno popravljen...", 5000, 3); TogglePlayerControllable(playerid, 1);
 	PlayerInfo[playerid][pElektricarVreme] = 400;
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
forward pdrampazatvori();
public pdrampazatvori()
{
   DestroyDynamicObject(pdrampaotvorena);
   pdrampazatvorena = CreateDynamicObject(968, 1544.6999511719, -1630.8000488281, 13.10000038147, 0, 270, 269.99993896484);
}
////////////////////////////////////////////////////////////////////////////////
GetPlayerID(const Name[])
{
	foreach(new i:Player) {
		if(IsPlayerConnected(i) == 1) {
			new zzzName[MAX_PLAYER_NAME];
			GetPlayerName(i, zzzName, sizeof(zzzName));
			if(strcmp(Name, zzzName, true) == 0) 
			{
				return i;
			}
		}
	}
	return INVALID_PLAYER_ID;
}
////////////////////////////////////////////////////////////////////////////////
forward WLProvera();
public WLProvera()
{
	new string[128];
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][pTrazeniLevel] <= 0)
		{
			PlayerInfo[i][pTrazeniLevel] = 0;
			SetPlayerColor(i, BELA2);
		}
		if(PlayerInfo[i][pZatvor] > 0 || GetPlayerVirtualWorld(i) > 0 || GetPlayerInterior(i) > 0) return 1;
		if(PlayerInfo[i][pTrazeniLevel] > 0)
		{
			PlayerInfo[i][pTrazeniLevel]--;
			format(string, charsmax(string), ""SRWBOJA"- Trenutni Wanted Level: "BELA"%d!", PlayerInfo[i][pTrazeniLevel]); //conver
			SCM(i, -1, string);
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
forward UkloniPoj(id);
public UkloniPoj(id)
{
	BelaBojaIgraca(id);
	return 1;
}
forward UkloniTaxi(id);
public UkloniTaxi(id)
{
	BelaBojaIgraca(id);
	return 1;
}
///////////////////////////////////////////////////////////////////
forward UlazUintRazdaljina(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz);
public UlazUintRazdaljina(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}
///////////////////////////////////////////////////
UlaziuInterior(playerid)
{
    new Float:cx, Float:cy, Float:cz; GetPlayerPos(playerid, cx, cy, cz);
	/////////////////////////////////////////////////////////////////////////////
    if( UlazUintRazdaljina(2, playerid, 1568.7235,-1689.9763,6.2188,cx,cy,cz)) //lspd garaza
	{
	if( PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
	    {
			SetPlayerPos(playerid, -240.0658,129.9189,-53.8010); // lspd stanica
			SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid, 0);
		    PlayerInfo[playerid][pUfbi] = 1;
		    TogglePlayerControllable(playerid, 0);
		    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
		{
			SCM(playerid,-1,""SRWBOJA"[LSPD] "SIVA"Samo clanovi LSPD!");
		}
	}
	else if( UlazUintRazdaljina(2, playerid, 1460.8344,-1022.5966,23.8276,cx,cy,cz ) ) //banka ulaz
	{
		SetPlayerPos(playerid, 482.6895,501.4680,402.2990);
		GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 5);
	    TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 482.6895,501.4680,402.2990,cx,cy,cz ) ) //banka izlaz
	{
		SetPlayerPos(playerid, 1460.8344,-1022.5966,23.8276);
		GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
 	else if( UlazUintRazdaljina(2, playerid, -529.8450,-532.2903,29.1105,cx,cy,cz ) ) //coca ulaz
	{
		SetPlayerPos(playerid, -547.5359,-538.0562,-23.5380);
		GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 5);
	    TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, -547.5359,-538.0562,-23.5380,cx,cy,cz ) ) //coca izlaz
	{
		SetPlayerPos(playerid, -529.8450,-532.2903,29.1105);
		GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
    else if( UlazUintRazdaljina(2, playerid, 1211.8041,-1449.3671,13.6139,cx,cy,cz )) // zlatara ulaz
	{
	    SetPlayerInterior(playerid,0);
	    GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerPos(playerid, 297.9872,1394.6826,726.2630);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
        SetPlayerFacingAngle( playerid, 90.2921 );
	}
	else if( UlazUintRazdaljina(2, playerid, 297.9872,1394.6826,726.2630,cx,cy,cz )) // zlatara izlaz
	{
	    SetPlayerInterior(playerid,0);
	    GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerPos(playerid,1211.8041,-1449.3671,13.6139);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(8, playerid, 416.4890,512.5776,401.5359,cx,cy,cz )) // zlatara ulaz
	{
	if(GetTimeEx() < OpljackajOpstinu[playerid]) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Ovu komandu mozete koristiti svakih 2h sekundi!");
	OpljackajOpstinu[playerid] = GetTimeEx() + 7200;
    ApplyAnimation(playerid, "BOMBER", "null", 0.0, 0, 0, 0, 0, 0);
    ApplyAnimation(playerid, "COP_AMBIENT", "null", 0.0, 0, 0, 0, 0, 0);
    ApplyAnimation(playerid, "ROB_BANK", "null", 0.0, 0, 0, 0, 0, 0);
	SetPlayerInterior(playerid, 1);
    SetPlayerVirtualWorld(playerid, VAULT_VIRTUALWORLD);
    SetPlayerPos(playerid, 2144.2788, 1602.5975, 997.7766);
    SetPVarInt(playerid, "BankPickupCooldown", gettime() + PICKUP_COOLDOWN);
    }
    else if( UlazUintRazdaljina(8, playerid,  2144.2788, 1602.5975, 997.7766,cx,cy,cz )) // zlatara izlaz
    {
    SetPlayerInterior(playerid, 1);
    SetPlayerVirtualWorld(playerid, 1);
    SetPlayerPos(playerid, 416.4890,512.5776,401.5359);
    SetPVarInt(playerid, "BankPickupCooldown", gettime() + PICKUP_COOLDOWN);
	}
   	//==============================================================================================
    else if( UlazUintRazdaljina(2, playerid, -618.4529,-1581.2063,24.6269,cx,cy,cz ) ) //tec ulaz u bazu
	{
    if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23)
    {
	SetPlayerPos(playerid, 1445.7311,1186.4653,-45.9757);
	TogglePlayerControllable(playerid, 0);
    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else
    {
    SCM(playerid,-1,""SPLAVA"[TBB] "BELA"Samo clanovi TBB-a !");
    }
	}
    else if( UlazUintRazdaljina(2, playerid, 1445.7311,1186.4653,-45.9757,cx,cy,cz ) ) //tec izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, -618.4529,-1581.2063,24.6269);
			TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SPLAVA"[TBB] "BELA"Samo clanovi TBB-a");
	    }
    }
	//////////////////////ovde///////////////////////////////
	else if( UlazUintRazdaljina(2, playerid, 305.3554,-141.9046,1004.0625,cx,cy,cz )) // Streljana ulaz
	{
	    GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerPos(playerid,304.0642,-142.0297,1004.0625);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 304.0642,-142.0297,1004.0625,cx,cy,cz )) // Streljana izlaz
	{
	    GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerPos(playerid,305.3554,-141.9046,1004.0625);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	/////////////////////////////////////////////////////
    else if( UlazUintRazdaljina(2, playerid, 1126.7598,-1317.1395,4395.3857,cx,cy,cz) ) //bolnica ulaz
	{
		SetPlayerPos(playerid, 1105.6128,-1343.3893,12.0644);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid,0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
    else if( UlazUintRazdaljina(2, playerid, 1105.6128,-1343.3893,12.0644,cx,cy,cz ) ) //bolnica izlaz
	{
		SetPlayerPos(playerid, 1126.7598,-1317.1395,4395.3857);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
 	else if( UlazUintRazdaljina(2, playerid, 1477.1902,-1742.2083,13.5747,cx,cy,cz) ) //opstina ulaz
	{
        GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		SetPlayerPos(playerid, 64.3019,123.1929,495.6328);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
    else if( UlazUintRazdaljina(2, playerid, 64.3019,123.1929,495.6328,cx,cy,cz ) ) //opstina izlaz
	{
		SetPlayerPos(playerid, 1477.1902,-1742.2083,13.5747);
		SetPlayerInterior(playerid, 0);
		GameTextForPlayer(playerid, "~w~Ucitavanje objekata~b~...", 4000, 3);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
    }
	else if( UlazUintRazdaljina(2, playerid, 2337.0359,2459.3091,14.9742,cx,cy,cz) ) //CIA ispred ulaz
	{
		SetPlayerPos(playerid, 194.7255,257.4008,1007.2894); //CIA
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 1;
	}
	if( UlazUintRazdaljina(2, playerid, 194.7255,257.4008,1007.2894,cx,cy,cz)) //CIA izlaz
	{
		SetPlayerPos(playerid, 2337.0359,2459.3091,14.9742); //CIA
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 0;
	}
	else if( UlazUintRazdaljina(2, playerid, 1243.2958,-1690.1555,17.2671,cx,cy,cz) ) //interventna ispred ulaz
	{
		SetPlayerPos(playerid, 194.7255,257.4008,1007.2894); //interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 1;
	}
	else if( UlazUintRazdaljina(2, playerid, 1281.3774,-1641.5902,27.3750,cx,cy,cz) ) //interventna krov ulaz
	{
		SetPlayerPos(playerid, 194.7255,257.4008,1007.2894); //interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 1;
	}
	else if( UlazUintRazdaljina(2, playerid, 1261.6964,-1677.1617,13.5469,cx,cy,cz) ) //interventna garaza ulaz
	{
		SetPlayerPos(playerid, 194.7255,257.4008,1007.2894); //interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 1;
	}
	if( UlazUintRazdaljina(2, playerid, 194.7255,257.4008,1007.2894,cx,cy,cz)) //interventna izlaz
	{
		SetPlayerPos(playerid, 1243.2958,-1690.1555,17.2671); //Interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 0;
	}
	else if( UlazUintRazdaljina(2, playerid, 1004.6106,-1585.3871,13.5577,cx,cy,cz) ) //CIA ispred ulaz
	{
		SetPlayerPos(playerid, 1029.0924,-1597.6443,1519.3920); //CIA
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	}
	else if( UlazUintRazdaljina(2, playerid, 1029.0924,-1597.6443,1519.3920,cx,cy,cz)) //lvpd izlaz
	{
		SetPlayerPos(playerid, 1004.6106,-1585.3871,13.5577); //CIA
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
	    g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 2268.1143,2448.5999,3.5313,cx,cy,cz) ) //Interventna garaza ulaz
	{
        if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
        {
	    	SetPlayerPos(playerid, 183.9813,292.4355,1007.3098); //Interventna
	    	SetPlayerInterior(playerid, 0);
	        TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	        PlayerInfo[playerid][pUfbi] = 1;
    	}
		else
		{
			SCM(playerid,-1,""SRWBOJA"[CIA] "SIVA"Samo clanovi CIA!");
		}
	}
	else if( UlazUintRazdaljina(2, playerid, 183.9813,292.4355,1007.3098,cx,cy,cz)) //Interventna
	{
		if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
	    {
			SetPlayerPos(playerid, 2268.1143,2448.5999,3.5313); //Interventna
			SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		    PlayerInfo[playerid][pUfbi] = 0;
		}
		else
		{
			SCM(playerid,-1,""SRWBOJA"[LSPD] "SIVA"Ti bi da glumis policajca? Ne moze!");
		}
	}
   	else if( UlazUintRazdaljina(2, playerid, 1557.5138,-1675.6442,28.3955,cx,cy,cz) ) //lspd krov
	{
        if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
        {
	    	SetPlayerPos(playerid, -240.0658,129.9189,-53.8010); // lspd stanica
	    	SetPlayerInterior(playerid, 0);
	        TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	        PlayerInfo[playerid][pUfbi] = 1;
    	}
		else
		{
			SCM(playerid,-1,""SRWBOJA"[LSPD] "SIVA"Samo clanovi LSPD!");
		}
	}
 	else if( UlazUintRazdaljina(2, playerid, 1298.5117,-798.4493,84.1406,cx,cy,cz ) ) //bdt ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
 	    {
	 	   	SetPlayerPos(playerid, -375.9866, -1608.0094, -68.8690);
	 	    SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""VARADERO"[BDT]: "SIVA"Samo clanovi BDT!");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, -375.9866, -1608.0094, -68.8690,cx,cy,cz ) ) //bdt izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
 	    {
			SetPlayerPos(playerid, 1298.5117,-798.4493,84.1406);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""VARADERO"[BDT]: "SIVA"Samo clanovi BDT!");
	    }
    }
   	else if( UlazUintRazdaljina(2, playerid, 0.6561,-1937.6566,4.2854,cx,cy,cz ) ) //lc ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
 	    {
	 	   	SetPlayerPos(playerid, 937.6559,97.4642,1001.2659);
	 	    SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[LC]: "SIVA"Samo clanovi LC!");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 937.6559,97.4642,1001.2659,cx,cy,cz ) ) //lc izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
 	    {
			SetPlayerPos(playerid, 0.6561,-1937.6566,4.2854);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""VARADERO"[LC]: "SIVA"Samo clanovi LC!");
	    }
    }
 	else if( UlazUintRazdaljina(2, playerid, -49.7804,-269.0288,6.6332,cx,cy,cz ) ) //do ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
 	    {
	 	   	SetPlayerPos(playerid, 262.7009,1815.4005,1010.9520);
	 	    SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[Yakuza]: "SIVA"Samo clanovi Yakuze!");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 262.7009,1815.4005,1010.9520,cx,cy,cz ) ) //do izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
 	    {
			SetPlayerPos(playerid, -49.7804,-269.0288,6.6332);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[Yakuza]: "SIVA"Samo clanovi Yakuze!");
	    }
    }
    //------------------------------------------------------------------------------------------//
    else if( UlazUintRazdaljina(2, playerid, 2650.4563,-2021.6121,14.1766,cx,cy,cz ) ) //do ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 25 || PlayerInfo[playerid][pLider] == 25)
 	    {
	 	   	SetPlayerPos(playerid, 2651.5322,-2010.2905,-23.0830);
	 	    SetPlayerInterior(playerid, 0);
		    TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[VLA]: "SIVA"Samo clanovi VLA!");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 2651.5322,-2010.2905,-23.0830,cx,cy,cz ) ) //do izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 25 || PlayerInfo[playerid][pLider] == 25)
 	    {
			SetPlayerPos(playerid, 2650.4563,-2021.6121,14.1766);
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[VLA]: "SIVA"Samo clanovi VLA!");
	    }
    }
    //----------------------------------------------------------------------------------//
 	else if( UlazUintRazdaljina(2, playerid, 2368.7058,577.3232,8.4156,cx,cy,cz ) ) //RB ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
 	    {
            TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
            SetPlayerInterior(playerid, 0);
	 	   	SetPlayerPos(playerid, 329.3434,1761.3079,1007.9000);
		}
		else
	    {
		    SCM(playerid,-1,""VARADERO"[Black Cobra Corporation]: "SIVA"Samo clanovi Black Cobra Corporation-a!");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 329.3434,1761.3079,1007.9000,cx,cy,cz ) ) //RB izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
 	    {
			TogglePlayerControllable(playerid, 0);
	        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
			SetPlayerPos(playerid, 2368.7058,577.3232,8.4156);
			SetPlayerInterior(playerid, 0);
		}
		else
	    {
		    SCM(playerid,-1,""VARADERO"[Black Cobra Corporation]: "SIVA"Samo clanovi Black Cobra Corporation-a!");
	    }
    }
	else if( UlazUintRazdaljina(2, playerid, 1539.4762,-2245.8247,14.5417,cx,cy,cz ) ) //askola ulaz
	{
		SetPlayerPos(playerid, 1533.2767,-2238.9443,-91.4350);
		SetPlayerInterior(playerid, 3);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 1533.2767,-2238.9443,-91.4350,cx,cy,cz ) ) //askola izlaz
	{
		SetPlayerPos(playerid, 1539.4762,-2245.8247,14.5417);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
	else if( UlazUintRazdaljina(2, playerid, 1243.2958,-1690.1555,17.2671,cx,cy,cz) ) //interventna ispred ulaz
	{
		SetPlayerPos(playerid, 194.7255,257.4008,1007.2894); //interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 1;
	}
	else if( UlazUintRazdaljina(2, playerid, 1281.3774,-1641.5902,27.3750,cx,cy,cz) ) //interventna krov ulaz
	{
		SetPlayerPos(playerid, 194.7255,257.4008,1007.2894); //interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 1;
	}
	else if( UlazUintRazdaljina(2, playerid, 1261.6964,-1677.1617,13.5469,cx,cy,cz) ) //interventna garaza ulaz
	{
		SetPlayerPos(playerid, 194.7255,257.4008,1007.2894); //interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 1;
	}
	else if( UlazUintRazdaljina(2, playerid, 194.7255,257.4008,1007.2894,cx,cy,cz)) //interventna izlaz
	{
		SetPlayerPos(playerid, 1243.2958,-1690.1555,17.2671); //Interventna
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		PlayerInfo[playerid][pUfbi] = 0;
	}
 	else if( UlazUintRazdaljina(2, playerid, 1416.1619,-1530.6890,15.1169,cx,cy,cz) ) //skola ulaz
	{
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		SetPlayerPos(playerid, 1146.1093,-601.2096,1089.9259);
		SetPlayerInterior(playerid, 0);
		GameTextForPlayer(playerid,"~b~Usli ste u RolePlay Skola!",1500,4);
		SetPlayerVirtualWorld(playerid,0);
	}
    else if( UlazUintRazdaljina(2, playerid, 1146.1093,-601.2096,1089.9259,cx,cy,cz ) ) //skola izlaz
	{
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
     	SetPlayerPos(playerid, 1416.1619,-1530.6890,15.1169);
        GameTextForPlayer(playerid,"~b~Izasli ste iz RolePlay Skole!",1500,4);
		SetPlayerInterior(playerid, 0);
	}
	else if( UlazUintRazdaljina(2, playerid, 602,868,-43,cx,cy,cz ) ) //rdunik ulaz
	{
		SetPlayerPos(playerid, 623.5,825.5,-95.5);
		SetPlayerInterior(playerid, 0);
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 623.5,825.5,-95.5,cx,cy,cz ) ) //rudnik izlaz
	{
		SetPlayerPos(playerid, 602,868,-43);
		DisablePlayerCheckpoint(playerid);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
 	else if( UlazUintRazdaljina(2, playerid, 2337.0359,2459.3091,14.9742,cx,cy,cz ) ) //CIA ulaz
	{
		SetPlayerPos(playerid, 1570.0808,-1676.1581,1501.1260);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pUfbi] = 1;
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 1570.0808,-1676.1581,1501.1260,cx,cy,cz ) ) //CIA izlaz
	{
		SetPlayerPos(playerid, 2337.0359,2459.3091,14.9742);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pUfbi] = 0;
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
	//////////////////////////////////////////////////////////////////////////////
	else if( UlazUintRazdaljina(2, playerid, 1554.4662,-1675.6755,16.1953,cx,cy,cz ) ) //lspd ulaz
	{
		SetPlayerPos(playerid, -235.9476,145.2691,-53.8010);
		SetPlayerInterior(playerid, 0);
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, -235.9476,145.2691,-53.8010,cx,cy,cz ) ) //lspd izlaz
	{
		SetPlayerPos(playerid, 1554.4662,-1675.6755,16.1953);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
 	//////////////////////////////////////////////////////////////////////
	else if( UlazUintRazdaljina(2, playerid, 1004.6106,-1585.3871,13.5577,cx,cy,cz) ) //CIA ispred ulaz
	{
		SetPlayerPos(playerid, 1029.0924,-1597.6443,1519.3920); //CIA
		SetPlayerInterior(playerid, 0);
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 1029.0924,-1597.6443,1519.3920,cx,cy,cz)) //CIA izlaz
	{
		SetPlayerPos(playerid, 1004.6106,-1585.3871,13.5577); //CIA
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
    else if( UlazUintRazdaljina(2, playerid, 2495.4365,-1690.9509,14.7656,cx,cy,cz ) ) //grove ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pLider] == 4)
 	    {
	 	   	SetPlayerPos(playerid, 318.6126,1115.3373,1083.8828);
	 	    SetPlayerInterior(playerid, 5);
	 	    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""ZELENA"[GSF]: "BELA"Samo clanovi GSF!");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 318.6126,1115.3373,1083.8828,cx,cy,cz ) ) //grove izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pLider] == 4)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2495.4365,-1690.9509,14.7656);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""ZELENA"[GSF]: "BELA"Samo clanovi GSF!");
	    }
    }
    else if( UlazUintRazdaljina(2, playerid, 2000.1547,-1114.0616,27.1250,cx,cy,cz ) ) //ballas ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
 	    {
	 	   	SetPlayerPos(playerid, 2468.3789,-1698.3253,1013.5078);
	 	    SetPlayerInterior(playerid, 2);
	 	    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""BALLASC"[BALLAS]: "BELA"Samo clanovi Ballas!");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 2468.3789,-1698.3253,1013.5078,cx,cy,cz ) ) //ballas izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2000.1547,-1114.0616,27.1250);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""BALLASC"[BALLAS]: "BELA"Samo clanovi Ballas!");
	    }
    }
    else if( UlazUintRazdaljina(2, playerid, 691.5768,-1275.8037,13.5607,cx,cy,cz ) ) //condor ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
 	    {
	 	   	SetPlayerPos(playerid, 1700.6218,-1667.8066,20.2188);
	 	    SetPlayerInterior(playerid, 18);
	 	    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[CONDOR] "BELA"Samo clanovi Condora !");
	    }
	}
    else if( UlazUintRazdaljina(2, playerid, 1700.6218,-1667.8066,20.2188,cx,cy,cz ) ) //condor izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 691.5768,-1275.8037,13.5607);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[CONDOR] "BELA"Samo clanovi Condora");
	    }
    }
    else if( UlazUintRazdaljina(2, playerid, -49.7804, -269.0288, 6.6831,cx,cy,cz ) ) //dragons ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
 	    {
	 	   	SetPlayerPos(playerid, 254.9465,1832.8334,1010.8937);
	 	    SetPlayerInterior(playerid, 0);
	 	    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[Yakuza] "BELA"Samo clanovi Yakuza !");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 267.2207, 1851.1471, -29.3913,cx,cy,cz ) ) //dragons izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, -49.7804, -269.0288, 6.6831);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[Yakuza] "BELA"Samo clanovi Yakuza");
	    }
    }
    else if( UlazUintRazdaljina(2, playerid, 2796.4387, 2718.5293, 10.8666,cx,cy,cz ) ) //PO 2 ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
 	    {
	 	   	SetPlayerPos(playerid, -60.5976,1112.3354,-6.6925);
	 	    SetPlayerInterior(playerid, 0);
	 	    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[PO 2] "BELA"Samo clanovi PO 2 !");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, -60.5976,1112.3354,-6.6925,cx,cy,cz ) ) //PO 2 izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2796.4387, 2718.5293, 10.8666);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[PO 2] "BELA"Samo clanovi PO 2");
	    }
    }
    else if( UlazUintRazdaljina(2, playerid, 1123.3091,-2036.9961,69.8875,cx,cy,cz ) ) //PO3 ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
 	    {
	 	   	SetPlayerPos(playerid, 756.0743,-16.7549,1000.5859);
	 	    SetPlayerInterior(playerid, 6);
	 	    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[PO 3] "BELA"Samo clanovi PO 3 !");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 756.0743,-16.7549,1000.5859,cx,cy,cz ) ) //PO3 izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1123.3091,-2036.9961,69.8875);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[PO 3] "BELA"Samo clanovi PO 3");
	    }
    }
    else if( UlazUintRazdaljina(2, playerid, 194.3724,-1444.4539,13.8622,cx,cy,cz ) ) //vatrogasci
	{
	    if(PlayerInfo[playerid][pClan] == 18 || PlayerInfo[playerid][pLider] == 18)
 	    {
	 	   	SetPlayerPos(playerid, 2629.1887,-1104.4520,1037.4606);
	 	    SetPlayerInterior(playerid, 0);
   			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[VATROGASCI] "BELA"Samo clanovi Vatrogasaca !");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 2629.1887,-1104.4520,1037.4606,cx,cy,cz ) ) //vatrogasci
	{
		if(PlayerInfo[playerid][pClan] == 18 || PlayerInfo[playerid][pLider] == 18)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 194.3724,-1444.4539,13.8622);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[VATROGASCI] "BELA"Samo clanovi Vatrogasaca");
	    }
    }
    else if( UlazUintRazdaljina(2, playerid, 1218.9824,-1811.7050,16.6937,cx,cy,cz ) ) //taxi
	{
	    if(PlayerInfo[playerid][pClan] == 14 || PlayerInfo[playerid][pLider] == 14)
 	    {
	 	   	SetPlayerPos(playerid, 2825.2671,-1679.6840,665.4513);
	 	    SetPlayerInterior(playerid, 0);
   			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"Taxi "BELA"Samo clanovi TAXI-a !");
	    }
	}
	else if( UlazUintRazdaljina(5, playerid, 2825.2671,-1679.6840,665.4513,cx,cy,cz ) ) //taxi
	{
		if(PlayerInfo[playerid][pClan] == 14 || PlayerInfo[playerid][pLider] == 14)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1218.9824,-1811.7050,16.6937);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"Taxi "BELA"Samo clanovi TAXI-a");
	    }
    }
	else if( UlazUintRazdaljina(2, playerid, -1090.7347,-1295.5505,129.2705,cx,cy,cz ) ) //Death Row Ulaz u bazu
 	{
   		if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
     	{
	   		SetPlayerPos(playerid, -413.8569,1313.6633,2.4242);
   		    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
  		}
  		else
    	{
     		SCM(playerid,-1,""SRWBOJA"[Death Row] "BELA"Samo clanovi Death Row !");
     	}
	}
 	else if( UlazUintRazdaljina(2, playerid, -413.8569,1313.6633,2.4242,cx,cy,cz ) ) //Death Row izlaz iz baze
 	{
	  	if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
    	{
		   SetPlayerInterior(playerid,0);
		   SetPlayerPos(playerid, -1090.7347,-1295.5505,129.2705);
		   TogglePlayerControllable(playerid, 0);
           g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
  		}
	  	else
  		{
		      SCM(playerid,-1,""SRWBOJA"[Death Row] "BELA"Samo clanovi Death Row");
        }
    }
    else if( UlazUintRazdaljina(2, playerid, 1109.7894,-305.1729,73.9922,cx,cy,cz ) ) //Hitman ulaz u bazu
	{
	    if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10)
 	    {
	 	   	SetPlayerPos(playerid, 2807.6333,-1174.3044,1025.5703);
	 	    SetPlayerInterior(playerid, 8);
	 	    TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[Hitman] "BELA"Samo clanovi Hitmana !");
	    }
	}
	else if( UlazUintRazdaljina(2, playerid, 2807.6333,-1174.3044,1025.5703,cx,cy,cz ) ) //Hitman izlaz iz baze
	{
		if(PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10)
 	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1109.7894,-305.1729,73.9922);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		}
		else
	    {
		    SCM(playerid,-1,""SRWBOJA"[Hitman] "BELA"Samo clanovi Hitmana");
	    }
    }
	/////////////////////////////////////////////////
 	else if( UlazUintRazdaljina(2, playerid, -2338.2700,-1594.0641,484.0203,cx,cy,cz ) ) //Russian Mafia Ulaz u bazu
 	{
 		if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
      	{
			SetPlayerPos(playerid, 325.7996,-1513.6078,4.1759);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	 	}
 	 	else
     	{
     	 SCM(playerid,-1,""CRVENA"[Russian Mafia] "BELA"Samo clanovi Russian Mafia !");
     	}
 	}
	else if( UlazUintRazdaljina(2, playerid, 325.7996,-1513.6078,4.1759,cx,cy,cz ) ) //Russian mafia izlaz iz baze
	 {
		if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
      	{
   			SetPlayerInterior(playerid,0);
   			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	 		SetPlayerPos(playerid, -2338.2700,-1594.0641,484.0203);
  		}
	 	else
     	{
      SCM(playerid,-1,""CRVENA"[Russian Mafia] "BELA"Samo clanovi Russian Mafia");
     	}
	}
	else if( UlazUintRazdaljina(2, playerid, 1672.9596,-1003.4055,24.0703,cx,cy,cz ) ) //ps ulaz 1672.9596,-1003.4055,24.0703
	{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1075.7444,-898.2814,1043.3033);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
    }
    else if( UlazUintRazdaljina(2, playerid, 1075.7444,-898.2814,1043.3033,cx,cy,cz ) ) //ps izlaz
	{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1672.9596,-1003.4055,24.0703);
			TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
    }
	else if( UlazUintRazdaljina(2, playerid, 1305.8044,-1341.4901,13.4934,cx,cy,cz ) ) //fbi ulaz
	{
		SetPlayerPos(playerid, -1108.9833, -111.3128, 2040.5924);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pUfbi] = 1;
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, -1108.9833, -111.3128, 2040.5924,cx,cy,cz ) ) //fbi izlaz
	{
		SetPlayerPos(playerid, 1305.8044,-1341.4901,13.4934);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pUfbi] = 0;
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
	else if( UlazUintRazdaljina(2, playerid, 1797.8744,-1578.8844,14.0906,cx,cy,cz ) ) //ulaz u zatvor
    {
    		SetPlayerPos(playerid, 1791.2806,-1665.9146,-48.9141);
    		SetPlayerInterior(playerid, 0);
            TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
    }
    else if( UlazUintRazdaljina(2, playerid, 1791.2806,-1665.9146,-48.9141,cx,cy,cz ) ) //izlaz iz zatvora
    {
        	SetPlayerInterior(playerid,0);
        	SetPlayerPos(playerid, 1797.8744,-1578.8844,14.0906);
        	TogglePlayerControllable(playerid, 0);
            g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
    }
 	else if( UlazUintRazdaljina(2, playerid, 1772.5709,-1750.0457,13.545,cx,cy,cz ) ) //novinari ulaz
	{
		SetPlayerPos(playerid, 1778.8668,-1788.9644,-43.3141);
		SetPlayerInterior(playerid, 0);
	    TogglePlayerControllable(playerid, 0);
	}
	else if( UlazUintRazdaljina(2, playerid, 1778.8668,-1788.9644,-43.3141,cx,cy,cz ) ) //novinari izlaz
	{
		SetPlayerPos(playerid, 1772.5709,-1750.0457,13.545);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
 	}
	else if( UlazUintRazdaljina(2, playerid, 942.9377,-1418.1169,13.5469,cx,cy,cz) ) //zgrada ulaz
	{
		SetPlayerPos(playerid, 1076.9816, -1171.7502, 1364.6147);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		SetPlayerVirtualWorld(playerid, 1);
	}
    else if( UlazUintRazdaljina(2, playerid, 1076.9816, -1171.7502, 1364.6147,cx,cy,cz ) ) //zgrada izlaz
	{
	    SetPlayerPos(playerid, 942.9377,-1418.1169,13.5469);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	else if( UlazUintRazdaljina(2, playerid, 2462.79175, 2244.54370, 10.47492,cx,cy,cz) ) //banka lv ulaz
	{
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		SetPlayerPos(playerid, 2427.74951, 2280.09009, -2.82720);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 1);
	}
    else if( UlazUintRazdaljina(2, playerid, 2427.74951, 2280.09009, -2.82720,cx,cy,cz ) ) //banka lv izlaz
	{
		SetPlayerPos(playerid, 2462.79175, 2244.54370, 10.47492);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if( UlazUintRazdaljina(2, playerid, 2019.3806,1007.7836,10.8203,cx,cy,cz) ) //4dc ulaz
	{
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		SetPlayerPos(playerid, 2016.2699,1017.7790,996.8750);
		SetPlayerInterior(playerid, 10);
	}
    else if( UlazUintRazdaljina(2, playerid, 2016.2699,1017.7790,996.8750,cx,cy,cz ) ) //4dc izlaz
	{
		SetPlayerPos(playerid, 2019.3806,1007.7836,10.8203);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
	//////////////////////////////////////////////////////////////////////////////////////
	else if( UlazUintRazdaljina(2, playerid, 1247.6490,-952.2573,42.5065,cx,cy,cz) ) //roleri ulaz
	{
	    TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
		SetPlayerPos(playerid, 865.2170,848.1874,-4.4823);
		SetPlayerInterior(playerid, 0);
	}
    else if( UlazUintRazdaljina(2, playerid, 865.2170,848.1874,-4.4823,cx,cy,cz ) ) //roleri izlaz
	{
		SetPlayerPos(playerid, 1247.6490,-952.2573,42.5065);
		SetPlayerInterior(playerid, 0);
		TogglePlayerControllable(playerid, 0);
        g_freeze[playerid] = SetTimerEx("Freeze",6000, false, "i", playerid);
	}
    /////////////////////////////////////////////////////////////////////////////////
 	return 1;
}
///////////////////////////////////////////////////////////////////////
forward Count();
public Count()
{
	if(!iscountactivated)
	{
		KillTimer(CountTimer);
	}
	else
	{
		new string[32];
		format(string,sizeof(string),"~y~%i",countamount);
		GameTextForAll(string,1000,3);
		countamount--;
		if(countamount == -1)
		{
			iscountactivated = 0, GameTextForAll("~g~Kreni!",1000,3);
		}
	}
	return 1;
}
///////////////////////////////////////////////////////
forward split(const strsrc[], strdest[][], delimiter);
public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
	    if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}
//////////////////////////////////////////////////////
function: SaveGarage(id)
{

	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `garaze` SET `gOwned` = '%d', `gPrice` = '%d', `gOwner` = '%s', `gType` = '%d', `gLocked` = '%s', `gMoney` = '%d' WHERE `gSQLID` = '%d' LIMIT 1",
	GarageInfo[id][gOwned],
	GarageInfo[id][gPrice],
	GarageInfo[id][gOwner],
	GarageInfo[id][gType],
	GarageInfo[id][gLocked],
	GarageInfo[id][gMoney],

	GarageInfo[id][gSQLID]);
	mysql_tquery(SQL, q);

	q[0] = EOS;
	mysql_format(SQL, q, sizeof(q), "UPDATE `garaze` SET `gEntranceX` = '%f', `gEntranceY` = '%f', `gEntranceZ` = '%f', `gEntranceA` = '%f', `gExitX` = '%f', `gExitY` = '%f', `gExitZ` = '%f', `gExitA` = '%f' WHERE `gSQLID` = '%d' LIMIT 1",
	GarageInfo[id][gEntranceX],
	GarageInfo[id][gEntranceY],
	GarageInfo[id][gEntranceZ],
	GarageInfo[id][gEntranceA],
	GarageInfo[id][gExitX],
	GarageInfo[id][gExitY],
	GarageInfo[id][gExitZ],
	GarageInfo[id][gExitA],

	GarageInfo[id][gSQLID]);
	mysql_tquery(SQL, q);

	q[0] = EOS;
	mysql_format(SQL, q, sizeof(q), "UPDATE `garaze` SET `gInt` = '%d', `gWorld` = '%d', `gInsideInt` = '%s', `gInsideWorld` = '%d', `gName` = '%s' WHERE `gSQLID` = '%d' LIMIT 1",
	GarageInfo[id][gInt],
	GarageInfo[id][gWorld],
	GarageInfo[id][gInsideInt],
	GarageInfo[id][gInsideWorld],
	GarageInfo[id][gName],

	GarageInfo[id][gSQLID]);
	mysql_tquery(SQL, q);

    return 1;
}
function: _sqlLoadGarage()
{
	if(cache_num_rows()) 
	{
		for(new idx; idx < cache_num_rows(); idx++)
		{
			cache_get_value_name_int(idx, "gSQLID", GarageInfo[idx][gSQLID]);
			cache_get_value_name_int(idx,"gOwned", GarageInfo[idx][gOwned]);
			cache_get_value_name_int(idx,"gPrice", GarageInfo[idx][gPrice]);
			cache_get_value_name(idx,"gOwner", GarageInfo[idx][gOwner], 24);
			cache_get_value_name_int(idx,"gType", GarageInfo[idx][gType]);
			cache_get_value_name_int(idx,"gLocked", GarageInfo[idx][gLocked]);
			cache_get_value_name_int(idx,"gMoney", GarageInfo[idx][gMoney]);
			cache_get_value_name_float(idx,"gEntranceX", GarageInfo[idx][gEntranceX]);
			cache_get_value_name_float(idx,"gEntranceY", GarageInfo[idx][gEntranceY]);
			cache_get_value_name_float(idx,"gEntranceZ", GarageInfo[idx][gEntranceZ]);
			cache_get_value_name_float(idx,"gEntranceA", GarageInfo[idx][gEntranceA]);
			cache_get_value_name_float(idx,"gExitX", GarageInfo[idx][gExitX]);
			cache_get_value_name_float(idx,"gExitY", GarageInfo[idx][gExitY]);
			cache_get_value_name_float(idx,"gExitZ", GarageInfo[idx][gExitZ]);
			cache_get_value_name_float(idx,"gExitA", GarageInfo[idx][gExitA]);
			cache_get_value_name_int(idx,"gInt", GarageInfo[idx][gInt]);
			cache_get_value_name_int(idx,"gWorld", GarageInfo[idx][gWorld]);
			cache_get_value_name_int(idx,"gInsideInt", GarageInfo[idx][gInsideInt]);
			cache_get_value_name_int(idx,"gInsideWorld", GarageInfo[idx][gInsideWorld]);
			cache_get_value_name(idx,"gName", GarageInfo[idx][gName], 128);


			new str[144];
	    	if(GarageInfo[idx][gOwned] == 0)
			{
				format(str, sizeof(str), ""SRWBOJA"Garaza "BELA"%s\n"SRWBOJA"Vlasnik: "BELA"Drzava\nCena: "BELA"%d\n"BELA"/kupigarazu", GarageInfo[idx][gName], GarageInfo[idx][gPrice]);
				GarageText[idx] = CreateDynamic3DTextLabel(str, 0x008080FF, GarageInfo[idx][gEntranceX], GarageInfo[idx][gEntranceY], GarageInfo[idx][gEntranceZ], 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
			}
			if(GarageInfo[idx][gOwned] == 1)
			{
				format(str, sizeof(str), ""SRWBOJA"Garaza "BELA"%s\n"SRWBOJA"Vlasnik: "BELA"%s\n"SRWBOJA"Space za ulazak", GarageInfo[idx][gName], GarageInfo[idx][gOwner]);
				GarageText[idx] = CreateDynamic3DTextLabel(str, 0x008080FF, GarageInfo[idx][gEntranceX], GarageInfo[idx][gEntranceY], GarageInfo[idx][gEntranceZ], 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
			}
		}
		printf("[ Sistem ] Garaze: Uctano je %d garaza, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	}

    return 1;
}
////////////////////////////////////////////////////////
function: _SQLLoadATM()
{
	if(cache_num_rows()) 
	{
		for(new atmid; atmid < cache_num_rows(); atmid++)
		{
			cache_get_value_name_int(atmid,	"banSQLID", AtmInfo[atmid][banSQLID]);
			cache_get_value_name_int(atmid,"Postavljen",AtmInfo[atmid][aPostavljen]);
			cache_get_value_name_float(atmid,"banX",AtmInfo[atmid][aX]);
		    cache_get_value_name_float(atmid,"banY",AtmInfo[atmid][aY]);
		    cache_get_value_name_float(atmid,"banZ",AtmInfo[atmid][aZ]);
		    cache_get_value_name_float(atmid,"Angle",AtmInfo[atmid][aAngle]);
		    cache_get_value_name_int(atmid,"banInt",AtmInfo[atmid][aInt]);
		    cache_get_value_name_int(atmid,"banVW",AtmInfo[atmid][aVW]);
		    KreirajAtm(atmid);
	    }
	}
	printf("[ Sistem ] ATM: Uctano je %d bankomata, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	return 1;
}
///////////////////////////////////////////////////
SacuvajATM(atmid)
{
	new q[256];
	mysql_format(SQL, q, sizeof(q), "UPDATE `bankomati` SET `Postavljen` = '%d', `banX` = '%f', `banY` = '%f', `banZ` = '%f', `Angle` = '%f', `banInt` = '%d', `banVW` = '%d' WHERE `banSQLID` = '%d' LIMIT 1",
	AtmInfo[atmid][aPostavljen],
    AtmInfo[atmid][aX],
    AtmInfo[atmid][aY],
    AtmInfo[atmid][aZ],
    AtmInfo[atmid][aAngle],
    AtmInfo[atmid][aInt],
    AtmInfo[atmid][aVW],

	AtmInfo[atmid][banSQLID]);
	mysql_tquery(SQL, q);

	return 1;
}
///////////////////////////////////////////////////////
function: _SQLLoadFirme()
{
	if(cache_num_rows()) 
	{
		for(new i; i < cache_num_rows(); i++)
		{
			cache_get_value_name_int(i,"fSQLID", FirmaInfo[i][fSQLID]);
			cache_get_value_name_int(i,"ImaVlasnika", FirmaInfo[i][fImaVlasnika]);
			cache_get_value_name(i, "Vlasnik",FirmaInfo[i][fVlasnik],32);
			cache_get_value_name_int(i,"Vrsta", FirmaInfo[i][fVrsta]);
			cache_get_value_name(i, "Naziv",FirmaInfo[i][fNaziv],64);
			cache_get_value_name(i, "Iznuda",FirmaInfo[i][fIznuda],64);	
			cache_get_value_name_float(i, "UlazX",FirmaInfo[i][fUlazX]);
			cache_get_value_name_float(i, "UlazY",FirmaInfo[i][fUlazY]);
			cache_get_value_name_float(i, "UlazZ",FirmaInfo[i][fUlazZ]);
			cache_get_value_name_float(i, "IzlazX",FirmaInfo[i][fIzlazX]);
			cache_get_value_name_float(i, "IzlazY",FirmaInfo[i][fIzlazY]);
			cache_get_value_name_float(i, "IzlazZ",FirmaInfo[i][fIzlazZ]);
			cache_get_value_name_int(i,"Neaktivnost",FirmaInfo[i][fNeaktivnost]);
			cache_get_value_name_int(i,"Level",FirmaInfo[i][fLevel]);
			cache_get_value_name_int(i,"Cena",FirmaInfo[i][fCena]);
			cache_get_value_name_int(i,"Kasa",FirmaInfo[i][fKasa]);
			cache_get_value_name_int(i,"Int",FirmaInfo[i][fInt]);
			cache_get_value_name_int(i,"Zatvoreno",FirmaInfo[i][fZatvoreno]);
			cache_get_value_name_int(i,"Proizvodi",FirmaInfo[i][fProizvodi]);
			cache_get_value_name_int(i,"MaxProizvodi",FirmaInfo[i][fMaxProizvodi]);
			cache_get_value_name_int(i,"VW",FirmaInfo[i][fVW]);

			new stringgg[255];
			new b = i;
			
			if(FirmaInfo[b][fImaVlasnika] == 0)
			{
				format(stringgg,sizeof(stringgg),"[{FFFFFF} %s {1A80D2}]\nFirma na prodaju!({FFFFFF}%d{1A80D2})\n{1A80D2}Cena :{FFFFFF} $%d{1A80D2} | Level :{FFFFFF} %d\n{1A80D2}Za kupovinu upisite {FFFFFF}/kupifirmu",FirmaInfo[b][fNaziv], b, FirmaInfo[b][fCena],FirmaInfo[b][fLevel]);
				FirmaLabel[b] = CreateDynamic3DTextLabel(stringgg, 0x33CCFFFF, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 80, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
				FirmaPickup[b] = CreateDynamicPickup(1274, 1, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ]);
			}
			else if(FirmaInfo[b][fImaVlasnika] == 1)
			{
				format(stringgg,sizeof(stringgg),"[{FFFFFF} %s {1A80D2}]\nVlasnik :{FFFFFF} %s\n{1A80D2}Level:{FFFFFF} %d{1A80D2} | ID:{FFFFFF} %d\n{1A80D2}Neaktivnost : {FFFFFF}%d h", FirmaInfo[b][fNaziv], FirmaInfo[b][fVlasnik],FirmaInfo[b][fLevel], b, FirmaInfo[b][fNeaktivnost]);
				FirmaLabel[b] = CreateDynamic3DTextLabel(stringgg, 0x33CCFFFF, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 80, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
				FirmaPickup[b] = CreateDynamicPickup(1239, 1, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ]);
			}
	        if(FirmaInfo[b][fVrsta] == VRSTA_BURG)      CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 10, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_CLUCKIN)   CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 14, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_PIZZA)     CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 29, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_PIGPEN)    CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 48, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_BAR)       CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 49, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_GYM)       CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 54, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_SEXSHOP)   CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 36, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_BINCO)     CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_GUNSHOP)   CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 6, -1, 0, 0, -1,  150.0);
			if(FirmaInfo[b][fVrsta] == VRSTA_DISCO)     CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 48, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_RESTORAN)  CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 50, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_ZIP)       CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_VICTIM)    CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_SUBURBAN)  CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_BARBER)    CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 7, -1, 0, 0, -1,  150.0);
	        if(FirmaInfo[b][fVrsta] == VRSTA_KLADIONICA)CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 25, -1, 0, 0, -1, 150.0);
		}
	}	
	printf("[ Sistem ] Firme: Uctano je %d firmi, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));		
	return 1;
}
///////////////////////////////////////////////////////
SacuvajFirmu(idfirme)
{
	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `firme` SET `ImaVlasnika` = '%d', `Vlasnik` = '%s', `Vrsta` = '%d', `Naziv` = '%s', `Iznuda` = '%s' WHERE `fSQLID` = '%d' LIMIT 1",
	FirmaInfo[idfirme][fImaVlasnika],
	FirmaInfo[idfirme][fVlasnik],
	FirmaInfo[idfirme][fVrsta],
	FirmaInfo[idfirme][fNaziv],
	FirmaInfo[idfirme][fIznuda],

	FirmaInfo[idfirme][fSQLID]);
	mysql_tquery(SQL, q);

	mysql_format(SQL, q, sizeof(q), "UPDATE `firme` SET `UlazX`  = '%f', `UlazY` = '%f', `UlazZ` = '%f', `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f' WHERE `fSQLID` = '%d' LIMIT 1",
	FirmaInfo[idfirme][fUlazX],
	FirmaInfo[idfirme][fUlazY],
	FirmaInfo[idfirme][fUlazZ],
	FirmaInfo[idfirme][fIzlazX],
	FirmaInfo[idfirme][fIzlazY],
	FirmaInfo[idfirme][fIzlazZ],

	FirmaInfo[idfirme][fSQLID]);
	mysql_tquery(SQL, q);

	mysql_format(SQL, q, sizeof(q), "UPDATE `firme` SET `Neaktivnost`  = '%d', `Level` = '%d', `Cena` = '%d', `Kasa` = '%d', `Int` = '%d', `Zatvoreno` = '%d', `Proizvodi` = '%d', `MaxProizvodi` = '%d', `VW` = '%d' WHERE `fSQLID` = '%d' LIMIT 1",
	FirmaInfo[idfirme][fNeaktivnost],
	FirmaInfo[idfirme][fLevel],
	FirmaInfo[idfirme][fCena],
	FirmaInfo[idfirme][fKasa],
	FirmaInfo[idfirme][fInt],
	FirmaInfo[idfirme][fZatvoreno],
	FirmaInfo[idfirme][fProizvodi],
	FirmaInfo[idfirme][fMaxProizvodi],
	FirmaInfo[idfirme][fVW],

	FirmaInfo[idfirme][fSQLID]);
	mysql_tquery(SQL, q);

	return 1;
}
//////////////////////////////////////////////////////////////////////
function: _SQLLoadKuce()
{
	if(cache_num_rows()) 
	{
		for(new k; k < cache_num_rows(); k++)
		{
			cache_get_value_name_int(k,"kSQLID", KucaInfo[k][kSQLID]);
			cache_get_value_name_int(k,"ProveraVlasnika",KucaInfo[k][kProveraVlasnika]);
			cache_get_value_name(k,"Vlasnik",KucaInfo[k][kVlasnik],45);
		    cache_get_value_name(k,"Vrsta",KucaInfo[k][kVrsta],35);
		    cache_get_value_name_float(k,"UlazX",KucaInfo[k][kUlazX]);
		    cache_get_value_name_float(k,"UlazY",KucaInfo[k][kUlazY]);
		    cache_get_value_name_float(k,"UlazZ",KucaInfo[k][kUlazZ]);
		    cache_get_value_name_float(k,"IzlazX",KucaInfo[k][kIzlazX]);
		    cache_get_value_name_float(k,"IzlazY",KucaInfo[k][kIzlazY]);
		    cache_get_value_name_float(k,"IzlazZ",KucaInfo[k][kIzlazZ]);
		    cache_get_value_name_int(k,"Neaktivnost",KucaInfo[k][kNeaktivnost]);
		    cache_get_value_name_int(k,"Level",KucaInfo[k][kLevel]);
		    cache_get_value_name_int(k,"Cena",KucaInfo[k][kCena]);
		    cache_get_value_name_int(k,"Novac",KucaInfo[k][kNovac]);
		    cache_get_value_name_int(k,"Interior",KucaInfo[k][kInt]);
		    cache_get_value_name_int(k,"Zatvoreno",KucaInfo[k][kZatvoreno]);
		    cache_get_value_name_int(k,"VW",KucaInfo[k][kVW]);
		    cache_get_value_name_int(k,"Oruzije",KucaInfo[k][kOruzije]);
		    cache_get_value_name_int(k,"Municija",KucaInfo[k][kMunicija]);
		    cache_get_value_name_int(k,"Rent",KucaInfo[k][kRent]);
		    cache_get_value_name_int(k,"CenaRenta",KucaInfo[k][kCenaRenta]);
		    cache_get_value_name_int(k,"Zvono",KucaInfo[k][kZvono]);
		    cache_get_value_name_int(k,"Heal",KucaInfo[k][kFrizder]);
		    cache_get_value_name_int(k,"Mats",KucaInfo[k][kMats]);
		    cache_get_value_name_int(k,"Droga",KucaInfo[k][kDroga]);
		    cache_get_value_name_int(k,"Odjeca",KucaInfo[k][kOdjeca]);
		    cache_get_value_name_int(k,"VrstaIntKuce",KucaInfo[k][kVrstaIntKuce]);
		    cache_get_value_name_int(k,"Hrana",KucaInfo[k][kHrana]);
		    cache_get_value_name(k,"Naziv",KucaInfo[k][kNaziv],64);
		   
		   	new stringgg[520];
            if(KucaInfo[k][kProveraVlasnika] == 0)
	        {
        	    format(stringgg,sizeof(stringgg),"Kuca na prodaju!({FFFFFF}%d{FF9900})\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Cena :{FFFFFF} $%d{FF9900} | Level :{FFFFFF} %d\n{FF9900}Za kupovinu upisite {FFFFFF}/kupikucu",k, KucaInfo[k][kVrsta], UlicaKuce(k), KucaInfo[k][kCena],KucaInfo[k][kLevel]);
        	    KucaLabel[k] = CreateDynamic3DTextLabel(stringgg, 0xFF9900FF, KucaInfo[k][kUlazX], KucaInfo[k][kUlazY], KucaInfo[k][kUlazZ], 80, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
        	    KucaPickup[k] = CreateDynamicPickup(19522, 1, KucaInfo[k][kUlazX], KucaInfo[k][kUlazY], KucaInfo[k][kUlazZ]);
        	}
        	else if(KucaInfo[k][kProveraVlasnika] == 1)
			{
		        if(KucaInfo[k][kRent] == 0)
				{
					format(stringgg,sizeof(stringgg),"{FF9900}[{FFFFFF} %s {FF9900}]\nVlasnik kuce :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Level :{FFFFFF} %d{FF9900} | ID :{FFFFFF} %d\n{FF9900}Neaktivnost : {FFFFFF}%d Sati",KucaInfo[k][kNaziv],KucaInfo[k][kVlasnik], UlicaKuce(k), KucaInfo[k][kVrsta], KucaInfo[k][kLevel], k, KucaInfo[k][kNeaktivnost]);
				}
				else if(KucaInfo[k][kRent] == 1)
				{
					format(stringgg,sizeof(stringgg),"{FF9900}[{FFFFFF} %s {FF9900}]\nVlasnik kuce :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Rent :{FFFFFF} $%d ( /iznajmisobu )\n{FF9900}Level :{FFFFFF} %d{FF9900} | ID :{FFFFFF} %d\n{FF9900}Neaktivnost : {FFFFFF}%d Sati",KucaInfo[k][kNaziv],KucaInfo[k][kVlasnik], UlicaKuce(k), KucaInfo[k][kVrsta], KucaInfo[k][kCenaRenta], KucaInfo[k][kLevel], k, KucaInfo[k][kNeaktivnost]);
				}
		        KucaLabel[k] = CreateDynamic3DTextLabel(stringgg, 0xFF9900FF, KucaInfo[k][kUlazX], KucaInfo[k][kUlazY], KucaInfo[k][kUlazZ], 80, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
		        KucaPickup[k] = CreateDynamicPickup(19524, 1, KucaInfo[k][kUlazX], KucaInfo[k][kUlazY], KucaInfo[k][kUlazZ]);
			}
		}
		printf("[ Sistem ] Kuce: Uctano je %d kuca, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	}
	return 1;
}
///////////////////////////////////////////////////
SacuvajKucu(idkuce)
{
	new q[500];
	mysql_format(SQL, q, sizeof(q), "UPDATE `kuce` SET `ProveraVlasnika` = '%d', `Vlasnik` = '%s', `Vrsta` = '%s', `UlazX` = '%f', `UlazY` = '%f', `UlazZ` = '%f', `IzlazX` = '%f', `IzlazY` = '%f',\
	 `IzlazZ` = '%f' WHERE `kSQLID` = '%d' LIMIT 1",
	KucaInfo[idkuce][kProveraVlasnika],
	KucaInfo[idkuce][kVlasnik],
	KucaInfo[idkuce][kVrsta],
	KucaInfo[idkuce][kUlazX],
	KucaInfo[idkuce][kUlazY],
	KucaInfo[idkuce][kUlazZ],
	KucaInfo[idkuce][kIzlazX],
	KucaInfo[idkuce][kIzlazY],
	KucaInfo[idkuce][kIzlazZ],

	KucaInfo[idkuce][kSQLID]);
	mysql_tquery(SQL, q);

	mysql_format(SQL, q, sizeof(q), "UPDATE `kuce` SET `Neaktivnost` = '%d', `Level` = '%d', `Cena` = '%d', `Novac` = '%d', `Interior` = '%d', `Zatvoreno` = '%d', `VW` = '%d', `Oruzije` = '%d',\
	 `Municija` = '%d' WHERE `kSQLID` = '%d' LIMIT 1",
	KucaInfo[idkuce][kNeaktivnost],
	KucaInfo[idkuce][kLevel],
    KucaInfo[idkuce][kCena],
    KucaInfo[idkuce][kNovac],
    KucaInfo[idkuce][kInt],
    KucaInfo[idkuce][kZatvoreno],
    KucaInfo[idkuce][kVW],
    KucaInfo[idkuce][kOruzije],
    KucaInfo[idkuce][kMunicija],

	KucaInfo[idkuce][kSQLID]);
	mysql_tquery(SQL, q);

	mysql_format(SQL, q, sizeof(q), "UPDATE `kuce` SET `Rent` = '%d', `CenaRenta` = '%d', `Zvono` = '%d', `Heal` = '%d', `Mats` = '%d', `Droga` = '%d', `Odjeca` = '%d', `VrstaIntKuce` = '%d',\
	 `Hrana` = '%d', `Naziv` = '%s' WHERE `kSQLID` = '%d' LIMIT 1",
	KucaInfo[idkuce][kRent],
    KucaInfo[idkuce][kCenaRenta],
    KucaInfo[idkuce][kZvono],
    KucaInfo[idkuce][kFrizder],
    KucaInfo[idkuce][kMats],
    KucaInfo[idkuce][kDroga],
    KucaInfo[idkuce][kOdjeca],
    KucaInfo[idkuce][kVrstaIntKuce],
    KucaInfo[idkuce][kHrana],
    KucaInfo[idkuce][kNaziv],

	KucaInfo[idkuce][kSQLID]);
	mysql_tquery(SQL, q);
	return 1;
}
//////////////////////////////////////////////////////////////////////
function: _SQLLoadStanove()
{
	if(cache_num_rows()) 
	{
		for(new s; s < cache_num_rows(); s++)
		{

			cache_get_value_name_int(s,"sSQLID", StanInfo[s][sSQLID]);
			cache_get_value_name_int(s,"ProveraVlasnika",StanInfo[s][sProveraVlasnika]);
			cache_get_value_name(s,"Vlasnik", StanInfo[s][sVlasnik],45);
		    cache_get_value_name_float(s,"UlazX",StanInfo[s][sUlazX]);
		    cache_get_value_name_float(s,"UlazY",StanInfo[s][sUlazY]);
		    cache_get_value_name_float(s,"UlazZ",StanInfo[s][sUlazZ]);
		    cache_get_value_name_float(s,"IzlazX",StanInfo[s][sIzlazX]);
		    cache_get_value_name_float(s,"IzlazY",StanInfo[s][sIzlazY]);
		    cache_get_value_name_float(s,"IzlazZ",StanInfo[s][sIzlazZ]);
		    cache_get_value_name_int(s,"Neaktivnost",StanInfo[s][sNeaktivnost]);
		    cache_get_value_name_int(s,"Level",StanInfo[s][sLevel]);
		    cache_get_value_name_int(s,"Cena",StanInfo[s][sCena]);
		    cache_get_value_name_int(s,"Novac",StanInfo[s][sNovac]);
		    cache_get_value_name_int(s,"Interior",StanInfo[s][sInt]);
		    cache_get_value_name_int(s,"Zatvoreno",StanInfo[s][sZatvoreno]);
		    cache_get_value_name_int(s,"VW",StanInfo[s][sVW]);
		    cache_get_value_name_int(s,"Oruzije",StanInfo[s][sOruzije]);
		    cache_get_value_name_int(s,"Municija",StanInfo[s][sMunicija]);

    		new string[256];
			if(StanInfo[s][sProveraVlasnika] == 0)
            {
            	format(string, charsmax(string),"Stan na prodaju!({FFFFFF}%d{48E31C})\nAdresa :{FFFFFF} %s\n{48E31C}Cena :{FFFFFF} $%d{48E31C} | Level :{FFFFFF} %d\n{48E31C}Za kupovinu upisite {FFFFFF}/kupistan", s, UlicaStana(s), StanInfo[s][sCena], StanInfo[s][sLevel]);
            	StanLabel[s] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
            	StanPickup[s] = CreateDynamicPickup(19605, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]-1);
	        }
	        else
	        {
            	format(string, charsmax(string),"Vlasnik stana :{FFFFFF} %s\n{48E31C}Adresa :{FFFFFF} %s\n{48E31C}Level :{FFFFFF} %d{48E31C} | ID :{FFFFFF} %d\n{48E31C}Neaktivnost : {FFFFFF}%d",StanInfo[s][sVlasnik],UlicaStana(s), StanInfo[s][sLevel], s,StanInfo[s][sNeaktivnost]);
            	StanLabel[s] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
            	StanPickup[s] = CreateDynamicPickup(19606, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]-1);
            }
        }
        printf("[ Sistem ] Stanovi: Uctano je %d stanova, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
    }  
	return 1;
}

//////////////////////////////////////////////////////////////////////
SacuvajStan(idstan)
{
	new q[500];
	mysql_format(SQL, q, sizeof(q), "UPDATE `stanovi` SET `ProveraVlasnika` = '%d', `Vlasnik` = '%s',  `UlazX` = '%f', `UlazY` = '%f', `UlazZ` = '%f', `IzlazX` = '%f', `IzlazY` = '%f',\
	 `IzlazZ` = '%f' WHERE `sSQLID` = '%d' LIMIT 1",
	StanInfo[idstan][sProveraVlasnika],
	StanInfo[idstan][sVlasnik],
	StanInfo[idstan][sUlazX],
	StanInfo[idstan][sUlazY],
	StanInfo[idstan][sUlazZ],
	StanInfo[idstan][sIzlazX],
	StanInfo[idstan][sIzlazY],
	StanInfo[idstan][sIzlazZ],

	StanInfo[idstan][sSQLID]);
	printf(q);
	mysql_tquery(SQL, q);
	


	mysql_format(SQL, q, sizeof(q), "UPDATE `stanovi` SET `Neaktivnost` = '%d', `Level` = '%d', `Cena` = '%d', `Novac` = '%d', `Interior` = '%d', `Zatvoreno` = '%d', `VW` = '%d', `Oruzije` = '%d',\
	 `Municija` = '%d' WHERE `sSQLID` = '%d' LIMIT 1",
	StanInfo[idstan][sNeaktivnost],
	StanInfo[idstan][sLevel],
    StanInfo[idstan][sCena],
    StanInfo[idstan][sNovac],
    StanInfo[idstan][sInt],
    StanInfo[idstan][sZatvoreno],
    StanInfo[idstan][sVW],
    StanInfo[idstan][sOruzije],
    StanInfo[idstan][sMunicija],

	StanInfo[idstan][sSQLID]);
	print(q);
	mysql_tquery(SQL, q);


   
	return 1;
}
//////////////////////////////////////////////////////////////////////
function: _SQLLoadVikendice()
{
	if(cache_num_rows()) 
	{
		for(new vi; vi < cache_num_rows(); vi++)
		{
			cache_get_value_name_int(vi,"vSQLID",VikendiceInfo[vi][vSQLID]);
			cache_get_value_name_int(vi,"ProveraVlasnika",VikendiceInfo[vi][viProveraVlasnika]);
			cache_get_value_name(vi, "Vlasnik",VikendiceInfo[vi][viVlasnik],45);
			cache_get_value_name_float(vi,"UlazX",VikendiceInfo[vi][viUlazX]);
			cache_get_value_name_float(vi,"UlazY",VikendiceInfo[vi][viUlazY]);
			cache_get_value_name_float(vi,"UlazZ",VikendiceInfo[vi][viUlazZ]);
			cache_get_value_name_float(vi,"IzlazX",VikendiceInfo[vi][viIzlazX]);
			cache_get_value_name_float(vi,"IzlazY",VikendiceInfo[vi][viIzlazY]);
			cache_get_value_name_float(vi,"IzlazZ",VikendiceInfo[vi][viIzlazZ]);
			cache_get_value_name_int(vi,"Neaktivnost",VikendiceInfo[vi][viNeaktivnost]);
			cache_get_value_name_int(vi,"Level",VikendiceInfo[vi][viLevel]);
			cache_get_value_name_int(vi,"Cena",VikendiceInfo[vi][viCena]);
			cache_get_value_name_int(vi,"Novac",VikendiceInfo[vi][viNovac]);
			cache_get_value_name_int(vi,"Interior",VikendiceInfo[vi][viInt]);
			cache_get_value_name_int(vi,"Zatvoreno",VikendiceInfo[vi][viZatvoreno]);
			cache_get_value_name_int(vi,"VW",VikendiceInfo[vi][viVW]);
			cache_get_value_name_int(vi,"Droga",VikendiceInfo[vi][viDroga]);
			cache_get_value_name_int(vi,"Mats",VikendiceInfo[vi][viMats]);

			new string[300];
    		if(VikendiceInfo[vi][viProveraVlasnika] == 0)
			{
				format(string,sizeof(string),""SPLAVA"[ VIKENDICA NA PRODAJU ]\nBroj Vikendice: "BELA"%d\n"SPLAVA"Cena: "BELA"%d$\n"SPLAVA"Level: "BELA"%d\n"SPLAVA"Za kupovinu /kupivikendicu",vi,VikendiceInfo[vi][viCena], VikendiceInfo[vi][viLevel]);
				VikendicaLabel[vi] = CreateDynamic3DTextLabel(string ,0x00C0FFAA,VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
				VikendicaPickup[vi] = CreateDynamicPickup(1272, 1, VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ]);
			}
			else if(VikendiceInfo[vi][viProveraVlasnika] == 1)
			{
				format(string,sizeof(string),""SPLAVA"Vlasnik vikendice: "BELA"%s\n"SPLAVA"Broj vikendice: "BELA"%d \n"SPLAVA"Cena: "BELA"%d$\n"SPLAVA"Level: "BELA"%d""\n"CRVENA"Neaktivnost: "BELA"%d",VikendiceInfo[vi][viVlasnik],vi,VikendiceInfo[vi][viCena],VikendiceInfo[vi][viLevel],VikendiceInfo[vi][viNeaktivnost]);
				VikendicaLabel[vi] = CreateDynamic3DTextLabel(string ,0x00C0FFAA,VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
				VikendicaPickup[vi] = CreateDynamicPickup(1239, 1, VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ]);
			//	printf(" Y_INI | Vikendica %d ucitana",vi);
			}
		}
		printf("[ Sistem ] Vikendice: Uctano je %d vikendica, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	}

	return 1;
}
///////////////////////////////////////////////////////////////////////
SacuvajVikendicu(idvikendice)
{	
	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `vikendice` SET `ProveraVlasnika` = '%d', `Vlasnik` = '%s', `UlazY` = '%f', `UlazY` = '%f', `UlazZ` = '%f' WHERE `vSQLID` = '%d' LIMIT 1",
	VikendiceInfo[idvikendice][viProveraVlasnika],
	VikendiceInfo[idvikendice][viVlasnik],
    VikendiceInfo[idvikendice][viUlazX],
    VikendiceInfo[idvikendice][viUlazY],
    VikendiceInfo[idvikendice][viUlazZ],

	VikendiceInfo[idvikendice][vSQLID]);
	mysql_tquery(SQL, q);

	q[0] = EOS;
	mysql_format(SQL, q, sizeof(q), "UPDATE `vikendice` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Neaktivnost` = '%d', `Level` = '%d' , `Cena` = '%d', `Novac` = '%d' WHERE `vSQLID` = '%d' LIMIT 1",
	VikendiceInfo[idvikendice][viIzlazX],
    VikendiceInfo[idvikendice][viIzlazY],
    VikendiceInfo[idvikendice][viIzlazZ],
    VikendiceInfo[idvikendice][viNeaktivnost],
    VikendiceInfo[idvikendice][viLevel],
    VikendiceInfo[idvikendice][viCena],
    VikendiceInfo[idvikendice][viNovac],

	VikendiceInfo[idvikendice][vSQLID]);
	mysql_tquery(SQL, q);

	q[0] = EOS;
	mysql_format(SQL, q, sizeof(q), "UPDATE `vikendice` SET `Interior` = '%d', `Zatvoreno` = '%d', `VW` = '%d', `Droga` = '%d', `Mats` = '%d' WHERE `vSQLID` = '%d' LIMIT 1",
	VikendiceInfo[idvikendice][viInt],
	VikendiceInfo[idvikendice][viZatvoreno],
	VikendiceInfo[idvikendice][viVW],
	VikendiceInfo[idvikendice][viDroga],
	VikendiceInfo[idvikendice][viMats],

	VikendiceInfo[idvikendice][vSQLID]);
	mysql_tquery(SQL, q);

	return 1;
}
////////////////////////////////////////////////////////////
forward UcitajPlovila(id, name[], value[]);
public UcitajPlovila(id, name[], value[])
{
    INI_Int("Model", PlovilaInfo[id][plModel]);
    INI_Float("X", PlovilaInfo[id][plPozX]);
    INI_Float("Y", PlovilaInfo[id][plPozY]);
    INI_Float("Z", PlovilaInfo[id][plPozZ]);
    INI_Float("Angle", PlovilaInfo[id][plPozA]);
    INI_Int("Boja1", PlovilaInfo[id][plBoja1]);
    INI_Int("Boja2", PlovilaInfo[id][plBoja2]);
    INI_String("Vlasnik", PlovilaInfo[id][plVlasnik],60);
    INI_Int("ImaVlasnika", PlovilaInfo[id][plImaVlasnika]);
    //INI_Int("ID", PlovilaInfo[id][plID]);
    INI_Int("Zakljucan", PlovilaInfo[id][plZakljucan]);
    INI_Int("Cijena", PlovilaInfo[id][plCijena]);
    INI_Int("Spawn", PlovilaInfo[id][plSpawn]);
    return 1;
}
////////////////////////////////////////////////////////////
SacuvajPlovila(id)
{
    new plFile[80];
    format(plFile, sizeof(plFile), PLOVILA_FILE, id);
	new INI:File = INI_Open(plFile);
    INI_WriteInt(File,"Model", PlovilaInfo[id][plModel]);
    INI_WriteFloat(File,"X", PlovilaInfo[id][plPozX]);
    INI_WriteFloat(File,"Y", PlovilaInfo[id][plPozY]);
    INI_WriteFloat(File,"Z", PlovilaInfo[id][plPozZ]);
    INI_WriteFloat(File,"Angle", PlovilaInfo[id][plPozA]);
    INI_WriteInt(File,"Boja1", PlovilaInfo[id][plBoja1]);
    INI_WriteInt(File,"Boja2", PlovilaInfo[id][plBoja2]);
    INI_WriteString(File,"Vlasnik", PlovilaInfo[id][plVlasnik]);
    INI_WriteInt(File,"ImaVlasnika", PlovilaInfo[id][plImaVlasnika]);
    INI_WriteInt(File,"ID", PlovilaInfo[id][plID]);
    INI_WriteInt(File,"Zakljucan", PlovilaInfo[id][plZakljucan]);
    INI_WriteInt(File,"Cijena", PlovilaInfo[id][plCijena]);
    INI_WriteInt(File,"Spawn", PlovilaInfo[id][plSpawn]);
	INI_Close(File);
	return 1;
}
///////////////////////////////////////////////////////////
forward UcitajBicikla(id, name[], value[]);
public UcitajBicikla(id, name[], value[])
{
    INI_Int("Model", BiciklaInfo[id][biModel]);
    INI_Float("X", BiciklaInfo[id][biPozX]);
    INI_Float("Y", BiciklaInfo[id][biPozY]);
    INI_Float("Z", BiciklaInfo[id][biPozZ]);
    INI_Float("Angle", BiciklaInfo[id][biPozA]);
    INI_Int("Boja1", BiciklaInfo[id][biBoja1]);
    INI_Int("Boja2", BiciklaInfo[id][biBoja2]);
    INI_String("Vlasnik", BiciklaInfo[id][biVlasnik],60);
    INI_Int("ImaVlasnika", BiciklaInfo[id][biImaVlasnika]);
    INI_Int("ID", BiciklaInfo[id][biID]);
    INI_Int("Zakljucan", BiciklaInfo[id][biZakljucan]);
    INI_Int("Cijena", BiciklaInfo[id][biCijena]);
    return 1;
}
////////////////////////////////////////////////////////////
SacuvajBicikla(id)
{
    new biFile[80];
    format(biFile, sizeof(biFile), BICIKLA_FILE, id);
	new INI:File = INI_Open(biFile);
    INI_WriteInt(File,"Model", BiciklaInfo[id][biModel]);
    INI_WriteFloat(File,"X", BiciklaInfo[id][biPozX]);
    INI_WriteFloat(File,"Y", BiciklaInfo[id][biPozY]);
    INI_WriteFloat(File,"Z", BiciklaInfo[id][biPozZ]);
    INI_WriteFloat(File,"Angle", BiciklaInfo[id][biPozA]);
    INI_WriteInt(File,"Boja1", BiciklaInfo[id][biBoja1]);
    INI_WriteInt(File,"Boja2", BiciklaInfo[id][biBoja2]);
    INI_WriteString(File,"Vlasnik", BiciklaInfo[id][biVlasnik]);
    INI_WriteInt(File,"ImaVlasnika", BiciklaInfo[id][biImaVlasnika]);
    INI_WriteInt(File,"ID", BiciklaInfo[id][biID]);
    INI_WriteInt(File,"Zakljucan", BiciklaInfo[id][biZakljucan]);
    INI_WriteInt(File,"Cijena", BiciklaInfo[id][biCijena]);
	INI_Close(File);
	return 1;
}
////////////////////////////////////////////////////////////
forward UcitajAvione(id, name[], value[]);
public UcitajAvione(id, name[], value[])
{
 	INI_Int("Model", AvionInfo[id][avModel]);
    INI_Float("X", AvionInfo[id][avPozX]);
    INI_Float("Y", AvionInfo[id][avPozY]);
    INI_Float("Z", AvionInfo[id][avPozZ]);
    INI_Float("Angle", AvionInfo[id][avPozA]);
    INI_Int("Boja1", AvionInfo[id][avBoja1]);
    INI_Int("Boja2", AvionInfo[id][avBoja2]);
    INI_String("Vlasnik", AvionInfo[id][avVlasnik],60);
    INI_Int("ImaVlasnika", AvionInfo[id][avImaVlasnika]);
    //INI_Int("ID", AvionInfo[id][avID]);
    INI_Int("Zakljucan", AvionInfo[id][avZakljucan]);
    INI_Int("Cijena", AvionInfo[id][avCijena]);
    INI_Int("Spawn", AvionInfo[id][avSpawn]);
	return 1;
}
/////////////////////////////////////////////////////////
SacuvajAvione(id)
{
    new avFile[80];
    format(avFile, sizeof(avFile), AVION_FILE, id);
	new INI:File = INI_Open(avFile);
 	INI_WriteInt(File,"Model", AvionInfo[id][avModel]);
    INI_WriteFloat(File,"X", AvionInfo[id][avPozX]);
    INI_WriteFloat(File,"Y", AvionInfo[id][avPozY]);
    INI_WriteFloat(File,"Z", AvionInfo[id][avPozZ]);
    INI_WriteFloat(File,"Angle", AvionInfo[id][avPozA]);
    INI_WriteInt(File,"Boja1", AvionInfo[id][avBoja1]);
    INI_WriteInt(File,"Boja2", AvionInfo[id][avBoja2]);
    INI_WriteString(File,"Vlasnik", AvionInfo[id][avVlasnik]);
    INI_WriteInt(File,"ImaVlasnika", AvionInfo[id][avImaVlasnika]);
    INI_WriteInt(File,"ID", AvionInfo[id][avID]);
    INI_WriteInt(File,"Zakljucan", AvionInfo[id][avZakljucan]);
    INI_WriteInt(File,"Cijena", AvionInfo[id][avCijena]);
    INI_WriteInt(File,"Spawn", AvionInfo[id][avSpawn]);
	INI_Close(File);
	return 1;
}
///////////////////////////////////////////////////////////
forward UcitajMotore(id, name[], value[]);
public UcitajMotore(id, name[], value[])
{
    INI_Int("Model", MotorInfo[id][mModel]);
    INI_Float("X", MotorInfo[id][mPozX]);
    INI_Float("Y", MotorInfo[id][mPozY]);
    INI_Float("Z", MotorInfo[id][mPozZ]);
    INI_Float("Angle", MotorInfo[id][mPozA]);
    INI_Int("Boja1", MotorInfo[id][mBoja1]);
    INI_Int("Boja2", MotorInfo[id][mBoja2]);
    INI_String("Vlasnik", MotorInfo[id][mVlasnik],60);
    INI_Int("ImaVlasnika", MotorInfo[id][mImaVlasnika]);
    //INI_Int("ID", MotorInfo[id][mID]);
    INI_Int("Zakljucan", MotorInfo[id][mZakljucan]);
    INI_Int("Cijena", MotorInfo[id][mCijena]);
    INI_Int("Spawn", MotorInfo[id][mSpawn]);
    return 1;
}
//////////////////////////////////////////////////////////
SacuvajMotor(id)
{
    new mFile[80];
    format(mFile, sizeof(mFile), MOTOR_FILE, id);
	new INI:File = INI_Open(mFile);
    INI_WriteInt(File,"Model", MotorInfo[id][mModel]);
    INI_WriteFloat(File,"X", MotorInfo[id][mPozX]);
    INI_WriteFloat(File,"Y", MotorInfo[id][mPozY]);
    INI_WriteFloat(File,"Z", MotorInfo[id][mPozZ]);
    INI_WriteFloat(File,"Angle", MotorInfo[id][mPozA]);
    INI_WriteInt(File,"Boja1", MotorInfo[id][mBoja1]);
    INI_WriteInt(File,"Boja2", MotorInfo[id][mBoja2]);
    INI_WriteString(File,"Vlasnik", MotorInfo[id][mVlasnik]);
    INI_WriteInt(File,"ImaVlasnika", MotorInfo[id][mImaVlasnika]);
    INI_WriteInt(File,"ID", MotorInfo[id][mID]);
    INI_WriteInt(File,"Zakljucan", MotorInfo[id][mZakljucan]);
    INI_WriteInt(File,"Cijena", MotorInfo[id][mCijena]);
    INI_WriteInt(File,"Spawn", MotorInfo[id][mSpawn]);
	INI_Close(File);
	return 1;
}
//______________________________________________________________________________

function: _SQLLoadJelke()
{
	if(cache_num_rows()) 
	{
		for(new i; i < cache_num_rows(); i++)
		{
			cache_get_value_name_int(i, "jSQLID", JI[i][jSQLID]);
    		cache_get_value_name_int(i,"Postavljena",JI[i][zPostavljena]);
    		cache_get_value_name_float(i,"X",JI[i][zX]);
    		cache_get_value_name_float(i,"Y",JI[i][zY]);
    		cache_get_value_name_float(i,"Z",JI[i][zZ]);
    		cache_get_value_name_float(i,"Angle",JI[i][zAngle]);
    		cache_get_value_name_int(i,"Interior",JI[i][aInt]);
    		cache_get_value_name_int(i,"VW",JI[i][aVW]);
		
    		KreirajJelku(i);
    	}
    }
    printf("[ Sistem ] Jelke: Uctano je %d jelki, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
    return 1;
}
//______________________________________________________________________________

SacuvajJelku(Jelkaid)
{   
    new q[256];
	mysql_format(SQL, q, sizeof(q), "UPDATE `jelke` SET `Postavljena` = '%d', `X` = '%f', `Y` = '%f', `Z` = '%f', `Angle` = '%s', `Interior` = '%d', `VW` = '%d' WHERE `jSQLID` = '%d' LIMIT 1",
	JI[Jelkaid][zPostavljena],
    JI[Jelkaid][zX],
    JI[Jelkaid][zY],
    JI[Jelkaid][zZ],
    JI[Jelkaid][zAngle],
    JI[Jelkaid][aInt],
    JI[Jelkaid][aVW],

	JI[Jelkaid][jSQLID]);
	mysql_tquery(SQL, q);
    return 1;
}
//////////////////////////////////////////////////////////
forward UcitajVozila(id, name[], value[]);
public UcitajVozila(id, name[], value[])
{
    INI_Int("Model", VoziloInfo[id][vModel]);
    INI_Float("X", VoziloInfo[id][vPozX]);
    INI_Float("Y", VoziloInfo[id][vPozY]);
    INI_Float("Z", VoziloInfo[id][vPozZ]);
    INI_Float("A", VoziloInfo[id][vPozA]);
    INI_Int("Boja1", VoziloInfo[id][vBoja1]);
    INI_Int("Boja2", VoziloInfo[id][vBoja2]);
    INI_String("Vlasnik", VoziloInfo[id][vVlasnik],60);
    INI_Int("ImaVlasnika", VoziloInfo[id][vImaVlasnika]);
    //INI_Int("ID", VoziloInfo[id][vID]);
	INI_Int("Zakljucan", VoziloInfo[id][vZakljucan]);
	INI_Int("Droga", VoziloInfo[id][vDroga]);
	INI_Int("Mats", VoziloInfo[id][vMats]);
	INI_Int("Oruzije", VoziloInfo[id][vOruzije]);
	INI_Int("Municija", VoziloInfo[id][vMunicija]);
	INI_Int("Radio", VoziloInfo[id][vRadio]);
	INI_Int("Tune[0]", VoziloInfo[id][vMod]);
	INI_Int("BrojReg", VoziloInfo[id][vBrojReg]);
    INI_String("DatumReg", VoziloInfo[id][vDatumReg], 20); //UcitajVozila
    INI_Int("Spawn", VoziloInfo[id][vSpawn]);
    INI_Int("Registracija", VoziloInfo[id][vRegistracija]);
    INI_Int("TehnickiPregled", VoziloInfo[id][vTehnickiPregled]);
    return 1;
}
/////////////////////////////////////////////////////
SacuvajVozilo(id)
{
    new vFile[80];
    format(vFile, sizeof(vFile), AUTO_FILE, id);
	new INI:File = INI_Open(vFile);
    INI_WriteInt(File,"Model", VoziloInfo[id][vModel]);
    INI_WriteFloat(File,"X", VoziloInfo[id][vPozX]);
    INI_WriteFloat(File,"Y", VoziloInfo[id][vPozY]);
    INI_WriteFloat(File,"Z", VoziloInfo[id][vPozZ]);
    INI_WriteFloat(File,"A", VoziloInfo[id][vPozA]);
    INI_WriteInt(File,"Boja1", VoziloInfo[id][vBoja1]);
    INI_WriteInt(File,"Boja2", VoziloInfo[id][vBoja2]);
    INI_WriteString(File,"Vlasnik", VoziloInfo[id][vVlasnik]);
    INI_WriteInt(File,"ImaVlasnika", VoziloInfo[id][vImaVlasnika]);
    INI_WriteInt(File,"ID", VoziloInfo[id][vID]);
	INI_WriteInt(File,"Zakljucan", VoziloInfo[id][vZakljucan]);
	INI_WriteInt(File,"Droga", VoziloInfo[id][vDroga]);
	INI_WriteInt(File,"Mats", VoziloInfo[id][vMats]);
	INI_WriteInt(File,"Oruzije", VoziloInfo[id][vOruzije]);
	INI_WriteInt(File,"Municija", VoziloInfo[id][vMunicija]);
	INI_WriteInt(File,"Radio", VoziloInfo[id][vRadio]);
	INI_WriteInt(File,"Tune[0]",VoziloInfo[id][vMod][0]);
	INI_WriteInt(File,"BrojReg",VoziloInfo[id][vBrojReg]);
    INI_WriteString(File,"DatumReg",VoziloInfo[id][vDatumReg]);
    INI_WriteInt(File,"Spawn",VoziloInfo[id][vSpawn]);
    INI_WriteInt(File,"Registracija", VoziloInfo[id][vRegistracija]);
    INI_WriteInt(File,"TehnickiPregled", VoziloInfo[id][vTehnickiPregled]);
	INI_Close(File);
	return 1;
}
//////////////////////////////////////////////////////////////////////
forward ChatAnimacija(id);
public ChatAnimacija(id)
{
	StopLoopingAnim(id);
	return 1;
}
//////////////////////////////////////////////////////////////////////
forward Vuci(playerid);
public Vuci(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(VuceIgraca[playerid]))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(IsSeatAvailable(vehicle, 1))
		{
			PutPlayerInVehicle(VuceIgraca[playerid], vehicle, 1);
		}
		else if(IsSeatAvailable(vehicle, 2))
		{
			PutPlayerInVehicle(VuceIgraca[playerid], vehicle, 2);
		}
		else if(IsSeatAvailable(vehicle, 3))
		{
			PutPlayerInVehicle(VuceIgraca[playerid], vehicle, 3);
		}
	}
	else if(!IsPlayerInAnyVehicle(playerid))
	{
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		SetPlayerPos(VuceIgraca[playerid], x, y+1, z);
		SetPlayerInterior(VuceIgraca[playerid], GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(VuceIgraca[playerid], GetPlayerInterior(playerid));
	}
	return 1;
}
////////////////////////////////////////////////////////////////////
forward SpremiKorisnike();
public SpremiKorisnike()
{
	foreach(new i : Player)
	{
	    if(UlogovanProvera[i] == 1)
	    {
			SavePlayer(i);
		}
	}
	print("Svim online igracima je sacuvan account, server nije pao yeeey :33 <3...");
	return 1;
}
///////////////////////////////////////////////////////////////////////
forward PosadjenjaDrogaGrove(playerid);
public PosadjenjaDrogaGrove(playerid)
{
    BranjeDroge[playerid] = 1; SCM(playerid,-1,"[V:RPG] "ZELENA"Droga je nikla otidjite je ubrati!");
	SadjenjeDrogeGrove[0][playerid] = CreatePlayerObject(playerid,3409, 2425.8999023438, -1641.6999511719, 12.5, 0, 0, 0);
	SadjenjeDrogeGrove[1][playerid] = CreatePlayerObject(playerid,3409, 2425.8000488281, -1636.1999511719, 12.39999961853, 0, 0, 0);
	SadjenjeDrogeGrove[2][playerid] = CreatePlayerObject(playerid,3409, 2430.3000488281, -1641.6999511719, 12.5, 0, 0, 0);
	SadjenjeDrogeGrove[3][playerid] = CreatePlayerObject(playerid,3409, 2430.3000488281, -1636.4000244141, 12.39999961853, 0, 0, 0);
    SPD(playerid,144, DIALOG_STYLE_MSGBOX, ""BELA"Droga Info", ""ZELENA"Droga je uspesno nikla\n\n"BELA"Vasa droga koju ste posadili je uspesno nikla\nOtidjite je ubrati!", "Ok", "");
    return 1;
}
///////////////////////////////////////////////////////////////
forward KonektKick(playerid);
public KonektKick(playerid)
{
	Kick(playerid);
	return 1;
}
///////////////////////////////////////////////////////////////
forward KonektBan(playerid);
public KonektBan(playerid)
{
	Ban(playerid);
	return 1;
}
///////////////////////////////////////////////////////////////
forward KartingZeton(playerid);
public KartingZeton(playerid)
{
	if(GetPlayerVehicleID(playerid) >= vkarting[0] && GetPlayerVehicleID(playerid) <= vkarting[6]) RemovePlayerFromVehicle(playerid);
    Zeton[playerid] = 0; SCM(playerid,-1,"[V:RPG] "ZELENA"Vas zeton koji ste imali je istekao!"); KillTimer(zeton[playerid]);
	return 1;
}
////////////////////////////////////////////////////////////////
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
////////////////////////////////////////////////////////////////
g_NovacPlus(id, iznos) //SetPlayerScore
{
	if(iznos < 0 || iznos > 99999999) return 1;
	GivePlayerMoney(id, iznos);
	PlayerInfo[id][pNovacDzep] += iznos;
	return 1;
}
////////////////////////////////////////////////////////////////
g_NovacMinus(id, iznos)
{
	if(iznos < 0 || iznos > 99999999) return 1;
	GivePlayerMoney(id, -iznos);
	PlayerInfo[id][pNovacDzep] -= iznos;
	return 1;
}
////////////////////////////////////////////////////////////////
g_ResetujNovac(id)
{
	PlayerInfo[id][pNovacDzep] = 0; ResetPlayerMoney(id);
	return 1;
}
//////////////////////////////////////////////////////////////////
Update_Skin(playerid, skinid)
{
	SetPlayerSkin(playerid, skinid);
	if(UlogovanProvera[playerid] == 1)
	{
	    
	    PlayerTextDrawHide(playerid, NwnEditor_PTD[playerid][8]);
	    PlayerTextDrawSetPreviewModel(playerid, NwnEditor_PTD[playerid][8], GetPlayerSkin(playerid));
	    PlayerTextDrawShow(playerid, NwnEditor_PTD[playerid][8]);
	    
	}
	return true;
}
///////////////////////////////////////////////////////////////////////
forward PromeniSkin(playerid);
public PromeniSkin(playerid)
{
	PlayerTextDrawHide(playerid, NwnEditor_PTD[playerid][8]);
 	PlayerTextDrawSetPreviewModel(playerid, NwnEditor_PTD[playerid][8], GetPlayerSkin(playerid));
  	PlayerTextDrawShow(playerid, NwnEditor_PTD[playerid][8]);
	return 1;
}
ProveraORG(playerid,id)
{
if(IsPlayerConnected(id))
{
new ttext[40];
if(PlayerInfo[id][pClan] == 1 || PlayerInfo[id][pLider] == 1) { ttext = "Policija"; }
else if(PlayerInfo[id][pClan] == 2 || PlayerInfo[id][pLider] == 2) { ttext = "The Vinci Family"; }
else if(PlayerInfo[id][pClan] == 3 || PlayerInfo[id][pLider] == 3) { ttext = "Black Dragon Triads"; }
else if(PlayerInfo[id][pClan] == 4 || PlayerInfo[id][pLider] == 4) { ttext = "Grove Street Family"; }
else if(PlayerInfo[id][pClan] == 5 || PlayerInfo[id][pLider] == 5) { ttext = "Ballas"; }
else if(PlayerInfo[id][pClan] == 6 || PlayerInfo[id][pLider] == 6) { ttext = "Novinari"; }
else if(PlayerInfo[id][pClan] == 7 || PlayerInfo[id][pLider] == 7) { ttext = "CIA"; }
else if(PlayerInfo[id][pClan] == 8 || PlayerInfo[id][pLider] == 8) { ttext = "Parking Servis"; }
else if(PlayerInfo[id][pClan] == 9 || PlayerInfo[id][pLider] == 9) { ttext = "Condor"; }
else if(PlayerInfo[id][pClan] == 10 || PlayerInfo[id][pLider] == 10) { ttext = "Hitman"; }
else if(PlayerInfo[id][pClan] == 11 || PlayerInfo[id][pLider] == 11) { ttext = "Blue Lagoon"; }
else if(PlayerInfo[id][pClan] == 12 || PlayerInfo[id][pLider] == 12) { ttext = "La Cosa Nostra"; }
else if(PlayerInfo[id][pClan] == 13 || PlayerInfo[id][pLider] == 13) { ttext = "Da Naga Boys"; }
else if(PlayerInfo[id][pClan] == 14 || PlayerInfo[id][pLider] == 14) { ttext = "Taxi"; }
else if(PlayerInfo[id][pClan] == 15 || PlayerInfo[id][pLider] == 15) { ttext = "Yakuza"; }
else if(PlayerInfo[id][pClan] == 16 || PlayerInfo[id][pLider] == 16) { ttext = "Federal Bureau of Investigation"; }
else if(PlayerInfo[id][pClan] == 17 || PlayerInfo[id][pLider] == 17) { ttext = "Black Cobra Corporation"; }
else if(PlayerInfo[id][pClan] == 18 || PlayerInfo[id][pLider] == 18) { ttext = "Vatrogasci"; }
else if(PlayerInfo[id][pClan] == 19 || PlayerInfo[id][pLider] == 19) { ttext = "DR"; }
else if(PlayerInfo[id][pClan] == 20 || PlayerInfo[id][pLider] == 20) { ttext = "Russian Mafia"; }
else if(PlayerInfo[id][pClan] == 21 || PlayerInfo[id][pLider] == 21) { ttext = "Narco Cartel"; }
else if(PlayerInfo[id][pClan] == 22 || PlayerInfo[id][pLider] == 22) { ttext = "Loca Cartel"; }
else if(PlayerInfo[id][pClan] == 23 || PlayerInfo[id][pLider] == 23) { ttext = "TBB"; }
else { ttext = "Civil"; }
new rtext[64];
if(PlayerInfo[id][pRank] == 1) { rtext = "Rank 1"; }
else if(PlayerInfo[id][pRank] == 2) { rtext = "Rank 2"; }
else if(PlayerInfo[id][pRank] == 3) { rtext = "Rank 3"; }
else if(PlayerInfo[id][pRank] == 4) { rtext = "Rank 4"; }
else if(PlayerInfo[id][pRank] == 5) { rtext = "Rank 5"; }
else if(PlayerInfo[id][pRank] == 6) { rtext = "Lider"; }
else { rtext = "Nema"; }
new name[MAX_PLAYER_NAME];
new level = PlayerInfo[id][pLevel];
new orgkazna = PlayerInfo[id][pOrgUgovor];
new bbok[3500];
format(bbok,3500,"{0084e3}Ime i Prezime: {FFFFFF}%s {0084e3}ID:{FFFFFF}%d \n{0084e3}Level:{FFFFFF}[%d]",name,id,level);
format(bbok,3500,"\n{FFFFFF}-------------------------------------------\n {0084e3} Organizacija:{FFFFFF}[%s]\n{0084e3}Organizacija Ugovor:{FFFFFF}[%d]\n{0084e3}Rank:{FFFFFF}[%s]\n---------------------------------------",ttext,orgkazna,rtext);
SPD(playerid, 63, DIALOG_STYLE_MSGBOX,"Status | Varadero  | Uskoro",bbok,"OK","");
}
return 1;
}
///STATS DIALOG
CheckShowStats(playerid,id)
{
	if(IsPlayerConnected(id))
	{
		new otext[20];
		if(PlayerInfo[id][pDrzava] == 1) { otext = "Srbija"; }
		else if(PlayerInfo[id][pDrzava] == 2) { otext = "Bosna i Hercegovina"; }
		else if(PlayerInfo[id][pDrzava] == 3) { otext = "Kosovo"; }
		else if(PlayerInfo[id][pDrzava] == 4) { otext = "Crna Gora"; }
		else if(PlayerInfo[id][pDrzava] == 5) { otext = "Hrvatska"; }
		else if(PlayerInfo[id][pDrzava] == 6) { otext = "Makedonija"; }
		else if(PlayerInfo[id][pDrzava] == 7) { otext = "Slovenija"; }
		else if(PlayerInfo[id][pDrzava] == 8) { otext = "Ostalo"; }
		new ttext[40];
		if(PlayerInfo[id][pClan] == 1 || PlayerInfo[id][pLider] == 1) { ttext = "Policija"; }
		else if(PlayerInfo[id][pClan] == 2 || PlayerInfo[id][pLider] == 2) { ttext = "The Vinci Family"; }
		else if(PlayerInfo[id][pClan] == 3 || PlayerInfo[id][pLider] == 3) { ttext = "Black Dragon Triads"; }
		else if(PlayerInfo[id][pClan] == 4 || PlayerInfo[id][pLider] == 4) { ttext = "Grove Street Family"; }
		else if(PlayerInfo[id][pClan] == 5 || PlayerInfo[id][pLider] == 5) { ttext = "Ballas"; }
		else if(PlayerInfo[id][pClan] == 6 || PlayerInfo[id][pLider] == 6) { ttext = "Novinari"; }
		else if(PlayerInfo[id][pClan] == 7 || PlayerInfo[id][pLider] == 7) { ttext = "CIA"; }
		else if(PlayerInfo[id][pClan] == 8 || PlayerInfo[id][pLider] == 8) { ttext = "Parking Servis"; }
		else if(PlayerInfo[id][pClan] == 9 || PlayerInfo[id][pLider] == 9) { ttext = "Condor"; }
		else if(PlayerInfo[id][pClan] == 10 || PlayerInfo[id][pLider] == 10) { ttext = "Hitman"; }
		else if(PlayerInfo[id][pClan] == 11 || PlayerInfo[id][pLider] == 11) { ttext = "Blue Lagoon"; }
		else if(PlayerInfo[id][pClan] == 12 || PlayerInfo[id][pLider] == 12) { ttext = "La Cosa Nostra"; }
		else if(PlayerInfo[id][pClan] == 13 || PlayerInfo[id][pLider] == 13) { ttext = "Da Naga Boys"; }
		else if(PlayerInfo[id][pClan] == 14 || PlayerInfo[id][pLider] == 14) { ttext = "Taxi"; }
		else if(PlayerInfo[id][pClan] == 15 || PlayerInfo[id][pLider] == 15) { ttext = "Yakuza"; }
		else if(PlayerInfo[id][pClan] == 16 || PlayerInfo[id][pLider] == 16) { ttext = "Federal Bureau of Investigation"; }
		else if(PlayerInfo[id][pClan] == 17 || PlayerInfo[id][pLider] == 17) { ttext = "Black Cobra Corporation"; }
		else if(PlayerInfo[id][pClan] == 18 || PlayerInfo[id][pLider] == 18) { ttext = "Vatrogasci"; }
		else if(PlayerInfo[id][pClan] == 19 || PlayerInfo[id][pLider] == 19) { ttext = "DR"; }
		else if(PlayerInfo[id][pClan] == 20 || PlayerInfo[id][pLider] == 20) { ttext = "Russian Mafia"; }
		else if(PlayerInfo[id][pClan] == 21 || PlayerInfo[id][pLider] == 21) { ttext = "Narco Cartel"; }
		else if(PlayerInfo[id][pClan] == 22 || PlayerInfo[id][pLider] == 22) { ttext = "Loca Cartel"; }
		else if(PlayerInfo[id][pClan] == 23 || PlayerInfo[id][pLider] == 23) { ttext = "TBB"; }
		else { ttext = "Civil"; }
		new rtext[64];
		if(PlayerInfo[id][pRank] == 1) { rtext = "Rank 1"; }
		else if(PlayerInfo[id][pRank] == 2) { rtext = "Rank 2"; }
		else if(PlayerInfo[id][pRank] == 3) { rtext = "Rank 3"; }
		else if(PlayerInfo[id][pRank] == 4) { rtext = "Rank 4"; }
		else if(PlayerInfo[id][pRank] == 5) { rtext = "Rank 5"; }
		else if(PlayerInfo[id][pRank] == 6) { rtext = "Lider"; }
		else { rtext = "Nema"; }
		new jtext[50];
		if(PlayerInfo[id][pPosao] == POSAO_BUSVOZAC) { jtext = "Bus Vozac"; }
		else if(PlayerInfo[id][pPosao] == POSAO_KOSACTRAVE) { jtext = "Kosac Trave"; }
		else if(PlayerInfo[id][pPosao] == POSAO_MEHANICAR) { jtext = "Mehanicar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_POSTAR) { jtext = "Postar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_KOMUNALAC) { jtext = "Komunalac"; }
		else if(PlayerInfo[id][pPosao] == POSAO_GRADJEVINAR) { jtext = "Gradjevinar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_BOLNICAR) { jtext = "Bolnicar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_GROBAR) { jtext = "Grobar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_DZEPAROS) { jtext = "Dzeparos"; }
		else if(PlayerInfo[id][pPosao] == POSAO_FARMER) { jtext = "Farmer"; }
		else if(PlayerInfo[id][pPosao] == POSAO_MASINOVODJA) { jtext = "Masinovodja"; }
		else if(PlayerInfo[id][pPosao] == POSAO_DOSTAVLJAC) { jtext = "Dostavljac"; }
		else if(PlayerInfo[id][pPosao] == POSAO_KAMIONDZIJA) { jtext = "Kamiondzija"; }
		else if(PlayerInfo[id][pPosao] == POSAO_PILOT) { jtext = "Pilot"; }
		else if(PlayerInfo[id][pPosao] == POSAO_ELEKTRICAR) { jtext = "Elektricar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_VODOINSTALATER) { jtext = "Vodoinstalater"; }
		else if(PlayerInfo[id][pPosao] == POSAO_RUDAR) { jtext = "Rudar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_DRVOSECA) { jtext = "Drvoseca"; }
		else if(PlayerInfo[id][pPosao] == POSAO_RIBAR) { jtext = "Ribar"; }
		else if(PlayerInfo[id][pPosao] == POSAO_COCA) { jtext = "Coca cola"; }
		else { jtext = "Nema"; }
		new drank[20];
		if(PlayerInfo[id][pVip] == 1) { drank = "Vip Level 1"; }
		else if(PlayerInfo[id][pVip] == 2) { drank = "Vip Level 2"; }
		else if(PlayerInfo[id][pVip] == 3) { drank = "Vip Level 3"; }
		else if(PlayerInfo[id][pVip] == 4) { drank = "Vip Level 4"; }
		else if(PlayerInfo[id][pVip] == 4) { drank = "Premium"; }
		else if(PlayerInfo[id][pVip] == 4) { drank = "Elite"; }
		else { drank = "Nema"; }
		new kreditostalo = PlayerInfo[id][pMobKredit];
		new poll[64];
		if(PlayerInfo[id][pSex] == 1) { poll = "Musko"; }
		else if(PlayerInfo[id][pSex] == 2) { poll = "Zensko"; }
		new mobilni[64];
		if(PlayerInfo[id][pMobilni] == 1) { mobilni = "Ne"; }
		else if(PlayerInfo[id][pMobilni] == 2) { mobilni = "Da"; }
		new dip[64];
		if(PlayerInfo[id][pDiploma] == 1) { dip = "Ima"; }
		else if(PlayerInfo[id][pDiploma] == 0) { dip = "Nema"; }
		new voz = PlayerInfo[id][pPosedovanjeAuta];
		new voz2 = PlayerInfo[id][pPosedovanjeAuta2];
		new dlv, dlv2, dlp, dlm, dll, dlb;
		if(voz != -1) { dlv = VoziloInfo[voz][vID]; } else dlv = -1;
	    if(voz2 != -1) { dlv2 = VoziloInfo[voz2][vID]; } else dlv2 = -1;
		new plo = PlayerInfo[id][pPosedovanjePlovila];
		if(plo != -1) { dlp = PlovilaInfo[plo][plID]; } else dlp = -1;
		new mot = PlayerInfo[id][pPosedovanjeMotora];
		if(mot != -1) { dlm = MotorInfo[mot][mID]; } else dlm = -1;
		new let = PlayerInfo[id][pPosedovanjeAviona];
		if(let != -1) { dll = AvionInfo[let][avID]; } else dll = -1;
		new bic = PlayerInfo[id][pPosedovanjeBicikla];
		if(bic != -1) { dlb = BiciklaInfo[bic][biID]; } else dlb = -1;
		new age = PlayerInfo[id][pGodine];
		new droga = PlayerInfo[id][pDroga];
		new mats = PlayerInfo[id][pMats];
		new level = PlayerInfo[id][pLevel];
		new exp = PlayerInfo[id][pExp];
		new brojmob = PlayerInfo[id][pMobilni];
		new orgkazna = PlayerInfo[id][pOrgUgovor];
		new novacbanka = PlayerInfo[id][pNovacBanka];
		new warn = PlayerInfo[id][pWarn];
		new novacdzep = PlayerInfo[id][pNovacDzep];
		new iskustvo = (PlayerInfo[id][pLevel] * 2) + 2;
		new posaougovor = PlayerInfo[id][pPosaoUgovor];
		new sati = PlayerInfo[id][pSatiIgre];
		new wanted = PlayerInfo[id][pTrazeniLevel];
		new name[MAX_PLAYER_NAME];
		new firmaid = PlayerInfo[id][pPosedovanjeFirme];
		new kucaid = PlayerInfo[id][pPosedovanjeKuce];
		new stanid = PlayerInfo[id][pPosedovanjeStana];
		new vikid = PlayerInfo[id][pPosedovanjeVikendice];
		new zlato = PlayerInfo[id][pZlato];
		new imanje = PlayerInfo[id][pPosedovanjeImanja];
		GetPlayerName(id, name, sizeof(name));
		new y, m, d;
		getdate(y,m,d);
		new bbok[3500];
		format(bbok,3500,"{0084e3}Ime i Prezime: {FFFFFF}%s {0084e3}ID:{FFFFFF}%d {0084e3}Datum:{FFFFFF}%d/%d/%d\n{FFFFFF}---------------{0084e3}Osnovni podatci{FFFFFF}---------------\n{0084e3}Level:{FFFFFF}[%d]\n{0084e3}Respekti:{FFFFFF}[%d/%d]\n{0084e3}Donatorski rank:{FFFFFF}[%s]\n{0084e3}Sati igranja:{FFFFFF}[%d]\n{0084e3}Upozorenja:{FFFFFF}[%d]\n{0084e3}Trazeni Level:{FFFFFF}[%d]",name,id,y,m,d,level,exp,iskustvo,drank,sati,warn,wanted);
		format(bbok,3500,"%s\n{FFFFFF}------------------{0084e3}Finansije{FFFFFF}------------------\n{0084e3}Dzep:{FFFFFF}[$%d]\n{0084e3}Banka:{FFFFFF}[$%d]\n{0084e3}Zlato:{FFFFFF}[G %d]",bbok,novacdzep,novacbanka,zlato);
		format(bbok,3500,"%s\n{FFFFFF}-----------------{0084e3}Licna Karta{FFFFFF}-----------------\n{0084e3}Spol:{FFFFFF}[%s]\n{0084e3}Godine:{FFFFFF}[%d]\n{0084e3}Drzava:{FFFFFF}[%s]\n{0084e3}Posao:{FFFFFF}[%s]\n{0084e3}Posao Ugovor:{FFFFFF}[%d]\n{0084e3}Diploma:{FFFFFF}[%s]\n{0084e3}Organizacija:{FFFFFF}[%s]\n{0084e3}Organizacija Ugovor:{FFFFFF}[%d]\n{0084e3}Rank:{FFFFFF}[%s]",bbok,poll,age,otext,jtext,posaougovor,dip,ttext,orgkazna,rtext);
		format(bbok,3500,"%s\n{FFFFFF}--------------------{0084e3}Torba{FFFFFF}--------------------\n{0084e3}Broj Telefona:{FFFFFF}[%d]\n{0084e3}Kredit Telefona:{FFFFFF}[%d]\n{0084e3}Droga:{FFFFFF}[%d]\n{0084e3}Materijali:{FFFFFF}[%d]",bbok,brojmob,kreditostalo,droga,mats);
		format(bbok,3500,"%s\n{FFFFFF}------------------{0084e3}Vlasnistvo{FFFFFF}-----------------\n{0084e3}Kuca: {FFFFFF}[%d]\n{0084e3}Biznis: {FFFFFF}[%d]\n{0084e3}Stan: {FFFFFF}[%d]\n{0084e3}Vikendica: {FFFFFF}[%d]\n{0084e3}Imanje: {FFFFFF}[%d]",bbok,kucaid,firmaid,stanid,vikid,imanje);
		format(bbok,3500,"%s\n{0084e3}Auto: {FFFFFF}[%d][%d]\n{0084e3}Auto2: {FFFFFF}[%d][%d]\n{0084e3}Motor: {FFFFFF}[%d][%d]\n{0084e3}Plovilo: {FFFFFF}[%d][%d]\n{0084e3}Letjelica: {FFFFFF}[%d][%d]\n{0084e3}Biciklo: {FFFFFF}[%d][%d]\n|_____________________________________________|",bbok,voz,dlv,voz2,dlv2,mot,dlm,plo,dlp,let,dll,bic,dlb);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX,"Status | Varadero  | varadero-samp.com",bbok,"OK","");
	}
	return 1;
}
CheckShowSkills(playerid,id)
{
	if(IsPlayerConnected(id))
	{
		new pistolj = PlayerInfo[id][pPistSkill];
		new silen = PlayerInfo[id][pSilenSkill];
		new desert = PlayerInfo[id][pDesertSkill];
		new shotgun = PlayerInfo[id][pShotgSkill];
		new sawn = PlayerInfo[id][pSawnSkill];
		new comb = PlayerInfo[id][pCombSkill];
		new uzi = PlayerInfo[id][pUziSkill];
		new smg = PlayerInfo[id][pSmgSkill];
		new ak47 = PlayerInfo[id][pAkSkill];
		new m4 = PlayerInfo[id][pM4Skill];
		new sniper = PlayerInfo[id][pSnipSkill];
		new skill[500];
		format(skill,500,"{0084e3}Pistolj Skill: {FFFFFF}%d\n{0084e3}Silenced Skill:{FFFFFF}%d\n{0084e3}Desert Skill:{FFFFFF}%d\n{0084e3}Shotgun Skill:{FFFFFF}%d\n{0084e3}Sawnoff Skill:{FFFFFF}%d\n{0084e3}Combat Skill:{FFFFFF}%d\n{0084e3}Uzi Skill:{FFFFFF}%d\n{0084e3}SMG Skill:{FFFFFF}%d\n{0084e3}AK47 Skill:{FFFFFF}%d\n{0084e3}M4 Skill:{FFFFFF}%d\n{0084e3}Sniper Skill:{FFFFFF}%d",pistolj,silen,desert,shotgun,sawn,comb,uzi,smg,ak47,m4,sniper);
		SPD(playerid, 69, DIALOG_STYLE_MSGBOX,"Skillovi | [V:RPG] RPG |",skill,"OK","");
	}
	return 1;
}
//////////////////////////////////////////////////////////////
StatusKonekta(playerid, tip)
{
	new string[256];
	if(tip == 1)
	{
		new string1[256], razlog;
		format(string1, sizeof(string1), ""SRWBOJA"Banovani ste...\n\n"VARADERO"%s "BELA"vi ste banovani sa ovog servera.\nRazlog bana: %s\nSvakome pruzamo drugu sansu ako je iskren i ne laze.\nUkoliko zelite unban zatrazite ga na nasem forumu.\nAdresa naseg foruma je:\n\n"VARADERO"www.varadero-samp.com",GetName(playerid),razlog);
		SPD(playerid, 116, DIALOG_STYLE_MSGBOX, ""SRWBOJA"Banovan Status", string1, "Ok", "Izlaz");
		format(string1, sizeof(string1), ""SRWBOJA"[V:RPG] "BELA"Igrac %s je banovan, a pokusava da udje!",GetName(playerid));
		SAM(-1,string1);
		g_freeze[playerid] = SetTimerEx("KonektKick", 500, 0, "d", playerid);
	}
	else if(tip == 2)
	{
	    SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Kikovani ste zbog ne prihvatljivog Imena_Prezimena!");
		format(string, sizeof(string), ""SRWBOJA"%s vase Ime_Prezime nije prihvatljivo\n\n"BELA"Vase ime nije u validnom formatu Ime_Prezime\nVase Ime_Prezime ne sme sadrzavati uvredljive reci\nVase Ime_Prezime ne sme sadrzavati znakove/brojeve\nVase Ime_Prezime ne sme biti vezano za nacionalnost\nVase ime obavezno mora sadrzavati donju crtu\nVase ime ne sme bit ime poznate licnosti\n\nPrimer RPG Imena: "VARADERO"Marko_Markovic",GetName(playerid));
		SPD(playerid, 114, DIALOG_STYLE_MSGBOX, ""SRWBOJA"Provera Imena", string, "Ok", "Izlaz");
		g_freeze[playerid] = SetTimerEx("KonektKick", 500, 0, "d", playerid);
	}
	else if(tip == 3)
	{
	    SCM(playerid,-1,""VARADERO"[V:RPG] "SRWBOJA"Pre spawna se morate ulogovati (kikovani ste)!");
	    g_freeze[playerid] = SetTimerEx("KonektKick", 500, 0, "d", playerid);
	}
	else if(tip == 4)
	{
		format(string, charsmax(string), "[V:RPG] "SRWBOJA"%s pogresili ste lozinku '4/4' puta pa ste KICKOVANI!",GetName(playerid)); //conver
		SCM(playerid,-1, string);
        g_freeze[playerid] = SetTimerEx("KonektKick", 500, 0, "d", playerid);
	}
	else if(tip == 5)
	{
		SCM(playerid,-1,"[V:RPG] "SRWBOJA"Registracija je trenutno onemogucena...");
		SCM(playerid,-1,"[V:RPG] "SRWBOJA"Registracija na server je trenutno onemogucena, razlog onemogucavanja pogledajte na forumu!");
		SCM(playerid,-1,"[V:RPG] "SRWBOJA"Adresa Foruma je: "SIVA"www.varadero-samp.com");
		g_freeze[playerid] = SetTimerEx("KonektKick", 500, 0, "d", playerid);
	} else if(tip == 6) {
		SCM(playerid,-1,"[V:RPG] "SRWBOJA"Izbaceni ste sa servera jer ste previse puna uneli netacnu lozinku.");
        SetTimerEx("KonektKick", 500, 0, "d", playerid);
	}
	return 1;
}
////////////////////////////////////////////////////////////////
PrikaziVozilaTD(playerid)
{
	PlayerTextDrawShow(playerid, TDProdajaVozila[0][playerid]); PlayerTextDrawShow(playerid, TDProdajaVozila[1][playerid]); PlayerTextDrawShow(playerid, TDProdajaVozila[2][playerid]);
	PlayerTextDrawShow(playerid, TDProdajaVozila[3][playerid]); PlayerTextDrawShow(playerid, TDProdajaVozila[4][playerid]); PlayerTextDrawShow(playerid, TDProdajaVozila[5][playerid]);
	return 1;
}
////////////////////////////////////////////////////////////////
UkloniVozilaTD(playerid)
{
	PlayerTextDrawHide(playerid, TDProdajaVozila[0][playerid]); PlayerTextDrawHide(playerid, TDProdajaVozila[1][playerid]); PlayerTextDrawHide(playerid, TDProdajaVozila[2][playerid]);
	PlayerTextDrawHide(playerid, TDProdajaVozila[3][playerid]); PlayerTextDrawHide(playerid, TDProdajaVozila[4][playerid]); PlayerTextDrawHide(playerid, TDProdajaVozila[5][playerid]);
	return 1;
}
///////////////////////////////////////////////////////////////
IsPlayerInArea(playerid, Float:minx, Float:miny, Float:maxx, Float:maxy)
{
	new Float:Poz[3];
	GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	if(Poz[0] > minx && Poz[0] < maxx && Poz[1] > miny && Poz[1] < maxy) return true;
	return false;
}
//////////////////////////////////////////////////////////////
CijeneAuta(Model)
{
	for(new i = 0; i < PRODAJA_AUTA; i++)
	{
		if(AutoSalon[i][0] == Model) return i;
	}
	return 0;
}
//////////////////////////////////////////////////////////////
KreirajTextDrawe(playerid)
{		
	//////////////////////////////////////////
	TDProdajaVozila[0][playerid] = CreatePlayerTextDraw(playerid, 90.000000, 116.666664, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, TDProdajaVozila[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TDProdajaVozila[0][playerid], 103.750000, 69.416679);
	PlayerTextDrawAlignment(playerid, TDProdajaVozila[0][playerid], 1);
	PlayerTextDrawColor(playerid, TDProdajaVozila[0][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TDProdajaVozila[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TDProdajaVozila[0][playerid], 0);
	PlayerTextDrawFont(playerid, TDProdajaVozila[0][playerid], 4);

	TDProdajaVozila[1][playerid] = CreatePlayerTextDraw(playerid, 89.375000, 116.083335, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, TDProdajaVozila[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TDProdajaVozila[1][playerid], 104.375000, 9.916664);
	PlayerTextDrawAlignment(playerid, TDProdajaVozila[1][playerid], 1);
	PlayerTextDrawColor(playerid, TDProdajaVozila[1][playerid], 65535);
	PlayerTextDrawSetShadow(playerid, TDProdajaVozila[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TDProdajaVozila[1][playerid], 0);
	PlayerTextDrawFont(playerid, TDProdajaVozila[1][playerid], 4);

	TDProdajaVozila[2][playerid] = CreatePlayerTextDraw(playerid, 115.625000, 117.249969, "Cenovnik");
	PlayerTextDrawLetterSize(playerid, TDProdajaVozila[2][playerid], 0.279374, 0.812499);
	PlayerTextDrawAlignment(playerid, TDProdajaVozila[2][playerid], 1);
	PlayerTextDrawColor(playerid, TDProdajaVozila[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TDProdajaVozila[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TDProdajaVozila[2][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TDProdajaVozila[2][playerid], 51);
	PlayerTextDrawFont(playerid, TDProdajaVozila[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid, TDProdajaVozila[2][playerid], 1);

	TDProdajaVozila[3][playerid] = CreatePlayerTextDraw(playerid, 96.875000, 135.916671, "Marka: Sultan");
	PlayerTextDrawLetterSize(playerid, TDProdajaVozila[3][playerid], 0.204999, 1.016664);
	PlayerTextDrawAlignment(playerid, TDProdajaVozila[3][playerid], 1);
	PlayerTextDrawColor(playerid, TDProdajaVozila[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TDProdajaVozila[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TDProdajaVozila[3][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TDProdajaVozila[3][playerid], 51);
	PlayerTextDrawFont(playerid, TDProdajaVozila[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid, TDProdajaVozila[3][playerid], 1);

	TDProdajaVozila[4][playerid] = CreatePlayerTextDraw(playerid, 97.500000, 158.083328, "Cena:");
	PlayerTextDrawLetterSize(playerid, TDProdajaVozila[4][playerid], 0.241874, 0.999164);
	PlayerTextDrawAlignment(playerid, TDProdajaVozila[4][playerid], 1);
	PlayerTextDrawColor(playerid, TDProdajaVozila[4][playerid], 16711935);
	PlayerTextDrawSetShadow(playerid, TDProdajaVozila[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TDProdajaVozila[4][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TDProdajaVozila[4][playerid], 51);
	PlayerTextDrawFont(playerid, TDProdajaVozila[4][playerid], 2);
	PlayerTextDrawSetProportional(playerid, TDProdajaVozila[4][playerid], 1);

	TDProdajaVozila[5][playerid] = CreatePlayerTextDraw(playerid, 129.375000, 158.083312, "8000000$");
	PlayerTextDrawLetterSize(playerid, TDProdajaVozila[5][playerid], 0.231249, 1.028331);
	PlayerTextDrawAlignment(playerid, TDProdajaVozila[5][playerid], 1);
	PlayerTextDrawColor(playerid, TDProdajaVozila[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TDProdajaVozila[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TDProdajaVozila[5][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TDProdajaVozila[5][playerid], 51);
	PlayerTextDrawFont(playerid, TDProdajaVozila[5][playerid], 2);
	PlayerTextDrawSetProportional(playerid, TDProdajaVozila[5][playerid], 1);
	
	//////////////////////////////////////////////////////////////////////////

    mdct[0] = CreatePlayerTextDraw(playerid,443.000000, 146.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,mdct[0], 255);
	PlayerTextDrawFont(playerid,mdct[0], 1);
	PlayerTextDrawLetterSize(playerid,mdct[0], 0.500000, 13.400007);
	PlayerTextDrawColor(playerid,mdct[0], -1);
	PlayerTextDrawSetOutline(playerid,mdct[0], 0);
	PlayerTextDrawSetProportional(playerid,mdct[0], 1);
	PlayerTextDrawSetShadow(playerid,mdct[0], 1);
	PlayerTextDrawUseBox(playerid,mdct[0], 1);
	PlayerTextDrawBoxColor(playerid,mdct[0], 842150450);
	PlayerTextDrawTextSize(playerid,mdct[0], 174.000000, 23.000000);
	PlayerTextDrawSetSelectable(playerid,mdct[0], 0);

	mdct[1] = CreatePlayerTextDraw(playerid,443.000000, 146.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,mdct[1], 255);
	PlayerTextDrawFont(playerid,mdct[1], 1);
	PlayerTextDrawLetterSize(playerid,mdct[1], 0.500000, 1.100003);
	PlayerTextDrawColor(playerid,mdct[1], -1);
	PlayerTextDrawSetOutline(playerid,mdct[1], 0);
	PlayerTextDrawSetProportional(playerid,mdct[1], 1);
	PlayerTextDrawSetShadow(playerid,mdct[1], 1);
	PlayerTextDrawUseBox(playerid,mdct[1], 1);
	PlayerTextDrawBoxColor(playerid,mdct[1], 65535);
	PlayerTextDrawTextSize(playerid,mdct[1], 174.000000, 18.000000);
	PlayerTextDrawSetSelectable(playerid,mdct[1], 0);

	mdct[2] = CreatePlayerTextDraw(playerid,221.000000, 145.000000, "mobile data computer");
	PlayerTextDrawBackgroundColor(playerid,mdct[2], 255);
	PlayerTextDrawFont(playerid,mdct[2], 2);
	PlayerTextDrawLetterSize(playerid,mdct[2], 0.360000, 1.100000);
	PlayerTextDrawColor(playerid,mdct[2], -1);
	PlayerTextDrawSetOutline(playerid,mdct[2], 0);
	PlayerTextDrawSetProportional(playerid,mdct[2], 1);
	PlayerTextDrawSetShadow(playerid,mdct[2], 1);
	PlayerTextDrawSetSelectable(playerid,mdct[2], 0);

	mdct[3] = CreatePlayerTextDraw(playerid,242.000000, 168.000000, "-  ocisti dosije  -");
	PlayerTextDrawBackgroundColor(playerid,mdct[3], 255);
	PlayerTextDrawFont(playerid,mdct[3], 2);
	PlayerTextDrawLetterSize(playerid,mdct[3], 0.360000, 1.100000);
	PlayerTextDrawColor(playerid,mdct[3], -65281);
	PlayerTextDrawSetOutline(playerid,mdct[3], 0);
	PlayerTextDrawSetProportional(playerid,mdct[3], 1);
	PlayerTextDrawSetShadow(playerid,mdct[3], 1);
	PlayerTextDrawSetSelectable(playerid,mdct[3], 1);

	mdct[4] = CreatePlayerTextDraw(playerid,229.000000, 185.000000, "-  osumljici igraca  -");
	PlayerTextDrawBackgroundColor(playerid,mdct[4], 255);
	PlayerTextDrawFont(playerid,mdct[4], 2);
	PlayerTextDrawLetterSize(playerid,mdct[4], 0.360000, 1.100000);
	PlayerTextDrawColor(playerid,mdct[4], -65281);
	PlayerTextDrawSetOutline(playerid,mdct[4], 0);
	PlayerTextDrawSetProportional(playerid,mdct[4], 1);
	PlayerTextDrawSetShadow(playerid,mdct[4], 1);
	PlayerTextDrawSetSelectable(playerid,mdct[4], 1);

	mdct[5] = CreatePlayerTextDraw(playerid,237.000000, 203.000000, "-  proveri dosije  -");
	PlayerTextDrawBackgroundColor(playerid,mdct[5], 255);
	PlayerTextDrawFont(playerid,mdct[5], 2);
	PlayerTextDrawLetterSize(playerid,mdct[5], 0.360000, 1.100000);
	PlayerTextDrawColor(playerid,mdct[5], -65281);
	PlayerTextDrawSetOutline(playerid,mdct[5], 0);
	PlayerTextDrawSetProportional(playerid,mdct[5], 1);
	PlayerTextDrawSetShadow(playerid,mdct[5], 1);
	PlayerTextDrawSetSelectable(playerid,mdct[5], 1);

	mdct[6] = CreatePlayerTextDraw(playerid,237.000000, 221.000000, "-  lociraj igraca  -");
	PlayerTextDrawBackgroundColor(playerid,mdct[6], 255);
	PlayerTextDrawFont(playerid,mdct[6], 2);
	PlayerTextDrawLetterSize(playerid,mdct[6], 0.360000, 1.100000);
	PlayerTextDrawColor(playerid,mdct[6], -65281);
	PlayerTextDrawSetOutline(playerid,mdct[6], 0);
	PlayerTextDrawSetProportional(playerid,mdct[6], 1);
	PlayerTextDrawSetShadow(playerid,mdct[6], 1);
	PlayerTextDrawSetSelectable(playerid,mdct[6], 1);

	mdct[7] = CreatePlayerTextDraw(playerid,220.000000, 239.000000, "-  lista osumljicenih  -");
	PlayerTextDrawBackgroundColor(playerid,mdct[7], 255);
	PlayerTextDrawFont(playerid,mdct[7], 2);
	PlayerTextDrawLetterSize(playerid,mdct[7], 0.360000, 1.100000);
	PlayerTextDrawColor(playerid,mdct[7], -65281);
	PlayerTextDrawSetOutline(playerid,mdct[7], 0);
	PlayerTextDrawSetProportional(playerid,mdct[7], 1);
	PlayerTextDrawSetShadow(playerid,mdct[7], 1);
	PlayerTextDrawSetSelectable(playerid,mdct[7], 1);

	mdct[8] = CreatePlayerTextDraw(playerid,443.000000, 262.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,mdct[8], 255);
	PlayerTextDrawFont(playerid,mdct[8], 1);
	PlayerTextDrawLetterSize(playerid,mdct[8], 0.500000, 0.900004);
	PlayerTextDrawColor(playerid,mdct[8], -1);
	PlayerTextDrawSetOutline(playerid,mdct[8], 0);
	PlayerTextDrawSetProportional(playerid,mdct[8], 1);
	PlayerTextDrawSetShadow(playerid,mdct[8], 1);
	PlayerTextDrawUseBox(playerid,mdct[8], 1);
	PlayerTextDrawBoxColor(playerid,mdct[8], 65535);
	PlayerTextDrawTextSize(playerid,mdct[8], 174.000000, 18.000000);
	PlayerTextDrawSetSelectable(playerid,mdct[8], 0);

	mdct[9] = CreatePlayerTextDraw(playerid,297.000000, 256.000000, "~w~x");
	PlayerTextDrawBackgroundColor(playerid,mdct[9], 255);
	PlayerTextDrawFont(playerid, mdct[9], 2);
	PlayerTextDrawLetterSize(playerid,mdct[9], 0.629998, 1.799999);
	PlayerTextDrawColor(playerid,mdct[9], -16776961);
	PlayerTextDrawSetOutline(playerid,mdct[9], 0);
	PlayerTextDrawSetProportional(playerid,mdct[9], 1);
	PlayerTextDrawSetShadow(playerid,mdct[9], 1);
	PlayerTextDrawSetSelectable(playerid,mdct[9], 1);


    	/////////////////////////////////////////////////////////////////////////////
	


	Brzinomer[playerid][0] = CreatePlayerTextDraw(playerid, 475.500000, 368.062500, "box");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][0], 0.000000, 4.149997);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][0], 635.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][0], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, Brzinomer[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, Brzinomer[playerid][0], 674313215);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][0], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][0], 1);

	Brzinomer[playerid][1] = CreatePlayerTextDraw(playerid, 477.399810, 369.762390, "box");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][1], 0.000000, -0.250005);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][1], 633.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][1], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, Brzinomer[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, Brzinomer[playerid][1], 1902160895);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][1], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][1], 1);

	Brzinomer[playerid][2] = CreatePlayerTextDraw(playerid, 627.999023, 410.011535, "Particle:lamp_shad_64");
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][2], -145.000000, -40.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][2], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][2], 1902160753);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][2], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][2], 0);

	Brzinomer[playerid][3] = CreatePlayerTextDraw(playerid, 520.400390, 374.399932, "box");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][3], 0.000000, 2.749996);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][3], 634.400390, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][3], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, Brzinomer[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, Brzinomer[playerid][3], 674313215);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][3], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][3], 1);

	Brzinomer[playerid][4] = CreatePlayerTextDraw(playerid, 481.199798, 374.362457, "box");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][4], 0.000000, 2.649992);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][4], 522.700317, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][4], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, Brzinomer[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid, Brzinomer[playerid][4], 1902160895);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][4], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][4], 1);

	Brzinomer[playerid][5] = CreatePlayerTextDraw(playerid, 457.000000, 340.937500, ""); //auto
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][5], 90.000000, 90.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][5], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][5], 0x000000);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][5], 0);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][5], 0);
	PlayerTextDrawSetPreviewModel(playerid, Brzinomer[playerid][5], 415);
	PlayerTextDrawSetPreviewRot(playerid, Brzinomer[playerid][5], 0.000000, 0.000000, 180.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, Brzinomer[playerid][5], 1, 1);

	Brzinomer[playerid][6] = CreatePlayerTextDraw(playerid, 527.600463, 373.775054, "CHEETAH");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][6], 0.209499, 0.808125);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][6], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][6], -1);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][6], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][6], 1);

	Brzinomer[playerid][7] = CreatePlayerTextDraw(playerid, 528.199829, 381.087493, "ENGINE:on");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][7], 0.114999, 0.742497);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][7], 161.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][7], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][7], -1094795521);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][7], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][7], 1);

	Brzinomer[playerid][8] = CreatePlayerTextDraw(playerid, 528.199829, 386.487823, "GORIVO:60l");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][8], 0.114999, 0.742497);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][8], 161.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][8], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][8], -1094795521);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][8], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][8], 1);

	Brzinomer[playerid][9] = CreatePlayerTextDraw(playerid, 528.299804, 391.388122, "OSTECENJE;500%");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][9], 0.114999, 0.742497);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][9], 161.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][9], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][9], -1094795521);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][9], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][9], 1);

	Brzinomer[playerid][10] = CreatePlayerTextDraw(playerid, 589.500000, 375.725067, "150");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][10], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][10], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][10], -1);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][10], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][10], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][10], 3);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][10], 1);

	Brzinomer[playerid][11] = CreatePlayerTextDraw(playerid, 594.999755, 388.999969, "KM/h");
	PlayerTextDrawLetterSize(playerid, Brzinomer[playerid][11], 0.114999, 0.742497);
	PlayerTextDrawTextSize(playerid, Brzinomer[playerid][11], 162.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Brzinomer[playerid][11], 1);
	PlayerTextDrawColor(playerid, Brzinomer[playerid][11], -1094795521);
	PlayerTextDrawSetShadow(playerid, Brzinomer[playerid][11], 0);
	PlayerTextDrawBackgroundColor(playerid, Brzinomer[playerid][11], 255);
	PlayerTextDrawFont(playerid, Brzinomer[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, Brzinomer[playerid][11], 1);
	return 1;
}
///////////////////////////////////////////////////////
ResetujVar(playerid)
{
    if(UzeoKutiju[playerid] != 0) UzeoKutiju[playerid] = 0, RemovePlayerAttachedObject(playerid, DOSTAVLJAC_SLOT);
    if(KupovinaAuta[playerid] == true) 
    	autokatalog = 0;

	SvercMaterijala[playerid] =
	AdminDuty[playerid] = 
	GMDuty[playerid] =
	PolicajacNaDuznosti[playerid] = 
	SvercUlja[playerid] = 
	Poligon[playerid] =
	KoristiDrogu[playerid] = 
	SvercDroge[playerid] = 
	BusLinija[playerid] =
	KosenjeTrave[playerid] = 
	PosaoOprema[playerid] = 
	PostaPreuzmi[playerid] =
	PostaRaznesi[playerid] = 
	SmeceSakuplja[playerid] = 
	CistiUlice[playerid] =
	MalterDovozi[playerid] = 
	PoravnaBagerom[playerid] = 
	GrobarLinija[playerid] =
	Oranje[playerid] = 
	Vrsenje[playerid] = 
	Mleko[playerid] = 
	DrvaPrevoz[playerid] = 
	VozLinija[playerid] =
	TuraSF[playerid] = 
	TuraLV[playerid] = 
	LetSF[playerid] = 
	LetLV[playerid] =
	ElektricarKvar[playerid] = 0; 
	UsaoAutoProdaja[playerid] = 
	UsaoMotorProdaja[playerid] =
	UsaoAvionProdaja[playerid] = 
	BankomatMeni[playerid] = -1; 
	MDC[playerid] = 0;
	UsaoPloviloProdaja[playerid] = -1; DisablePlayerCheckpoint(playerid); Ribari[playerid] = 0;
	return 1;
}
///////////////////////////////////////////////////////
StatusMotora(playerid, tip)
{
	if(tip == 1)
	{
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, lights, alarm, doors, bonnet, boot, objective);
	}
	else if(tip == 2)
	{
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
	}
	return 1;
}
///////////////////////////////////////////////////////
IsAEvent(carid)
{
	for(new i = 0; i < sizeof(eventa); i++)
	{
		if(carid == eventa[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////
Igrac2D(playerid, zone[], len)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    for(new i = 0; i != sizeof(gSAZones); i++ )
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
        {
            return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
        }
    }
    return 0;
}

/////////////////////////////////////////////////////
GetPlayerLocation(playerid)
{
	new imeulice[MAX_ZONE_NAME];
   	Igrac2D(playerid,imeulice,sizeof(imeulice));
   	return imeulice;
}
///////////////////////////////////////////////////
IgracPolicajac(playerid)
{
	if(PlayerInfo[playerid][pClan] == 1)
	{
		return 1;
	}
	else if(PlayerInfo[playerid][pLider] == 1)
	{
		return 1;
	}
	if(PlayerInfo[playerid][pClan] == 7)
	{
		return 1;
	}
	else if(PlayerInfo[playerid][pLider] == 7)
	{
		return 1;
	}
	if(PlayerInfo[playerid][pClan] == 16)
	{
		return 1;
	}
	else if(PlayerInfo[playerid][pLider] == 16)
	{
		return 1;
	}
	if(PlayerInfo[playerid][pClan] == 24)
	{
		return 1;
	}
	else if(PlayerInfo[playerid][pLider] == 24)
	{
		return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////
FirmaNovac(firma, iznos)
{
	if(iznos < 0 || iznos > 99999999) return 1;
	FirmaInfo[firma][fKasa] += iznos;
	if(!strcmp(FirmaInfo[firma][fIznuda], "Black Dragon Triads")) { OrgInfo[BdtNovac] += 20; SacuvajOrgInfo(); }
	else if(!strcmp(FirmaInfo[firma][fIznuda], "The Vinci Family")) { OrgInfo[TvfNovac] += 20; SacuvajOrgInfo(); }
    SacuvajFirmu(firma);
	return 1;
}
ImeIgraca(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    return name;
}
///////////////////////////////////////////////////////////////////
RemovePlayerWeapon(playerid, weaponid)
{
    if(!IsPlayerConnected(playerid) || weaponid < 0 || weaponid > 50)
        return;
    new saveweapon[13], saveammo[13];
    for(new slot = 0; slot < 13; slot++)
        GetPlayerWeaponData(playerid, slot, saveweapon[slot], saveammo[slot]);
    ResetPlayerWeapons(playerid);
    for(new slot; slot < 13; slot++)
    {
        if(saveweapon[slot] == weaponid || saveammo[slot] == 0)
            continue;
        GivePlayerWeapon(playerid, saveweapon[slot], saveammo[slot]);
    }

    GivePlayerWeapon(playerid, 0, 1);

}
GetGunObjectID(WeaponID)
{
    if (WeaponID < 0 || WeaponID > 64)
    {
        return 1575;
    }
    return GunObjectIDs[WeaponID];
}
//=================//
DropGun(playerid, GunID, GunAmmo, Float:Xx, Float:Yy, Float:Zz, world, interior)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid,name,sizeof(name));
    if(GunID != 0 && GunAmmo != 0)
    {
        for(new i = 0; i < sizeof(DropInfo); i++)
        {
            if(DropInfo[i][DropGunPosX] == 0.0 && DropInfo[i][DropGunPosY] == 0.0 && DropInfo[i][DropGunPosZ] == 0.0)
            {
                DropInfo[i][DropGunAmmount][0] = GunID;
                DropInfo[i][DropGunAmmount][1] = GunAmmo;
                DropInfo[i][DropGunPosX] = Xx;
                DropInfo[i][DropGunPosY] = Yy;
                DropInfo[i][DropGunPosZ] = Zz;
                DropInfo[i][DropGunVWorld] = world;
                DropInfo[i][DropGunInterior] = interior;
                DropObject[i] = CreateDynamicObject(GetGunObjectID(GunID), Xx, Yy, Zz-1, 80.0, 0.0, 0.0, world);
                return 1;
            }
        }
        return 1;
    }
    return 1;
}
/////////////////////////////////////////////////////////////////////
AttachObjectRemove(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) RemovePlayerAttachedObject(playerid, 6);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 10)) RemovePlayerAttachedObject(playerid, 10);
	return 1;
}
/////////////////////////////////////////////////////////////////////
AtmTD(playerid, tip)
{
	if(tip == 1)
	{
		Bankomat[0][playerid] = CreatePlayerTextDraw(playerid,194.000000, 152.000000, "_");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[0][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[0][playerid], 1);
		PlayerTextDrawLetterSize(playerid,Bankomat[0][playerid], 0.500000, 11.699995);
		PlayerTextDrawColor(playerid,Bankomat[0][playerid], -1);
		PlayerTextDrawSetOutline(playerid,Bankomat[0][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[0][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[0][playerid], 1);
		PlayerTextDrawUseBox(playerid,Bankomat[0][playerid], 1);
		PlayerTextDrawBoxColor(playerid,Bankomat[0][playerid], 1111638594);
		PlayerTextDrawTextSize(playerid,Bankomat[0][playerid], 16.000000, -4.000000);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[0][playerid], false);

		Bankomat[1][playerid] = CreatePlayerTextDraw(playerid,38.000000, 158.000000, "Los Santos Banka");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[1][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[1][playerid], 2);
		PlayerTextDrawLetterSize(playerid,Bankomat[1][playerid], 0.340000, 1.500000);
		PlayerTextDrawColor(playerid,Bankomat[1][playerid], -16776961);
		PlayerTextDrawSetOutline(playerid,Bankomat[1][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[1][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[1][playerid], 1);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[1][playerid], false);

		Bankomat[2][playerid] = CreatePlayerTextDraw(playerid,28.000000, 191.000000, "- podigni novac");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[2][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[2][playerid], 2);
		PlayerTextDrawLetterSize(playerid,Bankomat[2][playerid], 0.340000, 1.500000);
		PlayerTextDrawColor(playerid,Bankomat[2][playerid], -1);
		PlayerTextDrawSetOutline(playerid,Bankomat[2][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[2][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[2][playerid], 1);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[2][playerid], true);

		Bankomat[3][playerid] = CreatePlayerTextDraw(playerid,28.000000, 221.000000, "- stanje racuna");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[3][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[3][playerid], 2);
		PlayerTextDrawLetterSize(playerid,Bankomat[3][playerid], 0.340000, 1.500000);
		PlayerTextDrawColor(playerid,Bankomat[3][playerid], -1);
		PlayerTextDrawSetOutline(playerid,Bankomat[3][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[3][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[3][playerid], 1);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[3][playerid], true);

		Bankomat[4][playerid] = CreatePlayerTextDraw(playerid,22.000000, 170.000000, "-");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[4][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[4][playerid], 2);
		PlayerTextDrawLetterSize(playerid,Bankomat[4][playerid], 13.820015, 1.000000);
		PlayerTextDrawColor(playerid,Bankomat[4][playerid], -1);
		PlayerTextDrawSetOutline(playerid,Bankomat[4][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[4][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[4][playerid], 1);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[4][playerid], false);

		Bankomat[5][playerid] = CreatePlayerTextDraw(playerid,194.000000, 151.000000, "_");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[5][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[5][playerid], 1);
		PlayerTextDrawLetterSize(playerid,Bankomat[5][playerid], 0.500000, -0.300004);
		PlayerTextDrawColor(playerid,Bankomat[5][playerid], -1);
		PlayerTextDrawSetOutline(playerid,Bankomat[5][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[5][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[5][playerid], 1);
		PlayerTextDrawUseBox(playerid,Bankomat[5][playerid], 1);
		PlayerTextDrawBoxColor(playerid,Bankomat[5][playerid], -1);
		PlayerTextDrawTextSize(playerid,Bankomat[5][playerid], 16.000000, -4.000000);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[5][playerid], false);

		Bankomat[6][playerid] = CreatePlayerTextDraw(playerid,194.000000, 263.000000, "_");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[6][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[6][playerid], 1);
		PlayerTextDrawLetterSize(playerid,Bankomat[6][playerid], 0.500000, -0.300004);
		PlayerTextDrawColor(playerid,Bankomat[6][playerid], -1);
		PlayerTextDrawSetOutline(playerid,Bankomat[6][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[6][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[6][playerid], 1);
		PlayerTextDrawUseBox(playerid,Bankomat[6][playerid], 1);
		PlayerTextDrawBoxColor(playerid,Bankomat[6][playerid], -1);
		PlayerTextDrawTextSize(playerid,Bankomat[6][playerid], 16.000000, -4.000000);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[6][playerid], false);

		Bankomat[7][playerid] = CreatePlayerTextDraw(playerid,178.000000, 145.000000, "X");
		PlayerTextDrawBackgroundColor(playerid,Bankomat[7][playerid], 255);
		PlayerTextDrawFont(playerid,Bankomat[7][playerid], 2);
		PlayerTextDrawLetterSize(playerid,Bankomat[7][playerid], 0.459999, 1.299999);
		PlayerTextDrawColor(playerid,Bankomat[7][playerid], -16776961);
		PlayerTextDrawSetOutline(playerid,Bankomat[7][playerid], 0);
		PlayerTextDrawSetProportional(playerid,Bankomat[7][playerid], 1);
		PlayerTextDrawSetShadow(playerid,Bankomat[7][playerid], 1);
		PlayerTextDrawSetSelectable(playerid,PlayerText:Bankomat[7][playerid], true);

		PlayerTextDrawShow(playerid, Bankomat[0][playerid]);
		PlayerTextDrawShow(playerid, Bankomat[1][playerid]);
		PlayerTextDrawShow(playerid, Bankomat[2][playerid]);
		PlayerTextDrawShow(playerid, Bankomat[3][playerid]);
		PlayerTextDrawShow(playerid, Bankomat[4][playerid]);
		PlayerTextDrawShow(playerid, Bankomat[5][playerid]);
		PlayerTextDrawShow(playerid, Bankomat[6][playerid]);
		PlayerTextDrawShow(playerid, Bankomat[7][playerid]);
	}
	else if(tip == 2)
	{
		PlayerTextDrawHide(playerid, Bankomat[0][playerid]);
		PlayerTextDrawHide(playerid, Bankomat[1][playerid]);
		PlayerTextDrawHide(playerid, Bankomat[2][playerid]);
		PlayerTextDrawHide(playerid, Bankomat[3][playerid]);
		PlayerTextDrawHide(playerid, Bankomat[4][playerid]);
		PlayerTextDrawHide(playerid, Bankomat[5][playerid]);
		PlayerTextDrawHide(playerid, Bankomat[6][playerid]);
		PlayerTextDrawHide(playerid, Bankomat[7][playerid]);
		PlayerTextDrawDestroy(playerid,Bankomat[0][playerid]); PlayerTextDrawDestroy(playerid,Bankomat[1][playerid]);
		PlayerTextDrawDestroy(playerid,Bankomat[2][playerid]); PlayerTextDrawDestroy(playerid,Bankomat[3][playerid]);
		PlayerTextDrawDestroy(playerid,Bankomat[4][playerid]); PlayerTextDrawDestroy(playerid,Bankomat[5][playerid]);
		PlayerTextDrawDestroy(playerid,Bankomat[6][playerid]); PlayerTextDrawDestroy(playerid,Bankomat[7][playerid]);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////
KreirajAtm(idatm)
{
	if(AtmInfo[idatm][aPostavljen] == 1)
	{
	    new string[80];
		format(string, sizeof(string), ""SPLAVA"Bankomat (%d)\n"BELA"Kucajte /bankomat", idatm);
        AtmInfo[idatm][aAtmLabel] = CreateDynamic3DTextLabel(string ,0x33CCFFAA, AtmInfo[idatm][aX], AtmInfo[idatm][aY], AtmInfo[idatm][aZ]+1.5,25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
		AtmInfo[idatm][aObjekat] = CreateDynamicObject(ATM_OBJEKAT, AtmInfo[idatm][aX], AtmInfo[idatm][aY], AtmInfo[idatm][aZ], 0.0, 0.0, AtmInfo[idatm][aAngle], AtmInfo[idatm][aVW], AtmInfo[idatm][aInt], -1, 200.0);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////
KodBankomata(playerid)
{
	new idatm = 0;
	while(idatm != MAX_ATM)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, AtmInfo[idatm][aX], AtmInfo[idatm][aY], AtmInfo[idatm][aZ]))
		{
			return idatm;
		}
		idatm++;
	}
	return -1;
}
//////////////////////////////////////////////////
/*forward SendMSG();
public SendMSG()
{
	new randMSG = random(sizeof(RandomMSG));
	foreach(new i : Player)
	{
		SendClientMessage(i, GREEN, RandomMSG[randMSG]);
	}
}*/
// == == == == == == == == == == == == == == == == == == == == == == == == == //
FirmaLabelIPickup(idfirme)
{
	if(FirmaInfo[idfirme][fImaVlasnika] == 0)
	{
		format(nellys,sizeof(nellys),"[{FFFFFF} %s {1A80D2}]\nFirma na prodaju!({FFFFFF}%d{1A80D2})\n{1A80D2}Cena :{FFFFFF} $%d{1A80D2} | Level :{FFFFFF} %d\n{1A80D2}Za kupovinu upisite {FFFFFF}/kupifirmu",FirmaInfo[idfirme][fNaziv], idfirme, FirmaInfo[idfirme][fCena],FirmaInfo[idfirme][fLevel]);
		UpdateDynamic3DTextLabelText(FirmaLabel[idfirme], 0x33CCFFFF, nellys);
		DestroyDynamicPickup(FirmaPickup[idfirme]);
		FirmaPickup[idfirme] = CreateDynamicPickup(1274, 1, FirmaInfo[idfirme][fUlazX], FirmaInfo[idfirme][fUlazY], FirmaInfo[idfirme][fUlazZ]);
	}
	else if(FirmaInfo[idfirme][fImaVlasnika] == 1)
	{
		format(nellys,sizeof(nellys),"[{FFFFFF} %s {1A80D2}]\nVlasnik :{FFFFFF} %s\n{1A80D2}Level:{FFFFFF} %d{1A80D2} | ID:{FFFFFF} %d\n{1A80D2}Neaktivnost : {FFFFFF}%d h", FirmaInfo[idfirme][fNaziv], FirmaInfo[idfirme][fVlasnik],FirmaInfo[idfirme][fLevel], idfirme, FirmaInfo[idfirme][fNeaktivnost]);
		UpdateDynamic3DTextLabelText(FirmaLabel[idfirme], 0x33CCFFFF, nellys);
		DestroyDynamicPickup(FirmaPickup[idfirme]);
		FirmaPickup[idfirme] = CreateDynamicPickup(1239, 1, FirmaInfo[idfirme][fUlazX], FirmaInfo[idfirme][fUlazY], FirmaInfo[idfirme][fUlazZ]);
	}
	return 1;
}
Firme_Neaktivnost(idfirme)
{
	if(FirmaInfo[idfirme][fImaVlasnika] == 0)
	{
		format(nellys,sizeof(nellys),"[{FFFFFF} %s {1A80D2}]\nFirma na prodaju!({FFFFFF}%d{1A80D2})\n{1A80D2}Cena :{FFFFFF} $%d{1A80D2} | Level :{FFFFFF} %d\n{1A80D2}Za kupovinu upisite {FFFFFF}/kupifirmu",FirmaInfo[idfirme][fNaziv], idfirme, FirmaInfo[idfirme][fCena],FirmaInfo[idfirme][fLevel]);
		UpdateDynamic3DTextLabelText(FirmaLabel[idfirme], 0x33CCFFFF, nellys);
	}
	else if(FirmaInfo[idfirme][fImaVlasnika] == 1)
	{
		format(nellys,sizeof(nellys),"[{FFFFFF} %s {1A80D2}]\nVlasnik :{FFFFFF} %s\n{1A80D2}Level:{FFFFFF} %d{1A80D2} | ID:{FFFFFF} %d\n{1A80D2}Neaktivnost : {FFFFFF}%d h", FirmaInfo[idfirme][fNaziv], FirmaInfo[idfirme][fVlasnik],FirmaInfo[idfirme][fLevel], idfirme, FirmaInfo[idfirme][fNeaktivnost]);
		UpdateDynamic3DTextLabelText(FirmaLabel[idfirme], 0x33CCFFFF, nellys);
	}
	return 1;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
Kuce_Neaktivnost(idkuce)
{
	if(KucaInfo[idkuce][kProveraVlasnika] == 0)
	{
        format(nellys,sizeof(nellys),"Kuca na prodaju!({FFFFFF}%d{FF9900})\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Cena :{FFFFFF} $%d{FF9900} | Level :{FFFFFF} %d\n{FF9900}Za kupovinu upisite {FFFFFF}/kupikucu",idkuce, KucaInfo[idkuce][kVrsta], UlicaKuce(idkuce), KucaInfo[idkuce][kCena],KucaInfo[idkuce][kLevel]);
  	    UpdateDynamic3DTextLabelText(KucaLabel[idkuce], 0xFF9900FF, nellys);
	}
	else if(KucaInfo[idkuce][kProveraVlasnika] == 1)
	{
  		if(KucaInfo[idkuce][kRent] == 0)
		{
			format(nellys,sizeof(nellys),"{FF9900}[{FFFFFF} %s {FF9900}]\nVlasnik kuce :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Level :{FFFFFF} %d{FF9900} | ID :{FFFFFF} %d\n{FF9900}Neaktivnost : {FFFFFF}%d Sati",KucaInfo[idkuce][kNaziv], KucaInfo[idkuce][kVlasnik], UlicaKuce(idkuce), KucaInfo[idkuce][kVrsta], KucaInfo[idkuce][kLevel], idkuce, KucaInfo[idkuce][kNeaktivnost]);
		}
		else if(KucaInfo[idkuce][kRent] == 1)
		{
   			format(nellys,sizeof(nellys),"{FF9900}[{FFFFFF} %s {FF9900}]\nVlasnik kuce :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Rent :{FFFFFF} $%d ( /iznajmisobu )\n{FF9900}Level :{FFFFFF} %d{FF9900} | ID :{FFFFFF} %d\n{FF9900}Neaktivnost : {FFFFFF}%d Sati",KucaInfo[idkuce][kNaziv], KucaInfo[idkuce][kVlasnik], UlicaKuce(idkuce), KucaInfo[idkuce][kVrsta], KucaInfo[idkuce][kCenaRenta], KucaInfo[idkuce][kLevel], idkuce, KucaInfo[idkuce][kNeaktivnost]);
		}
        UpdateDynamic3DTextLabelText(KucaLabel[idkuce], 0xFF9900FF, nellys);
	}
}
KuceLP(idkuce)
{
	if(KucaInfo[idkuce][kProveraVlasnika] == 0)
	{
	    format(nellys,sizeof(nellys),"Kuca na prodaju!({FFFFFF}%d{FF9900})\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Cena :{FFFFFF} $%d{FF9900} | Level :{FFFFFF} %d\n{FF9900}Za kupovinu upisite {FFFFFF}/kupikucu",idkuce, KucaInfo[idkuce][kVrsta], UlicaKuce(idkuce), KucaInfo[idkuce][kCena],KucaInfo[idkuce][kLevel]);
  	    UpdateDynamic3DTextLabelText(KucaLabel[idkuce], 0xFF9900FF, nellys);
		DestroyDynamicPickup(KucaPickup[idkuce]);
        KucaPickup[idkuce] = CreateDynamicPickup(19522, 1, KucaInfo[idkuce][kUlazX], KucaInfo[idkuce][kUlazY], KucaInfo[idkuce][kUlazZ]);
	}
	else if(KucaInfo[idkuce][kProveraVlasnika] == 1)
	{
		DestroyDynamicPickup(KucaPickup[idkuce]);
        if(KucaInfo[idkuce][kRent] == 0)
		{
			format(nellys,sizeof(nellys),"{FF9900}[{FFFFFF} %s {FF9900}]\nVlasnik kuce :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Level :{FFFFFF} %d{FF9900} | ID :{FFFFFF} %d\n{FF9900}Neaktivnost : {FFFFFF}%d Sati",KucaInfo[idkuce][kNaziv], KucaInfo[idkuce][kVlasnik], UlicaKuce(idkuce), KucaInfo[idkuce][kVrsta], KucaInfo[idkuce][kLevel], idkuce, KucaInfo[idkuce][kNeaktivnost]);
		}
		else if(KucaInfo[idkuce][kRent] == 1)
		{
   			format(nellys,sizeof(nellys),"{FF9900}[{FFFFFF} %s {FF9900}]\nVlasnik kuce :{FFFFFF} %s\n{FF9900}Adresa :{FFFFFF} %s\n{FF9900}Vrsta :{FFFFFF} %s\n{FF9900}Rent :{FFFFFF} $%d ( /iznajmisobu )\n{FF9900}Level :{FFFFFF} %d{FF9900} | ID :{FFFFFF} %d\n{FF9900}Neaktivnost : {FFFFFF}%d Sati",KucaInfo[idkuce][kNaziv], KucaInfo[idkuce][kVlasnik], UlicaKuce(idkuce), KucaInfo[idkuce][kVrsta], KucaInfo[idkuce][kCenaRenta], KucaInfo[idkuce][kLevel], idkuce, KucaInfo[idkuce][kNeaktivnost]);
		}
        UpdateDynamic3DTextLabelText(KucaLabel[idkuce], 0xFF9900FF, nellys);
        KucaPickup[idkuce] = CreateDynamicPickup(19524, 1, KucaInfo[idkuce][kUlazX], KucaInfo[idkuce][kUlazY], KucaInfo[idkuce][kUlazZ]);
	}
	return 1;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
StanLP(s)
{
	new string[500];
    if(StanInfo[s][sProveraVlasnika] == 0)
	{
	    DestroyDynamic3DTextLabel(StanLabel[s]);
		DestroyDynamicPickup(StanPickup[s]);
		format(string,sizeof(string),"Stan na prodaju!({FFFFFF}%d{48E31C})\nAdresa :{FFFFFF} %s\n{48E31C}Cena :{FFFFFF} $%d{48E31C} | Level :{FFFFFF} %d\n{48E31C}Za kupovinu upisite {FFFFFF}/kupistan", s, UlicaStana(s), StanInfo[s][sCena], StanInfo[s][sLevel], s);
		StanLabel[s] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
		StanPickup[s] = CreateDynamicPickup(19605, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]);
	}
	else if(StanInfo[s][sProveraVlasnika] == 1)
	{
	    DestroyDynamic3DTextLabel(StanLabel[s]);
		DestroyDynamicPickup(StanPickup[s]);
		format(string,sizeof(string),"Vlasnik stana :{FFFFFF} %s\n{48E31C}Adresa :{FFFFFF} %s\n{48E31C}Level :{FFFFFF} %d{48E31C} | ID :{FFFFFF} %d\n{48E31C}Neaktivnost : {FFFFFF}%d", StanInfo[s][sVlasnik],UlicaStana(s), StanInfo[s][sLevel], s, StanInfo[s][sNeaktivnost]);
		StanLabel[s] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
		StanPickup[s] = CreateDynamicPickup(19606, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]);
	}
	return 1;
}
Stan_Neaktivnost(s)
{
    if(StanInfo[s][sProveraVlasnika] == 0)
	{
		format(nellys,sizeof(nellys),"Stan na prodaju!({FFFFFF}%d{48E31C})\nAdresa :{FFFFFF} %s\n{48E31C}Cena :{FFFFFF} $%d{48E31C} | Level :{FFFFFF} %d\n{48E31C}Za kupovinu upisite {FFFFFF}/kupistan", s, UlicaStana(s), StanInfo[s][sCena], StanInfo[s][sLevel], s);
		UpdateDynamic3DTextLabelText(StanLabel[s], 0x48E31CFF, nellys);
	}
	else if(StanInfo[s][sProveraVlasnika] == 1)
	{
		format(nellys, sizeof(nellys), "Vlasnik stana :{FFFFFF} %s\n{48E31C}Adresa :{FFFFFF} %s\n{48E31C}Level :{FFFFFF} %d{48E31C} | ID :{FFFFFF} %d\n{48E31C}Neaktivnost : {FFFFFF}%d", StanInfo[s][sVlasnik],UlicaStana(s), StanInfo[s][sLevel], s, StanInfo[s][sNeaktivnost]);
		UpdateDynamic3DTextLabelText(StanLabel[s], 0x48E31CFF, nellys);
	}
	return 1;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
VikendicaLP(vi)
{
	new string[500];
    if(VikendiceInfo[vi][viProveraVlasnika] == 0)
	{
	    DestroyDynamic3DTextLabel(VikendicaLabel[vi]);
		DestroyDynamicPickup(VikendicaPickup[vi]);
		format(string,sizeof(string),""SPLAVA"[ VIKENDICA NA PRODAJU ]\n"SPLAVA"Cena: "BELA"%d$\n"SPLAVA"Level: "BELA"%d\n"SPLAVA"Za kupovinu /kupivikendicu",VikendiceInfo[vi][viCena], VikendiceInfo[vi][viLevel]);
		VikendicaLabel[vi] = CreateDynamic3DTextLabel(string ,0x00C0FFAA,VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
		VikendicaPickup[vi] = CreateDynamicPickup(1272, 1, VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ]);
	}
	else if(VikendiceInfo[vi][viProveraVlasnika] == 1)
	{
	    DestroyDynamic3DTextLabel(VikendicaLabel[vi]);
		DestroyDynamicPickup(VikendicaPickup[vi]);
		format(string,sizeof(string),""SPLAVA"Vlasnik vikendice: "BELA"%s\n"SPLAVA"Cena: "BELA"%d$\n"SPLAVA"Level: "BELA"%d",VikendiceInfo[vi][viVlasnik],VikendiceInfo[vi][viCena],VikendiceInfo[vi][viLevel]);
		VikendicaLabel[vi] = CreateDynamic3DTextLabel(string ,0x00C0FFAA,VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ],80.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 7.0);
		VikendicaPickup[vi] = CreateDynamicPickup(1239, 1, VikendiceInfo[vi][viUlazX], VikendiceInfo[vi][viUlazY], VikendiceInfo[vi][viUlazZ]);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////
IgracNaBenzinskoj(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 8.0, 1004.0422,-937.5357,42.3281)) return 1;// 1
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 171.6999,-1923.0776,4.4559)) return 1;// 2
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, -91.2488,-1169.7260,2.4204)) return 1;// 3
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1942.3732,-1772.7740,13.6406)) return 1;// 4
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1382.2139,460.1810,20.3452)) return 1;// 5
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1004.8034,-937.3431,48.2118)) return 1;// 6
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2199.1162,2473.9028,10.8203)) return 1;// 7
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2209.6011,2474.6040,10.8203)) return 1;// 8
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2114.9875,927.0331,10.8203)) return 1;// 9
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2115.1633,916.0109,10.8203)) return 1;// 10
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2147.4194,2755.0979,10.8203)) return 1;// 11
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2147.6948,2740.4172,10.8203)) return 1;// 12
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2639.6072,1113.3043,10.8203)) return 1;// 13
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2639.9292,1099.2878,10.8203)) return 1;// 14
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1816.9990,-1414.6753,13.6285)) return 1;// 15
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1831.5045,-1415.8569,13.6016)) return 1;// 16
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1377.7511,-1427.0215,13.5459)) return 1;// 17
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1375.8279,-1419.7325,13.5454)) return 1;// 18
	return 0;
}

IgracKodGovornice(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 8.0, 1512.54163, -1741.81860, 13.13770)) return 1;// 1
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1537.43262, -1610.37415, 13.15950)) return 1;// 2
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1289.33496, -1562.03296, 13.08890)) return 1;// 3
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1365.57983, -1308.06836, 13.12130)) return 1;// 4
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1446.46289, -1171.84485, 23.40320)) return 1;// 5
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1420.36548, -1042.65588, 23.31530)) return 1;// 6
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1327.20471, -915.33691, 36.49730)) return 1;// 7
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 842.28149, -1311.88721, 13.18350)) return 1;// 8
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 419.36960, -1783.72668, 5.14680)) return 1;// 9
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1247.24646, -1383.00098, 12.96790)) return 1;// 10
	return 0;
}
IsCbugWeapon(playerid)
{
    new weaponID = GetPlayerWeapon(playerid);
    if(weaponID == 22 || weaponID == 23 || weaponID == 24 || weaponID == 25 || weaponID == 26 || weaponID == 27 || weaponID == 28)
    {
                return 1;
    }
    return 0;
}
//////////////////////////////////////////////////////////////////////////
GetSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 178.8617875;
    return floatround(ST[3]);
}
///////////////////////////////////////////////////////////////////////////
VoziloJeAvion(id)
{
	if(id == 592 || id == 577 || id == 511 || id == 512 || id == 593 || id == 520 || id == 553 || id == 476 || id == 519 || id == 460 || id == 513) return 1;
	else if(id == 548 || id == 425 || id == 417 || id == 487 || id == 488 || id == 497 || id == 563 || id == 447 || id == 469) return 1;
	else return 0;
}
///////////////////////////////////////////////////////////////////////////
VoziloJeBrod(id)
{
  	if(id == 472 || id == 473 || id == 493 || id == 484 || id == 430 || id == 454 || id == 453 || id == 452 || id == 446) return 1;
  	return 0;
}
///////////////////////////////////////////////////////////////////////////
VoziloJeMotor(id)
{
	if(id == 462 || id == 448 || id == 581 || id == 522 || id == 461 || id == 521 || id == 523 || id == 463 || id == 468 || id == 471) return 1;
	return 0;
}
///////////////////////////////////////////////////////////////////////////
VoziloJeBicikla(id)
{
	if(id == 481 || id == 509 || id == 510) return 1;
	return 0;
}
///////////////////////////////////////////////////////////////////////////
VoziloJeKamion(id)
{
	if(id == 499 || id == 498 || id == 609 || id == 524 || id == 578 || id == 455 || id == 403 || id == 414 || id == 443 || id == 514 || id == 515 || id == 408 || id == 431 || id == 437 || id == 538) return 1;
	return 0;
}

ProvjeraVozila(vehicleid)
{
	if(!VoziloJeBrod(vehicleid) && !VoziloJeMotor(vehicleid) && !VoziloJeBicikla(vehicleid) && !VoziloJeAvion(vehicleid)) return true;
	else return false;
}
//============================================================================//
PostaviWanted(playerid, zlocin[], prijavio[], wl)
{
	if(IsPlayerConnected(playerid))
	{
        PlayerInfo[playerid][pTrazeniLevel] = wl;
		if(GetPlayerWantedLevel(playerid) > 1000) { PlayerInfo[playerid][pTrazeniLevel] = 1000; }
		new string[256];
		format(string, sizeof(string), ""BELA"- Pocinili ste zlocin: "SRWBOJA"%s "BELA"| Prijava od: "SRWBOJA"%s!", zlocin, prijavio);
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""BELA"- Trenutni Wanted Level: "SRWBOJA"%d!", PlayerInfo[playerid][pTrazeniLevel]);
		SCM(playerid, -1, string);
		format(string, sizeof(string), ""BELA"- Imamo novi prijavljen zlocin od: "SRWBOJA"%s!", prijavio);
		CFBIPD(-1, string);
		format(string, sizeof(string), ""BELA"- Pocinio: "SRWBOJA"%s | Zlocin: "SRWBOJA"%s | Wanted Level Pocinioca: "SRWBOJA"%d!", GetName(playerid),zlocin,PlayerInfo[playerid][pTrazeniLevel]);
		CFBIPD(-1, string);
		strmid(ZlocinInfo[playerid][zPrijavio], prijavio, 0, strlen(prijavio), 255);
		strmid(ZlocinInfo[playerid][zPocinio], GetName(playerid), 0, strlen(GetName(playerid)), 255);
		strmid(ZlocinInfo[playerid][zZlocin], zlocin, 0, strlen(zlocin), 255);
	}
	return 1;
}
//============================================================================//

///////////////////////////////////////////////////////////////////////////
PolicijskaAuta(carid)
{
	for(new i = 0; i < sizeof(policecar); i++)
	{
		if(carid == policecar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
MotoRent(carid)
{
	for(new i = 0; i < sizeof(motorent); i++)
	{
		if(carid == motorent[i])	return 1;
	}
	return 0;
}
//////////////////////////////////////////////////////////
AutoRent(carid)
{
	for(new i = 0; i < sizeof(autorent); i++)
	{
		if(carid == autorent[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
PoAuta(carid)
{
	for(new i = 0; i < sizeof(pocar); i++)
	{
		if(carid == pocar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
PoAuta3(carid)
{
	for(new i = 0; i < sizeof(pocar3); i++)
	{
		if(carid == pocar3[i])	return 1;
	}
	return 0;
}
//
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
Po2Auta(carid)
{
	for(new i = 0; i < sizeof(po2car); i++)
	{
		if(carid == po2car[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
Po3Auta(carid)
{
	for(new i = 0; i < sizeof(po3car); i++)
	{
		if(carid == po3car[i])	return 1;
	}
	return 0;
}
//////////////////////////////////////////////////////////////
Po4Auta(carid)
{
	for(new i = 0; i < sizeof(po4car); i++)
	{
		if(carid == po4car[i])	return 1;
	}
	return 0;
}
//////////////////////////////////////////////////////////////
SmithCars(carid)
{
	for(new i = 0; i < sizeof(Smithcar); i++)
	{
		if(carid == Smithcar[i])	return 1;
	}
	return 0;
}
//////////////////////////////////////////////////////////////
LocaCars(carid)
{
	for(new i = 0; i < sizeof(Locacar); i++)
	{
		if(carid == Locacar[i])	return 1;
	}
	return 0;
}
//////////////////////////////////////////////////////////////
TecCars(carid)
{
	for(new i = 0; i < sizeof(TECcar); i++)
	{
		if(carid == TECcar[i])	return 1;
	}
	return 0;
}
//////////////////////////////////////////////////////////////
VLACars(carid)
{
	for(new i = 0; i < sizeof(VLACar); i++)
	{
		if(carid == VLACar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
TaxiAuta(carid)
{
	for(new i = 0; i < sizeof(taxicar); i++)
	{
		if(carid == taxicar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
BaseAuta(carid)
{
	for(new i = 0; i < sizeof(basecar); i++)
	{
		if(carid == basecar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
FBIAuta(carid)
{
	for(new i = 0; i < sizeof(fbicar); i++)
	{
		if(carid == fbicar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
VatraAuta(carid)
{
	for(new i = 0; i < sizeof(vatra); i++)
	{
		if(carid == vatra[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
SaAuta(carid)
{
	for(new i = 0; i < sizeof(sacar); i++)
	{
		if(carid == sacar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
RbAuta(carid)
{
	for(new i = 0; i < sizeof(rbcar); i++)
	{
		if(carid == rbcar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
CondorAuta(carid)
{
	for(new i = 0; i < sizeof(condorcar); i++)
	{
		if(carid == condorcar[i])	return 1;
	}
	return 0;
}
IsAZlatoCar(carid)
{
	for(new i = 0; i < sizeof(zlatocar); i++)
	{
		if(carid == zlatocar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
LasVegasAuta(carid)
{
	for(new i = 0; i < sizeof(lvpdvozila); i++)
	{
		if(carid == lvpdvozila[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
ParkingAuta(carid)
{
	for(new i = 0; i < sizeof(parkingcar); i++)
	{
		if(carid == parkingcar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
TVFAuta(carid)
{
	for(new i = 0; i < sizeof(tvf); i++)
	{
		if(carid == tvf[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
TBTVozila(carid)
{
	for(new i = 0; i < sizeof(tbt); i++)
	{
		if(carid == tbt[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
GroveVozila(carid)
{
	for(new i = 0; i < sizeof(grove); i++)
	{
		if(carid == grove[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
BallasVozila(carid)
{
	for(new i = 0; i < sizeof(vballas); i++)
	{
		if(carid == vballas[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
NovinariVozila(carid)
{
	for(new i = 0; i < sizeof(vnovinari); i++)
	{
		if(carid == vnovinari[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
BusVozila(carid)
{
	for(new i = 0; i < sizeof(busvozilo); i++)
	{
		if(carid == busvozilo[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////////
DrvosecaVozila(carid)
{
	for(new i = 0; i < sizeof(drvovozila); i++)
	{
		if(carid == drvovozila[i])	return 1;
	}
	return 0;
}
/////////////////////////////////////////////////////////////////////////////
DonatorVozila(carid)
{
	for(new i = 0; i < sizeof(vdonator); i++)
	{
		if(carid == vdonator[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
KosenjeVozila(carid)
{
	for(new i = 0; i < sizeof(kosilica); i++)
	{
		if(carid == kosilica[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
MehanicarVozila(carid)
{
	for(new i = 0; i < sizeof(vmehanicar); i++)
	{
		if(carid == vmehanicar[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
PostaVozila(carid)
{
	for(new i = 0; i < sizeof(postavozilo); i++)
	{
		if(carid == postavozilo[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
RibarVozila(carid)
{
	for(new i = 0; i < sizeof(ribvozilo); i++)
	{
		if(carid == ribvozilo[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
KomunalnoVozila(carid)
{
	for(new i = 0; i < sizeof(vkomunalno); i++)
	{
		if(carid == vkomunalno[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
GradjevinarVozila(carid)
{
	for(new i = 0; i < sizeof(vgradjevinar); i++)
	{
		if(carid == vgradjevinar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
AutoSalonVozila(carid)
{
	for(new i = 0; i < sizeof(autosalon); i++)
	{
		if(carid == autosalon[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
BolnicarVozila(carid)
{
	for(new i = 0; i < sizeof(vbolnicar); i++)
	{
		if(carid == vbolnicar[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
GrobarVozila(carid)
{
	for(new i = 0; i < sizeof(vgrobar); i++)
	{
		if(carid == vgrobar[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
Cocavozila(carid)
{
	for(new i = 0; i < sizeof(vcola); i++)
	{
		if(carid == vcola[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
FarmerVozila(carid)
{
	for(new i = 0; i < sizeof(vfarmer); i++)
	{
		if(carid == vfarmer[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
DostavljacVozila(carid)
{
	for(new i = 0; i < sizeof(vdostavljac); i++)
	{
		if(carid == vdostavljac[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
KamiondzijaVozila(carid)
{
	for(new i = 0; i < sizeof(vkamiondzija); i++)
	{
		if(carid == vkamiondzija[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
PilotVozila(carid)
{
	for(new i = 0; i < sizeof(vpilot); i++)
	{
		if(carid == vpilot[i])	return 1;
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////
ElektricarVozila(carid)
{
	for(new i = 0; i < sizeof(velektricar); i++)
	{
		if(carid == velektricar[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
VodoinstalaterVozila(carid)
{
	for(new i = 0; i < sizeof(vvodoinstalater); i++)
	{
		if(carid == vvodoinstalater[i])	return 1;
	}
	return 0;
}
///////////////////////////////////////////////////////////////////////////
ImeOrganizacije(factionid)
{
    new string[126];
    switch(factionid)
    {
        case 25: string = "Varrio Los Aztecas";
        case 23: string = "TBB";
        case 22: string = "Loca Cartel";
        case 21: string = "Narco Cartel";
		case 20: string = "The Russia Mafia";
        case 19: string = "Death Row";
        case 18: string = "Vatrogasci";
        case 17: string = "Black Cobra Corporation";
        case 16: string = "FBI";
        case 15: string = "Yakuza";
        case 14: string = "Taxi";
        case 13: string = "Da Naga Boys";
        case 12: string = "La Cosa Nostra";
        case 11: string = "Blue Lagoon";
        case 10: string = "Hitmen";
		case 9: string = "Condor";
		case 8: string = "Parking Servis";
		case 7: string = "CIA";
        case 6: string = "Los Santos Novinari";
    	case 5: string = "Ballas";
        case 4: string = "Grove Street Family";
        case 3: string = "Black Dragon Triads";
        case 2: string = "The Vinci Family";
        case 1: string = "Los Santos Police Department";
        case 0: string = "Nijedna";
        default: string = "Nijedna";
    }
    return string;
}
///////////////////////////////////////////////////////////////////////////
GetName(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    return name;
}
///////////////////////////////////////////////////////////////////////////
BelaBojaIgraca(playerid)
{
	SetPlayerColor(playerid,0xFFFFFF00);
}
////////////////////////////////////////////////////////////////////////////
GetClosestVehicle(playerid)
{
	new Float:x,Float:y,Float:z,Float:dist,Float:closedist = 9999.0,closeveh;
	for(new i = 0; i < MAX_VOZILA; i++)
	{
		if(GetVehiclePos(i, x, y, z))
		{
			dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
			if(dist < closedist)
			{
				closedist = dist;
				closeveh = i;
			}
		}
	}
	return closeveh;
}
///////////////////////////////////////////////////////////////////////////
ProveraRPImena(playerid, max_underscores = 2)
{
    new underscores = 0;
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
    if (name[0] < 'A' || name[0] > 'Z') return false; // First letter is not capital
    for(new i = 1; i < strlen(name); i++)
    {
        if(name[i] != '_' && (name[i] < 'A' || name[i] > 'Z') && (name[i] < 'a' || name[i] > 'z')) return false; // a-zA-Z_
        if( (name[i] >= 'A' && name[i] <= 'Z') && (name[i - 1] != '_') ) return false; // unneeded capital letter
        if(name[i] == '_')
        {
            underscores++;
            if(underscores > max_underscores || i == strlen(name)) return false; // More underlines than limit, or underline at the last pos
            if(name[i + 1] < 'A' || name[i + 1] > 'Z') return false; // Not a capital letter after underline
        }
    }
    if (underscores == 0) return false; // No underline detected
    return true;
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
ProveraImenaBDC(playerid)//Provera Imena Bez Donje Crte
{
    new string[24],str[24];
    GetPlayerName(playerid,string,24);
    strmid(str,string,0,strlen(string),24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if (str[i] == '_') str[i] = ' ';
    }
    return str;
}
///////////////////////////////////////////////////////////////////////////
DaljinaIgraca(Float:radius, playerid, targetid)
{
	new Float:posx, Float:posy, Float:posz;
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	GetPlayerPos(targetid, posx, posy, posz);
	tempposx = (oldposx -posx);
	tempposy = (oldposy -posy);
	tempposz = (oldposz -posz);
	if (((tempposx < radius) && (tempposx > -radius)) && ((tempposy < radius) && (tempposy > -radius)) && ((tempposz < radius) && (tempposz > -radius)))
	{
		return 1;
	}
	return 0;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
	animacija[playerid]++;
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}
// == == == == == == == == == == == == == == == == == == == == == == == == == //
IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
forward xReactionTest();
public xReactionTest()
{
	new xLength = (random(8) + 4), string[128];
	xCash = (random(1000) + 2000);
	format(xChars, sizeof(xChars), "");
	Loop(x, xLength) {
		format(xChars, sizeof(xChars), "%s%s", xChars, xCharacters[random(sizeof(xCharacters))][0]);
	}
	format(string, sizeof(string), ""SRWBOJA"[BRZI PRSTI] "BELA"Ko prvi upise "SRWBOJA"%s "BELA"osvaja "SRWBOJA"$%d "BELA"novca.", xChars, xCash);
	SendClientMessageToAll(-1, string);
	xTestBusy = true;
	return 1;
}
forward TestGasenje(playerid);
public TestGasenje(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5, PozarX, PozarY, PozarZ))
	{
		if(Pozarcic == 1)
		{
			if(GetPlayerWeapon(playerid) == 42)
			{
				if(PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pClan] == 18)
				{
					if(VatraEquip[playerid] == 1)
					{
						if(IsPlayerShooting(playerid))
						{
							GameTextForPlayer(playerid, "~w~Ugasili ste ~r~vatru~w~!", 3000, 4);
							Pozarcic = 0;
							PozarX = 0;
							PozarY = 0;
							PozarZ = 0;
			            	new bonus = random(800), string[120];
	 	            		g_NovacPlus(playerid, 15000+bonus);
			            	format(string,sizeof(string),""SPLAVA"Uspesno ste ugasili pozar!\n\n"BELA"Plata: "SPLAVA"15000$\n"BELA"Bonus: "SPLAVA"%d$",bonus);
		            		SPD(playerid,226,DIALOG_STYLE_MSGBOX,"Pozar Ugasen",string,"Ok","");
							format(string, charsmax(string), "* Sada se vratite do vatrogasne stanice da obucete vase staro odelo.");
							SCM(playerid,-1, string);
							new str[128];
							format(str, 128, "{1AE6D1}[V Vesti] {D92638}Pozar je ugasen. Pohvala za vatrogasnu jedinicu!");
							SCMTA(-1, str);
							DisablePlayerCheckpoint(playerid);
							DestroyObject(pozar1);
							DestroyObject(pozar3);
							DestroyObject(pozar4);
							DestroyObject(pozar5);
							DestroyObject(pozar6);
						}
					}
				}
			}
		}
	}
	return 1;
}
forward OpstinaSef();
public OpstinaSef()
{
new seff[200];
format(seff, sizeof(seff), "{F3FF02}DRZAVNI SEF\n\nUkupno novca u drzavnom sefu: %d$", OrgInfo[DrzavaNovac]);
UpdateDynamic3DTextLabelText(dsef, 0x00FFF9FF, seff);
return 1;
}
forward Berza();
public Berza()
{
	new rand = random(6)+1;
	if(rand == 1)
	{
		KupovnaCena = 50000;
		ProdajnaCena = 40000;
      	new berzastr[300];
		format(berzastr, sizeof(berzastr), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
		UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
	}
	if(rand == 2)
	{
		KupovnaCena = 55000;
		ProdajnaCena = 40000;
      	new berzastr[300];
		format(berzastr, sizeof(berzastr), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
		UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
	}
	if(rand == 3)
	{
		KupovnaCena = 50050;
		ProdajnaCena = 40000;
      	new berzastr[300];
		format(berzastr, sizeof(berzastr), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
		UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
	}
	if(rand == 4)
	{
		KupovnaCena = 60000;
		ProdajnaCena = 40000;
      	new berzastr[300];
		format(berzastr, sizeof(berzastr), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
		UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
	}
	if(rand == 5)
	{
		KupovnaCena = 100000;
		ProdajnaCena = 40000;
      	new berzastr[300];
		format(berzastr, sizeof(berzastr), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
		UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
	}
	if(rand == 6)
	{
		KupovnaCena = 85080;
		ProdajnaCena = 40000;
		new berzastr[300];
		format(berzastr, sizeof(berzastr), "{F3FF02}ZLATARA\n[ /BUYGOLD ili Y ]\n[ /SELLGOLD ili N ]\n[ GOLD ]\nKupovna cena zlata: %d / g\nProdajna Cena Zlata: %d / g", KupovnaCena, ProdajnaCena);
		UpdateDynamic3DTextLabelText(berza, 0x00FFF9FF, berzastr);
	}
	return 1;
}

IsPlayerShooting(playerid)
{
    new index = GetPlayerAnimationIndex(playerid);
    return(index == 1167 || index == 363);
}
forward vatkapija1();
public vatkapija1()
{
	MoveDynamicObject(vatkapija,1836.85, -1421.75, 11.93, 1.00);
	return 1;
}
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == skinlist)
	{
	    if(response)
	    {
      		SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Kupio si odecu!");
	    	Update_Skin(playerid, modelid);
	    	PlayerInfo[playerid][pSkin] = modelid;
	    	g_NovacMinus(playerid, 1000);

	    }
	    else SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Vratite nam se opet!");
    	return 1;
    }
	if(listid == vozilolist)
	{
	    if(response)
	    {
			new Float:Nx, Float:Ny, Float:Nz, Float:Nn, engine, lights, alarm, doors, bonnet, boot, objective;
			GetPlayerPos(playerid, Nx, Ny, Nz);
			GetPlayerFacingAngle(playerid, Nn);
			AdminVozilo[playerid] = CreateVehicle(modelid, Nx+4, Ny, Nz, Nn, 0, 0, -1);
			SetPVarInt(playerid, "stvorioavozilo", 1);
			new kurac = AdminVozilo[playerid];
			SCM(playerid,-1,""ORANGE2"#!: Stvorio si Staff Vozilo.");
			GetVehicleParamsEx(kurac, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(kurac, 1, 1, alarm, doors, bonnet, boot, objective);
			new arank[64];
			if(PlayerInfo[playerid][pAdmin] == 1) { arank = "Admin Level 1"; }
			if(PlayerInfo[playerid][pAdmin] == 2) { arank = "Admin Level 2"; }
			if(PlayerInfo[playerid][pAdmin] == 3) { arank = "Admin Level 3"; }
			if(PlayerInfo[playerid][pAdmin] == 4) { arank = "Admin Level 4"; }
			if(PlayerInfo[playerid][pAdmin] == 5) { arank = "Admin Level 5 (Head-Admin)"; }
			if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Admin Level 6 (Direktor)"; }
			if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Vlasnik"; }
	    	if(PlayerInfo[playerid][pAdmin] == 8) { arank = "Developer"; }
			if(PlayerInfo[playerid][pGM] == 1) { arank = "GameMaster 1"; }
		    if(PlayerInfo[playerid][pGM] == 2) { arank = "GameMaster 2 (Vodja)"; }
			new lololox[100];
			format(lololox, sizeof(lololox), ""SRWBOJA"(( STAFF VEHICLE ))\n%s: "BELA"%s", arank, GetName(playerid));
			avehl[playerid] = Create3DTextLabel(lololox, -1, 0.0, 0.0, 0.0, 20, 0, 1);
			Attach3DTextLabelToVehicle(avehl[playerid], kurac, 0.0, 0.0, 0.0);
			PutPlayerInVehicle(playerid, kurac, 0);
			SetVehicleHealth(kurac, 999.0);
	    }
	    else SCM(playerid,-1,""ORANGE2"#!: Odustali ste od stvaranja Staff Vozila.");
    	return 1;
	}
	//house system
	if(listid == furnmenu)
	{
        if(response)
		{
		    if(modelid == 1491)
		    {
		        ShowModelSelectionMenu(playerid, housedoors, "Furniture Catalog Doors");
		    }
		    if(modelid == 19355)
		    {
		        ShowModelSelectionMenu(playerid, walls, "Furniture Catalog Walls");
		    }
		    if(modelid == 1704)
		    {
		        ShowModelSelectionMenu(playerid, chairs, "Furniture Catalog Chairs");
		    }
		    if(modelid == 2566)
		    {
		        ShowModelSelectionMenu(playerid, beds, "Furniture Catalog Beds");
		    }
		    if(modelid == 2311)
		    {
		        ShowModelSelectionMenu(playerid, tables, "Furniture Catalog Tables");
		    }
		    if(modelid == 2069)
		    {
		        ShowModelSelectionMenu(playerid, houselights, "Furniture Catalog houselights");
		    }
		    if(modelid == 1985)
		    {
		        ShowModelSelectionMenu(playerid, fitness, "Furniture Catalog Fitness");
		    }
		    if(modelid == 1792)
		    {
		        ShowModelSelectionMenu(playerid, eletronic, "Furniture Catalog Eletronics");
		    }
		    if(modelid == 2867)
		    {
		        ShowModelSelectionMenu(playerid, kitchen, "Furniture Catalog Kitchen");
		    }
		    if(modelid == 2526)
		    {
		        ShowModelSelectionMenu(playerid, bathroom, "Furniture Catalog Bathroom");
		    }
		    if(modelid == 19560)
		    {
		        ShowModelSelectionMenu(playerid, objects, "0.3.7 R6 Objects");
		    }
        }
        else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == housedoors)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == walls)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == chairs)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == beds)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == tables)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == houselights)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == fitness)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == eletronic)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == kitchen)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == bathroom)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	if(listid == objects)
	{
		if(response)
		{
			SendClientMessage(playerid, 0xFF0000FF, "Furniture spawned");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreateDynamicObject(modelid, pos[0]+0.75, pos[1], pos[2], 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200.0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		else SendClientMessage(playerid, 0xFF0000FF, "Canceled furniture selection");
	}
	return 1;
}
//----------------------------------------------------------//
fDialog(16091)
{
    if(!strlen(inputtext)) return SPD(playerid,15001, DIALOG_STYLE_INPUT, "Furniture Remover", "Enter the ID of the furniture below to remove it\n /showKucaInfo for object IDs:", "Ok", "Cancel");
 //   if(strlen(inputtext) >= 3) return SPD(playerid,15001, DIALOG_STYLE_INPUT, "Furniture Remover", "Enter the ID of the furniture below to remove it\n /showKucaInfo for object IDs:", "Ok", "Cancel");
    new amount = strval(inputtext);
    new key = PlayerInfo[playerid][pPosedovanjeKuce];
    //if(amount <= 1) return SPD(playerid,15001, DIALOG_STYLE_INPUT, "Furniture Remover", "Enter the ID of the furniture below to remove it\n /showKucaInfo for object IDs:", "Ok", "Cancel");
 //   if(amount > MAX_FURNITURE) return SPD(playerid,15001, DIALOG_STYLE_INPUT, "Furniture Remover", "Enter the ID of the furniture below to remove it\n /showKucaInfo for object IDs:", "Ok", "Cancel");
  //  if(KucaInfo[key][ObjectID][amount] == 0) return SendClientMessage(playerid, COLOR_RED, "Furniture Slot not in use");
	new String[124];
	KucaInfo[key][ObjectID][amount] = 0;
	KucaInfo[key][ObjectPosX][amount] = 0;
	KucaInfo[key][ObjectPosY][amount] = 0;
	KucaInfo[key][ObjectPosZ][amount] = 0;
	DestroyDynamicObject(HouseObject[key][amount]);
	format(String,sizeof(String),"Furniture Object ID [%d] obrisan.", amount);
	SendClientMessage(playerid, 0x42F3F198, String);
	return 1;
}

fDialog(15000)
{
	if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Zatvoren meni za namestaj.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
  			new i = PlayerInfo[playerid][pPosedovanjeKuce];
     		for(new h = 0; h < MAX_FURNITURE;h++)
			{
   				if(KucaInfo[i][ObjectID][MAX_FURNITURE-1] != 0) return SendClientMessage(playerid, COLOR_RED, "Postavio si maksimalan broj objekata!");
   				if(IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Sto si pajser!");
			    if(KucaInfo[i][ObjectID][h] == 0)
			    {
       				PlayerEditSlot[playerid] = h;
			        ShowModelSelectionMenu(playerid, furnmenu, "Furniture Catalog Index");
			        return 1;
   				}
			}
		}
		case 1:
		{
		    SetPVarInt(playerid, "EditorMode", 1);
		    SendClientMessage(playerid, COLOR_ORANGE, "Help: To search for furniture you must use english, click search and then type in what you want to search for E.G chair.");
//			ShowModelBrowser(playerid);
		}
		case 2:
		{
			ShowPlayerDialog(playerid,16091, DIALOG_STYLE_INPUT, "Furniture Remover", "Upisi ID objekta namestaja koji zelis da obrises.", "Ok", "Cancel");
		}
		case 3:
		{
  			for(new h = 0; h < MAX_FURNITURE;h++)
			{
   				new i = PlayerInfo[playerid][pPosedovanjeKuce];
			    if(IsPlayerInRangeOfPoint(playerid, 4.0,KucaInfo[i][ObjectPosX][h], KucaInfo[i][ObjectPosY][h], KucaInfo[i][ObjectPosZ][h]) && GetPlayerVirtualWorld(playerid) == KucaInfo[i][kVW])
			    {
  					new key = PlayerInfo[playerid][pPosedovanjeKuce];
    				new String[124];
	    			KucaInfo[key][ObjectID][h] = 0;
	    			KucaInfo[key][ObjectPosX][h] = 0;
	    			KucaInfo[key][ObjectPosY][h] = 0;
	    			KucaInfo[key][ObjectPosZ][h] = 0;
					DestroyDynamicObject(HouseObject[key][h]);
					format(String,sizeof(String),"Furniture Object ID [%d] obrisan.", h);
					SendClientMessage(playerid, 0x42F3F198, String);
					return 1;
				}
			}
		}
		case 4:
		{
  			for(new h = 0; h < MAX_FURNITURE;h++)
			{
				new key = PlayerInfo[playerid][pPosedovanjeKuce];
 				KucaInfo[key][ObjectID][h] = 0;
  				KucaInfo[key][ObjectPosX][h] = 0;
   				KucaInfo[key][ObjectPosY][h] = 0;
   				KucaInfo[key][ObjectPosZ][h] = 0;
				DestroyDynamicObject(HouseObject[key][h]);
				return 1;
			}
		}
		case 5:
		{
  			ShowPlayerDialog(playerid, BlankTeleports, DIALOG_STYLE_LIST, "Blank Interiors", "Blank Ghetto Interiors\nBlank Modern (non ghetto) Interiors\nBlank Hotel Rooms\nTerrain build it your self", "Go", "Cancel");
		}
	}
	return 1;
}

fDialog(15001)
{
    if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Interior Teleport Menu Closed.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
  			ShowPlayerDialog(playerid, BlankTeleportsGhetto, DIALOG_STYLE_LIST, "Blank Ghetto Houses","House 1\nHouse 2\nHouse 3\nHouse 4\nHouse 5\nHouse 6\nHouse 7\nBack", "Select", "Cancel");
		}
		case 1:
		{
  			ShowPlayerDialog(playerid, BlankTeleportsModern, DIALOG_STYLE_LIST, "Blank Modern Houses", "House 1\nHouse 2\nHouse 3\nHouse 4\nHouse 5\nHouse 6\nHouse 7\nBack", "Go", "Cancel");
		}
		case 2:
		{
  			ShowPlayerDialog(playerid, BlankTeleportsHotel, DIALOG_STYLE_LIST, "Blank Hotel Room Interiors", "Room 1\nRoom 2\nBack", "Go", "Cancel");
		}
		case 3:
		{
  			SetPlayerPos(playerid, 1411.4434,-2.7966,1000.9238);
	    	SetPlayerInterior(playerid, 1);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
	}
	return 1;
}

fDialog(15002)
{
    if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Zatvoren meni.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
  			SetPlayerPos(playerid, 186.38434, 1140.38770, 1081.79419);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 1:
		{
  			SetPlayerPos(playerid, 194.06946, 1271.18750, 1081.41467);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 2:
		{
  			SetPlayerPos(playerid, 192.87233, 1238.51575, 1081.22791);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 3:
		{
  			SetPlayerPos(playerid, 288.22946, 1237.68835, 1083.43103);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 4:
		{
  			SetPlayerPos(playerid, 260.38120, 1306.60815, 1079.35181);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 5:
		{
  			SetPlayerPos(playerid, -95.13416, 1350.77368, 1079.60620);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 6:
		{
  			SetPlayerPos(playerid, -70.54235, 1404.54395, 1083.82336);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 7:
		{
  			ShowPlayerDialog(playerid, BlankTeleports, DIALOG_STYLE_LIST, "Blank Interiors", "Blank Ghetto Interiors\nBlank Modern (non ghetto) Interiors\nBlank Hotel Rooms\nTerrain build it your self", "Go", "Cancel");
		}
	}
	return 1;
}

fDialog(15003)
{
    if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Zatvoren meni.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
  			SetPlayerPos(playerid, 44.28909, 1404.46997, 1083.55261);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 1:
		{
  			SetPlayerPos(playerid, 22.73216, 1309.21643, 1083.48914);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 2:
		{
  			SetPlayerPos(playerid, 108.73410, 1322.18250, 1082.85022);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 3:
		{
  			SetPlayerPos(playerid, 165.40747, 1370.87830, 1083.13232);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 4:
		{
  			SetPlayerPos(playerid, 194.39381, 1112.53271, 1080.34094);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 5:
		{
  			SetPlayerPos(playerid, 198.96335, 1065.53870, 1083.28552);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 6:
		{
  			SetPlayerPos(playerid, 183.53667, 1023.82300, 1083.34766);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 7:
		{
		    if(PlayerInfo[playerid][pVip] < 5) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Samo VIP5!");
  			ShowPlayerDialog(playerid, BlankTeleports, DIALOG_STYLE_LIST, "Blank Interiors", "Blank Ghetto Interiors\nBlank Modern (non ghetto) Interiors\nBlank Hotel Rooms\nTerrain build it your self", "Go", "Cancel");
		}
	}
	return 1;
}

fDialog(15004)
{
    if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Zatvoren meni.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
  			SetPlayerPos(playerid, 266.56577, 321.32175, 1000.14844);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 1:
		{
  			SetPlayerPos(playerid, 246.44667, 318.24289, 1000.14844);
	    	SetPlayerInterior(playerid, 1000);
		    SetPlayerVirtualWorld(playerid, 1000);
		}
		case 2:
		{
  			ShowPlayerDialog(playerid, BlankTeleports, DIALOG_STYLE_LIST, "Blank Interiors", "Blank Ghetto Interiors\nBlank Modern (non ghetto) Interiors\nBlank Hotel Rooms\nTerrain build it your self\nBack", "Go", "Cancel");
		}
	}
	return 1;
}

fDialog(15006)
{
    new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Sto si pajser!");
    if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Sistem namestaja zatvoren.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
  			SendClientMessage(playerid, 0xFF0000FF, "Namestaj stvoren.");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			FurnObject[playerid] = CreatePlayerObject(playerid, FurnID[playerid], pos[0]+4, pos[1], pos[2], 0, 0, 0, 0.0);
			SetPVarInt(playerid, "EditorMode", 1);
			//FurnID[playerid] = modelid;
			EditDynamicObject(playerid, FurnObject[playerid]);
		}
		case 1:
		{
  			ShowModelSelectionMenu(playerid, furnmenu, "Furniture Catalog Index");
		}
		case 2:
		{
  			SendClientMessage(playerid, 0x42F3F198, "Zatvoren sistem namestaja.");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////
fDialog(340)
{
if(!response) return 1;
switch(listitem)
{
case 0: ShowModelSelectionMenu(playerid, housedoors, "Furniture Catalog Doors");
case 1: ShowModelSelectionMenu(playerid, walls, "Furniture Catalog Walls");
case 2: ShowModelSelectionMenu(playerid, chairs, "Furniture Catalog Chairs");
case 3: ShowModelSelectionMenu(playerid, beds, "Furniture Catalog Beds");
case 4: ShowModelSelectionMenu(playerid, tables, "Furniture Catalog Tables");
case 5: ShowModelSelectionMenu(playerid, houselights, "Furniture Catalog houselights");
case 6: ShowModelSelectionMenu(playerid, fitness, "Furniture Catalog Fitness");
case 7: ShowModelSelectionMenu(playerid, eletronic, "Furniture Catalog Eletronics");
case 8: ShowModelSelectionMenu(playerid, kitchen, "Furniture Catalog Kitchen");
case 9: ShowModelSelectionMenu(playerid, bathroom, "Furniture Catalog Bathroom");
case 10: ShowModelSelectionMenu(playerid, objects, "0.3.7 R6 Objects");
case 11: ShowPlayerDialog(playerid,16091, DIALOG_STYLE_INPUT, "Furniture Remover", "Upisi ID objekta namestaja koji zelis da obrises.", "Ok", "Cancel");
}
return 1;
}
forward WarpHack(playerid);
public WarpHack(playerid)
{
	SetPVarInt(playerid, "WarpHack", 0);
	return 1;
}
fDialog(15005)
{
	if(!response)
	{
		SendClientMessage(playerid, 0x42F3F198, "Furniture Menu Closed.");
		return 1;
	}
	switch(listitem)
	{
 		case 0:
		{
		    new i = PlayerInfo[playerid][pPosedovanjeKuce];
		    new Float:hX, Float:hY, Float:hZ;
		    GetPlayerPos(playerid, hX,hY,hZ);
		    KucaInfo[i][kIzlazX] = hX;
		    KucaInfo[i][kIzlazY] = hY;
		    KucaInfo[i][kIzlazZ] = hZ;
		    SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
		    SetPlayerInterior(playerid, KucaInfo[i][kInt]);
		    SetPlayerVirtualWorld(playerid,KucaInfo[i][kVW]);
		    SacuvajKucu(i);
		}
		case 1:
		{
		    new i = PlayerInfo[playerid][pPosedovanjeKuce];
		    SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////
forward Kvar();
public Kvar()
{
	new Voda;
	Voda = random(4);
    switch(Voda)
    {
   		case 0:
    	{
    	    Kvar1 = 1;
    	    GroweKvar = 1;
    	    SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Doslo je do kvara na vodovodnom sistemu kod Growe!");
   			kg1 = CreateDynamicObject(16317,2349.39990234,-1663.50000000,9.80000019,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (1)
			kg2 = CreateDynamicObject(16317,2346.00000000,-1667.19995117,9.80000019,0.00000000,0.00000000,314.00000000); //object(des_quarstmound_03) (2)
			kg3 = CreateDynamicObject(16317,2340.10009766,-1666.69995117,9.69999981,0.00000000,0.00000000,239.99475098); //object(des_quarstmound_03) (3)
			kg4 = CreateDynamicObject(16317,2338.30004883,-1662.09997559,9.69999981,0.00000000,0.00000000,212.24084473); //object(des_quarstmound_03) (4)
			kg5 = CreateDynamicObject(16317,2338.89990234,-1655.90002441,9.69999981,0.00000000,0.00000000,164.23937988); //object(des_quarstmound_03) (5)
			kg6 = CreateDynamicObject(16317,2342.19995117,-1653.40002441,9.69999981,0.00000000,0.00000000,122.23455811); //object(des_quarstmound_03) (6)
			kg7 = CreateDynamicObject(16317,2347.80004883,-1658.90002441,9.60000038,0.00000000,0.00000000,66.23388672); //object(des_quarstmound_03) (7)
			kg8 = CreateDynamicObject(16317,2346.80004883,-1655.90002441,9.60000038,0.00000000,0.00000000,58.23107910); //object(des_quarstmound_03) (8)
			kg9 = CreateDynamicObject(16317,2338.30004883,-1659.30004883,9.00000000,354.07421875,341.39697266,53.48730469); //object(des_quarstmound_03) (10)
			kg10 = CreateDynamicObject(16317,2339.50000000,-1662.00000000,9.00000000,354.07287598,341.39465332,53.48693848); //object(des_quarstmound_03) (11)
			kg11 = CreateDynamicObject(16317,2342.30004883,-1663.80004883,9.00000000,354.07287598,341.39465332,53.48693848); //object(des_quarstmound_03) (12)
			kg12 = CreateDynamicObject(16317,2340.30004883,-1663.50000000,9.00000000,354.07287598,341.39465332,13.48693848); //object(des_quarstmound_03) (13)
			kg13 = CreateDynamicObject(14578,2341.69995117,-1663.19995117,12.10000038,0.00000000,180.00000000,0.00000000); //object(mafcaspipes01) (1)
			kg14 = CreateDynamicObject(2983,2342.39990234,-1658.59997559,12.60000038,270.00000000,0.00000000,270.00000000); //object(will_valve) (1)
			kg15 = CreateDynamicObject(3864,2332.39990234,-1659.40002441,18.50000000,0.00000000,0.00000000,180.00000000); //object(ws_floodlight) (1)
			kg16 = CreateDynamicObject(3864,2343.60009766,-1673.90002441,18.50000000,0.00000000,0.00000000,279.99450684); //object(ws_floodlight) (2)
			kg17 = CreateDynamicObject(3864,2351.89990234,-1655.09997559,18.50000000,0.00000000,0.00000000,29.99206543); //object(ws_floodlight) (3)
			kg18 = CreateDynamicObject(4206,2332.80004883,-1659.00000000,12.10000038,0.00000000,357.75000000,0.00000000); //object(pershingpool_lan) (1)
			kg19 = CreateDynamicObject(4206,2357.00000000,-1660.59997559,12.10000038,0.00000000,357.74780273,190.00000000); //object(pershingpool_lan) (2)
			kg20 = CreateDynamicObject(3091,2355.30004883,-1659.00000000,13.00000000,0.00000000,0.00000000,100.00000000); //object(imy_track_barrier) (1)
			kg21 = CreateDynamicObject(3091,2340.60009766,-1677.00000000,13.00000000,0.00000000,0.00000000,339.99755859); //object(imy_track_barrier) (2)
			kg22 = CreateDynamicObject(3091,2344.69995117,-1677.30004883,13.00000000,0.00000000,0.00000000,19.99389648); //object(imy_track_barrier) (3)
			kg23 = CreateDynamicObject(3091,2329.00000000,-1661.50000000,13.19999981,0.00000000,0.00000000,289.98962402); //object(imy_track_barrier) (4)
			kg24 = CreateDynamicObject(3091,2329.50000000,-1656.40002441,13.19999981,0.00000000,0.00000000,249.98962402); //object(imy_track_barrier) (5)
			kg25 = CreateDynamicObject(3091,2340.50000000,-1649.00000000,13.50000000,0.00000000,0.00000000,199.98840332); //object(imy_track_barrier) (6)
			kg26 = CreateDynamicObject(3091,2345.39990234,-1649.09997559,13.50000000,0.00000000,0.00000000,169.98413086); //object(imy_track_barrier) (7)
			kg27 = CreateDynamicObject(2237,2346.69995117,-1658.50000000,13.69999981,352.27679443,355.20642090,77.10427856); //object(cj_shovel2) (1)
			kg28 = CreateDynamicObject(2237,2340.39990234,-1664.69995117,13.80000019,352.27661133,355.20446777,155.10205078); //object(cj_shovel2) (2)
			kg29 = CreateDynamicObject(18739,2342.30004883,-1661.59997559,12.50000000,0.00000000,0.00000000,0.00000000); //Voda
		}
  		case 1:
    	{
    	    Kvar1 = 1;
    	    OpstinaKvar = 1;
    		SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Doslo je do kvara na vodovodnom sistemu kod Opstine.");
			ko1 = CreateDynamicObject(16317,1434.69995117,-1591.40002441,9.60000038,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (1)
			ko2 = CreateDynamicObject(16317,1424.50000000,-1591.00000000,10.50000000,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (2)
			ko3 = CreateDynamicObject(16317,1431.09997559,-1595.30004883,10.60000038,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (3)
			ko4 = CreateDynamicObject(16317,1438.09997559,-1590.59997559,10.50000000,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (4)
			ko5 = CreateDynamicObject(16317,1435.09997559,-1582.19995117,10.60000038,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (5)
			ko6 = CreateDynamicObject(16317,1427.30004883,-1585.30004883,10.50000000,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (6)
			ko7 = CreateDynamicObject(14578,1431.19995117,-1595.09997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(mafcaspipes01) (4)
			ko8 = CreateDynamicObject(2983,1430.50000000,-1590.40002441,12.80000019,270.00000000,0.00000000,270.00000000); //object(will_valve) (2)
			ko9 = CreateDynamicObject(3091,1432.40002441,-1574.80004883,13.00000000,0.00000000,0.00000000,169.98657227); //object(imy_track_barrier) (8)
			ko10 = CreateDynamicObject(16317,1431.19995117,-1588.90002441,9.39999962,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (7)
			ko11 = CreateDynamicObject(14578,1434.69995117,-1584.00000000,12.30000019,180.00000000,0.00000000,0.00000000); //object(mafcaspipes01) (5)
			ko12 = CreateDynamicObject(3864,1426.00000000,-1603.90002441,18.50000000,0.00000000,0.00000000,258.00000000); //object(ws_floodlight) (1)
			ko13 = CreateDynamicObject(3864,1427.30004883,-1578.59997559,18.50000000,0.00000000,0.00000000,107.99743652); //object(ws_floodlight) (2)
			ko14 = CreateDynamicObject(3091,1445.40002441,-1589.90002441,13.00000000,0.00000000,0.00000000,90.00000000); //object(imy_track_barrier) (1)
			ko15 = CreateDynamicObject(3091,1443.80004883,-1595.50000000,13.00000000,0.00000000,0.00000000,60.00000000); //object(imy_track_barrier) (2)
			ko16 = CreateDynamicObject(3091,1431.80004883,-1606.80004883,13.00000000,0.00000000,0.00000000,9.99633789); //object(imy_track_barrier) (3)
			ko17 = CreateDynamicObject(3091,1427.50000000,-1607.09997559,13.00000000,0.00000000,0.00000000,349.99206543); //object(imy_track_barrier) (4)
			ko18 = CreateDynamicObject(3091,1414.50000000,-1593.90002441,13.00000000,0.00000000,0.00000000,289.99206543); //object(imy_track_barrier) (5)
			ko19 = CreateDynamicObject(3091,1414.90002441,-1589.50000000,13.00000000,0.00000000,0.00000000,249.98962402); //object(imy_track_barrier) (6)
			ko20 = CreateDynamicObject(3091,1427.09997559,-1574.80004883,13.00000000,0.00000000,0.00000000,189.98840332); //object(imy_track_barrier) (7)
			ko21 = CreateDynamicObject(18739,1432.50000000,-1589.90002441,12.60000038,0.00000000,0.00000000,0.00000000); //Voda
		}
  		case 2:
    	{
    	    Kvar1 = 1;
    	    KolodvorKvar = 1;
    		SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Doslo je do kvara na vodovodnom sistemu kod Kolodvora.");
			kk1 = CreateDynamicObject(16317,1825.30004883,-1839.09997559,9.60000038,0.00000000,0.00000000,310.00000000); //object(des_quarstmound_03) (1)
			kk2 = CreateDynamicObject(16317,1820.09997559,-1838.19995117,9.60000038,0.00000000,0.00000000,269.99572754); //object(des_quarstmound_03) (2)
			kk3 = CreateDynamicObject(16317,1816.09997559,-1835.00000000,9.60000038,0.00000000,0.00000000,219.99450684); //object(des_quarstmound_03) (3)
			kk4 = CreateDynamicObject(16317,1816.09997559,-1830.50000000,9.50000000,0.00000000,0.00000000,134.49023438); //object(des_quarstmound_03) (5)
			kk5 = CreateDynamicObject(16317,1821.40002441,-1829.90002441,9.60000038,0.00000000,356.00000000,106.98913574); //object(des_quarstmound_03) (6)
			kk6 = CreateDynamicObject(16317,1825.69995117,-1832.69995117,9.69999981,0.00000000,353.99548340,72.98486328); //object(des_quarstmound_03) (7)
			kk7 = CreateDynamicObject(16317,1826.00000000,-1835.90002441,9.60000038,0.00000000,352.24047852,18.98217773); //object(des_quarstmound_03) (8)
			kk8 = CreateDynamicObject(16317,1822.30004883,-1833.09997559,9.30000019,0.00000000,0.00000000,309.99572754); //object(des_quarstmound_03) (9)
			kk9 = CreateDynamicObject(16317,1825.00000000,-1833.90002441,9.30000019,0.00000000,0.00000000,309.99572754); //object(des_quarstmound_03) (10)
			kk10 = CreateDynamicObject(16317,1824.59997559,-1836.00000000,9.30000019,0.00000000,0.00000000,309.99572754); //object(des_quarstmound_03) (11)
			kk11 = CreateDynamicObject(16317,1821.40002441,-1835.80004883,9.30000019,0.00000000,0.00000000,309.99572754); //object(des_quarstmound_03) (12)
			kk12 = CreateDynamicObject(14578,1819.09997559,-1831.90002441,12.10000038,0.00000000,180.00000000,260.25000000); //object(mafcaspipes01) (1)
			kk13 = CreateDynamicObject(2983,1823.50000000,-1833.40002441,12.60000038,270.00000000,0.00000000,350.00000000); //object(will_valve) (1)
			kk14 = CreateDynamicObject(3091,1808.69995117,-1829.59997559,13.00000000,0.00000000,0.00000000,260.00000000); //object(imy_track_barrier) (1)
			kk15 = CreateDynamicObject(3091,1808.69995117,-1834.40002441,13.00000000,0.00000000,0.00000000,279.99694824); //object(imy_track_barrier) (2)
			kk16 = CreateDynamicObject(3091,1819.59997559,-1822.30004883,13.10000038,0.00000000,0.00000000,189.99206543); //object(imy_track_barrier) (3)
			kk17 = CreateDynamicObject(3091,1824.09997559,-1823.00000000,13.10000038,0.00000000,0.00000000,159.98657227); //object(imy_track_barrier) (4)
			kk18 = CreateDynamicObject(3091,1819.30004883,-1844.40002441,13.10000038,0.00000000,0.00000000,339.98291016); //object(imy_track_barrier) (5)
			kk19 = CreateDynamicObject(3091,1823.80004883,-1844.50000000,13.10000038,0.00000000,0.00000000,19.97741699); //object(imy_track_barrier) (6)
			kk20 = CreateDynamicObject(3864,1810.50000000,-1832.59997559,18.50000000,0.00000000,0.00000000,170.00000000); //object(ws_floodlight) (1)
			kk21 = CreateDynamicObject(3864,1827.59997559,-1825.69995117,18.70000076,0.00000000,0.00000000,67.99694824); //object(ws_floodlight) (2)
			kk22 = CreateDynamicObject(18739,1820.50000000,-1832.80004883,12.50000000,0.00000000,0.00000000,0.00000000); //Voda
		}
  		case 3:
    	{
    	    Kvar1 = 1;
    	    BankaKvar = 1;
    		SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Doslo je do kvara na vodovodnom sistemu kod Banke.");
			kb1 = CreateDynamicObject(14578,1481.00000000,-1044.50000000,22.39999962,0.00000000,180.00000000,0.00000000); //object(mafcaspipes01) (1)
			kb2 = CreateDynamicObject(16317,1488.59997559,-1042.19995117,20.10000038,0.00000000,0.00000000,350.00000000); //object(des_quarstmound_03) (1)
			kb3 = CreateDynamicObject(2983,1483.00000000,-1039.30004883,22.89999962,270.00000000,0.00000000,0.00000000); //object(will_valve) (1)
			kb4 = CreateDynamicObject(16317,1488.40002441,-1036.30004883,20.10000038,0.00000000,0.00000000,50.00000000); //object(des_quarstmound_03) (2)
			kb5 = CreateDynamicObject(16317,1483.19995117,-1034.69995117,20.10000038,0.00000000,0.00000000,109.99877930); //object(des_quarstmound_03) (3)
			kb6 = CreateDynamicObject(16317,1479.90002441,-1045.59997559,20.10000038,0.00000000,0.00000000,109.99447632); //object(des_quarstmound_03) (4)
			kb7 = CreateDynamicObject(16317,1476.69995117,-1040.30004883,20.10000038,0.00000000,0.00000000,69.98962402); //object(des_quarstmound_03) (5)
			kb8 = CreateDynamicObject(16317,1480.69995117,-1034.40002441,20.10000038,0.00000000,0.00000000,359.98840332); //object(des_quarstmound_03) (7)
			kb9 = CreateDynamicObject(4206,1478.19995117,-1032.90002441,21.70000076,1.24316406,353.99853516,290.13067627); //object(pershingpool_lan) (1)
			kb10 = CreateDynamicObject(4206,1477.59997559,-1030.40002441,21.70000076,1.24145508,353.99597168,290.12695312); //object(pershingpool_lan) (2)
			kb11 = CreateDynamicObject(14578,1480.19995117,-1038.59997559,22.39999962,0.00000000,179.99450684,270.00000000); //object(mafcaspipes01) (2)
			kb12 = CreateDynamicObject(16317,1480.69995117,-1037.59997559,19.39999962,0.00000000,4.25000000,109.98962402); //object(des_quarstmound_03) (8)
			kb13 = CreateDynamicObject(16317,1479.80004883,-1039.00000000,19.39999962,0.00000000,4.24621582,89.98413086); //object(des_quarstmound_03) (9)
			kb14 = CreateDynamicObject(16317,1480.69995117,-1038.59997559,19.39999962,0.00000000,4.24621582,99.98352051); //object(des_quarstmound_03) (10)
			kb15 = CreateDynamicObject(3091,1470.69995117,-1035.80004883,23.29999924,0.00000000,0.00000000,270.00000000); //object(imy_track_barrier) (2)
			kb16 = CreateDynamicObject(3091,1470.59997559,-1031.30004883,23.29999924,0.00000000,0.00000000,260.00000000); //object(imy_track_barrier) (3)
			kb17 = CreateDynamicObject(3091,1494.30004883,-1032.00000000,23.29999924,0.00000000,0.00000000,99.99694824); //object(imy_track_barrier) (4)
			kb18 = CreateDynamicObject(3091,1494.00000000,-1037.09997559,23.29999924,0.00000000,0.00000000,79.99206543); //object(imy_track_barrier) (5)
			kb19 = CreateDynamicObject(3091,1479.30004883,-1053.59997559,23.29999924,0.00000000,0.00000000,349.99145508); //object(imy_track_barrier) (6)
			kb20 = CreateDynamicObject(3091,1484.40002441,-1053.69995117,23.29999924,0.00000000,0.00000000,9.99145508); //object(imy_track_barrier) (7)
			kb21 = CreateDynamicObject(3864,1491.19995117,-1031.40002441,28.70000076,0.00000000,0.00000000,50.00000000); //object(ws_floodlight) (1)
			kb22 = CreateDynamicObject(3864,1482.19995117,-1051.40002441,28.70000076,0.00000000,0.00000000,260.00000000); //object(ws_floodlight) (2)
			kb23 = CreateDynamicObject(2237,1484.50000000,-1037.19995117,23.89999962,346.51583862,357.17199707,332.84005737); //object(cj_shovel2) (1)
			kb24 = CreateDynamicObject(2237,1480.69995117,-1045.30004883,24.20000076,0.00000000,0.00000000,179.99694824); //object(cj_shovel2) (2)
			kb25 = CreateDynamicObject(18739,1484.19995117,-1039.19995117,22.70000076,0.00000000,0.00000000,0.00000000); //voda
		}
    }
    return 1;
}
forward KvarKolodvor(playerid);
public KvarKolodvor(playerid)
{
    new string[128];
	new isplata = random(1000);
	if(IsPlayerConnected(playerid))
	{
		DestroyDynamicObject( kk1 );
		DestroyDynamicObject( kk2 );
		DestroyDynamicObject( kk3 );
		DestroyDynamicObject( kk4 );
		DestroyDynamicObject( kk5 );
		DestroyDynamicObject( kk6 );
		DestroyDynamicObject( kk7 );
		DestroyDynamicObject( kk8 );
		DestroyDynamicObject( kk9 );
		DestroyDynamicObject( kk10 );
		DestroyDynamicObject( kk11 );
		DestroyDynamicObject( kk12 );
		DestroyDynamicObject( kk13 );
		DestroyDynamicObject( kk14 );
		DestroyDynamicObject( kk15 );
		DestroyDynamicObject( kk16 );
		DestroyDynamicObject( kk17 );
		DestroyDynamicObject( kk18 );
		DestroyDynamicObject( kk19 );
		DestroyDynamicObject( kk20 );
		DestroyDynamicObject( kk21 );
		Ventil = 0;
		TogglePlayerControllable(playerid, 1);
		g_NovacPlus(playerid, isplata);
		format(string, sizeof(string), " Uspesno ste otklonili kvar kod Kolodvora i zaradili %d $.", isplata);
		SendClientMessage(playerid, -1, string);
		SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Kvar na vodovodnoj mrezi uspesno uklonjen od strane vodoinstalatera!");
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	return 1;
 }
forward KvarOpstina(playerid);
public KvarOpstina(playerid)
{
	new string[128];
	new isplata = random(1000);
	if(IsPlayerConnected(playerid))
	{
		DestroyDynamicObject( ko1 );
		DestroyDynamicObject( ko2 );
		DestroyDynamicObject( ko3 );
		DestroyDynamicObject( ko4 );
		DestroyDynamicObject( ko5 );
		DestroyDynamicObject( ko6 );
		DestroyDynamicObject( ko7 );
		DestroyDynamicObject( ko8 );
		DestroyDynamicObject( ko9 );
		DestroyDynamicObject( ko10 );
		DestroyDynamicObject( ko11 );
		DestroyDynamicObject( ko12 );
		DestroyDynamicObject( ko13 );
		DestroyDynamicObject( ko14 );
		DestroyDynamicObject( ko15 );
		DestroyDynamicObject( ko16 );
		DestroyDynamicObject( ko17 );
		DestroyDynamicObject( ko18 );
		DestroyDynamicObject( ko19 );
		DestroyDynamicObject( ko20 );
		Ventil = 0;
		TogglePlayerControllable(playerid, 1);
		g_NovacPlus(playerid, isplata);
		format(string, sizeof(string), " Uspesno ste otklonili kvar kod Opstine i zaradili %d $.", isplata);
		SendClientMessage(playerid, -1, string);
		SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Kvar na vodovodnoj mrezi uspesno uklonjen od strane vodoinstalatera!");
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	return 1;
 }
forward KvarBanka(playerid);
public KvarBanka(playerid)
{
    new string[128];
	new isplata = random(1000);
	if(IsPlayerConnected(playerid))
	{
		DestroyDynamicObject( kb1 );
		DestroyDynamicObject( kb2 );
		DestroyDynamicObject( kb3 );
		DestroyDynamicObject( kb4 );
		DestroyDynamicObject( kb5 );
		DestroyDynamicObject( kb6 );
		DestroyDynamicObject( kb7 );
		DestroyDynamicObject( kb8 );
		DestroyDynamicObject( kb9 );
		DestroyDynamicObject( kb10 );
		DestroyDynamicObject( kb11 );
		DestroyDynamicObject( kb12 );
		DestroyDynamicObject( kb13 );
		DestroyDynamicObject( kb14 );
		DestroyDynamicObject( kb15 );
		DestroyDynamicObject( kb16 );
		DestroyDynamicObject( kb17 );
		DestroyDynamicObject( kb18 );
		DestroyDynamicObject( kb19 );
		DestroyDynamicObject( kb20 );
		DestroyDynamicObject( kb21 );
		DestroyDynamicObject( kb22 );
		DestroyDynamicObject( kb23 );
		DestroyDynamicObject( kb24 );
		Ventil = 0;
		TogglePlayerControllable(playerid, 1);
		g_NovacPlus(playerid, isplata);
		format(string, sizeof(string), " Uspesno ste otklonili kvar kod Banke i zaradili %d $.", isplata);
		SendClientMessage(playerid, -1, string);
		SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Kvar na vodovodnoj mrezi uspesno uklonjen od strane vodoinstalatera!");
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	return 1;
}
forward KvarGrowe(playerid);
public KvarGrowe(playerid)
{
    new string[128];
	new isplata = random(1000);
	if(IsPlayerConnected(playerid))
	{
		DestroyDynamicObject( kg1 );
		DestroyDynamicObject( kg2 );
		DestroyDynamicObject( kg3 );
		DestroyDynamicObject( kg4 );
		DestroyDynamicObject( kg5 );
		DestroyDynamicObject( kg6 );
		DestroyDynamicObject( kg7 );
		DestroyDynamicObject( kg8 );
		DestroyDynamicObject( kg9 );
		DestroyDynamicObject( kg10 );
		DestroyDynamicObject( kg11 );
		DestroyDynamicObject( kg12 );
		DestroyDynamicObject( kg13 );
		DestroyDynamicObject( kg14 );
		DestroyDynamicObject( kg15 );
		DestroyDynamicObject( kg16 );
		DestroyDynamicObject( kg17 );
		DestroyDynamicObject( kg18 );
		DestroyDynamicObject( kg19 );
		DestroyDynamicObject( kg20 );
		DestroyDynamicObject( kg21 );
		DestroyDynamicObject( kg22 );
		DestroyDynamicObject( kg23 );
		DestroyDynamicObject( kg24 );
		DestroyDynamicObject( kg25 );
		DestroyDynamicObject( kg26 );
		DestroyDynamicObject( kg27 );
		DestroyDynamicObject( kg28 );
		Ventil = 0;
		TogglePlayerControllable(playerid, 1);
		g_NovacPlus(playerid, isplata);
		format(string, sizeof(string), " Uspesno ste otklonili kvar kod Growe Street i zaradili %d $.", isplata);
		SendClientMessage(playerid, -1, string);
		SendClientMessageToAll(COLOR_BLUE,"{1AE6D1}[AS Vesti ] {D92638}Kvar na vodovodnoj mrezi uspesno uklonjen od strane vodoinstalatera!");
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	return 1;
}
forward ClearMarriage(playerid);
public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "No-one");
		strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}
forward SkiniBilb();
public SkiniBilb()
{
bilbas = 0;
return 1;
}
fDialog(213)
		{
	    switch(listitem)
	    {
	        case 0:
	        {

		        GivePlayerWeapon(playerid, 25, 50);
				GivePlayerWeapon(playerid, 30, 100);
				ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
			    new sendername[MAX_PLAYER_NAME];
    		    new string[128];
    		    GetPlayerName(playerid, sendername, sizeof(sendername));
    		    format(string, sizeof(string), " %s uzima paket 1.", sendername);
    		    e_RadiusMSG(30.0, playerid, HEX_PROX, string);
    		    new Float:Poz[3]; GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
			}

		    case 1:
	        {

				GivePlayerWeapon(playerid, 34, 100);
				ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
				new sendername[MAX_PLAYER_NAME];
    		    new string[128];
    		    GetPlayerName(playerid, sendername, sizeof(sendername));
    		    format(string, sizeof(string), " %s uzima paket 2.", sendername);
    		    e_RadiusMSG(30.0, playerid, HEX_PROX, string);
    		    new Float:Poz[3]; GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	        }

	        case 2:
	        {

				GivePlayerWeapon(playerid, 24, 100);
				ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
				new sendername[MAX_PLAYER_NAME];
    		    new string[128];
    		    GetPlayerName(playerid, sendername, sizeof(sendername));
    		    format(string, sizeof(string), " %s uzima paket 3.", sendername);
    		    e_RadiusMSG(30.0, playerid, HEX_PROX, string);
    		    new Float:Poz[3]; GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	        }

	        case 3:
	        {

			    GivePlayerWeapon(playerid, 31, 100);
				GivePlayerWeapon(playerid, 29, 150);
				ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
				new sendername[MAX_PLAYER_NAME];
    		    new string[128];
    		    GetPlayerName(playerid, sendername, sizeof(sendername));
    		    format(string, sizeof(string), " %s uzima paket 4.", sendername);
    		    e_RadiusMSG(30.0, playerid, HEX_PROX, string);
    		    new Float:Poz[3]; GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
            }
		}
	}
fDialog(1381)
{
	if(response)
	{
		if(listitem == 0)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon", CreateDynamicObject(18648,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon1", CreateDynamicObject(18648,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~w~Postavio si Neon",3500,5);
			g_NovacMinus(playerid, 200);
		}
		if(listitem == 1)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon2", CreateDynamicObject(18647,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon3", CreateDynamicObject(18647,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);
		}
		if(listitem == 2)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon4", CreateDynamicObject(18649,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon5", CreateDynamicObject(18649,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);
		}
		if(listitem == 3)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon6", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon7", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 4)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon8", CreateDynamicObject(18651,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon9", CreateDynamicObject(18651,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 5)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon10", CreateDynamicObject(18650,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon11", CreateDynamicObject(18650,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 6)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon12", CreateDynamicObject(18648,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon13", CreateDynamicObject(18648,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon14", CreateDynamicObject(18649,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon15", CreateDynamicObject(18649,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon12"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon13"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon14"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon15"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 7)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon16", CreateDynamicObject(18648,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon17", CreateDynamicObject(18648,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon18", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon19", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon16"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon17"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon18"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon19"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 8)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon20", CreateDynamicObject(18647,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon21", CreateDynamicObject(18647,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon22", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon23", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon20"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon21"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon22"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon23"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.62, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);
		}
		if(listitem == 9)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon24", CreateDynamicObject(18647,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon25", CreateDynamicObject(18647,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon26", CreateDynamicObject(18650,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon27", CreateDynamicObject(18650,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon24"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon25"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon26"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon27"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 10)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon28", CreateDynamicObject(18649,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon29", CreateDynamicObject(18649,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon30", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon31", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon28"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon29"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon30"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon31"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 11)
		{
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon32", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon33", CreateDynamicObject(18652,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon34", CreateDynamicObject(18650,0,0,-1800,0,0,0));
			SetPVarInt(playerid, "neon35", CreateDynamicObject(18650,0,0,-1800,0,0,0));
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon32"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon33"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon34"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "neon35"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon instaliran");
			g_NovacMinus(playerid, 200);

		}
		if(listitem == 12)
		{
				DestroyDynamicObject(GetPVarInt(playerid, "neon")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon1")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon2")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
	            DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon4")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon5")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon6")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
				DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon8")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon9")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon10")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
	            DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon12")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon13")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon14")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon15"));
	            DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon16")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon17")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon18")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon19"));
	            DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon20")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon21")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon22")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon23"));
				DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon24")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon25")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon26")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon27"));
	            DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon28")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon29")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon30")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon31"));
	            DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon32")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon33")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon34")); DeletePVar(playerid, "Status"); DestroyDynamicObject(GetPVarInt(playerid, "neon35"));
		        SendClientMessage(playerid, 0xFFFFFFAA, "Neon skinut.");
		}
	}
	return 1;
}
fDialog(5001)
{
	if(!response) return 1;
	if(listitem == 1)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5002, DIALOG_STYLE_LIST, "OOC: Igrac skace sa zgrade na pod (20+metara)", "To je PG\nTo je RPS\nTo je RP2WIN", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5002)
{
	if(!response) return 1;
	if(listitem == 1)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5003, DIALOG_STYLE_LIST, "OOC: Odgovoriti koja od ovih definicija ne definise PG.", "Radnja nemoguca u pravom zivotu.\nTrcanje i skakanje dok neko pokusava da vas ubije\nRPanje vise radnji istovremeno, ne dozvoljavajuci igracu da odreaguje na njih.", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5003)
{
	if(!response) return 1;
	if(listitem == 1)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5004, DIALOG_STYLE_LIST, "OOC: /me komandu pisemo obavezno u potencijalu (moguci nacin) kada:", "Kada pisemo kako se osecamo povodom necega\nKada smo u interakciji sa predmetima\nKada smo u interakciji sa drugim igracima", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(3001)
{
	if(response)
	{
        if( WARPInfo[ playerid ][ warID ] == -1 ) return SendClientMessage( playerid, -1, "Nisi u waru." );
        new player, w = WARPInfo[ playerid ][ warID ];
		if( sscanf( inputtext, "u", player ) ) return SPD( playerid, 3001, DSI, "Izbacivanje igraca", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" );
        if( WARInfo[ w ][ warActive ] == false ) return SendClientMessage( playerid, -1, "WAR jos nije startovan.");
        if( player == IPI ) return SPD( playerid, 3001, DSI, "Izbacivanje igraca", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" );
        if( WARPInfo[ player ][ warID ] == -1 ) return SPD( playerid, 3001, DSI, "Izbacivanje igraca", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" );
		WARPInfo[ player ][ warID ] = -1;
        SetPlayerHealth( player, 100 );

        SetPlayerPos( player, WARPInfo[ player ][ LastPosition ][ 0 ], WARPInfo[ player ][ LastPosition ][ 1 ],  WARPInfo[ player ][ LastPosition ][ 2 ] );
        SetPlayerVirtualWorld( player, WARPInfo[ player ][ LastVirtualWorld ] );
	    SetPlayerInterior( player, WARPInfo[ player ][ LastInterior ] );
		ResetPlayerWeapons( player );

        ResetWarStatistics( player );
        if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) { WARInfo[ w ][ warTeamMembers ][ 0 ]--; }
        if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) { WARInfo[ w ][ warTeamMembers ][ 1 ]--; }

        SCM( playerid, -1, "Izbacio si clana." );

        WarTDControl( player, false );
	}
	return 1;
}
fDialog(3000)
{
	if(response)
	{
        if( listitem == 0 ) { SPD( playerid, 3002, DSL, "Izaberi mapu", "Map 1 - Abandoned\nMap 2 - RC Battlefield\nMap 3 - Skladiste\nMap 4 - United\nMap 5 - Farm", "Ok", "Odustani" ); }
        if( listitem == 1 ) { SPD( playerid, 3010, DSI, "Ubacivanje igraca", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" ); }
        if( listitem == 2 ) { SPD( playerid, 3001, DSI, "Izbacivanje igraca", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" ); }
	}
}
fDialog(3002)
{
	if(response)
	{
        new warid = -1;
		for(new w = 1; w < MAX_WARS; w ++) {
			if( WARInfo[ w ][ warActive ] == false && WARInfo[ w ][ warCreating ] == false ) {
			    warid = w;
			    break;
			}
		}
		if( warid == -1 ) {
            format( globalstring, sizeof( globalstring ), "ERROR | "BELA"Vec postoji %d kreiranih warova sacekajte da se neki zavrsi.", MAX_WARS );
			SCM( playerid, COLOR_RED, globalstring );
            return true;
		}
		CreatingWAR[ playerid ] = warid;
		WARInfo[ warid ][ warCreating ] = true;
        WARInfo[ warid ][ warActive ] = false;
        if( listitem == 0 ) { WARInfo[ warid ][ warMap ] = 1; }
		if( listitem == 1 ) { WARInfo[ warid ][ warMap ] = 2; }
		if( listitem == 2 ) { WARInfo[ warid ][ warMap ] = 3; }
		if( listitem == 3 ) { WARInfo[ warid ][ warMap ] = 4; }
		if( listitem == 4 ) { WARInfo[ warid ][ warMap ] = 5; }
        SPD( playerid, 3003, DSL, "Izaberi oruzje za slot 1", "Deagle\nColt 45\nSilenced Pistol", "Ok", "Cancel" );
	}
	return 1;
}
fDialog(3003)
{
	if( response ) {
 		new w = CreatingWAR[ playerid ];
   		if( listitem == 0 ) { WARInfo[ w ][ warGuns ][ 0 ] = 24; }
    	if( listitem == 1 ) { WARInfo[ w ][ warGuns ][ 0 ] = 22; }
	    if( listitem == 2 ) { WARInfo[ w ][ warGuns ][ 0 ] = 23; }
	    SPD( playerid, 3004, DSL, "Izaberi oruzje za slot 2", "Uzi\nMP5", "Ok", "Odustani" );
	}
	else if( !response ) {
 		new w = CreatingWAR[ playerid ];
		WARInfo[ w ][ warCreating ] = false;
  		WARInfo[ w ][ warActive ] = false;
    	CreatingWAR[ playerid ] = -1;
	}
}
fDialog(3004)
{
	if( response ) {
 		new w = CreatingWAR[ playerid ];
   		if( listitem == 0 ) { WARInfo[ w ][ warGuns ][ 1 ] = 28; }
    	if( listitem == 1 ) { WARInfo[ w ][ warGuns ][ 1 ] = 29; }
	    SPD( playerid, 3005, DSL, "Izaberi oruzje za slot 3", "AK-47\nM4", "Ok", "Odustani" );
	}
	else if( !response ) {
 		new w = CreatingWAR[ playerid ];
		WARInfo[ w ][ warCreating ] = false;
		WARInfo[ w ][ warActive ] = false;
  		CreatingWAR[ playerid ] = -1;
	}
}
fDialog(3005)
{
	if( response ) {
 		new w = CreatingWAR[ playerid ];
   		if( listitem == 0 ) { WARInfo[ w ][ warGuns ][ 2 ] = 30; }
	    if( listitem == 1 ) { WARInfo[ w ][ warGuns ][ 2 ] = 31; }
	    SPD( playerid, 3006, DSL, "Izaberi oruzje za slot 4", "Country Rifle\nShotgun", "Ok", "Odustani" );
	}
	else if( !response ) {
 		new w = CreatingWAR[ playerid ];
		WARInfo[ w ][ warCreating ] = false;
  		WARInfo[ w ][ warActive ] = false;
    	CreatingWAR[ playerid ] = -1;
	}
}
fDialog(3006)
{
	if( response ) {
 		new w = CreatingWAR[ playerid ];
   		if( listitem == 0 ) { WARInfo[ w ][ warGuns ][ 3 ] = 33; }
	    if( listitem == 1 ) { WARInfo[ w ][ warGuns ][ 3 ] = 25; }
	    SPD( playerid, 3007, DSI, "Maximum clanova", "Unesi broj maximum clanova u waru(3-10).", "Ok", "Odustani" );
	}
	else if( !response ) {
 		new w = CreatingWAR[ playerid ];
		WARInfo[ w ][ warCreating ] = false;
  		WARInfo[ w ][ warActive ] = false;
    	CreatingWAR[ playerid ] = -1;
	}
}
fDialog(3007)
{
	if( response ) {
 		new maxigraca, w = CreatingWAR[ playerid ];
		if( sscanf( inputtext, "i", maxigraca ) ) return SPD( playerid, 3007, DSI, "Maximum clanova", "Unesi broj maximum clanova u waru(3-10).", "Ok", "Odustani" );
		if( maxigraca < 3 || maxigraca > 10 ) return SPD( playerid, 3007, DSI, "Maximum clanova", "Unesi broj maximum clanova u waru(3-10).", "Ok", "Odustani" );
  		WARInfo[ w ][ warMapMembers ] = maxigraca;
    	SPD( playerid, 3008, DSI, "Lider protivnika", "Unesi ID lidera kog zelite da izazovete.", "Ok", "Odustani" );
	}
	else if( !response ) {
 		new w = CreatingWAR[ playerid ];
		WARInfo[ w ][ warCreating ] = false;
  		WARInfo[ w ][ warActive ] = false;
    	CreatingWAR[ playerid ] = -1;
	}
	return 1;
}
fDialog(3008)
{
	if( response ) {
 		new id, w = CreatingWAR[ playerid ], string[ 128 ];
		if( sscanf( inputtext, "u", id ) ) return SPD( playerid, 3008, DSI, "Lider protivnika", "Unesi ID lidera kog zelite da izazovete.", "Ok", "Odustani" );
		if( id == IPI ) return SPD( playerid, 3008, DSI, "Lider protivnika", "Unesi ID lidera kog zelite da izazovete.", "Ok", "Odustani" );
		if( PlayerInfo[playerid][pLider] == PlayerInfo[id][pLider] ) return SPD( playerid, 3008, DSI, "Lider protivnika", "Unesi ID lidera kog zelite da izazovete.", "Ok", "Odustani" );
		if( PlayerInfo[id][pLider] < 1 ) return SPD( playerid, 3008, DSI, "Lider protivnika", "Unesi ID lidera kog zelite da izazovete.", "Ok", "Odustani" );
		if( id == playerid ) return SPD( playerid, 3008, DSI, "Lider protivnika", "Unesi ID lidera kog zelite da izazovete.", "Ok", "Odustani" );
		WARInfo[ w ][ warTeamLeader ][ 0 ] = playerid;
		WARInfo[ w ][ warTeamLeader ][ 1 ] = id;
  		CreatingWAR[ id ] = w;
		format( string, sizeof( string ), ""BELA"Lider "BELA"%s "BELA"vam je poslao zahtev za war. Izaberi:", GetName( playerid ) );
		SPD( id, 3009, DSB, "Zahtev za WAR", string, "Prihvati", "Odustani" );
  	}
	else if( !response ) {
 		new w = CreatingWAR[ playerid ];
		WARInfo[ w ][ warCreating ] = false;
  		WARInfo[ w ][ warActive ] = false;
    	CreatingWAR[ playerid ] = -1;
	}
	return 1;
}
fDialog(3009)
{
 if( response ) {
 		new w = CreatingWAR[ playerid ];
		new org1[30];
		if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 2) { org1 = "TVF"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 3) { org1 = "BDT"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 4) { org1 = "GSF"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 5) { org1 = "Ballas"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 9) { org1 = "Condor"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 10) { org1 = "Hitman"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 11) { org1 = "BL"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 12) { org1 = "BT"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 13) { org1 = "NF"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 15) { org1 = "Yakuza"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 17) { org1 = "BCC"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 19) { org1 = "DR"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 20) { org1 = "RM"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 21) { org1 = "NC"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 21) { org1 = "LC"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 1 ]][pLider] == 23) { org1 = "TBB"; }
		else { org1 = "Greska"; }
		new org2[30];
		if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 2) { org2 = "TVF"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 3) { org2 = "BDT"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 4) { org2 = "GSF"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 5) { org2 = "Ballas"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 9) { org2 = "Condor"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 10) { org2 = "Hitman"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 11) { org2 = "BL"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 12) { org2 = "BT"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 13) { org2 = "NF"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 15) { org2 = "Yakuza"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 17) { org2 = "BCC"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 19) { org2 = "DR"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 20) { org2 = "RM"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 21) { org2 = "NC"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 21) { org2 = "LC"; }
		else if(PlayerInfo[WARInfo[ w ][ warTeamLeader ][ 0 ]][pLider] == 23) { org2 = "TBB"; }
		else { org2 = "Greska"; }
		new string[130];
        format( string, sizeof( string ), "WAR | Lider %s je pokrenuo war organizacija izmedju %s i %s",GetName(playerid), org2, org1);
		SCMTA( -1, string );
   		SCM( WARInfo[ w ][ warTeamLeader ][ 1 ], -1, ""SRWBOJA"WAR | "BELA"Prihvatio si poziv za war, sada ubaci svoje igrace.");
     	SCM( WARInfo[ w ][ warTeamLeader ][ 0 ], -1, ""SRWBOJA"WAR | "BELA"Lider je prihvatio poziv za war, sada ubaci svoje igrace.");

        GetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 0 ], WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ LastPosition ][ 0 ], WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ LastPosition ][ 1 ],  WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ LastPosition ][ 2 ] );
        WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ LastVirtualWorld ] = GetPlayerVirtualWorld( WARInfo[ w ][ warTeamLeader ][ 0 ] );
        WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ LastInterior ] = GetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 0 ] );

        GetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 1 ], WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ LastPosition ][ 0 ], WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ LastPosition ][ 1 ],  WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ LastPosition ][ 2 ] );
        WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ LastVirtualWorld ] = GetPlayerVirtualWorld( WARInfo[ w ][ warTeamLeader ][ 0 ] );
        WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ LastInterior ] = GetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 1 ] );

        if( WARInfo[ w ][ warMap ] == 1 ) {
        	new rand1 = random( sizeof( warMap1Team1 ) );
			new rand2 = random( sizeof( warMap1Team2 ) );
            SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 0 ], warMap1Team1[ rand1 ][ 0 ], warMap1Team1[ rand1 ][ 1 ],warMap1Team1[ rand1 ][ 2 ] );
        	SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 1 ], warMap1Team2[ rand2 ][ 0 ], warMap1Team2[ rand2 ][ 1 ],warMap1Team2[ rand2 ][ 2 ] );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 0 ], 0 );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 1 ], 0 );
		}
        else if( WARInfo[ w ][ warMap ] == 2 ) {
            new rand1 = random( sizeof( warMap2Team1 ) );
 			new rand2 = random( sizeof( warMap2Team2 ) );
   			SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 0 ], warMap2Team1[ rand1 ][ 0 ], warMap2Team1[ rand1 ][ 1 ],warMap2Team1[ rand1 ][ 2 ] );
	    	SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 1 ], warMap2Team2[ rand2 ][ 0 ], warMap2Team2[ rand2 ][ 1 ],warMap2Team2[ rand2 ][ 2 ] );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 0 ], 10 );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 1 ], 10 );
		}
		else if( WARInfo[ w ][ warMap ] == 3 ) {
  			new rand1 = random( sizeof( warMap3Team1 ) );
    		new rand2 = random( sizeof( warMap3Team2 ) );
            SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 0 ], warMap3Team1[ rand1 ][ 0 ], warMap3Team1[ rand1 ][ 1 ],warMap3Team1[ rand1 ][ 2 ] );
        	SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 1 ], warMap3Team2[ rand2 ][ 0 ], warMap3Team2[ rand2 ][ 1 ],warMap3Team2[ rand2 ][ 2 ] );
         	SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 0 ], 0 );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 1 ], 0 );
		}
		else if( WARInfo[ w ][ warMap ] == 4 ) {
  			new rand1 = random( sizeof( warMap4Team1 ) );
    		new rand2 = random( sizeof( warMap4Team2 ) );
            SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 0 ], warMap4Team1[ rand1 ][ 0 ], warMap4Team1[ rand1 ][ 1 ],warMap4Team1[ rand1 ][ 2 ] );
        	SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 1 ], warMap4Team2[ rand2 ][ 0 ], warMap4Team2[ rand2 ][ 1 ],warMap4Team2[ rand2 ][ 2 ] );
        	SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 0 ], 0 );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 1 ], 0 );
		}
		else if( WARInfo[ w ][ warMap ] == 5 ) {
   			new rand1 = random( sizeof( warMap5Team1 ) );
	    	new rand2 = random( sizeof( warMap5Team2 ) );
            SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 0 ], warMap5Team1[ rand1 ][ 0 ], warMap5Team1[ rand1 ][ 1 ],warMap5Team1[ rand1 ][ 2 ] );
        	SetPlayerPos( WARInfo[ w ][ warTeamLeader ][ 1 ], warMap5Team2[ rand2 ][ 0 ], warMap5Team2[ rand2 ][ 1 ],warMap5Team2[ rand2 ][ 2 ] );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 0 ], 0 );
            SetPlayerInterior( WARInfo[ w ][ warTeamLeader ][ 1 ], 0 );
		}
		WARInfo[ w ][ warActive ] = true;

		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 0 ], WARInfo[ w ][ warGuns ][ 0 ], 300 );
		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 0 ], WARInfo[ w ][ warGuns ][ 1 ], 300 );
		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 0 ], WARInfo[ w ][ warGuns ][ 2 ], 300 );
		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 0 ], WARInfo[ w ][ warGuns ][ 3 ], 300 );
		SetPlayerVirtualWorld( WARInfo[ w ][ warTeamLeader ][ 0 ], w );
		SetPlayerHealth( WARInfo[ w ][ warTeamLeader ][ 0 ], 100 );
		SetPlayerArmour( WARInfo[ w ][ warTeamLeader ][ 0 ], 99.0 );

		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 1 ], WARInfo[ w ][ warGuns ][ 0 ], 300 );
		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 1 ], WARInfo[ w ][ warGuns ][ 1 ], 300 );
		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 1 ], WARInfo[ w ][ warGuns ][ 2 ], 300 );
		GivePlayerWeapon( WARInfo[ w ][ warTeamLeader ][ 1 ], WARInfo[ w ][ warGuns ][ 3 ], 300 );
		SetPlayerVirtualWorld( WARInfo[ w ][ warTeamLeader ][ 1 ], w );
		SetPlayerHealth( WARInfo[ w ][ warTeamLeader ][ 1 ], 100 );
		SetPlayerArmour( WARInfo[ w ][ warTeamLeader ][ 1 ], 99.0 );

		WARInfo[ w ][ warTeamMembers ][ 0 ]++;
		WARInfo[ w ][ warTeamMembers ][ 1 ]++;

		WARInfo[ w ][ warTimer ] = SetTimerEx( "StopWAR", 600000, false, "d", w );
		WARInfo[ w ][ warTimerMin ] = 1; WARInfo[ w ][ warTimerSec ] =0;
		WARInfo[ w ][ warTimerTime ] = SetTimerEx( "StopWARTimer", 1000, true, "d", w );

        ResetWarStatistics( WARInfo[ w ][ warTeamLeader ][ 0 ] );
		WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ warTeam ][ 0 ] = true;
		WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ warID ] = w;

        ResetWarStatistics( WARInfo[ w ][ warTeamLeader ][ 1 ] );
		WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ warTeam ][ 1 ] = true;
		WARPInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ warID ] = w;

		SCM( WARInfo[ w ][ warTeamLeader ][ 0 ], -1, "War chat /wp." );

		SCM( WARInfo[ w ][ warTeamLeader ][ 1 ], -1, "War chat /wp." );

		WarTDControl( WARInfo[ w ][ warTeamLeader ][ 0 ], true );
		WarTDControl( WARInfo[ w ][ warTeamLeader ][ 1 ], true );
		SetWarStatsTD( w );
	}
	else {
 		new w = CreatingWAR[ playerid ];
		SCM( WARInfo[ w ][ warTeamLeader ][ 0 ], -1, "Izazvani lider je odbio was zahtev." );
		WARInfo[ w ][ warCreating ] = false;
  		WARInfo[ w ][ warActive ] = false;
  		CreatingWAR[ WARInfo[ w ][ warTeamLeader ][ 0 ] ] = -1;
    	CreatingWAR[ playerid ] = -1;
	}
}
fDialog(3010)
{
		new giveplayerid;
		if( WARPInfo[ playerid ][ warID ] == -1 ) return SendClientMessage( playerid, -1, "Nisi u waru." );
        new player, w = WARPInfo[ playerid ][ warID ];
		if( sscanf( inputtext, "u", player ) ) return SPD( playerid, 3010, DSI, "Koristite iskljucivo id-ove", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" );
        if( WARInfo[ w ][ warActive ] == false ) return SendClientMessage( playerid, -1, "WAR jos nije startovan.");
		if( PlayerInfo[giveplayerid][pZatvor] != 0 ) return SPD( playerid, 3010, DSI, "Taj igrac je zatvoren", "Unesi ID igraca iz tvoje organizacije", "Potvrdi", "Odustani" );
		if( WARPInfo[ playerid ][ warTeam ][ 0 ] == true ) {
			if( WARInfo[ w ][ warTeamMembers ][ 0 ] >= WARInfo[ w ][ warMapMembers ] ) return SendClientMessage(playerid, -1, "Vec imas maksimalni broj clanova u waru.");

			GetPlayerPos( player, WARPInfo[ player ][ LastPosition ][ 0 ], WARPInfo[ player ][ LastPosition ][ 1 ],  WARPInfo[ player ][ LastPosition ][ 2 ] );
			WARPInfo[ player ][ LastVirtualWorld ] = GetPlayerVirtualWorld( player );
			WARPInfo[ player ][ LastInterior ] = GetPlayerInterior( player );

            new rand1 = random( sizeof( warMap1Team1 ) );
            new rand21 = random( sizeof( warMap2Team1 ) );
            new rand31 = random( sizeof( warMap3Team1 ) );
            new rand41 = random( sizeof( warMap4Team1 ) );
            new rand51 = random( sizeof( warMap5Team1 ) );
            if( WARInfo[ w ][ warMap ] == 1 ) {
				SetPlayerPos( player, warMap1Team1[ rand1 ][ 0 ], warMap1Team1[ rand1 ][ 1 ],warMap1Team1[ rand1 ][ 2 ] );
                SetPlayerInterior( player, 0 );
			}
            else if( WARInfo[ w ][ warMap ] == 2 ) {
				SetPlayerPos( player, warMap2Team1[ rand21 ][ 0 ], warMap2Team1[ rand21 ][ 1 ],warMap2Team1[ rand21 ][ 2 ] );
				SetPlayerInterior( player, 10 );
			}
            else if( WARInfo[ w ][ warMap ] == 3 ) {
				SetPlayerPos( player, warMap3Team1[ rand31 ][ 0 ], warMap3Team1[ rand31 ][ 1 ],warMap3Team1[ rand31 ][ 2 ] );
				SetPlayerInterior( player, 0 );
			}
            else if( WARInfo[ w ][ warMap ] == 4 ) {
				SetPlayerPos( player, warMap4Team1[ rand41 ][ 0 ], warMap4Team1[ rand41 ][ 1 ],warMap4Team1[ rand41 ][ 2 ] );
				SetPlayerInterior( player, 0 );
			}
            else if( WARInfo[ w ][ warMap ] == 5 ) {
				SetPlayerPos( player, warMap5Team1[ rand51 ][ 0 ], warMap5Team1[ rand51 ][ 1 ],warMap5Team1[ rand51 ][ 2 ] );
				SetPlayerInterior( player, 0 );
			}


			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 0 ], 300 );
			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 1 ], 300 );
			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 2 ], 300 );
			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 3 ], 300 );
			SetPlayerVirtualWorld( player, w );
			SetPlayerHealth( player, 100 );
			SetPlayerArmour( player, 99.0 );

			WARInfo[ w ][ warTeamMembers ][ 0 ]++;

			ResetWarStatistics( player );
    		WARPInfo[ player ][ warTeam ][ 0 ] = true;
    		WARPInfo[ player ][ warID ] = w;

    		SCM( player, -1, "War chat /wp." );
    		SCM( playerid, -1, "Ubacio si svog clana." );

    		WarTDControl( player, true );
    		SetWarStatsTD( w );
		}
		else if( WARPInfo[ playerid ][ warTeam ][ 1 ] == true ) {
			if( WARInfo[ w ][ warTeamMembers ][ 1 ] >= WARInfo[ w ][ warMapMembers ] ) return SendClientMessage(playerid, -1, "Imate maksimalan broj clanova u waru.");

			GetPlayerPos( player, WARPInfo[ player ][ LastPosition ][ 0 ], WARPInfo[ player ][ LastPosition ][ 1 ],  WARPInfo[ player ][ LastPosition ][ 2 ] );
			WARPInfo[ player ][ LastVirtualWorld ] = GetPlayerVirtualWorld( player );
			WARPInfo[ player ][ LastInterior ] = GetPlayerInterior( player );

		    new rand2 = random( sizeof( warMap1Team2 ) );
		    new rand22 = random( sizeof( warMap2Team2 ) );
		    new rand32 = random( sizeof( warMap3Team2 ) );
		    new rand42 = random( sizeof( warMap4Team2 ) );
		    new rand52 = random( sizeof( warMap5Team2 ) );
            if( WARInfo[ w ][ warMap ] == 1 ) {
				SetPlayerPos( player, warMap1Team2[ rand2 ][ 0 ], warMap1Team2[ rand2 ][ 1 ],warMap1Team2[ rand2 ][ 2 ] );
				SetPlayerInterior( player, 0 );
			}
            else if( WARInfo[ w ][ warMap ] == 2 ) {
				SetPlayerPos( player, warMap2Team2[ rand22 ][ 0 ], warMap2Team2[ rand22 ][ 1 ],warMap2Team2[ rand22 ][ 2 ] );
				SetPlayerInterior( player, 10 );
			}
            else if( WARInfo[ w ][ warMap ] == 3 ) {
				SetPlayerPos( player, warMap3Team2[ rand32 ][ 0 ], warMap3Team2[ rand32 ][ 1 ],warMap3Team2[ rand32 ][ 2 ] );
                SetPlayerInterior( player, 0 );
			}
            else if( WARInfo[ w ][ warMap ] == 4 ) {
				SetPlayerPos( player, warMap4Team2[ rand42 ][ 0 ], warMap4Team2[ rand42 ][ 1 ],warMap4Team2[ rand42 ][ 2 ] );
				SetPlayerInterior( player, 0 );
			}
            else if( WARInfo[ w ][ warMap ] == 5 ) {
				SetPlayerPos( player, warMap5Team2[ rand52 ][ 0 ], warMap5Team2[ rand52 ][ 1 ],warMap5Team2[ rand52 ][ 2 ] );
				SetPlayerInterior( player, 0 );
			}

			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 0 ], 300 );
			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 1 ], 300 );
			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 2 ], 300 );
			GivePlayerWeapon( player, WARInfo[ w ][ warGuns ][ 3 ], 300 );
			SetPlayerVirtualWorld( player, w );
			SetPlayerHealth( player, 100 );
			SetPlayerArmour( player, 99.0 );

			WARInfo[ w ][ warTeamMembers ][ 1 ]++;

			ResetWarStatistics( player );
    		WARPInfo[ player ][ warTeam ][ 1 ] = true;
    		WARPInfo[ player ][ warID ] = w;

    		SCM( player, -1, "War chat /wp." );
    		SCM( playerid, -1, "Ubacio si svog clana." );

    		WarTDControl( player, true );
    		SetWarStatsTD( w );
		}
		return 1;
}
fDialog(5004)
{
	if(!response) return 1;
	if(listitem == 2)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5005, DIALOG_STYLE_LIST, "Sta je od ponudjenog RPG radnja? [ IC: Policajac vas zaustavlja i trazi da prikazete dozvole:]", "Izlazite, vadite gun i ubijate ga.\nNe odazivate se na povike da stanete i samo produzete bezeci\nDajete mu dozvole(/pdozvole), ali posto on vidi da nemate dozvolu, ulazite u auto i bezite", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5005)
{
	if(!response) return 1;
	if(listitem == 1)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5006, DIALOG_STYLE_LIST, "Kada igrac krene da puca po vama sta cete uraditi:", "Koristite /me ili /do komandu da izvaditi oruzije i uzvratiti paljbu.\nTrcati na razne strane pokusavajuci da pobegnete.\nIzaci sa servera i uspesno pobeci.", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5006)
{
	if(!response) return 1;
	if(listitem == 1)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5007, DIALOG_STYLE_LIST, " Sta od navedenog predstavlja Non-Roleplay ? ", "Ubijanje igraca sa ledja\nParkiranje vozila ispred banke prilikom pljacke iste.\nVoznja auta bez upaljenog svetla", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5007)
{
	if(!response) return 1;
	if(listitem == 1)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5008, DIALOG_STYLE_LIST, " Prilikom sudara dva vozila, sta treba uraditi ?", "Otici sa mesta i popraviti auto kao da se nista nije desilo\nIzaci i pucati igraca koji vas je udario\nPozvati policiju i odluciti ko je kriv i ko ce nadoknaditi stetu, a potom pozvati mehanicara?", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5008)
{
	if(!response) return 1;
	if(listitem == 2)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5009, DIALOG_STYLE_LIST, "Igrac u prilikom obavljanja RPG radnje u /me i /do komandama koristi ime osobe koju nije upoznao na IC nacin. Da li taj igrac radi MG ?", " Daaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\nNe\nDa ako je napisao u formatu Ime_Prezime", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5009)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 5010, DIALOG_STYLE_LIST, "Ukoliko igrac iskoristi sledece komande: /me Vadi oruzije iz ranca. /do Je izvadio oruzije iz ranca. ", " To znaci da je pravilno postupio\nTo znaci da je dva puta uradio isti postupak\nTo znaci da igrac radi RPS.", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}
fDialog(5011)
{
	if(!response) return 1;
	if(listitem == 1)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SCM(playerid, -1, "Cestitamo, polozili ste pismeni");
		PlayerInfo[playerid][pPismeni] = 1;
		SavePlayer(playerid);
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
	}
	return 1;
}


fDialog(1351)
{
        if(!response) return Pasos[playerid] = GetTimeEx() + 600;
        if(listitem == 1)
        {
                SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
                SPD(playerid, 1352, DIALOG_STYLE_LIST, "Sta je DeathMatch?", "Ubijanje igraca bez razloga\nSimuliranje stvarnog zivota\nTrcanje i skakanje\nMaltretiranje Civila\nGazenje ljudi autom", "Odgovori", "Odustani");
        }
        else
        {
                SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
                Pasos[playerid] = GetTimeEx() + 600;
        }
        return 1;
}
fDialog(1352)
{
	if(!response) return Pasos[playerid] = GetTimeEx() + 600;
	if(listitem == 0)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 1353, DIALOG_STYLE_LIST, "Sta je BunnyHop?", "Ubijanje igraca bez razloga\nSimuliranje stvarnog zivota\nTrcanje i skakanje\nMaltretiranje Civila\nGazenje ljudi autom", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
		Pasos[playerid] = GetTimeEx() + 600;
	}
	return 1;
}
fDialog(1353)
{
	if(!response) return Pasos[playerid] = GetTimeEx() + 600;
	if(listitem == 2)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 1354, DIALOG_STYLE_LIST, "Sta je DriveBy?", "Ubijanje igraca bez razloga\nSimuliranje stvarnog zivota\nTrcanje i skakanje\nMaltretiranje Civila\nGazenje ljudi autom", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
		Pasos[playerid] = GetTimeEx() + 600;
	}
	return 1;
}
fDialog(1354)
{
	if(!response) return Pasos[playerid] = GetTimeEx() + 600;
	if(listitem == 4)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SPD(playerid, 1355, DIALOG_STYLE_LIST, "Sta je PvP?", "Ubijanje igraca bez razloga\nSimuliranje stvarnog zivota\nTrcanje i skakanje\nMaltretiranje Civila\nGazenje ljudi autom", "Odgovori", "Odustani");
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
		Pasos[playerid] = GetTimeEx() + 600;
	}
	return 1;
}
fDialog(1355)
{
	if(!response) return Pasos[playerid] = GetTimeEx() + 600;
	if(listitem == 3)
	{
		SCM(playerid, -1, ""ZELENA"Tacan odgovor!");
		SCM(playerid, -1, "Cestitamo, dobili ste pasos");
		PlayerInfo[playerid][pPasos] = 1;
		OrgInfo[DrzavaNovac] += 1500;
		SacuvajOrgInfo();
		new seff[200];
		format(seff, sizeof(seff), "{F3FF02}DRZAVNI SEF\n\nUkupno novca u drzavnom sefu: %d$ ", OrgInfo[DrzavaNovac]);
		UpdateDynamic3DTextLabelText(dsef, 0x00FFF9FF, seff);
	}
	else
	{
		SCM(playerid, -1, ""SRWBOJA"Pogresan odgovor!");
		Pasos[playerid] = GetTimeEx() + 600;
	}
	return 1;
}

fDialog(778)
{
	if(listitem == 0) //
	{
		new vid = nvozilo[playerid];
		if(GepekInfo[vid][gOruzije] != 0) return SendClientMessage(playerid,WHITE,"{FF0000}INFO | {FFFFFF}Vec imate oruzije u gepeku!");
		if(GetPlayerWeapon(playerid) == 0) return SendClientMessage(playerid,WHITE,"{FF0000}INFO | {FFFFFF}Ne drzite nikakvo oruzije u rukama!");
		if(GetPlayerWeapon(playerid) != 0)
		{
			new gunime[128];
			new string [128];
			GetWeaponName(GetPlayerWeapon(playerid),gunime,sizeof(gunime));
			GepekInfo[vid][gOruzije] = GetPlayerWeapon(playerid);
			GepekInfo[vid][gMunicija] = GetPlayerAmmo(playerid);
			RemovePlayerWeapon(playerid, GetPlayerWeapon(playerid));
			new FileName[128];
			format(FileName, sizeof(FileName), "/Gepek/Vozilo_%d.ini", vid);
			if(!fexist(FileName)) { dini_Create(FileName); }
			SacuvajVoziloo(vid);
			format(string,256,"{FFF1AF}Ostavili ste oruzije %s u gepek.",gunime);
			SendClientMessage(playerid, WHITE, string);
		}
	}
	if(listitem == 1) //
	{
		SPD(playerid,909,DIALOG_STYLE_INPUT,"Ostavljanje Novca","Unesite sumu novca koju zelite ostaviti u gepek ovog vozila:","U redu","Zatvori");
	}
	return 1;
}

fDialog(779)
{
	if(listitem == 0) //
	{
		new vid = nvozilo[playerid];
		if(GepekInfo[vid][gOruzije] == 0) return SendClientMessage(playerid,WHITE,"{FF0000}INFO | {FFFFFF}Nemate nikakvo oruzije u gepeku!");
		if(GepekInfo[vid][gOruzije] != 0)
		{
			new gunime[128];
			new string [128];
			GetWeaponName(GepekInfo[vid][gOruzije],gunime,sizeof(gunime));
			GivePlayerWeapon(playerid,GepekInfo[vid][gOruzije],GepekInfo[vid][gMunicija]);
			format(string,256,"{FFF1AF}Uzeli ste oruzije %s iz gepeka.",gunime);
			SendClientMessage(playerid,WHITE,string);
			GepekInfo[vid][gOruzije] = 0;
			GepekInfo[vid][gMunicija] = 0;
			new FileName[128];
			format(FileName, sizeof(FileName), "/Gepek/Vozilo_%d.ini", vid);
			if(!fexist(FileName)) { dini_Create(FileName); }
			SacuvajVoziloo(vid);
		}
	}
	if(listitem == 1) //
	{
		new string [128];
		format(string, 256,"Unesite sumu koju zelite uzeti iz gepeka\nU gepeku imate: {b8ff02}%d$",GepekInfo[nvozilo[playerid]][gNovac]);
		SPD(playerid,800,DIALOG_STYLE_INPUT,"Uzimanje Novca",string,"U redu","Zatvori");
	}
	return 1;
}

fDialog(800)
{
	new novac = strval(inputtext);
	if(novac < 0 || novac > 5000000) return SendClientMessage(playerid,WHITE,"{FF0000}INFO | {FFFFFF}Novac mora biti u intervalu od 0-5.000.000$!");
	if(novac > 0 && novac < 5000000)
	{
		new vid = nvozilo[playerid];
		if(GepekInfo[vid][gNovac] >= novac)
		{
			new string [128];
			format(string, 256,"{FFF1AF} Uzeli ste %d$ iz gepeka!",novac);
			SendClientMessage(playerid,WHITE,string);
			g_NovacPlus (playerid,novac);
			GepekInfo[vid][gNovac] -= novac;
			new FileName[128];
			format(FileName, sizeof(FileName), "/Gepek/Vozilo_%d.ini", vid);
			if(!fexist(FileName)) { dini_Create(FileName); }
			SacuvajVoziloo(vid);
		}
		else SendClientMessage(playerid,WHITE,"{FF0000}INFO | {FFFFFF}Nemate dovoljno novca u gepeku!");
	}
	return 1;
}
fDialog(777)
{
	if(listitem == 0) //
	{
		SPD(playerid,778,DIALOG_STYLE_LIST,"Ostavljanje","Oruzije\nNovac","U redu","Zatvori");
	}
	if(listitem == 1) //
	{
		SPD(playerid,779,DIALOG_STYLE_LIST,"Uzimanje","Oruzije\nNovac","U redu","Zatvori");
	}
	if(listitem == 2) // INFO VOZILA
	{
		new vid = nvozilo[playerid];
		new string [128];
		new jtext[32];
		if(GepekInfo[vid][gOruzije] == 0) { jtext = "Nista"; }
		else { GetWeaponName(GepekInfo[vid][gOruzije],jtext,sizeof(jtext)); }
		format(string,sizeof(string),"{FFFFFF}Vozilo ID: {B8ff02}%d\n\n{FFFFFF}Oruzije: {0099ff}%s\n{FFFFFF}Municija: {0099ff}%d\n{FFFFFF}Novac: {0099ff}%d$",nvozilo[playerid],jtext,GepekInfo[vid][gMunicija],GepekInfo[vid][gNovac]);
		SPD(playerid,999,DIALOG_STYLE_MSGBOX,"Info",string,"U redu","");
	}
	if(listitem == 3) //
	{
		new vid = nvozilo[playerid];
		new engine,lights,alarm,doors,bonnet,boot,objective;
		GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,false,objective);
		SendClientMessage(playerid,-1,"{FFF1AF}Zatvorili ste gepek!");
	}
	return 1;
}

fDialog(909)
{
	if(response)
	{
		new novac = strval(inputtext);
		if(novac < 0 || novac > 5000000) return SendClientMessage(playerid,WHITE,"{FF0000}INFO | {FFFFFF}Novac mora biti u intervalu od 0-5.000.000$!");
		if(novac > 0 && novac < 5000000)
		{
			if(GetPlayerMoney(playerid) >= novac)
			{
				new string [128];
				new vid = nvozilo[playerid];
				format(string, 256,"{FFF1AF} Ostavili ste %d$ u gepek!",novac);
				SendClientMessage(playerid, WHITE, string);
				g_NovacMinus(playerid,novac);
				//GivePlayerMoney(playerid,-novac);
				GepekInfo[vid][gNovac] += novac;
				new FileName[128];
				format(FileName, sizeof(FileName), "/Gepek/Vozilo_%d.ini", vid);
				if(!fexist(FileName)) { dini_Create(FileName); }
				SacuvajVoziloo(vid);
			}
			else SendClientMessage(playerid,WHITE,"{FF0000}INFO | {FFFFFF}Nemate dovoljno novca kod sebe!");
		}
	}
	return 1;
}

///////////////////////////////////////////////////////////////////////////
///////////////////////////////EVENT SISTEM////////////////////////////////
///////////////////////////////////////////////////////////////////////////
fDialog(1003)
{
	if(response)
	{
		if(listitem == 0) // LSDR
		{
			SetPlayerPos(playerid,-509.9478,2589.1721,52.9780);
		}
		if(listitem == 1) // LSDR
		{
			SetPlayerPos(playerid,-269.5549,-2165.1125,28.7574);
		}
		if(listitem == 2) // LSDR
		{
			SetPlayerPos(playerid,-2421.8689,-609.4372,132.2674);
		}
		if(listitem == 3) // LSDR
		{
			SetPlayerPos(playerid,-2877.5713,423.5097,4.9590);
		}
		if(listitem == 4) // LSDR
		{
			SetPlayerPos(playerid,-306.8569,1302.5017,53.6073);
		}
		if(listitem == 5) // LSDR
		{
			SetPlayerPos(playerid,-2396.9985,-571.4738,132.1172);
		}
		if(listitem == 6) // LSDR
		{
			SetPlayerPos(playerid,-1509.5323,975.5475,7.1853);
		}
		if(listitem == 7) // LSDR
		{
			SetPlayerPos(playerid,2282.8188,-223.8763,11.7244);
		}
		if(listitem == 8) // LSDR
		{
			SetPlayerPos(playerid,-1947.5833,-2460.6743,30.7485);
		}
		if(listitem == 9) // LSDR
		{
			SetPlayerPos(playerid,303.3947,-732.6323,5.5578);
		}
		if(listitem == 10) // LSDR
		{
			SetPlayerPos(playerid,-2498.3689,-1453.5709,361.8633);
		}
		if(listitem == 11) // LSDR
		{
			SetPlayerPos(playerid,-2538.3408,-1470.2476,360.5102);
		}
		if(listitem == 12) // LSDR
		{
			SetPlayerPos(playerid,-2260.2354,2278.6064,4.9886);
		}
		if(listitem == 13) // LSDR
		{
			SetPlayerPos(playerid,4007.8320,-1958.6887,2.5697);
		}
		if(listitem == 14) // LSDR
		{
			SetPlayerPos(playerid,682.98284912,-3370.13720703,14.43459988);
		}
		if(listitem == 15) // LSDR
		{
			SetPlayerPos(playerid,-2361.7668,-2189.4280,33.5759);
		}
		if(listitem == 16) // LSDR
		{
			SetPlayerPos(playerid,1410.1050,-1308.8313,9.4301);
		}
		if(listitem == 17) // LSDR
		{
			SetPlayerPos(playerid,-1637.0322,1044.6771,69.8280);
		}
		if(listitem == 18) // LSDR
		{
			SetPlayerPos(playerid,2262.2480,1399.4867,42.8203);
		}
		if(listitem == 19) // LSDR
		{
			SetPlayerPos(playerid,-818.7883,1911.1190,7.0000);
		}
		if(listitem == 20) // LSDR
		{
			SetPlayerPos(playerid,-2937.5605,452.5544,3.5395);
		}
		if(listitem == 21) // LSDR
		{
			SetPlayerPos(playerid,-255.1029,3962.5720,14.0400);
		}
		return 1;
	}
	return 1;
}
fDialog(358)
{
	if(!response) return SendClientMessage(playerid, 0xFFFFFFFF, "Odustali ste od organizovanja eventa.");
	if(response)
	{
		new ide = strval(inputtext);
		if(!ide || ide > 23)
		{
			SPD(playerid,358,DIALOG_STYLE_INPUT,"{F3FF02}[EVENTI]","Event id-ovi:\n2 - Desert Drive\n3 - Suma Race\n4 - Hill Drift\n5 - Vortex\n6 - Drift1\n7 - Drift2\n8 - Zagreb Race\n9 - JetMax\n10 - Rally1\n11 - Rally2\n12 - Quad Race\n13 - Sanchez Race\n14 - Kart Race\n15 - Kruzna Trka\n16 - Morski Race\n17 - MC Vrh\n18 - NRG Race\n19 - Guranje Monsterima\n20 - Parking Drift\n21 - Potapanje Brodova\n22 - Beach Hell\nUnesi id eventa:","Unesi","Izlaz");
			return 1;
		}
		if(ide == 2)
		{
			eventa[0] = AddStaticVehicleEx(495,-539.58489990,2583.02270508,53.97413635,270.00000000,-1,-1,15); //Sandking
			eventa[1] = AddStaticVehicleEx(495,-539.48999023,2577.98754883,53.97550201,270.00000000,6,6,15); //Sandking
			eventa[2] = AddStaticVehicleEx(495,-539.62109375,2572.98730469,53.97550201,270.00000000,1,1,15); //Sandking
			eventa[3] = AddStaticVehicleEx(495,-539.56427002,2568.23730469,53.97550201,270.00000000,3,3,15); //Sandking
			eventa[4] = AddStaticVehicleEx(495,-539.56811523,2563.48730469,53.97550201,270.00000000,2,2,15); //Sandking
			eventa[5] = AddStaticVehicleEx(495,-539.13836670,2603.90576172,53.97550201,270.00000000,1,6,15); //Sandking
			eventa[6] = AddStaticVehicleEx(495,-539.11914062,2608.65527344,53.97550201,270.00000000,3,-1,15); //Sandking
			eventa[7] = AddStaticVehicleEx(495,-539.04028320,2613.40527344,53.97550201,270.00000000,79,79,15); //Sandking
			eventa[8] = AddStaticVehicleEx(495,-538.89233398,2618.40527344,53.97550201,270.00000000,65,65,15); //Sandking
			eventa[9] = AddStaticVehicleEx(495,-538.63067627,2623.14599609,53.97550201,270.00000000,1,1,15); //Sandking
			eventa[10] = AddStaticVehicleEx(495,-539.85668945,2558.49707031,53.97550201,270.00000000,8,8,15); //Sandking
			eventa[11] = AddStaticVehicleEx(495,-539.70965576,2588.45629883,53.97550201,270.00000000,2,2,15); //Sandking
			eventa[12] = AddStaticVehicleEx(495,-538.72601318,2628.39550781,53.97550201,270.00000000,1,1,15); //Sandking
			eventa[13] = AddStaticVehicleEx(495,-538.80798340,2632.89550781,53.97550201,270.00000000,1,1,15); //Sandking
			eventa[14] = AddStaticVehicleEx(495,-539.32440186,2598.35278320,53.97413635,270.00000000,3,3,15); //Sandking
			ddrive[0] = CreateDynamicObject(975,-499.10000610,2593.10009766,52.29999924,0.00000000,0.00000000,268.50000000); //object(columbiangate) (1)
			ddrive[1] = CreateDynamicObject(983,-502.29998779,2588.19995117,53.20000076,0.75000000,0.00000000,270.75000000); //object(fenceshit3) (2)
			ddrive[2] = CreateDynamicObject(982,-519.70001221,2546.60009766,53.20000076,0.00000000,0.00000000,269.74499512); //object(fenceshit) (2)
			ddrive[3] = CreateDynamicObject(984,-506.60000610,2556.19995117,53.09999847,0.00000000,0.00000000,358.00000000); //object(fenceshit2) (1)
			ddrive[4] = CreateDynamicObject(984,-506.70001221,2553.00000000,53.09999847,0.00000000,0.00000000,357.99499512); //object(fenceshit2) (2)
			ddrive[5] = CreateDynamicObject(984,-537.29998779,2546.69995117,53.09999847,0.00000000,0.00000000,269.49499512); //object(fenceshit2) (3)
			ddrive[6] = CreateDynamicObject(982,-543.29998779,2559.60009766,53.20000076,0.00000000,0.00000000,357.99499512); //object(fenceshit) (3)
			ddrive[7] = CreateDynamicObject(982,-554.70001221,2577.10009766,53.20000076,0.00000000,0.00000000,68.24499512); //object(fenceshit) (4)
			ddrive[8] = CreateDynamicObject(982,-550.50000000,2612.80004883,53.20000076,0.00000000,0.00000000,134.24157715); //object(fenceshit) (5)
			ddrive[9] = CreateDynamicObject(984,-541.09997559,2628.10009766,53.09999847,0.00000000,0.00000000,357.99499512); //object(fenceshit2) (4)
			ddrive[10] = CreateDynamicObject(982,-528.00000000,2639.30004883,53.09999847,0.00000000,0.00000000,270.24182129); //object(fenceshit) (6)
			ddrive[11] = CreateDynamicObject(983,-540.90002441,2636.10009766,53.09999847,0.74707031,0.00000000,179.49707031); //object(fenceshit3) (3)
			ddrive[12] = CreateDynamicObject(984,-510.60000610,2639.39990234,53.00000000,0.00000000,0.00000000,270.24499512); //object(fenceshit2) (6)
			ddrive[13] = CreateDynamicObject(982,-504.60000610,2626.60009766,53.09999847,0.00000000,0.00000000,178.24169922); //object(fenceshit) (7)
			ddrive[14] = CreateDynamicObject(984,-505.10000610,2607.39990234,53.00000000,0.00000000,0.00000000,178.99169922); //object(fenceshit2) (7)
			ddrive[15] = CreateDynamicObject(983,-505.20001221,2601.00000000,53.00000000,359.99707031,0.00000000,179.24707031); //object(fenceshit3) (4)
			ddrive[16] = CreateDynamicObject(983,-502.00000000,2597.80004883,53.09999847,0.74707031,0.00000000,270.24707031); //object(fenceshit3) (6)
			ddrive[17] = CreateDynamicObject(982,-505.89999390,2575.39990234,53.20000076,0.00000000,0.00000000,358.00000000); //object(fenceshit) (1)
			ddrive[18] = CreateDynamicObject(9131,-499.20001221,2588.39990234,52.90000153,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
			ddrive[19] = CreateDynamicObject(9131,-499.00000000,2597.69995117,52.90000153,0.00000000,0.00000000,0.25000000);
		//	SCM(playerid, SVETLOPLAVA, "Event Desert Drive pokrenut");
			event = 2;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Desert Drive "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 3)
		{//ubagovan
			eventa[0] = AddStaticVehicleEx(471,-255.89941406,-2191.79980469,28.50000000,113.99951172,1,44,15); //Quad
			eventa[1] = AddStaticVehicleEx(471,-255.19921875,-2193.50000000,28.50000000,111.99462891,1,61,15); //Quad
			eventa[2] = AddStaticVehicleEx(471,-256.79980469,-2190.00000000,28.50000000,115.99365234,1,53,15); //Quad
			eventa[3] = AddStaticVehicleEx(471,-254.39941406,-2195.19921875,28.50000000,113.49426270,1,13,15); //Quad
			eventa[4] = AddStaticVehicleEx(471,-253.59960938,-2196.79980469,28.60000038,113.99414062,1,30,15); //Quad
			eventa[5] = AddStaticVehicleEx(471,-252.79980469,-2198.39941406,28.60000038,115.99365234,1,126,15); //Quad
			eventa[6] = AddStaticVehicleEx(471,-251.89941406,-2200.00000000,28.60000038,114.49401855,1,123,15); //Quad
			eventa[7] = AddStaticVehicleEx(471,-256.69921875,-2197.89941406,28.50000000,113.99414062,1,6,15); //Quad
			eventa[8] = AddStaticVehicleEx(471,-257.50000000,-2196.19921875,28.50000000,113.99414062,1,22,15); //Quad
			eventa[9] = AddStaticVehicleEx(471,-258.19921875,-2194.39941406,28.50000000,113.99414062,1,43,15); //Quad
			eventa[10] = AddStaticVehicleEx(471,-258.80963135,-2193.02978516,28.50000000,113.99414062,1,93,15); //Quad
			eventa[11] = AddStaticVehicleEx(471,-259.60400391,-2191.19335938,28.50000000,113.99414062,1,86,15); //Quad
			eventa[12] = AddStaticVehicleEx(471,-255.90478516,-2199.73535156,28.50000000,113.99414062,1,5,15); //Quad
			eventa[13] = AddStaticVehicleEx(471,-255.33381653,-2201.38964844,28.50000000,113.99414062,1,3,15); //Quad
			eventa[14] = AddStaticVehicleEx(471,-260.31576538,-2199.62744141,28.50000000,113.99414062,1,-1,15); //Quad
			srace[0] = CreateDynamicObject(982,-267.89999390,-2193.89990234,28.39999962,0.50000000,0.25000000,293.74780273); //object(fenceshit) (1)
			srace[1] = CreateDynamicObject(982,-262.20001221,-2205.39990234,28.39999962,0.99987793,0.24722290,293.74475098); //object(fenceshit) (2)
			srace[2] = CreateDynamicObject(984,-253.39999390,-2194.50000000,28.50000000,359.50000000,359.25000000,26.24343872); //object(fenceshit2) (1)
			srace[3] = CreateDynamicObject(984,-276.79998779,-2204.80004883,28.20000076,0.24456787,0.49746704,26.24536133);
		//	SCM(playerid, SVETLOPLAVA, "Event Suma Race pokrenut");
			event = 3;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Suma Race "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 4)
		{//ubagovan
			eventa[0] = AddStaticVehicleEx(477,-2399.78613281,-613.05255127,132.49844360,34.00000000,-1,-1,15); //ZR-350
			eventa[1] = AddStaticVehicleEx(477,-2397.27539062,-611.40893555,132.49844360,33.99719238,1,1,15); //ZR-350
			eventa[2] = AddStaticVehicleEx(477,-2394.55541992,-609.62847900,132.49844360,33.99719238,2,2,15); //ZR-350
			eventa[3] = AddStaticVehicleEx(477,-2392.04394531,-607.98510742,132.49844360,33.99719238,3,3,15); //ZR-350
			eventa[4] = AddStaticVehicleEx(477,-2391.10986328,-601.67333984,132.49844360,126.00000000,6,6,15); //ZR-350
			eventa[5] = AddStaticVehicleEx(477,-2392.76733398,-599.31805420,132.49844360,125.99719238,79,79,15); //ZR-350
			eventa[6] = AddStaticVehicleEx(477,-2394.53735352,-596.88348389,132.49844360,125.99670410,65,65,15); //ZR-350
			eventa[7] = AddStaticVehicleEx(477,-2396.30786133,-594.44891357,132.49844360,125.99670410,53,53,15); //ZR-350
			eventa[8] = AddStaticVehicleEx(477,-2397.95361328,-592.03723145,132.49844360,125.99670410,3,3,15); //ZR-350
			eventa[9] = AddStaticVehicleEx(477,-2399.63793945,-589.59375000,132.49844360,125.99670410,22,22,15); //ZR-350
			eventa[10] = AddStaticVehicleEx(477,-2401.45117188,-587.32666016,132.49844360,125.99670410,126,126,15); //ZR-350
			eventa[11] = AddStaticVehicleEx(477,-2403.20019531,-584.89013672,132.49844360,125.99670410,44,44,15); //ZR-350
			eventa[12] = AddStaticVehicleEx(477,-2409.30419922,-583.54968262,132.49844360,215.99609375,90,90,15); //ZR-350
			eventa[13] = AddStaticVehicleEx(477,-2411.77490234,-585.38348389,132.49844360,215.99121094,99,99,15); //ZR-350
			eventa[14] = AddStaticVehicleEx(477,-2414.40673828,-587.14849854,132.49844360,215.99121094,123,124,15); //ZR-350
			lsdok[0] = CreateDynamicObject(983,-2423.63305664,-590.59375000,132.45610046,0.00000000,0.00000000,36.00000000); //object(fenceshit3) (1)
			lsdok[1] = CreateDynamicObject(983,-2402.29003906,-617.69360352,132.45610046,0.00000000,0.00000000,43.99670410); //object(fenceshit3) (2)
			lsdok[2] = CreateDynamicObject(982,-2413.19604492,-604.30035400,132.24604797,0.00000000,0.00000000,38.00000000); //object(fenceshit) (1)
			//SCM(playerid, SVETLOPLAVA, "Event Hill Drift pokrenut");
			event = 4;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Hill Drift "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 5)
		{
			lsdok[0] = CreateDynamicObject(983,-2866.32055664,412.58685303,4.41167355,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (1)
			lsdok[1] = CreateDynamicObject(983,-2928.42333984,412.78186035,3.33090496,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (2)
			lsdok[2] = CreateDynamicObject(10402,-2898.85131836,409.40045166,2.86385202,0.00000000,358.00000000,0.00000000); //object(hc_secfence_sfs) (1)
			eventa[0] = AddStaticVehicleEx(539,-2926.61010742,413.91159058,3.43939662,182.00000000,-1,-1,15); //Vortex
			eventa[1] = AddStaticVehicleEx(539,-2922.56835938,413.88867188,3.43939662,181.99951172,1,1,15); //Vortex
			eventa[2] = AddStaticVehicleEx(539,-2918.56835938,413.85888672,3.43939662,181.99951172,2,2,15); //Vortex
			eventa[3] = AddStaticVehicleEx(539,-2914.55468750,413.88897705,3.43939662,181.99951172,3,3,15); //Vortex
			eventa[4] = AddStaticVehicleEx(539,-2910.36108398,413.70620728,3.88735938,181.99951172,4,4,15); //Vortex
			eventa[5] = AddStaticVehicleEx(539,-2906.21069336,413.75421143,3.74948382,181.99951172,5,5,15); //Vortex
			eventa[6] = AddStaticVehicleEx(539,-2901.84741211,413.60070801,3.84992576,181.99951172,6,6,15); //Vortex
			eventa[7] = AddStaticVehicleEx(539,-2897.34667969,413.55883789,3.84992576,181.99951172,7,7,15); //Vortex
			eventa[8] = AddStaticVehicleEx(539,-2892.84667969,413.45941162,3.84992576,181.99951172,82,82,15); //Vortex
			eventa[9] = AddStaticVehicleEx(539,-2888.63452148,413.61218262,3.84992576,181.99951172,9,9,15); //Vortex
			eventa[10] = AddStaticVehicleEx(539,-2884.34960938,413.57479858,3.84992576,181.99951172,1,1,15); //Vortex
			eventa[11] = AddStaticVehicleEx(539,-2880.60302734,413.52664185,3.84992576,181.99951172,-1,-1,15); //Vortex
			eventa[12] = AddStaticVehicleEx(539,-2876.34960938,413.49935913,3.84992576,181.99951172,106,106,15); //Vortex
			eventa[13] = AddStaticVehicleEx(539,-2872.58691406,413.51165771,3.84992576,181.99951172,6,6,15); //Vortex
			eventa[14] = AddStaticVehicleEx(539,-2868.57714844,413.77502441,3.84992576,181.99951172,3,3,15); //Vortex
			SCM(playerid, SVETLOPLAVA, "Vortex event pokrenut");
			event = 5;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Vortex "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 6)
		{
			SCM(playerid, SVETLOPLAVA, "Drift event pokrenut");
			event = 6;
			slotovi = 15;
			eventa[0] = AddStaticVehicleEx(562,-287.33776855,1324.82153320,54.19244385,83.99597168,1,1,15); //Elegy
			eventa[1] = AddStaticVehicleEx(562,-287.48080444,1321.40441895,54.10952759,81.99645996,44,44,15); //Elegy
			eventa[2] = AddStaticVehicleEx(562,-288.43347168,1315.00439453,53.93434906,81.99645996,2,2,15); //Elegy
			eventa[3] = AddStaticVehicleEx(562,-288.86474609,1312.00195312,53.84280014,81.99645996,126,126,15); //Elegy
			eventa[4] = AddStaticVehicleEx(562,-289.24249268,1308.93127441,53.75569916,81.99645996,86,86,15); //Elegy
			eventa[5] = AddStaticVehicleEx(562,-289.76129150,1306.02331543,53.64820480,81.99645996,6,6,15); //Elegy
			eventa[6] = AddStaticVehicleEx(562,-291.21972656,1296.19433594,53.52655792,81.99645996,43,43,15); //Elegy
			eventa[7] = AddStaticVehicleEx(562,-291.75488281,1292.48242188,53.41165161,83.99597168,53,53,15); //Elegy
			eventa[8] = AddStaticVehicleEx(562,-286.95874023,1327.95629883,54.27618027,83.99597168,-1,-1,15); //Elegy
			eventa[9] = AddStaticVehicleEx(562,-287.95840454,1318.11254883,54.02265930,81.99096680,3,3,15); //Elegy
			eventa[10] = AddStaticVehicleEx(562,-289.98193359,1303.03125000,53.64820480,81.99645996,22,22,15); //Elegy
			eventa[11] = AddStaticVehicleEx(562,-290.54968262,1299.57739258,53.64820480,81.99645996,61,61,15); //Elegy
			eventa[12] = AddStaticVehicleEx(562,-307.38552856,1293.76440430,53.08210373,359.99584961,13,13,15); //Elegy
			eventa[13] = AddStaticVehicleEx(562,-307.29190063,1301.90148926,53.32653046,359.99450684,30,30,15); //Elegy
			eventa[14] = AddStaticVehicleEx(562,-304.22738647,1293.49902344,53.12705231,359.99450684,65,65,15); //Elegy
			lsdok[2] = CreateDynamicObject(982,-310.26800537,1318.65917969,53.63610077,2.00000000,0.00000000,354.00000000); //object(fenceshit) (1)
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Drift "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 7)
		{
		//	SCM(playerid, SVETLOPLAVA, "Drift2 event pokrenut");
			event = 7;
			slotovi = 15;
			eventa[0] = AddStaticVehicleEx(411,-2399.63208008,-613.44195557,132.44844055,36.00000000,-1,-1,15); //Infernus
			eventa[1] = AddStaticVehicleEx(411,-2394.55664062,-609.86035156,132.44844055,35.99670410,3,3,15); //Infernus
			eventa[2] = AddStaticVehicleEx(411,-2391.93701172,-608.01959229,132.44844055,35.99670410,2,2,15); //Infernus
			eventa[3] = AddStaticVehicleEx(411,-2390.95141602,-601.53637695,132.44844055,126.00000000,6,6,15); //Infernus
			eventa[4] = AddStaticVehicleEx(411,-2392.69433594,-599.09277344,132.44844055,125.99670410,86,86,15); //Infernus
			eventa[5] = AddStaticVehicleEx(411,-2394.35742188,-596.74218750,132.44844055,125.99670410,1,1,15); //Infernus
			eventa[6] = AddStaticVehicleEx(411,-2396.17578125,-594.38085938,132.44844055,125.99670410,123,123,15); //Infernus
			eventa[7] = AddStaticVehicleEx(411,-2397.70800781,-591.95898438,132.44844055,125.99670410,79,79,15); //Infernus
			eventa[8] = AddStaticVehicleEx(411,-2399.49121094,-589.53320312,132.44844055,125.99670410,30,30,15); //Infernus
			eventa[9] = AddStaticVehicleEx(411,-2401.23437500,-587.08984375,132.44844055,125.99670410,61,61,15); //Infernus
			eventa[10] = AddStaticVehicleEx(411,-2402.87890625,-584.75195312,132.44844055,125.99670410,22,22,15); //Infernus
			eventa[11] = AddStaticVehicleEx(411,-2409.49707031,-583.22851562,132.44844055,215.99670410,13,13,15); //Infernus
			eventa[12] = AddStaticVehicleEx(411,-2411.97460938,-584.94824219,132.44844055,215.99670410,126,126,15); //Infernus
			eventa[13] = AddStaticVehicleEx(411,-2414.51464844,-586.75390625,132.44844055,215.99670410,43,43,15); //Infernus
			eventa[14] = AddStaticVehicleEx(411,-2417.09863281,-588.43457031,132.44844055,215.99670410,44,44,15); //Infernus

			ddrive[3] = CreateDynamicObject(983,-2401.94018555,-618.39410400,132.42610168,0.00000000,0.00000000,46.00000000); //object(fenceshit3) (3)
			ddrive[4] = CreateDynamicObject(983,-2424.61547852,-589.19335938,132.42610168,0.00000000,0.00000000,35.99975586); //object(fenceshit3) (4)
			ddrive[5] = CreateDynamicObject(983,-2422.72998047,-591.76525879,132.39601135,0.00000000,0.00000000,35.99670410); //object(fenceshit3) (5)

			lsdok[2] = CreateDynamicObject(982,-2412.85180664,-605.32604980,132.24604797,0.00000000,0.00000000,36.00000000); //object(fenceshit) (2)
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Drift 2 "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 8)
		{
		    new str[122];
			event = 8;
			slotovi = 15;
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Zagreb Race "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(503,-1496.57031250,996.47460938,7.15699053,90.00000000,-1,1,15); //Hotring Racer B
			eventa[1] = AddStaticVehicleEx(503,-1496.35021973,993.22778320,7.15699053,90.00000000,126,1,15); //Hotring Racer B
			eventa[2] = AddStaticVehicleEx(503,-1496.50585938,989.96435547,7.16940594,90.00000000,106,1,15); //Hotring Racer B
			eventa[3] = AddStaticVehicleEx(503,-1496.52954102,986.96398926,7.16940594,90.00000000,3,1,15); //Hotring Racer B
			eventa[4] = AddStaticVehicleEx(503,-1496.40551758,983.72802734,7.16940594,90.00000000,6,1,15); //Hotring Racer B
			eventa[5] = AddStaticVehicleEx(503,-1496.47277832,980.71875000,7.16940594,90.00000000,53,1,15); //Hotring Racer B
			eventa[6] = AddStaticVehicleEx(503,-1496.50744629,977.73266602,7.16940594,90.00000000,22,1,15); //Hotring Racer B
			eventa[7] = AddStaticVehicleEx(503,-1496.71386719,974.74053955,7.16940594,90.00000000,44,1,15); //Hotring Racer B
			eventa[8] = AddStaticVehicleEx(503,-1496.55468750,971.71191406,7.16940594,90.00000000,13,1,15); //Hotring Racer B
			eventa[9] = AddStaticVehicleEx(503,-1496.57324219,968.47949219,7.16940594,90.00000000,30,1,15); //Hotring Racer B
			eventa[10] = AddStaticVehicleEx(503,-1496.63281250,965.25000000,7.16940594,90.00000000,86,1,15); //Hotring Racer B
			eventa[11] = AddStaticVehicleEx(503,-1496.69433594,961.99902344,7.16940594,90.00000000,65,1,15); //Hotring Racer B
			eventa[12] = AddStaticVehicleEx(503,-1496.84570312,958.75292969,7.16940594,90.00000000,123,1,15); //Hotring Racer B
			eventa[13] = AddStaticVehicleEx(503,-1496.62207031,955.54492188,7.16940594,90.00000000,43,1,15); //Hotring Racer B
			eventa[14] = AddStaticVehicleEx(503,-1496.67675781,952.27929688,7.16940594,90.00000000,16,1,15); //Hotring Racer B

			ddrive[4] = CreateDynamicObject(983,-1496.07763672,950.58520508,6.87105465,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (6)
			ddrive[5] = CreateDynamicObject(983,-1496.07812500,998.03417969,6.87105465,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (7)

			lsdok[2] = CreateDynamicObject(10402,-1500.48352051,983.27526855,6.4,0.00000000,0.00000000,270.00000000); //object(hc_secfence_sfs) (2)

		}
		if(ide == 9)
		{
			SCM(playerid, SVETLOPLAVA, "Jetmax event pokrenut");
			event = 9;
			slotovi = 15;
			eventa[0] = AddStaticVehicleEx(493,2227.06567383,-244.04663086,0.00000000,71.99291992,123,123,15); //Jetmax
			eventa[1] = AddStaticVehicleEx(493,2239.49145508,-208.50761414,0.00000000,71.98999023,43,43,15); //Jetmax
			eventa[2] = AddStaticVehicleEx(493,2253.10253906,-166.40301514,0.00000000,73.99096680,126,126,15); //Jetmax
			eventa[3] = AddStaticVehicleEx(493,2248.60888672,-182.42330933,0.00000000,71.98999023,6,6,15); //Jetmax
			eventa[4] = AddStaticVehicleEx(493,2231.92968750,-229.88908386,0.00000000,71.99145508,13,13,15); //Jetmax
			eventa[5] = AddStaticVehicleEx(493,2237.59765625,-214.12541199,0.00000000,71.99047852,22,22,15); //Jetmax
			eventa[6] = AddStaticVehicleEx(493,2236.19848633,-219.00708008,0.00000000,71.99096680,61,61,15); //Jetmax
			eventa[7] = AddStaticVehicleEx(493,2241.29711914,-202.59222412,0.00000000,71.99047852,53,53,15); //Jetmax
			eventa[8] = AddStaticVehicleEx(493,2249.88574219,-176.83708191,0.00000000,71.99047852,3,3,15); //Jetmax
			eventa[9] = AddStaticVehicleEx(493,2251.48559570,-171.55006409,0.00000000,71.99597168,106,106,15); //Jetmax
			eventa[10] = AddStaticVehicleEx(493,2246.92749023,-187.63131714,0.00000000,73.99597168,86,86,15); //Jetmax
			eventa[11] = AddStaticVehicleEx(493,2244.60424805,-192.73759460,0.00000000,71.99597168,-1,-1,15); //Jetmax
			eventa[12] = AddStaticVehicleEx(493,2229.69433594,-236.14974976,0.00000000,71.99743652,44,44,15); //Jetmax
			eventa[13] = AddStaticVehicleEx(493,2243.54687500,-197.68214417,0.00000000,71.99145508,1,1,15); //Jetmax
			eventa[14] = AddStaticVehicleEx(493,2234.13012695,-224.28451538,0.00000000,71.98645020,126,126,15); //Jetmax
			lsdok[2] = CreateDynamicObject(7371,2215.43579102,-245.20257568,-0.33074951,0.00000000,0.00000000,162.00000000); //object(vgsnelec_fence_02) (1)
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Jetmax "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 10)
		{
			event = 10;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Relly 1 "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(560,-1950.28540039,-2478.68481445,30.73694611,43.99475098,-1,-1,15); //Sultan
			eventa[1] = AddStaticVehicleEx(560,-1947.93640137,-2476.06420898,30.92996979,43.99475098,13,13,15); //Sultan
			eventa[2] = AddStaticVehicleEx(560,-1945.41503906,-2473.27734375,31.00284958,43.99475098,2,2,15); //Sultan
			eventa[3] = AddStaticVehicleEx(560,-1942.90270996,-2470.70166016,30.93362999,43.99475098,43,43,15); //Sultan
			eventa[4] = AddStaticVehicleEx(560,-1940.22875977,-2467.68554688,30.85259247,43.99475098,22,22,15); //Sultan
			eventa[5] = AddStaticVehicleEx(560,-1963.86767578,-2464.73315430,30.42997551,225.99377441,-1,-1,15); //Sultan
			eventa[6] = AddStaticVehicleEx(560,-1961.39160156,-2462.13183594,30.42997551,227.99377441,44,44,15); //Sultan
			eventa[7] = AddStaticVehicleEx(560,-1937.77038574,-2465.26171875,30.78746796,43.99475098,6,6,15); //Sultan
			eventa[8] = AddStaticVehicleEx(560,-1958.72167969,-2459.51171875,30.42997551,227.99377441,123,123,15); //Sultan
			eventa[9] = AddStaticVehicleEx(560,-1956.26098633,-2456.63793945,30.44233322,227.99377441,3,3,15); //Sultan
			eventa[10] = AddStaticVehicleEx(560,-1953.57299805,-2453.80590820,30.42997551,227.99377441,125,125,15); //Sultan
			eventa[11] = AddStaticVehicleEx(560,-1951.73779297,-2450.93383789,30.42997551,227.99377441,6,6,15); //Sultan
			eventa[12] = AddStaticVehicleEx(560,-1949.27685547,-2448.75927734,30.42997551,227.99377441,30,30,15); //Sultan
			eventa[13] = AddStaticVehicleEx(560,-1935.60913086,-2462.51928711,30.71378136,43.99475098,1,1,15); //Sultan
			eventa[14] = AddStaticVehicleEx(560,-1956.82604980,-2470.45312500,30.42997551,313.99377441,126,126,15); //Sultan
			Relly1[0] = CreateDynamicObject(982,-1941.18530273,-2454.12207031,30.36674118,0.00000000,0.00000000,43.99926758); //object(fenceshit) (5)
			Relly1[1] = CreateDynamicObject(982,-1958.39660645,-2473.36914062,30.36674118,0.00000000,0.00000000,43.99475098); //object(fenceshit) (6)
			Relly1[2] = CreateDynamicObject(982,-1958.73339844,-2454.56542969,30.30855560,0.00000000,0.00000000,318.00000000); //object(fenceshit) (3)
			Relly1[3] = CreateDynamicObject(982,-1940.51196289,-2472.98706055,30.87361526,0.00000000,0.00000000,317.99926758); //object(fenceshit) (4)
		}
		if(ide == 11)
		{
			//SCM(playerid, SVETLOPLAVA, "Relly 2 - Bandito event pokrenut");
			event = 11;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Relly 2 "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(568,285.37884521,-713.87841797,4.66370916,0.00000000,-1,-1,15); //Bandito
			eventa[1] = AddStaticVehicleEx(568,288.27725220,-713.96636963,4.80195951,0.00000000,-1,-1,15); //Bandito
			eventa[2] = AddStaticVehicleEx(568,291.17199707,-714.19354248,4.94776487,0.00000000,-1,-1,15); //Bandito
			eventa[3] = AddStaticVehicleEx(568,294.29531860,-714.28057861,5.09890699,0.00000000,-1,-1,15); //Bandito
			eventa[4] = AddStaticVehicleEx(568,297.10568237,-714.36328125,5.23490477,0.00000000,-1,-1,15); //Bandito
			eventa[5] = AddStaticVehicleEx(568,299.85626221,-714.30499268,5.36804724,0.00000000,-1,-1,15); //Bandito
			eventa[6] = AddStaticVehicleEx(568,302.71575928,-714.40826416,5.50419188,0.00000000,-1,-1,15); //Bandito
			eventa[7] = AddStaticVehicleEx(568,305.49932861,-714.47882080,5.70663404,0.00000000,-1,-1,15); //Bandito
			eventa[8] = AddStaticVehicleEx(568,308.53314209,-714.52215576,5.98633528,0.00000000,-1,-1,15); //Bandito
			eventa[9] = AddStaticVehicleEx(568,311.40234375,-714.62927246,6.25083113,359.79089355,-1,-1,15); //Bandito
			eventa[10] = AddStaticVehicleEx(568,314.18975830,-714.62615967,6.50783682,359.78576660,-1,-1,15); //Bandito
			eventa[11] = AddStaticVehicleEx(568,317.12606812,-714.38922119,6.55076361,359.78576660,-1,-1,15); //Bandito
			eventa[12] = AddStaticVehicleEx(568,320.38537598,-714.42687988,7.05076361,359.78576660,-1,-1,15); //Bandito
			eventa[13] = AddStaticVehicleEx(568,323.38281250,-714.50097656,7.30076361,359.78576660,-1,-1,15); //Bandito
			eventa[14] = AddStaticVehicleEx(568,326.36914062,-714.71093750,7.63075972,359.78576660,-1,-1,15); //Bandito
			Relly1[2] = CreateDynamicObject(10402,295.20111084,-718.53833008,4.32807636,1.98852539,355.98999023,0.13732910); //object(hc_secfence_sfs) (4)
			Relly1[3] = CreateDynamicObject(983,327.85644531,-715.37207031,7.47617054,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (8)
			Relly1[0] = CreateDynamicObject(10402,295.19042969,-710.78027344,3.82807636,1.99401855,355.99548340,358.13732910); //object(hc_secfence_sfs) (3)
		}
		if(ide == 12)
		{
			//SCM(playerid, SVETLOPLAVA, "Quad race event pokrenut");
			event = 12;
			slotovi = 15;
			eventa[0] = AddStaticVehicleEx(471,-2524.87573242,-1470.46252441,360.51330566,133.99475098,43,43,15); //Quad
			eventa[1] = AddStaticVehicleEx(471,-2523.11230469,-1472.11657715,360.57659912,133.99475098,13,13,15); //Quad
			eventa[2] = AddStaticVehicleEx(471,-2526.10400391,-1468.79492188,360.56491089,133.99475098,61,61,15); //Quad
			eventa[3] = AddStaticVehicleEx(471,-2525.29516602,-1473.85144043,360.44778442,133.99475098,22,22,15); //Quad
			eventa[4] = AddStaticVehicleEx(471,-2526.80712891,-1472.16625977,360.41723633,133.99475098,30,30,15); //Quad
			eventa[5] = AddStaticVehicleEx(471,-2528.17675781,-1470.65490723,360.46389771,133.99475098,2,2,15); //Quad
			eventa[6] = AddStaticVehicleEx(471,-2527.20605469,-1475.52734375,360.34442139,133.99475098,86,86,15); //Quad
			eventa[7] = AddStaticVehicleEx(471,-2528.82470703,-1474.08398438,360.31365967,133.99475098,44,44,15); //Quad
			eventa[8] = AddStaticVehicleEx(471,-2530.09716797,-1472.58044434,360.34832764,133.99475098,1,1,15); //Quad
			eventa[9] = AddStaticVehicleEx(471,-2528.99584961,-1477.08740234,360.53485107,133.99475098,6,6,15); //Quad
			eventa[10] = AddStaticVehicleEx(471,-2530.63354492,-1475.78686523,360.22000122,133.99475098,-1,-1,15); //Quad
			eventa[11] = AddStaticVehicleEx(471,-2531.98315430,-1474.20507812,360.26342773,133.99475098,3,3,15); //Quad
			eventa[12] = AddStaticVehicleEx(471,-2531.20410156,-1479.27832031,360.14306641,133.99475098,65,65,15); //Quad
			eventa[13] = AddStaticVehicleEx(471,-2532.60937500,-1477.70800781,360.11431885,133.99475098,53,53,15); //Quad
			eventa[14] = AddStaticVehicleEx(471,-2534.12304688,-1476.22656250,360.14782715,133.99475098,126,126,15); //Quad
			Relly1[2] = CreateDynamicObject(983,-2523.78881836,-1469.68176270,360.49868774,0.00000000,0.00000000,43.99279785); //object(fenceshit3) (12)
			Relly1[3] = CreateDynamicObject(984,-2526.00292969,-1476.49707031,360.16143799,1.99401855,0.00000000,313.99475098); //object(fenceshit2) (3)
			ddrive[4] = CreateDynamicObject(984,-2530.68457031,-1471.87695312,360.16143799,1.98852539,0.00000000,313.98925781); //object(fenceshit2) (4)
			Relly1[0] = CreateDynamicObject(983,-2533.10839844,-1478.90332031,359.99868774,0.00000000,0.00000000,45.99523926); //object(fenceshit3) (9)
			new str[122];
   			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Quad "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);
		}
		if(ide == 13)
		{
		    new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Sanchez "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			event = 13;
			slotovi = 15;
			eventa[0] = AddStaticVehicleEx(468,-2534.79980469,-1481.12329102,360.14608765,133.99475098,116,116,15); //Sanchez
			eventa[1] = AddStaticVehicleEx(468,-2535.92871094,-1479.94042969,360.14978027,133.99475098,-1,3,15); //Sanchez
			eventa[2] = AddStaticVehicleEx(468,-2537.04492188,-1478.78417969,360.14898682,133.99475098,6,3,15); //Sanchez
			eventa[3] = AddStaticVehicleEx(468,-2539.26831055,-1481.36853027,359.83773804,133.99475098,75,3,15); //Sanchez
			eventa[4] = AddStaticVehicleEx(468,-2538.10986328,-1482.52404785,359.77017212,133.99475098,7,3,15); //Sanchez
			eventa[5] = AddStaticVehicleEx(468,-2536.99609375,-1483.62792969,359.75085449,133.99475098,118,118,15); //Sanchez
			eventa[6] = AddStaticVehicleEx(468,-2535.83276367,-1484.62622070,359.84020996,133.99475098,-1,-1,15); //Sanchez
			eventa[7] = AddStaticVehicleEx(468,-2541.21679688,-1483.66174316,359.46044922,137.99475098,125,3,15); //Sanchez
			eventa[8] = AddStaticVehicleEx(468,-2540.00439453,-1484.61694336,359.39511108,135.99475098,65,3,15); //Sanchez
			eventa[9] = AddStaticVehicleEx(468,-2538.82421875,-1485.70410156,359.35482788,135.99426270,7,3,15); //Sanchez
			eventa[10] = AddStaticVehicleEx(468,-2537.62670898,-1486.76220703,359.44155884,139.99475098,6,3,15); //Sanchez
			eventa[11] = AddStaticVehicleEx(468,-2540.59887695,-1488.14636230,359.19561768,135.99426270,1,3,15); //Sanchez
			eventa[12] = AddStaticVehicleEx(468,-2542.09912109,-1487.14697266,359.20513916,135.99426270,2,3,15); //Sanchez
			eventa[13] = AddStaticVehicleEx(468,-2543.27368164,-1486.19885254,359.26342773,135.99426270,3,3,15); //Sanchez
			eventa[14] = AddStaticVehicleEx(468,-2539.20703125,-1489.23535156,359.26757812,135.99426270,-1,-1,15); //Sanchez					SendClientMessageToAll(-1,"Event ~Sanchez race~ pokrenut! Broj mesta na eventu je: 10!  Da se pridruzite kucajte \"/trka\"");
			Relly1[0] = CreateDynamicObject(983,-2533.97143555,-1479.44396973,359.99868774,0.00000000,356.00000000,47.98974609); //object(fenceshit3) (10)
			Relly1[0] = CreateDynamicObject(983,-2542.24096680,-1488.85595703,358.99868774,0.00000000,0.00000000,51.99523926); //object(fenceshit3) (11)
			Relly1[2] = CreateDynamicObject(984,-2540.54199219,-1482.04687500,359.41143799,5.99853516,0.00000000,317.99926758); //object(fenceshit2) (1)
			Relly1[3] = CreateDynamicObject(984,-2535.64355469,-1486.29101562,359.41143799,5.99853516,0.00000000,317.99377441); //object(fenceshit2) (2)
		}
		if(ide == 14)
		{
			//SCM(playerid, SVETLOPLAVA, "Karting race event pokrenut");
			event = 14;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Karting "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(571,-2274.97094727,2284.22998047,4.15249538,0.00000000,3,1,15); //Kart
			eventa[1] = AddStaticVehicleEx(571,-2273.16577148,2284.14306641,4.15249538,0.00000000,1,22,15); //Kart
			eventa[2] = AddStaticVehicleEx(571,-2271.26660156,2284.11791992,4.15249538,0.00000000,-1,22,15); //Kart
			eventa[3] = AddStaticVehicleEx(571,-2267.64428711,2284.14819336,4.15249538,0.00000000,125,22,15); //Kart
			eventa[4] = AddStaticVehicleEx(571,-2259.02343750,2284.18652344,4.15249538,0.00000000,6,22,15); //Kart
			eventa[5] = AddStaticVehicleEx(571,-2257.12963867,2284.21289062,4.15249538,0.00000000,125,22,15); //Kart
			eventa[6] = AddStaticVehicleEx(571,-2255.24511719,2284.12915039,4.15249538,0.00000000,3,22,15); //Kart
			eventa[7] = AddStaticVehicleEx(571,-2253.43725586,2284.16113281,4.15249538,0.00000000,-1,-1,15); //Kart
			eventa[8] = AddStaticVehicleEx(571,-2251.55102539,2284.17822266,4.15249538,0.00000000,1,1,15); //Kart
			eventa[9] = AddStaticVehicleEx(571,-2249.73437500,2284.16333008,4.15249538,0.00000000,6,22,15); //Kart
			eventa[10] = AddStaticVehicleEx(571,-2262.12670898,2284.16723633,4.15249538,0.00000000,2,22,15); //Kart
			eventa[11] = AddStaticVehicleEx(571,-2265.77563477,2284.16528320,4.15249538,0.00000000,3,22,15); //Kart
			eventa[12] = AddStaticVehicleEx(571,-2260.62597656,2284.22509766,4.15249538,0.00000000,2,22,15); //Kart
			eventa[13] = AddStaticVehicleEx(571,-2269.64355469,2284.13769531,4.15249538,0.00000000,125,22,15); //Kart
			eventa[14] = AddStaticVehicleEx(571,-2263.87597656,2284.18066406,4.15249538,0.00000000,2,22,15); //Kart
			KartO[0] = CreateDynamicObject(982,-2262.36132812,2286.95800781,3.75376797,0.00000000,0.00000000,90.00000000); //object(fenceshit) (7)
			KartO[1] = CreateDynamicObject(982,-2262.16992188,2282.96191406,4.25376797,0.00000000,0.00000000,90.00000000); //object(fenceshit) (8)
			KartO[2] = CreateDynamicObject(983,-2275.98730469,2285.66210938,4.15341568,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (13)
			KartO[3] = CreateDynamicObject(983,-2248.48339844,2286.03906250,4.15341568,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (14)
		}
		if(ide == 15)
		{
			//SCM(playerid, SVETLOPLAVA, "Lavirint event pokrenut");
			event = 15;
			slotovi = 15;
			SendClientMessageToAll(GREEN,"Event ~Lavirint~ pokrenut! Broj mesta na eventu je: 15!  Da se pridruzite kucajte \"/trka\"");
		}
		if(ide == 16)
		{
			//SCM(playerid, SVETLOPLAVA, "Morski race event pokrenut");
			event = 16;
			slotovi = 15;
			new str[122];
			lsdok[2] = CreateDynamicObject(10402,714.23864746,-3311.00585938,15.64466190,0.00000000,0.00000000,0.00000000); //object(hc_secfence_sfs) (1)
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Morski "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(411,682.98284912,-3370.13720703,14.43459988,0.00000000,126,126,10000); //Infernus
			eventa[1] = AddStaticVehicleEx(411,683.15093994,-3360.36987305,14.43459988,0.00000000,6,6,15); //Infernus
			eventa[2] = AddStaticVehicleEx(411,725.32904053,-3367.30419922,14.43459988,0.00000000,126,126,10000); //Infernus
			eventa[3] = AddStaticVehicleEx(411,725.40264893,-3357.23388672,14.43459988,0.00000000,6,6,10000); //Infernus
			eventa[4] = AddStaticVehicleEx(411,725.51147461,-3377.30273438,14.43459988,0.00000000,86,86,10000); //Infernus
			eventa[5] = AddStaticVehicleEx(411,725.54089355,-3387.05273438,14.43459988,0.00000000,3,3,10000); //Infernus
			eventa[6] = AddStaticVehicleEx(411,725.64465332,-3397.06298828,14.43459988,0.00000000,140,150,10000); //Infernus
			eventa[7] = AddStaticVehicleEx(411,725.70996094,-3407.07275391,14.43459988,0.00000000,22,22,10000); //Infernus
			eventa[8] = AddStaticVehicleEx(411,725.75402832,-3417.15063477,14.43459988,0.00000000,53,53,10000); //Infernus
			eventa[9] = AddStaticVehicleEx(411,725.42443848,-3427.17211914,14.43459988,0.00000000,61,61,10000); //Infernus
			eventa[10] = AddStaticVehicleEx(411,683.19812012,-3380.13647461,14.43459988,0.00000000,86,86,10000); //Infernus
			eventa[11] = AddStaticVehicleEx(411,683.16693115,-3390.14111328,14.43459988,0.00000000,3,3,10000); //Infernus
			eventa[12] = AddStaticVehicleEx(411,683.14855957,-3400.14257812,14.43459988,0.00000000,14,15,10000); //Infernus
			eventa[13] = AddStaticVehicleEx(411,683.19580078,-3410.14086914,14.43459988,0.00000000,22,22,10000); //Infernus
			eventa[14] = AddStaticVehicleEx(411,683.34118652,-3420.14062500,14.43459988,0.00000000,53,53,10000); //Infernus
		}
		if(ide == 17)
		{
			//SCM(playerid, SVETLOPLAVA, "MC vrh event pokrenut");
			event = 17;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"MC Vrh "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(468,-2394.57934570,-2176.03369141,33.04906082,173.99597168,44,44,15); //Sanchez
			eventa[1] = AddStaticVehicleEx(468,-2406.28491211,-2170.23974609,33.04906082,173.99969482,86,86,15); //Sanchez
			eventa[2] = AddStaticVehicleEx(468,-2397.83081055,-2170.77294922,33.04906082,173.99597168,53,53,15); //Sanchez
			eventa[3] = AddStaticVehicleEx(468,-2394.50488281,-2170.40966797,33.04906082,173.99597168,53,53,15); //Sanchez
			eventa[4] = AddStaticVehicleEx(468,-2390.49316406,-2170.24658203,33.04906082,173.99597168,117,117,15); //Sanchez
			eventa[5] = AddStaticVehicleEx(468,-2402.44506836,-2170.68432617,33.04906082,173.99597168,-1,-1,15); //Sanchez
			eventa[6] = AddStaticVehicleEx(468,-2390.35546875,-2175.62207031,33.04906082,173.99597168,22,22,15); //Sanchez
			eventa[7] = AddStaticVehicleEx(468,-2398.04833984,-2175.97265625,33.04906082,173.99597168,3,3,15); //Sanchez
			eventa[8] = AddStaticVehicleEx(468,-2402.16894531,-2176.11840820,33.04906082,173.99597168,106,106,15); //Sanchez
			eventa[9] = AddStaticVehicleEx(468,-2394.88647461,-2180.71191406,33.04906082,173.99597168,1,1,15); //Sanchez
			eventa[10] = AddStaticVehicleEx(468,-2406.33911133,-2176.39965820,33.04906082,173.99597168,106,106,15); //Sanchez
			eventa[11] = AddStaticVehicleEx(468,-2398.64306641,-2180.94140625,33.04906082,173.99597168,126,126,15); //Sanchez
			eventa[12] = AddStaticVehicleEx(468,-2390.78198242,-2180.64355469,33.04906082,173.99597168,6,6,15); //Sanchez
			eventa[13] = AddStaticVehicleEx(468,-2406.14111328,-2181.05834961,33.04906082,173.99597168,44,44,15); //Sanchez
			eventa[14] = AddStaticVehicleEx(468,-2402.56445312,-2180.40747070,33.04906082,173.99597168,13,13,15); //Sanchez
			lsdok[2] = CreateDynamicObject(983,-2376.54467773,-2196.51538086,33.02426147,0.00000000,0.00000000,26.00000000); //object(fenceshit3) (15)
		}
		if(ide == 18)
		{
			//SCM(playerid, SVETLOPLAVA, "NRG race event pokrenut");
			event = 18;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"NRG-500 "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			lsdok[2] = CreateDynamicObject(984,1409.36511230,-1323.84814453,8.20035934,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
			eventa[0] = AddStaticVehicleEx(522,1407.05566406,-1304.55920410,8.62742138,234.00000000,-1,-1,15); //NRG-500
			eventa[1] = AddStaticVehicleEx(522,1406.73156738,-1306.24865723,8.55903339,233.99780273,6,6,15); //NRG-500
			eventa[2] = AddStaticVehicleEx(522,1406.64489746,-1307.86218262,8.54613972,233.99780273,126,126,15); //NRG-500
			eventa[3] = AddStaticVehicleEx(522,1406.79101562,-1309.70349121,8.54909325,233.99780273,3,3,15); //NRG-500
			eventa[4] = AddStaticVehicleEx(522,1406.65026855,-1311.71191406,8.42255402,233.99780273,86,86,15); //NRG-500
			eventa[5] = AddStaticVehicleEx(522,1406.62194824,-1313.89111328,8.32170010,233.99780273,1,1,15); //NRG-500
			eventa[6] = AddStaticVehicleEx(522,1406.66931152,-1316.00305176,8.27493000,233.99780273,53,53,15); //NRG-500
			eventa[7] = AddStaticVehicleEx(522,1413.95178223,-1304.41625977,9.27403164,125.99743652,108,108,15); //NRG-500
			eventa[8] = AddStaticVehicleEx(522,1414.02844238,-1306.07861328,9.14538479,123.99279785,22,22,15); //NRG-500
			eventa[9] = AddStaticVehicleEx(522,1414.00695801,-1307.54724121,9.01398277,123.99279785,111,111,15); //NRG-500
			eventa[10] = AddStaticVehicleEx(522,1413.96142578,-1309.40539551,8.96673965,125.99279785,44,44,15); //NRG-500
			eventa[11] = AddStaticVehicleEx(522,1413.93920898,-1311.27404785,9.08499908,125.99121094,43,43,15); //NRG-500
			eventa[12] = AddStaticVehicleEx(522,1414.08666992,-1313.25109863,9.17232704,125.99121094,30,30,15); //NRG-500
			eventa[13] = AddStaticVehicleEx(522,1414.08752441,-1315.13452148,9.25588799,125.99121094,1,1,15); //NRG-500
			eventa[14] = AddStaticVehicleEx(468,-2402.56445312,-2180.40747070,33.04906082,173.99597168,13,13,15); //Sanchez
			Relly1[2] = CreateDynamicObject(983,-2376.54467773,-2196.51538086,33.02426147,0.00000000,0.00000000,26.00000000); //object(fenceshit3) (15)
		}
		if(ide == 19)
		{
			SCM(playerid, SVETLOPLAVA, "Guranje Monsterima event pokrenut");
			event = 19;
			slotovi = 13;
			new str[122];
			beachhell[1] = CreateDynamicObject(10402,-1643.39648438,1079.75378418,69.11244965,0.00000000,0.00000000,0.00000000); //object(hc_secfence_sfs) (1)
			beachhell[2] = CreateDynamicObject(10402,-1640.98132324,1015.06427002,69.11244965,0.00000000,0.00000000,0.00000000); //object(hc_secfence_sfs) (2)
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Monster "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(444,-1624.15380859,1010.61517334,69.32795715,0.00000000,53,6,15); //Monster
			eventa[1] = AddStaticVehicleEx(444,-1629.09155273,1010.68896484,69.32795715,0.00000000,-1,3,15); //Monster
			eventa[2] = AddStaticVehicleEx(444,-1634.61376953,1010.75756836,69.32795715,0.00000000,22,1,15); //Monster
			eventa[3] = AddStaticVehicleEx(444,-1640.11669922,1010.57666016,69.32795715,0.00000000,3,6,15); //Monster
			eventa[4] = AddStaticVehicleEx(444,-1645.92846680,1010.62542725,69.32795715,0.00000000,126,1,15); //Monster
			eventa[5] = AddStaticVehicleEx(444,-1651.47412109,1010.69335938,69.32795715,0.00000000,6,53,15); //Monster
			eventa[6] = AddStaticVehicleEx(444,-1657.19409180,1010.51348877,69.32795715,0.00000000,86,3,15); //Monster
			eventa[7] = AddStaticVehicleEx(444,-1657.77136230,1084.13513184,69.32795715,180.00000000,53,3,15); //Monster
			eventa[8] = AddStaticVehicleEx(444,-1652.02709961,1084.08105469,69.32795715,180.00000000,-1,1,15); //Monster
			eventa[9] = AddStaticVehicleEx(444,-1646.79309082,1084.05810547,69.32795715,180.00000000,22,53,15); //Monster
			eventa[10] = AddStaticVehicleEx(444,-1640.98620605,1084.05310059,69.32795715,180.00000000,3,1,15); //Monster
			eventa[11] = AddStaticVehicleEx(444,-1635.27319336,1084.07080078,69.32795715,180.00000000,126,15,15); //Monster
			eventa[12] = AddStaticVehicleEx(444,-1629.51989746,1084.03259277,69.32795715,180.00000000,6,3,15); //Monster
			eventa[13] = AddStaticVehicleEx(444,-1623.99438477,1084.20214844,69.32795715,180.00000000,86,6,15); //Monster
		}
		if(ide == 20)
		{
			//SCM(playerid, SVETLOPLAVA, "Drift Parking event pokrenut");
			event = 20;
			new str[122];
			slotovi = 9;
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Parking Drift "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(562,2312.61328125,1386.84643555,42.57386017,0.00000000,-1,1,15); //Elegy
			eventa[1] = AddStaticVehicleEx(562,2309.11328125,1386.73974609,42.57386017,0.00000000,1,1,15); //Elegy
			eventa[2] = AddStaticVehicleEx(562,2305.59399414,1386.88305664,42.57386017,0.00000000,22,1,15); //Elegy
			eventa[3] = AddStaticVehicleEx(562,2302.32763672,1386.78527832,42.57386017,0.00000000,6,1,15); //Elegy
			eventa[4] = AddStaticVehicleEx(562,2298.83837891,1386.66259766,42.57386017,0.00000000,53,1,15); //Elegy
			eventa[5] = AddStaticVehicleEx(562,2295.84765625,1386.83715820,42.57386017,0.00000000,3,1,15); //Elegy
			eventa[6] = AddStaticVehicleEx(562,2292.28833008,1386.80957031,42.57386017,0.00000000,86,1,15); //Elegy
			eventa[7] = AddStaticVehicleEx(562,2289.16552734,1386.70703125,42.57386017,0.00000000,126,1,15); //Elegy
			eventa[8] = AddStaticVehicleEx(562,2285.75170898,1386.88586426,42.57386017,0.00000000,108,1,15); //Elegy
			eventa[9] = AddStaticVehicleEx(562,2282.55297852,1386.86083984,42.57386017,0.00000000,117,1,15); //Elegy
		}
		if(ide == 21)
		{
			event = 21;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Brodovi "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(430,-794.52832031,1836.86572266,0.00000000,282.00000000,1,3,15); //Predator
			eventa[1] = AddStaticVehicleEx(430,-795.96966553,1845.51171875,0.00000000,281.99707031,-1,86,15); //Predator
			eventa[2] = AddStaticVehicleEx(430,-797.74121094,1855.62329102,0.00000000,281.99707031,53,6,15); //Predator
			eventa[3] = AddStaticVehicleEx(430,-799.42510986,1864.21215820,0.00000000,281.99707031,111,126,15); //Predator
			eventa[4] = AddStaticVehicleEx(430,-809.19274902,1916.96630859,0.00000000,281.99707031,1,30,15); //Predator
			eventa[5] = AddStaticVehicleEx(430,-800.99652100,1872.30065918,0.00000000,281.99707031,6,53,15); //Predator
			eventa[6] = AddStaticVehicleEx(430,-802.17150879,1879.47033691,0.00000000,281.99707031,1,22,15); //Predator
			eventa[7] = AddStaticVehicleEx(430,-803.58673096,1886.56933594,0.00000000,281.99707031,1,93,15); //Predator
			eventa[8] = AddStaticVehicleEx(430,-805.10260010,1894.17419434,0.00000000,281.99707031,1,44,15); //Predator
			eventa[9] = AddStaticVehicleEx(430,-806.17559814,1902.11425781,0.00000000,281.99707031,1,3,15); //Predator
			eventa[10] = AddStaticVehicleEx(430,-807.79132080,1908.94299316,0.00000000,281.99707031,1,-1,15); //Predator
			eventa[11] = AddStaticVehicleEx(430,-810.75817871,1924.58471680,0.00000000,281.99707031,1,15,15); //Predator
			eventa[12] = AddStaticVehicleEx(430,-812.00134277,1931.98388672,0.00000000,281.99707031,1,115,15); //Predator
			eventa[13] = AddStaticVehicleEx(430,-813.46551514,1939.74926758,0.00000000,281.99707031,-1,114,15); //Predator
			eventa[14] = AddStaticVehicleEx(430,-815.00476074,1948.88891602,0.00000000,281.99707031,1,3,15); //Predator
			beachhell[1] = CreateDynamicObject(10402,-789.92980957,1866.00939941,1.50000000,0.00000000,0.00000000,280.00000000); //object(hc_secfence_sfs) (1)
			beachhell[2] = CreateDynamicObject(10402,-802.55426025,1931.13305664,0.00000000,0.00000000,0.00000000,279.99755859); //object(hc_secfence_sfs) (2)
			Relly1[1] = CreateDynamicObject(9090,-580.14532471,1646.17297363,-17.05887222,0.00000000,0.00000000,224.00000000); //object(vgeferryland) (1)
			Relly1[2] = CreateDynamicObject(9090,-854.75262451,1605.39453125,-17.05887222,0.00000000,0.00000000,99.99475098); //object(vgeferryland) (2)
		}
		if(ide == 22)
		{
			event = 22;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Beach Hell "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(424,-2932.94042969,431.37695312,3.22934198,127.99621582,1,1,15); //BF Injection
			eventa[1] = AddStaticVehicleEx(424,-2949.27001953,451.96420288,2.73959994,181.99597168,86,86,15); //BF Injection
			eventa[2] = AddStaticVehicleEx(424,-2933.91845703,441.36572266,3.38814497,127.99621582,106,106,15); //BF Injection
			eventa[3] = AddStaticVehicleEx(424,-2934.17578125,446.73413086,3.51826096,127.99621582,3,3,15); //BF Injection
			eventa[4] = AddStaticVehicleEx(424,-2933.57226562,436.44824219,3.29934263,127.99621582,-1,-1,15); //BF Injection
			eventa[5] = AddStaticVehicleEx(424,-2934.34057617,451.75662231,3.64666033,127.99621582,6,6,15); //BF Injection
			eventa[6] = AddStaticVehicleEx(424,-2944.64770508,452.09286499,2.98346424,179.99597168,126,126,15); //BF Injection
			eventa[7] = AddStaticVehicleEx(424,-2955.58203125,426.55499268,2.61594701,241.71496582,43,43,15); //BF Injection
			eventa[8] = AddStaticVehicleEx(424,-2956.01464844,430.99752808,2.44748569,233.57720947,53,53,15); //BF Injection
			eventa[9] = AddStaticVehicleEx(424,-2932.21289062,426.56250000,3.19972610,127.99621582,22,22,15); //BF Injection
			eventa[10] = AddStaticVehicleEx(424,-2940.48144531,452.07855225,3.20014572,179.99621582,6,3,15); //BF Injection
			eventa[11] = AddStaticVehicleEx(424,-2956.25610352,451.30090332,2.19502258,229.43157959,53,6,15); //BF Injection
			eventa[12] = AddStaticVehicleEx(424,-2956.94921875,446.62106323,2.12028742,228.93737793,1,126,15); //BF Injection
			eventa[13] = AddStaticVehicleEx(424,-2956.28613281,436.09735107,2.28989005,229.78314209,1,22,15); //BF Injection
			eventa[14] = AddStaticVehicleEx(424,-2956.67407227,441.61233521,2.20430231,228.93310547,1,3,15); //BF Injection
			beachhell[1] = CreateDynamicObject(10402,-2959.59985352,449.86135864,1.4,0.00000000,358.00000000,273.99951172); //object(hc_secfence_sfs) (1)
			beachhell[2] = CreateDynamicObject(982,-2942.85644531,415.48049927,2.5,0.00000000,0.00000000,92.00000000); //object(fenceshit) (1)
		}
		if(ide == 23)
		{
			event = 23;
			slotovi = 15;
			new str[122];
			format(str, 128, ""SPLAVA"[EVENT] "SIVA"Trka "CRVENA"Aqwa park "SIVA"uskoro pocinje! - Da se pridruzite utrci kucajte "CRVENA"/trka");
			SCMTA(-1, str);

			eventa[0] = AddStaticVehicleEx(411,-201.0635,3954.5073,13.7655,92.4587,2,2,15); // infernus
			eventa[1] = AddStaticVehicleEx(411,-201.2119,3957.9634,13.7655,92.4587,2,2,15); // infernus
			eventa[2] = AddStaticVehicleEx(411,-201.3530,3961.2517,13.7711,92.4587,2,2,15); // infernus
			eventa[3] = AddStaticVehicleEx(411,-201.4958,3964.5776,13.7711,92.4587,2,2,15); // infernus
			eventa[4] = AddStaticVehicleEx(411,-201.6460,3968.0784,13.7711,92.4587,2,2,15); // infernus
			eventa[5] = AddStaticVehicleEx(411,-201.8146,3972.0066,13.7754,92.4587,2,2,15); // infernus
			eventa[6] = AddStaticVehicleEx(411,-201.7630,3972.1348,13.7671,89.5457,2,2,15); // infernus
			eventa[7] = AddStaticVehicleEx(411,-201.7355,3975.6047,13.7716,89.5457,2,2,15); // infernus
			eventa[8] = AddStaticVehicleEx(522,-219.4808,3940.8870,13.6121,359.3438,2,2,15); // nrg
			eventa[9] = AddStaticVehicleEx(522,-221.4953,3940.9097,13.6238,359.3467,2,2,15); // nrg
			eventa[10] = AddStaticVehicleEx(522,-223.6267,3940.9336,13.6294,359.3437,2,2,15); // nrg
			eventa[11] = AddStaticVehicleEx(522,-226.9694,3940.9714,13.6294,359.3438,2,2,15); // nrg
			eventa[12] = AddStaticVehicleEx(522,-228.8019,3940.8604,13.6312,359.3439,2,2,15); // nrg
			eventa[13] = AddStaticVehicleEx(522,-230.7228,3940.8823,13.6312,359.3439,2,2,15); // nrg
			eventa[14] = AddStaticVehicleEx(522,-238.3575,3940.9695,13.6388,359.3405,2,2,15); // nrg

		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(324)
{
	if(!response) return 1;
	new i = PlayerInfo[playerid][pPosedovanjePlovila];
	if(PlayerInfo[playerid][pPosedovanjePlovila] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes plovilo!");
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) != PlovilaInfo[i][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
			new z[5]; if(PlovilaInfo[i][plZakljucan] == 1) z = "Da"; else z = "Ne";
			SCM(playerid,-1,""SPLAVA"||-------------------------------------------------------------------------------------------||");
			new string[128];
			format(string, charsmax(string), ""SPLAVA"Vlasnik plovila: "SRWBOJA"%s | "SPLAVA"ID Plovila: "SRWBOJA"%d | "SPLAVA"Zakljucano: "BELA"%s",PlovilaInfo[i][plVlasnik],PlovilaInfo[i][plID],z);
			SCM(playerid,-1, string);
			format(string, charsmax(string), ""SPLAVA"Model: "BELA"%s | "SPLAVA"Cena: "BELA"%d | "SPLAVA"Boja: "BELA"%d/%d",ImenaVozila[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400], PlovilaInfo[i][plCijena], PlovilaInfo[i][plBoja1],PlovilaInfo[i][plBoja2]);
			SCM(playerid,-1, string);
			SCM(playerid,-1,""SPLAVA"||-------------------------------------------------------------------------------------------||");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) != PlovilaInfo[i][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(PlovilaInfo[i][plZakljucan] == 0)
			{
				PlovilaInfo[i][plZakljucan] = 1; SacuvajPlovila(i);
				GameTextForPlayer(playerid, "~w~Plovilo ~r~zakljucano", 5000, 3);
			}
			else
			{
				PlovilaInfo[i][plZakljucan] = 0; SacuvajPlovila(i);
				GameTextForPlayer(playerid, "~w~Plovilo ~g~otkljucano", 5000, 3);
			}
		}
		case 2:
		{
			new Float:Poz[3]; PosaoGPS[playerid] = 1;
			GetVehiclePos(PlovilaInfo[i][plID], Poz[0], Poz[1], Poz[2]);
			SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vase plovilo je oznaceno "SRWBOJA"crveno "BELA"na mapi!");
		}
		case 3:
		{
			new Float:PozAS[4], Float:HP;
			if(GetPlayerVehicleID(playerid) != PlovilaInfo[i][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
			if(HP < 800.0) return SCM(playerid,-1, ""SIVA"Motor vam je previse ostecen, ne mozete ga parkirati!");
			GetVehiclePos(PlovilaInfo[i][plID], PozAS[0], PozAS[1], PozAS[2]);
			GetVehicleZAngle(PlovilaInfo[i][plID], PozAS[3]);
			PlovilaInfo[i][plPozX] = PozAS[0]; PlovilaInfo[i][plPozY] = PozAS[1]; PlovilaInfo[i][plPozZ] = PozAS[2];
			PlovilaInfo[i][plPozA] = PozAS[3]; DestroyVehicle(PlovilaInfo[i][plID]);
			PlovilaInfo[i][plSpawn] = 0;
			PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel],PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA],PlovilaInfo[i][plBoja1],PlovilaInfo[i][plBoja2],30000);
			SCM(playerid,-1,"[V:RPG] "ZELENA"Plovilo je uspesno parkirano!");
			SacuvajPlovila(i); RTC(PlovilaInfo[i][plID]);
		}
		case 4:
		{
			if(GetPlayerVehicleID(playerid) != PlovilaInfo[i][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,326,DIALOG_STYLE_INPUT,""BELA"Boja Plovila",""SPLAVA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"SPLAVA"Cena Boje: 500$","Promeni","Izlaz");
		}
		case 5:
		{
			new string[280];
			if(GetPlayerVehicleID(playerid) != PlovilaInfo[i][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(!IsPlayerInRangeOfPoint(playerid, 50.0, 2580.6682,-2240.9468,-0.2188)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na pijaci polovnih plovila!");
			format(string,sizeof(string), ""BELA"Prodaja plovila drzavi\n\n"SPLAVA"Dali ste sigurni da zelite da prodate plovilo drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", PlovilaInfo[i][plCijena]/2);
			SPD(playerid, 328, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja plovila drzavi", string, "Prodaj", "Izlaz");
		}
		case 6:
		{
			if(GetPlayerVehicleID(playerid) != PlovilaInfo[i][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid, 334, DIALOG_STYLE_INPUT, "Prodaja plovila", ""VARADERO"Unesite ID igraca kome zelite da prodate plovilo...", "Potvrdi", "Odustani");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(334)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjePlovila] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes plovilo!");
	if(response)
	{
		new kid, string[128], Float:Poz[3];
		if(sscanf(inputtext, "u", kid)) return SPD(playerid, 334, DIALOG_STYLE_INPUT, "Prodaja plovila", ""VARADERO"Unesite ID igraca kome zelite da prodate plovilo...", "Potvrdi", "Odustani");
		if(!IsPlayerConnected(kid)) return SPD(playerid, 334, DIALOG_STYLE_INPUT, "Prodaja plovila", ""VARADERO"Unesite ID igraca kome zelite da prodate plovilo...", "Potvrdi", "Odustani");
		if(GetPlayerVehicleID(playerid) != PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
		GetPlayerPos(kid, Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, ""SIVA"Igrac nije u vasoj blizini!");
		if(kid == playerid) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sami sebi ponuditi prodaju!");
		KomeProdaje[playerid] = kid; PonudioIgrac[kid] = playerid;
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vaseg plovila za koliko zelite da ga prodate...");
		SPD(playerid, 332, DIALOG_STYLE_INPUT, "Prodaja plovila", string, "Potvrdi", "Odustani");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(332)
{
	if(PlayerInfo[playerid][pPosedovanjePlovila] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes plovilo!");
	if(response)
	{
		new cena, string[128];
		if(PlayerInfo[KomeProdaje[playerid]][pLevel] < 7) return SCM(playerid,-1,""SIVA"Igrac nije level 7+!");
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vaseg plovila za koliko zelite da ga prodate...");
		if(sscanf(inputtext, "i", cena)) return SPD(playerid, 332, DIALOG_STYLE_INPUT, "Prodaja plovila", string, "Potvrdi", "Odustani");
		if(cena < 0 || cena > 10000000) return SPD(playerid, 332, DIALOG_STYLE_INPUT, "Prodaja plovila", string, "Potvrdi", "Odustani");
		CijenaProdaje[playerid] = cena; CijenaProdaje[KomeProdaje[playerid]] = cena;
		format(string, charsmax(string), ""VARADERO"Ponudili ste plovilo igracu %s za %d$ novca!",GetName(KomeProdaje[playerid]), cena);
		SCM(playerid,-1, string);
		format(string, charsmax(string), ""VARADERO"Igrac %s vam je ponudio svoje plovilo za %d$!",GetName(playerid),cena);
		SCM(KomeProdaje[playerid],-1,string);
		format(string,sizeof(string), ""VARADERO"Igrac %s vam je ponudio svoje plovilo za %d$...\n"VARADERO"Kliknite na prihvati ukoliko zelite da prihvatite prodaju", GetName(playerid), cena);
		SPD(KomeProdaje[playerid], 330, DIALOG_STYLE_MSGBOX, "Prodaja plovila", string, "Prihvati", "Odustani");
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od prodaje!");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(330)
{
	if(response)
	{
		new id = PonudioIgrac[playerid];
		if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Vi niste level 7+!");
		if(CijenaProdaje[playerid] <= 0) return SCM(playerid,-1,""SIVA"Prodavac nije odredio cenu bicikla!");
		if(PlayerInfo[playerid][pNovacDzep] < CijenaProdaje[playerid]) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		if(!IsPlayerConnected(PonudioIgrac[playerid])) return SCM(playerid, -1, ""SIVA"Igrac koji vam je ponudio biciklo vise nije online!");
		if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes plovilo!");
		if(PlayerInfo[id][pPosedovanjePlovila] == -1) return SCM(playerid,-1,""SIVA"Taj igrac nema plovilo!");
		PlayerInfo[playerid][pPosedovanjePlovila] = PlayerInfo[id][pPosedovanjePlovila];
		PlayerInfo[id][pPosedovanjePlovila] = -1;
		strmid(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
		g_NovacMinus(playerid, CijenaProdaje[playerid]); g_NovacPlus(id, CijenaProdaje[playerid]);
		new string[128];
		format(string, charsmax(string), ""SRWBOJA"Uspesno ste kupili plovilo od igraca %s!",GetName(id));
		SCM(playerid,-1,string);
		format(string, charsmax(string), ""SRWBOJA"Uspesno ste prodali plovilo igracu %s!",GetName(playerid));
		SCM(id,-1, string);
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
		SavePlayer(playerid); SavePlayer(id); SacuvajPlovila(PlayerInfo[playerid][pPosedovanjePlovila]);
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od kupovine plovila!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(328)
{
	if(!response) return 1;
	new i = PlayerInfo[playerid][pPosedovanjePlovila];
	if(PlayerInfo[playerid][pPosedovanjePlovila] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes plovilo!");
	if(GetPlayerVehicleID(playerid) != PlovilaInfo[i][plID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom plovilu!");
	if(response)
	{
		new poz = random(sizeof(RandomPlovilaPijacaSpawn));
		PlovilaInfo[i][plPozX] = RandomPlovilaPijacaSpawn[poz][0];
		PlovilaInfo[i][plPozY] = RandomPlovilaPijacaSpawn[poz][1];
		PlovilaInfo[i][plPozZ] = RandomPlovilaPijacaSpawn[poz][2];
		PlovilaInfo[i][plPozA] = RandomPlovilaPijacaSpawn[poz][3];
		strmid(PlovilaInfo[i][plVlasnik], "Niko", 0, strlen("Niko"), 999);
		PlovilaInfo[i][plImaVlasnika] = 0; PlovilaInfo[i][plZakljucan] = 0;
		DestroyVehicle(PlovilaInfo[i][plID]);
		PlovilaInfo[i][plSpawn] = 0;
		PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel],PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA],PlovilaInfo[i][plBoja1],PlovilaInfo[i][plBoja2],30000);
		SacuvajPlovila(i); g_NovacPlus(playerid, PlovilaInfo[i][plCijena]/2);
		RTC(PlovilaInfo[i][plID]);
		new string[128];
		format(string, charsmax(string), ""ZELENA"[V:RPG] "BELA"Prodali ste vase plovilo na pijacu za %d$!",PlovilaInfo[i][plCijena]/2);
		SCM(playerid,-1, string);
		PlayerInfo[playerid][pPosedovanjePlovila] = -1;
		// Sacuvaj
		SavePlayer(playerid);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(326)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjePlovila] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes plovilo!");
	new i = PlayerInfo[playerid][pPosedovanjePlovila], boja[2];
	if(response)
	{
		if(sscanf(inputtext,"ii",boja[0],boja[1])) return SPD(playerid,326,DIALOG_STYLE_INPUT,""BELA"Boja Plovila",""SPLAVA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"SPLAVA"Cena Boje: 500$","Promeni","Izlaz");
		if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca (500$)!");
		if(boja[0] < 0 || boja[0] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze iciispod 1 i iznad 255 !");
		if(boja[1] < 0 || boja[1] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		PlovilaInfo[i][plBoja1] = boja[0]; PlovilaInfo[i][plBoja2] = boja[1];
		g_NovacMinus(playerid,500); ChangeVehicleColor(PlovilaInfo[i][plID],boja[0],boja[1]);
		SacuvajPlovila(i); SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste ofarbali vase plovilo za 500$!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(322)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes plovilo!");
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes plovilo!");
			if(PlayerInfo[playerid][pNovacDzep] < 450000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(PlovilaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), PLOVILA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomPlovilaSpawn));
					new poz1 = random(sizeof(RandomPlovilaSpawnLV));
					g_NovacMinus(playerid,450000); PlayerInfo[playerid][pPosedovanjePlovila] = i;
					PlovilaInfo[i][plModel] = 446;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1628.2141,601.0466,1.7578))
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawnLV[poz1][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawnLV[poz1][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawnLV[poz1][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawnLV[poz1][3];
                    }
                    else
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawn[poz][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawn[poz][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawn[poz][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawn[poz][3];
                    }
					PlovilaInfo[i][plBoja1] = 0; PlovilaInfo[i][plBoja2] = 0;
					PlovilaInfo[i][plImaVlasnika] = 1; PlovilaInfo[i][plZakljucan] = 1;
					PlovilaInfo[i][plCijena] = 450000;
					PlovilaInfo[i][plSpawn] = 0;
					strmid(PlovilaInfo[i][plVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel], PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA], PlovilaInfo[i][plBoja1], PlovilaInfo[i][plBoja2], 30000);
					SacuvajPlovila(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili plovilo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Plovilom mozete upravljati komandom /pl!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase plovilo se nalazi ispred salona!");
					break;
				}
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes plovilo!");
			if(PlayerInfo[playerid][pNovacDzep] < 250000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(PlovilaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), PLOVILA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomPlovilaSpawn));
					new poz1 = random(sizeof(RandomPlovilaSpawnLV));
					g_NovacMinus(playerid,250000); PlayerInfo[playerid][pPosedovanjePlovila] = i;
					PlovilaInfo[i][plModel] = 452;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1628.2141,601.0466,1.7578))
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawnLV[poz1][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawnLV[poz1][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawnLV[poz1][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawnLV[poz1][3];
                    }
                    else
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawn[poz][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawn[poz][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawn[poz][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawn[poz][3];
                    }
					PlovilaInfo[i][plBoja1] = 0; PlovilaInfo[i][plBoja2] = 0;
					PlovilaInfo[i][plImaVlasnika] = 1; PlovilaInfo[i][plZakljucan] = 1;
					PlovilaInfo[i][plCijena] = 250000;
					PlovilaInfo[i][plSpawn] = 0;
					strmid(PlovilaInfo[i][plVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel], PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA], PlovilaInfo[i][plBoja1], PlovilaInfo[i][plBoja2], 30000);
					SacuvajPlovila(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili plovilo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Plovilom mozete upravljati komandom /pl!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase plovilo se nalazi ispred salona!");
					break;
				}
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes plovilo!");
			if(PlayerInfo[playerid][pNovacDzep] < 700000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(PlovilaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), PLOVILA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomPlovilaSpawn));
					new poz1 = random(sizeof(RandomPlovilaSpawnLV));
					g_NovacMinus(playerid,700000); PlayerInfo[playerid][pPosedovanjePlovila] = i;
					PlovilaInfo[i][plModel] = 454;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1628.2141,601.0466,1.7578))
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawnLV[poz1][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawnLV[poz1][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawnLV[poz1][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawnLV[poz1][3];
                    }
                    else
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawn[poz][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawn[poz][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawn[poz][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawn[poz][3];
                    }
					PlovilaInfo[i][plBoja1] = 0; PlovilaInfo[i][plBoja2] = 0;
					PlovilaInfo[i][plImaVlasnika] = 1; PlovilaInfo[i][plZakljucan] = 1;
					PlovilaInfo[i][plCijena] = 700000;
					PlovilaInfo[i][plSpawn] = 0;
					strmid(PlovilaInfo[i][plVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel], PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA], PlovilaInfo[i][plBoja1], PlovilaInfo[i][plBoja2], 30000);
					SacuvajPlovila(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili plovilo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Plovilom mozete upravljati komandom /pl!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase plovilo se nalazi ispred salona!");
					break;
				}
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes plovilo!");
			if(PlayerInfo[playerid][pNovacDzep] < 150000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(PlovilaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), PLOVILA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomPlovilaSpawn));
					new poz1 = random(sizeof(RandomPlovilaSpawnLV));
					g_NovacMinus(playerid,150000); PlayerInfo[playerid][pPosedovanjePlovila] = i;
					PlovilaInfo[i][plModel] = 473;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1628.2141,601.0466,1.7578))
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawnLV[poz1][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawnLV[poz1][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawnLV[poz1][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawnLV[poz1][3];
                    }
                    else
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawn[poz][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawn[poz][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawn[poz][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawn[poz][3];
                    }
					PlovilaInfo[i][plBoja1] = 0; PlovilaInfo[i][plBoja2] = 0;
					PlovilaInfo[i][plImaVlasnika] = 1; PlovilaInfo[i][plZakljucan] = 1;
					PlovilaInfo[i][plCijena] = 150000;
					PlovilaInfo[i][plSpawn] = 0;
					strmid(PlovilaInfo[i][plVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel], PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA], PlovilaInfo[i][plBoja1], PlovilaInfo[i][plBoja2], 30000);
					SacuvajPlovila(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili plovilo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Plovilom mozete upravljati komandom /pl!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase plovilo se nalazi ispred salona!");
					break;
				}
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pPosedovanjePlovila] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes plovilo!");
			if(PlayerInfo[playerid][pNovacDzep] < 550000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(PlovilaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), PLOVILA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomPlovilaSpawn));
					new poz1 = random(sizeof(RandomPlovilaSpawnLV));
					g_NovacMinus(playerid,550000); PlayerInfo[playerid][pPosedovanjePlovila] = i;
					PlovilaInfo[i][plModel] = 493;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1628.2141,601.0466,1.7578))
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawnLV[poz1][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawnLV[poz1][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawnLV[poz1][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawnLV[poz1][3];
                    }
                    else
                    {
                    PlovilaInfo[i][plPozX] = RandomPlovilaSpawn[poz][0];
                    PlovilaInfo[i][plPozY] = RandomPlovilaSpawn[poz][1];
                    PlovilaInfo[i][plPozZ] = RandomPlovilaSpawn[poz][2];
                    PlovilaInfo[i][plPozA] = RandomPlovilaSpawn[poz][3];
                    }
					PlovilaInfo[i][plBoja1] = 0; PlovilaInfo[i][plBoja2] = 0;
					PlovilaInfo[i][plImaVlasnika] = 1; PlovilaInfo[i][plZakljucan] = 1;
					PlovilaInfo[i][plCijena] = 550000;
					PlovilaInfo[i][plSpawn] = 0;
					strmid(PlovilaInfo[i][plVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel], PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA], PlovilaInfo[i][plBoja1], PlovilaInfo[i][plBoja2], 30000);
					SacuvajPlovila(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili plovilo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Plovilom mozete upravljati komandom /pl!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase plovilo se nalazi ispred salona!");
					break;
				}
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(318)
{
	if(!response) return 1;
	if(response)
	{
		new kolicina;
        sscanf(inputtext, "d", kolicina);
		if(kolicina < 1 || kolicina > 5000000) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete ici ispod 1 i iznad 5M!");
		new string[256], szPlayerName[MAX_PLAYER_NAME];
		if(PlayerInfo[playerid][pNovacBanka] < kolicina) {
			format(string, charsmax(string), ""SRWBOJA"[V:RPG] "SIVA"Nemate toliko novca na racunu, imate %d$!", PlayerInfo[playerid][pNovacBanka]);
			return SCM(playerid,-1, string);
		}
        new oldstate = PlayerInfo[playerid][pNovacBanka],
            poldstate = PlayerInfo[playerid][pNovacDzep];
		PlayerInfo[playerid][pNovacBanka] -= kolicina;
        g_NovacPlus(playerid, kolicina);
		format(string, charsmax(string), "[V:RPG] "ZELENA"Podigli ste %d$ novca sa vaseg bankovnog racuna!", kolicina);
		SCM(playerid,-1, string);
        GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME-1);
        format(string, charsmax(string), "BANKA | %s | Bankomat | Banka: %d$/%d$/%d$ | Iznos %d$ | Igrac: %d$/%d$/%d$", szPlayerName, oldstate, PlayerInfo[playerid][pNovacBanka], (oldstate-PlayerInfo[playerid][pNovacBanka]), kolicina, poldstate, PlayerInfo[playerid][pNovacDzep], (poldstate-PlayerInfo[playerid][pNovacDzep]));
        Log("logs/transfer.log", string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(312)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 314, DIALOG_STYLE_LIST, ""VARADERO"GPS", "Opstina\nBurg\nBanka\nBolnica\nPolicija\nKolodvor\nAuto Skola\nTuning shop", "Odaberi", "Izlaz");
		}
		case 1:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 316, DIALOG_STYLE_LIST, ""VARADERO"GPS", "Salon Vozila\nPolovna Vozila\nSalon Motora\nPolovni Motori\nSalon Aviona\nPolovni avioni\nSalon Plovila\nPolovna Plovila\nSalon Bicikala", "Odaberi", "Izlaz");
		}
		case 2:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SetPlayerCheckpoint(playerid, -127.7330,-1649.6064,2.6780, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Luka je oznacena crveno na mapi!");
		}
		case 3:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SetPlayerCheckpoint(playerid, 1778.6904,-1694.7854,13.4660, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Vodoinstalater je oznacena crveno na mapi!");
		}
		case 4:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 2314, DIALOG_STYLE_LIST, ""VARADERO"GPS", "Hram Svetog Save\nExAdminVile\nMuzej\nJavni WC", "Odaberi", "Izlaz");
		}
		case 5:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 374, DIALOG_STYLE_LIST, ""VARADERO"GPS", "Salon Vozila\nSalon Motora\nSalon Aviona\nSalon Plovila\nPolicija\nBanka\nOpstina", "Odaberi", "Izlaz");
		}
		case 6:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 375, DIALOG_STYLE_INPUT, ""VARADERO"GPS", "Upisi adresu ((ID)) kuce", "Odaberi", "Izlaz");
		}
		case 7:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 376, DIALOG_STYLE_INPUT, ""VARADERO"GPS", "Upisi adresu ((ID)) stana", "Odaberi", "Izlaz");
		}
		case 8:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 380, DIALOG_STYLE_INPUT, ""VARADERO"GPS", "Upisi adresu ((ID)) firme", "Odaberi", "Izlaz");
		}
		case 9:
		{
			if(PosaoGPS[playerid] != 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Vec imas oznacenu lokaciju na mapi, prvo je iskljuci (/gps)!");
			SPD(playerid, 381, DIALOG_STYLE_INPUT, ""VARADERO"GPS", "Upisi adresu ((ID)) vikendice", "Odaberi", "Izlaz");
		}
		case 10:
		{
			if(PosaoGPS[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "CRVENA"Nemas aktiviran GPS!");
			DisablePlayerCheckpoint(playerid); PosaoGPS[playerid] = 0;
			SCM(playerid,-1,"[V:RPG] "VARADERO"GPS Iskljucen!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(316)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0: SetPlayerCheckpoint(playerid, 559.1175,-1262.2646,17.2422, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon auta je oznacen crveno na mapi!");
		case 1: SetPlayerCheckpoint(playerid, 1478.5558,1569.2913,10.8125, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon polovnih auta je oznacen crveno na mapi!");
		case 2: SetPlayerCheckpoint(playerid, 1296.1581,-1861.4651,13.5469, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon motora je oznacen crveno na mapi!");
		case 3: SetPlayerCheckpoint(playerid, 1269.9724,-1841.0736,13.3948, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon polovnih motora je oznacen crveno na mapi!");
		case 4: SetPlayerCheckpoint(playerid, 1885.1294,-2284.6101,13.5469, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon aviona je oznacen crveno na mapi!");
		case 5: SetPlayerCheckpoint(playerid, 385.9442,2507.5474,16.4966, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon polovnih aviona je oznacen crveno na mapi!");
		case 6: SetPlayerCheckpoint(playerid, 835.5848,-2062.0471,12.8672, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon plovila je oznacen crveno na mapi!");
		case 7: SetPlayerCheckpoint(playerid, 2581.8701,-2117.2295,1.0072, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon polovnih plovila je oznacen crveno na mapi!");
		case 8: SetPlayerCheckpoint(playerid, 1372.7928,-1886.7429,13.5024, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon bicikala je oznacen crveno na mapi!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(314)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0: SetPlayerCheckpoint(playerid, 1479.1964,-1760.3423,13.5469, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Opstina je oznacena crveno na mapi!");
		case 1: SetPlayerCheckpoint(playerid, 1218.6467,-927.5760,42.8631, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Burg je oznacen crveno na mapi!");
		case 2: SetPlayerCheckpoint(playerid, 1460.7233,-1028.4799,23.8281, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Banka je oznacena crveno na mapi!");
		case 3: SetPlayerCheckpoint(playerid, 1184.1367,-1324.0597,13.5753, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Bolnica je oznacena crveno na mapi!");
		case 4: SetPlayerCheckpoint(playerid, 1535.2114,-1674.5586,13.3828, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Policija je oznacena crveno na mapi!");
		case 5: SetPlayerCheckpoint(playerid, 1696.9545,-1861.5332,13.5647, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Kolodvor je oznacen crveno na mapi!");
		case 6: SetPlayerCheckpoint(playerid, 1548.2170,-2275.5796,13.5527, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Auto Skola je oznacena crveno na mapi!");
		case 7: SetPlayerCheckpoint(playerid, 2455.2229,-1460.9663,24.0000, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Tuning shop je oznacena crveno na mapi!");
	}
	return 1;
}
fDialog(374)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0: SetPlayerCheckpoint(playerid, 2172.9819,1400.6012,11.0625, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon auta je oznacena crveno na mapi!");
		case 1: SetPlayerCheckpoint(playerid, 1948.6079,2068.6697,11.0610, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon motora je oznacen crveno na mapi!");
		case 2: SetPlayerCheckpoint(playerid, 1319.0121,1249.7191,10.8203, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon aviona je oznacena crveno na mapi!");
		case 3: SetPlayerCheckpoint(playerid, 1628.2141,601.0466,1.7578, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Salon plovila je oznacena crveno na mapi!");
		case 4: SetPlayerCheckpoint(playerid, 2337.2671,2458.9617,14.9742, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Policija je oznacena crveno na mapi!");
		case 5: SetPlayerCheckpoint(playerid, 2462.8926,2244.1628,10.8203, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Banka je oznacen crveno na mapi!");
		case 6: SetPlayerCheckpoint(playerid, 2447.3625,2376.2429,12.1635, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Opstina je oznacena crveno na mapi!");
	}
	return 1;
}
fDialog(375)
{
	if(!response) return 1;
	new i = strval(inputtext);
	PosaoGPS[playerid] = 1;
	SetPlayerCheckpoint(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ], 4.0);
	SCMF(playerid,-1,""VARADERO"[V:RPG] "BELA"Kuca %d je oznacena "CRVENA"crveno "BELA"na mapi!", i);
	return 1;
}
fDialog(376)
{
	if(!response) return 1;
	new i = strval(inputtext);
	PosaoGPS[playerid] = 1;
	SetPlayerCheckpoint(playerid, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ], 4.0);
	SCMF(playerid,-1,""VARADERO"[V:RPG] "BELA"Stan %d je oznacen "CRVENA"crveno "BELA"na mapi!", i);
	return 1;
}
fDialog(380)
{
	if(!response) return 1;
	new i = strval(inputtext);
	PosaoGPS[playerid] = 1;
	SetPlayerCheckpoint(playerid, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ], 4.0);
	SCMF(playerid,-1,""VARADERO"[V:RPG] "BELA"Firma %d je oznacena "CRVENA"crveno "BELA"na mapi!", i);
	return 1;
}
fDialog(381)
{
	if(!response) return 1;
	new i = strval(inputtext);
	PosaoGPS[playerid] = 1;
	SetPlayerCheckpoint(playerid, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ], 4.0);
	SCMF(playerid,-1,""VARADERO"[V:RPG] "BELA"Vikendica %d je oznacena "CRVENA"crveno "BELA"na mapi!", i);
	return 1;
}
fDialog(2314)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0: SetPlayerCheckpoint(playerid, 1855.6766,-819.0383,124.6687, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Hram je oznacena crveno na mapi!");
		case 1: SetPlayerCheckpoint(playerid, 1483.6924,719.8660,10.8203, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Ex Admin Vile su oznacene crveno na mapi!");
		case 2: SetPlayerCheckpoint(playerid, 1767.0713,-1362.5306,13.5562, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"Muzej je oznacena crveno na mapi!");
		case 3: SetPlayerCheckpoint(playerid, 1384.1298,-1016.3316,26.7056, 3.0), PosaoGPS[playerid] = 1, SCM(playerid, -1, "[V:RPG] "ZELENA"WC je oznacena crveno na mapi!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(300)
{
	if(!response) return 1;
	new i = PlayerInfo[playerid][pPosedovanjeAviona];
	if(PlayerInfo[playerid][pPosedovanjeAviona] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes letjelicu!");
    new string[280];
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) != AvionInfo[i][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
			new z[5]; if(AvionInfo[i][avZakljucan] == 1) z = "Da"; else z = "Ne";
			SCM(playerid,-1,""ZELENA"||-------------------------------------------------------------------------------------------||");
			format(string, charsmax(string), ""ZELENA"Vlasnik letjelice: "SRWBOJA"%s | "ZELENA"ID Letjelice: "SRWBOJA"%d | "ZELENA"Zakljucano: "BELA"%s",AvionInfo[i][avVlasnik],AvionInfo[i][avID],z);
			SCM(playerid,-1, string);
			format(string, charsmax(string), ""ZELENA"Model: "BELA"%s | "ZELENA"Cena: "BELA"%d | "ZELENA"Boja: "BELA"%d/%d",ImenaVozila[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400], AvionInfo[i][avCijena], AvionInfo[i][avBoja1],AvionInfo[i][avBoja2]);
			SCM(playerid,-1, string);
			SCM(playerid,-1,""ZELENA"||-------------------------------------------------------------------------------------------||");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) != AvionInfo[i][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(AvionInfo[i][avZakljucan] == 0)
			{
				AvionInfo[i][avZakljucan] = 1; SacuvajAvione(i);
				GameTextForPlayer(playerid, "~w~Letjelica ~r~zakljucana", 5000, 3);
			}
			else
			{
				AvionInfo[i][avZakljucan] = 0; SacuvajAvione(i);
				GameTextForPlayer(playerid, "~w~Letjelica ~g~otkljucana", 5000, 3);
			}
		}
		case 2:
		{
			new Float:Poz[3]; PosaoGPS[playerid] = 1;
			GetVehiclePos(AvionInfo[i][avID], Poz[0], Poz[1], Poz[2]);
			SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vasa letjelica je oznacena "SRWBOJA"crveno "BELA"na mapi!");
		}
		case 3:
		{
			new Float:PozAS[4], Float:HP;
			if(GetPlayerVehicleID(playerid) != AvionInfo[i][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
			if(HP < 800.0) return SCM(playerid,-1, ""SIVA"Motor vam je previse ostecen, ne mozete ga parkirati!");
			GetVehiclePos(AvionInfo[i][avID], PozAS[0], PozAS[1], PozAS[2]);
			GetVehicleZAngle(AvionInfo[i][avID], PozAS[3]);
			AvionInfo[i][avPozX] = PozAS[0]; AvionInfo[i][avPozY] = PozAS[1]; AvionInfo[i][avPozZ] = PozAS[2];
			AvionInfo[i][avPozA] = PozAS[3]; DestroyVehicle(AvionInfo[i][avID]);
			AvionInfo[i][avSpawn] = 0;
			AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel],AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA],AvionInfo[i][avBoja1],AvionInfo[i][avBoja2],30000);
			SCM(playerid,-1,"[V:RPG] "ZELENA"Letjelica je uspesno parkirana!");
			SacuvajAvione(i); RTC(AvionInfo[i][avID]);
		}
		case 4:
		{
			if(GetPlayerVehicleID(playerid) != AvionInfo[i][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,302,DIALOG_STYLE_INPUT,""BELA"Boja letjelice",""SPLAVA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"SPLAVA"Cena Boje: 500$","Promeni","Izlaz");
		}
		case 5:
		{
			if(GetPlayerVehicleID(playerid) != AvionInfo[i][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(!IsPlayerInRangeOfPoint(playerid, 50.0, 395.3747,2501.6421,16.0449)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na pijaci polovnih letjelica!");
			format(string,sizeof(string), ""BELA"Prodaja letjelice drzavi\n\n"SPLAVA"Dali ste sigurni da zelite da prodate letjelicu drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", AvionInfo[i][avCijena]/2);
			SPD(playerid, 304, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja letjelice drzavi", string, "Prodaj", "Izlaz");
		}
		case 6:
		{
			if(GetPlayerVehicleID(playerid) != AvionInfo[i][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid, 310, DIALOG_STYLE_INPUT, "Prodaja letjelice", ""VARADERO"Unesite ID igraca kome zelite da prodate letjelicu...", "Potvrdi", "Odustani");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(310)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeAviona] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes letjelicu!");
	if(response)
	{
		new kid, string[128], Float:Poz[3];
		if(sscanf(inputtext, "u", kid)) return SPD(playerid, 310, DIALOG_STYLE_INPUT, "Prodaja letjelice", ""VARADERO"Unesite ID igraca kome zelite da prodate letjelicu...", "Potvrdi", "Odustani");
		if(!IsPlayerConnected(kid)) return SPD(playerid, 310, DIALOG_STYLE_INPUT, "Prodaja letjelice", ""VARADERO"Unesite ID igraca kome zelite da prodate letjelicu...", "Potvrdi", "Odustani");
		if(GetPlayerVehicleID(playerid) != AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
		GetPlayerPos(kid, Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, ""SIVA"Igrac nije u vasoj blizini!");
		if(kid == playerid) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sami sebi ponuditi prodaju!");
		KomeProdaje[playerid] = kid; PonudioIgrac[kid] = playerid;
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vase letjelice za koliko zelite da je prodate...");
		SPD(playerid, 308, DIALOG_STYLE_INPUT, "Prodaja letjelice", string, "Potvrdi", "Odustani");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(308)
{
	if(PlayerInfo[playerid][pPosedovanjeAviona] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes letjelicu!");
	if(response)
	{
		new cena, string[256];
		if(PlayerInfo[KomeProdaje[playerid]][pLevel] < 7) return SCM(playerid,-1,""SIVA"Igrac nije level 7+!");
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vase letjelice za koliko zelite da je prodate...");
		if(sscanf(inputtext, "i", cena)) return SPD(playerid, 308, DIALOG_STYLE_INPUT, "Prodaja letjelice", string, "Potvrdi", "Odustani");
		if(cena < 0 || cena > 10000000) return SPD(playerid, 308, DIALOG_STYLE_INPUT, "Prodaja letjelice", string, "Potvrdi", "Odustani");
		CijenaProdaje[playerid] = cena; CijenaProdaje[KomeProdaje[playerid]] = cena;
		format(string, charsmax(string), ""VARADERO"Ponudili ste letjelicu igracu %s za %d$ novca!",GetName(KomeProdaje[playerid]), cena);
		SCM(playerid,-1, string);
		format(string, charsmax(string), ""VARADERO"Igrac %s vam je ponudio svoju letjelicu za %d$!",GetName(playerid),cena);
		SCM(KomeProdaje[playerid],-1, string);
		format(string,sizeof(string), ""VARADERO"Igrac %s vam je ponudio svoju letjelicu za %d$...\n"VARADERO"Kliknite na prihvati ukoliko zelite da prihvatite prodaju", GetName(playerid), cena);
		SPD(KomeProdaje[playerid], 306, DIALOG_STYLE_MSGBOX, "Prodaja letjelice", string, "Prihvati", "Odustani");
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od prodaje vaseg bicikla!");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(306)
{
	if(response)
	{
		new id = PonudioIgrac[playerid];
		if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Vi niste level 7+!");
		if(CijenaProdaje[playerid] <= 0) return SCM(playerid,-1,""SIVA"Prodavac nije odredio cenu bicikla!");
		if(PlayerInfo[playerid][pNovacDzep] < CijenaProdaje[playerid]) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		if(!IsPlayerConnected(PonudioIgrac[playerid])) return SCM(playerid, -1, ""SIVA"Igrac koji vam je ponudio biciklo vise nije online!");
		if(PlayerInfo[playerid][pPosedovanjeAviona] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes letjelicu!");
		if(PlayerInfo[id][pPosedovanjeAviona] == -1) return SCM(playerid,-1,""SIVA"Taj igrac nema letjelicu!");
		PlayerInfo[playerid][pPosedovanjeAviona] = PlayerInfo[id][pPosedovanjeAviona];
		PlayerInfo[id][pPosedovanjeAviona] = -1;
		strmid(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
	    g_NovacMinus(playerid, CijenaProdaje[playerid]); g_NovacPlus(id, CijenaProdaje[playerid]);
		new string[128];
		format(string, charsmax(string), ""VARADERO"Uspesno ste kupili letjelicu od igraca %s!",GetName(id));
		SCM(playerid,-1, string);
		format(string, charsmax(string), ""VARADERO"Uspesno ste prodali letjelicu igracu %s!",GetName(playerid));
		SCM(id,-1,string);
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
		SavePlayer(playerid); SavePlayer(id); SacuvajAvione(PlayerInfo[playerid][pPosedovanjeAviona]);
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od kupovine bicikla!");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(304)
{
	if(!response) return 1;
	new i = PlayerInfo[playerid][pPosedovanjeAviona];
	if(PlayerInfo[playerid][pPosedovanjeAviona] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes letjelicu!");
	if(GetPlayerVehicleID(playerid) != AvionInfo[i][avID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svojoj letjelici!");
	if(response)
	{
		new poz = random(sizeof(RandomPijacaAvionSpawn));
		AvionInfo[i][avPozX] = RandomPijacaAvionSpawn[poz][0];
		AvionInfo[i][avPozY] = RandomPijacaAvionSpawn[poz][1];
		AvionInfo[i][avPozZ] = RandomPijacaAvionSpawn[poz][2];
		AvionInfo[i][avPozA] = RandomPijacaAvionSpawn[poz][3];
		strmid(AvionInfo[i][avVlasnik], "Niko", 0, strlen("Niko"), 999);
		AvionInfo[i][avImaVlasnika] = 0; AvionInfo[i][avZakljucan] = 0;
		DestroyVehicle(AvionInfo[i][avID]);
		AvionInfo[i][avSpawn] = 0;
		AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel],AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA],AvionInfo[i][avBoja1],AvionInfo[i][avBoja2],30000);
		SacuvajAvione(i); g_NovacPlus(playerid, AvionInfo[i][avCijena]/2);
		RTC(AvionInfo[i][avID]);
		new string[128];
		format(string, charsmax(string), ""ZELENA"[V:RPG] "BELA"Prodali ste vasu letjelicu na pijacu za %d$!",AvionInfo[i][avCijena]/2);
		SCM(playerid,-1,string);
		PlayerInfo[playerid][pPosedovanjeAviona] = -1;
		// Sacuvaj
		SavePlayer(playerid);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(302)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeAviona] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes letjelicu!");
	new i = PlayerInfo[playerid][pPosedovanjeAviona], boja[2];
	if(response)
	{
		if(sscanf(inputtext,"ii",boja[0],boja[1])) return SPD(playerid,302,DIALOG_STYLE_INPUT,""BELA"Boja letjelice",""SPLAVA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"SPLAVA"Cena Boje: 500$","Promeni","Izlaz");
		if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca (500$)!");
		if(boja[0] < 0 || boja[0] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		if(boja[1] < 0 || boja[1] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		AvionInfo[i][avBoja1] = boja[0]; AvionInfo[i][avBoja2] = boja[1];
		g_NovacMinus(playerid,500); ChangeVehicleColor(AvionInfo[i][avID],boja[0],boja[1]);
		SacuvajAvione(i); SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste ofarbali vasu letjelicu za 500$!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(298)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeAviona] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes letjelicu!");
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pPosedovanjeAviona] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes letjelicu!");
			if(PlayerInfo[playerid][pNovacDzep] < 300000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(AvionInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), AVION_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomAvionSpawn));
					new poz1 = random(sizeof(RandomAvionSpawnLV));
					g_NovacMinus(playerid,300000); PlayerInfo[playerid][pPosedovanjeAviona] = i;
					AvionInfo[i][avModel] = 593;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1319.0121,1249.7191,10.8203))
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawnLV[poz1][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawnLV[poz1][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawnLV[poz1][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawnLV[poz1][3];
                    }
                    else
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawn[poz][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawn[poz][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawn[poz][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawn[poz][3];
                    }
					AvionInfo[i][avBoja1] = 0; AvionInfo[i][avBoja2] = 0;
					AvionInfo[i][avImaVlasnika] = 1; AvionInfo[i][avZakljucan] = 1;
					AvionInfo[i][avCijena] = 300000;
					AvionInfo[i][avSpawn] = 0;
					strmid(AvionInfo[i][avVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel], AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA], AvionInfo[i][avBoja1], AvionInfo[i][avBoja2], 30000);
					SacuvajAvione(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili letjelicu!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Letjelicom mozete upravljati komandom /le!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vasa letjelica se nalazi ispred salona!");
					break;
				}
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pPosedovanjeAviona] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes letjelicu!");
			if(PlayerInfo[playerid][pNovacDzep] < 450000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(AvionInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), AVION_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomAvionSpawn));
					new poz1 = random(sizeof(RandomAvionSpawnLV));
					g_NovacMinus(playerid,450000); PlayerInfo[playerid][pPosedovanjeAviona] = i;
					AvionInfo[i][avModel] = 513;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1319.0121,1249.7191,10.8203))
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawnLV[poz1][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawnLV[poz1][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawnLV[poz1][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawnLV[poz1][3];
                    }
                    else
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawn[poz][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawn[poz][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawn[poz][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawn[poz][3];
                    }
					AvionInfo[i][avBoja1] = 0; AvionInfo[i][avBoja2] = 0;
					AvionInfo[i][avImaVlasnika] = 1; AvionInfo[i][avZakljucan] = 1;
					AvionInfo[i][avCijena] = 450000;
					AvionInfo[i][avSpawn] = 0;
					strmid(AvionInfo[i][avVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel], AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA], AvionInfo[i][avBoja1], AvionInfo[i][avBoja2], 30000);
					SacuvajAvione(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili letjelicu!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Letjelicom mozete upravljati komandom /le!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vasa letjelica se nalazi ispred salona!");
					break;
				}
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pPosedovanjeAviona] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes letjelicu!");
			if(PlayerInfo[playerid][pNovacDzep] < 2000000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(AvionInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), AVION_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomAvionSpawn));
					new poz1 = random(sizeof(RandomAvionSpawnLV));
					g_NovacMinus(playerid,2000000); PlayerInfo[playerid][pPosedovanjeAviona] = i;
					AvionInfo[i][avModel] = 487;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1319.0121,1249.7191,10.8203))
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawnLV[poz1][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawnLV[poz1][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawnLV[poz1][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawnLV[poz1][3];
                    }
                    else
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawn[poz][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawn[poz][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawn[poz][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawn[poz][3];
                    }
					AvionInfo[i][avBoja1] = 0; AvionInfo[i][avBoja2] = 0;
					AvionInfo[i][avImaVlasnika] = 1; AvionInfo[i][avZakljucan] = 1;
					AvionInfo[i][avCijena] = 500000;
					AvionInfo[i][avSpawn] = 0;
					strmid(AvionInfo[i][avVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel], AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA], AvionInfo[i][avBoja1], AvionInfo[i][avBoja2], 30000);
					SacuvajAvione(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili letjelicu!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Letjelicom mozete upravljati komandom /le!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vasa letjelica se nalazi ispred salona!");
					break;
				}
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pPosedovanjeAviona] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes letjelicu!");
			if(PlayerInfo[playerid][pNovacDzep] < 400000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(AvionInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), AVION_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomAvionSpawn));
					new poz1 = random(sizeof(RandomAvionSpawnLV));
					g_NovacMinus(playerid,400000); PlayerInfo[playerid][pPosedovanjeAviona] = i;
					AvionInfo[i][avModel] = 469;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1319.0121,1249.7191,10.8203))
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawnLV[poz1][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawnLV[poz1][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawnLV[poz1][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawnLV[poz1][3];
                    }
                    else
                    {
                    AvionInfo[i][avPozX] = RandomAvionSpawn[poz][0];
                    AvionInfo[i][avPozY] = RandomAvionSpawn[poz][1];
                    AvionInfo[i][avPozZ] = RandomAvionSpawn[poz][2];
                    AvionInfo[i][avPozA] = RandomAvionSpawn[poz][3];
                    }
					AvionInfo[i][avBoja1] = 0; AvionInfo[i][avBoja2] = 0;
					AvionInfo[i][avImaVlasnika] = 1; AvionInfo[i][avZakljucan] = 1;
					AvionInfo[i][avCijena] = 400000;
					AvionInfo[i][avSpawn] = 0;
					strmid(AvionInfo[i][avVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel], AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA], AvionInfo[i][avBoja1], AvionInfo[i][avBoja2], 30000);
					SacuvajAvione(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 80; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili letjelicu!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Letjelicom mozete upravljati komandom /le!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vasa letjelica se nalazi ispred salona!");
					break;
				}
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(288)
{
	if(!response) return 1;
	new i = PlayerInfo[playerid][pPosedovanjeBicikla];
	if(PlayerInfo[playerid][pPosedovanjeBicikla] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes bicikl!");
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) != BiciklaInfo[i][biID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom biciklu!");
			new z[5]; if(BiciklaInfo[i][biZakljucan] == 1) z = "Da"; else z = "Ne";
			SCM(playerid,-1,""ZELENA"||-------------------------------------------------------------------------------------------||");
			new string[128];
			format(string, charsmax(string), ""ZELENA"Vlasnik bicikla: "SRWBOJA"%s | "ZELENA"ID Bicikla: "SRWBOJA"%d | "ZELENA"Zakljucano: "BELA"%s",BiciklaInfo[i][biVlasnik],BiciklaInfo[i][biID],z);
			SCM(playerid,-1, string);
			format(string, charsmax(string), ""ZELENA"Model: "BELA"%s | "ZELENA"Cena: "BELA"%d | "ZELENA"Boja: "BELA"%d/%d",ImenaVozila[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400], BiciklaInfo[i][biCijena], BiciklaInfo[i][biBoja1],BiciklaInfo[i][biBoja2]);
			SCM(playerid,-1, string);
			SCM(playerid,-1,""ZELENA"||-------------------------------------------------------------------------------------------||");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) != BiciklaInfo[i][biID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom biciklu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(BiciklaInfo[i][biZakljucan] == 0)
			{
				BiciklaInfo[i][biZakljucan] = 1; SacuvajBicikla(i);
				GameTextForPlayer(playerid, "~w~Bicikl ~r~zakljucan", 5000, 3);
			}
			else
			{
				BiciklaInfo[i][biZakljucan] = 0; SacuvajBicikla(i);
				GameTextForPlayer(playerid, "~w~Bicikl ~g~otkljucan", 5000, 3);
			}
		}
		case 2:
		{
			new Float:Poz[3]; PosaoGPS[playerid] = 1;
			GetVehiclePos(BiciklaInfo[i][biID], Poz[0], Poz[1], Poz[2]);
			SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vase biciklo je oznacen "SRWBOJA"crveno "BELA"na mapi!");
		}
		case 3:
		{
			new Float:PozAS[4], Float:HP;
			if(GetPlayerVehicleID(playerid) != BiciklaInfo[i][biID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom biciklu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(IsPlayerInArea(playerid, 837.1461,-1328.1970, 802.9177,-1353.6825)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini spawna!");
			if(IsPlayerInArea(playerid, 1486.062, -1776.608, 1653.387, -1567.377)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini policije!");
			if(IsPlayerInArea(playerid, 1136.201, -1014.694, 1311.132, -856.7839)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini burga!");
			if(IsPlayerInArea(playerid, 1383.386, -1077.857, 1554.513, -947.582)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini banke!");
			GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
			if(HP < 800.0) return SCM(playerid,-1, ""SIVA"Motor vam je previse ostecen, ne mozete ga parkirati!");
			GetVehiclePos(BiciklaInfo[i][biID], PozAS[0], PozAS[1], PozAS[2]);
			GetVehicleZAngle(BiciklaInfo[i][biID], PozAS[3]);
			BiciklaInfo[i][biPozX] = PozAS[0]; BiciklaInfo[i][biPozY] = PozAS[1]; BiciklaInfo[i][biPozZ] = PozAS[2];
			BiciklaInfo[i][biPozA] = PozAS[3]; DestroyVehicle(BiciklaInfo[i][biID]);
			BiciklaInfo[i][biID] = CreateVehicle(BiciklaInfo[i][biModel],BiciklaInfo[i][biPozX],BiciklaInfo[i][biPozY],BiciklaInfo[i][biPozZ],BiciklaInfo[i][biPozA],BiciklaInfo[i][biBoja1],BiciklaInfo[i][biBoja2],30000);
			SCM(playerid,-1,"[V:RPG] "ZELENA"Bicikl je uspesno parkiran!");
			SacuvajBicikla(i); RTC(BiciklaInfo[i][biID]);
		}
		case 4:
		{
			if(GetPlayerVehicleID(playerid) != BiciklaInfo[i][biID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom biciklu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,290,DIALOG_STYLE_INPUT,""BELA"Boja Bicikla",""SPLAVA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"SPLAVA"Cena Boje: 500$","Promeni","Izlaz");
		}
		case 5:
		{
			if(GetPlayerVehicleID(playerid) != BiciklaInfo[i][biID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom biciklu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid, 296, DIALOG_STYLE_INPUT, "Prodaja bicikla", ""VARADERO"Unesite ID igraca kome zelite da prodate biciklo...", "Potvrdi", "Odustani");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(296)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeBicikla] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes bicikl!");
	if(response)
	{
		new kid, string[128], Float:Poz[3]; GetPlayerPos(kid, Poz[0], Poz[1], Poz[2]);
		if(sscanf(inputtext, "u", kid)) return SPD(playerid, 296, DIALOG_STYLE_INPUT, "Prodaja bicikla", ""VARADERO"Unesite ID igraca kome zelite da prodate biciklo...", "Potvrdi", "Odustani");
		if(!IsPlayerConnected(kid)) return SPD(playerid, 296, DIALOG_STYLE_INPUT, "Prodaja bicikla", ""VARADERO"Unesite ID igraca kome zelite da prodate biciklo...", "Potvrdi", "Odustani");
		if(GetPlayerVehicleID(playerid) != BiciklaInfo[PlayerInfo[playerid][pPosedovanjeBicikla]][biID]) return SCM(playerid, -1, ""SIVA"Niste u svom biciklu!");
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, ""SIVA"Igrac nije u vasoj blizini!");
		if(kid == playerid) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sami sebi ponuditi prodaju!");
		KomeProdaje[playerid] = kid; PonudioIgrac[kid] = playerid;
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vaseg bicikla za koliko zelite da ga prodate...");
		SPD(playerid, 294, DIALOG_STYLE_INPUT, "Prodaja bicikla", string, "Potvrdi", "Odustani");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(294)
{
	if(PlayerInfo[playerid][pPosedovanjeBicikla] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes bicikl!");
	if(response)
	{
		new cena, string[256];
		if(PlayerInfo[KomeProdaje[playerid]][pLevel] < 7) return SCM(playerid,-1,""SIVA"Igrac nije level 7+!");
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vaseg bicikla za koliko zelite da ga prodate...");
		if(sscanf(inputtext, "i", cena)) return SPD(playerid, 294, DIALOG_STYLE_INPUT, "Prodaja bicikla", string, "Potvrdi", "Odustani");
		if(cena < 0 || cena > 10000000) return SPD(playerid, 294, DIALOG_STYLE_INPUT, "Prodaja bicikla", string, "Potvrdi", "Odustani");
		CijenaProdaje[playerid] = cena; CijenaProdaje[KomeProdaje[playerid]] = cena;
		format(string, charsmax(string), ""VARADERO"Ponudili ste biciklu igracu %s za %d$ novca!",GetName(KomeProdaje[playerid]), cena);
		SCM(playerid,-1, string);
		format(string, charsmax(string), ""VARADERO"Igrac %s vam je ponudio svoje biciklo za %d$!",GetName(playerid),cena);
		SCM(KomeProdaje[playerid],-1,string);
		format(string,sizeof(string), ""VARADERO"Igrac %s vam je ponudio svoje biciklo za %d$...\n"VARADERO"Kliknite na prihvati ukoliko zelite da prihvatite prodaju", GetName(playerid), cena);
		SPD(KomeProdaje[playerid], 292, DIALOG_STYLE_MSGBOX, "Prodaja bicikla", string, "Prihvati", "Odustani");
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od prodaje vaseg bicikla!");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(292)
{
	if(response)
	{
		new id = PonudioIgrac[playerid];
		if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Vi niste level 7+!");
		if(CijenaProdaje[playerid] <= 0) return SCM(playerid,-1,""SIVA"Prodavac nije odredio cenu bicikla!");
		if(PlayerInfo[playerid][pNovacDzep] < CijenaProdaje[playerid]) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		if(!IsPlayerConnected(PonudioIgrac[playerid])) return SCM(playerid, -1, ""SIVA"Igrac koji vam je ponudio biciklo vise nije online!");
		if(PlayerInfo[playerid][pPosedovanjeBicikla] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes biciklu!");
		if(PlayerInfo[id][pPosedovanjeBicikla] == -1) return SCM(playerid,-1,""SIVA"Taj igrac nema biciklu!");
		PlayerInfo[playerid][pPosedovanjeBicikla] = PlayerInfo[id][pPosedovanjeBicikla];
		PlayerInfo[id][pPosedovanjeBicikla] = -1;
		strmid(BiciklaInfo[PlayerInfo[playerid][pPosedovanjeBicikla]][biVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
		g_NovacMinus(playerid, CijenaProdaje[playerid]); g_NovacPlus(id, CijenaProdaje[playerid]);
		new string[128];
		format(string, charsmax(string), ""VARADERO"Uspesno ste kupili biciklu od igraca %s!",GetName(id));
		SCM(playerid,-1,string);
		format(string, charsmax(string), ""VARADERO"Uspesno ste prodali biciklu igracu %s!",GetName(playerid));
		SCM(id,-1, string);
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
		SavePlayer(playerid); SavePlayer(id); SacuvajBicikla(PlayerInfo[playerid][pPosedovanjeBicikla]);
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od kupovine bicikla!");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(290)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeBicikla] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes bicikl!");
	new i = PlayerInfo[playerid][pPosedovanjeBicikla], boja[2];
	if(response)
	{
		if(sscanf(inputtext,"ii",boja[0],boja[1])) return SPD(playerid,290,DIALOG_STYLE_INPUT,""BELA"Boja Bicikla",""SPLAVA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"SPLAVA"Cena Boje: 500$","Promeni","Izlaz");
        if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca (500$)!");
		if(boja[0] < 0 || boja[0] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		if(boja[1] < 0 || boja[1] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		BiciklaInfo[i][biBoja1] = boja[0]; BiciklaInfo[i][biBoja2] = boja[1];
		g_NovacMinus(playerid,500); ChangeVehicleColor(BiciklaInfo[i][biID],boja[0],boja[1]);
		SacuvajBicikla(i); SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste ofarbali vase biciklo za 500$!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(286)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeBicikla] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes biciklo!");
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pPosedovanjeBicikla] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes biciklo!");
			if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(BiciklaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), BICIKLA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomBiciklaSpawn));
					g_NovacMinus(playerid,500); PlayerInfo[playerid][pPosedovanjeBicikla] = i;
					BiciklaInfo[i][biModel] = 509;
					BiciklaInfo[i][biPozX] = RandomBiciklaSpawn[poz][0];
					BiciklaInfo[i][biPozY] = RandomBiciklaSpawn[poz][1];
					BiciklaInfo[i][biPozZ] = RandomBiciklaSpawn[poz][2];
					BiciklaInfo[i][biPozA] = RandomBiciklaSpawn[poz][3];
					BiciklaInfo[i][biBoja1] = 0; BiciklaInfo[i][biBoja2] = 0;
					BiciklaInfo[i][biImaVlasnika] = 1; BiciklaInfo[i][biZakljucan] = 1;
					BiciklaInfo[i][biCijena] = 500;
					strmid(BiciklaInfo[i][biVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					BiciklaInfo[i][biID] = CreateVehicle(BiciklaInfo[i][biModel], BiciklaInfo[i][biPozX],BiciklaInfo[i][biPozY],BiciklaInfo[i][biPozZ],BiciklaInfo[i][biPozA], BiciklaInfo[i][biBoja1], BiciklaInfo[i][biBoja2], 30000);
					SacuvajBicikla(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 4555555555; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili biciklo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Biciklom mozete upravljati komandom /bi!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase biciklo se nalazi ispred salona!");
					break;
				}
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pPosedovanjeBicikla] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes biciklo!");
			if(PlayerInfo[playerid][pNovacDzep] < 1000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(BiciklaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), BICIKLA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomBiciklaSpawn));
					g_NovacMinus(playerid,1000); PlayerInfo[playerid][pPosedovanjeBicikla] = i;
					BiciklaInfo[i][biModel] = 481;
					BiciklaInfo[i][biPozX] = RandomBiciklaSpawn[poz][0];
					BiciklaInfo[i][biPozY] = RandomBiciklaSpawn[poz][1];
					BiciklaInfo[i][biPozZ] = RandomBiciklaSpawn[poz][2];
					BiciklaInfo[i][biPozA] = RandomBiciklaSpawn[poz][3];
					BiciklaInfo[i][biBoja1] = 0; BiciklaInfo[i][biBoja2] = 0;
					BiciklaInfo[i][biImaVlasnika] = 1; BiciklaInfo[i][biZakljucan] = 1;
					BiciklaInfo[i][biCijena] = 1000;
					strmid(BiciklaInfo[i][biVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					BiciklaInfo[i][biID] = CreateVehicle(BiciklaInfo[i][biModel], BiciklaInfo[i][biPozX],BiciklaInfo[i][biPozY],BiciklaInfo[i][biPozZ],BiciklaInfo[i][biPozA], BiciklaInfo[i][biBoja1], BiciklaInfo[i][biBoja2], 30000);
					SacuvajBicikla(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 4555555555; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili biciklo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Biciklom mozete upravljati komandom /bi!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase biciklo se nalazi ispred salona!");
					break;
				}
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pPosedovanjeBicikla] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes biciklo!");
			if(PlayerInfo[playerid][pNovacDzep] < 3000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(BiciklaInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), BICIKLA_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomBiciklaSpawn));
					g_NovacMinus(playerid,3000); PlayerInfo[playerid][pPosedovanjeBicikla] = i;
					BiciklaInfo[i][biModel] = 510;
					BiciklaInfo[i][biPozX] = RandomBiciklaSpawn[poz][0];
					BiciklaInfo[i][biPozY] = RandomBiciklaSpawn[poz][1];
					BiciklaInfo[i][biPozZ] = RandomBiciklaSpawn[poz][2];
					BiciklaInfo[i][biPozA] = RandomBiciklaSpawn[poz][3];
					BiciklaInfo[i][biBoja1] = 0; BiciklaInfo[i][biBoja2] = 0;
					BiciklaInfo[i][biImaVlasnika] = 1; BiciklaInfo[i][biZakljucan] = 1;
					BiciklaInfo[i][biCijena] = 3000;
					strmid(BiciklaInfo[i][biVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					BiciklaInfo[i][biID] = CreateVehicle(BiciklaInfo[i][biModel], BiciklaInfo[i][biPozX],BiciklaInfo[i][biPozY],BiciklaInfo[i][biPozZ],BiciklaInfo[i][biPozA], BiciklaInfo[i][biBoja1], BiciklaInfo[i][biBoja2], 30000);
					SacuvajBicikla(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 4555555555; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili biciklo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Biciklom mozete upravljati komandom /bi!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vase biciklo se nalazi ispred salona!");
					break;
				}
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(284)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pKaciga] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec imas kacigu!");
	switch(listitem)
	{
		case 0:
		{
			PlayerInfo[playerid][pKaciga] = 18977; g_NovacMinus(playerid, 500); SavePlayer(playerid);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste kupili kacigu za 500$!");
		}
		case 1:
		{
			PlayerInfo[playerid][pKaciga] = 18978; g_NovacMinus(playerid, 500); SavePlayer(playerid);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste kupili kacigu za 500$!");
		}
		case 2:
		{
			PlayerInfo[playerid][pKaciga] = 18979; g_NovacMinus(playerid, 500); SavePlayer(playerid);
			SCM(playerid,-1,""ZELENA"[V:RPG] "BELA"Uspesno ste kupili kacigu za 500$!");
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(272)
{
	if(!response) return 1;
	new i = PlayerInfo[playerid][pPosedovanjeMotora];
	if(PlayerInfo[playerid][pPosedovanjeMotora] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes motor!");
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) != MotorInfo[i][mID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom motoru!");
			new z[5]; if(MotorInfo[i][mZakljucan] == 1) z = "Da"; else z = "Ne";
			SCM(playerid,-1,""VARADERO"||-------------------------------------------------------------------------------------------||");
			new string[256];
			format(string, charsmax(string), ""VARADERO"Vlasnik motora: "SRWBOJA"%s | "VARADERO"ID Motora: "SRWBOJA"%d | "VARADERO"Zakljucano: "BELA"%s",MotorInfo[i][mVlasnik],MotorInfo[i][mID],z);
			SCM(playerid,-1,string);
			format(string, charsmax(string), ""VARADERO"Model: "BELA"%s | "VARADERO"Cena: "BELA"%d | "VARADERO"Boja: "BELA"%d/%d",ImenaVozila[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400], MotorInfo[i][mCijena], MotorInfo[i][mBoja1],MotorInfo[i][mBoja2]);
			SCM(playerid,-1,string);
			SCM(playerid,-1,""VARADERO"||-------------------------------------------------------------------------------------------||");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) != MotorInfo[i][mID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom motoru!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(MotorInfo[i][mZakljucan] == 0)
			{
				MotorInfo[i][mZakljucan] = 1; SacuvajMotor(i);
				GameTextForPlayer(playerid, "~w~Motor ~r~zakljucan", 5000, 3);
			}
			else
			{
				MotorInfo[i][mZakljucan] = 0; SacuvajMotor(i);
				GameTextForPlayer(playerid, "~w~Motor ~g~otkljucan", 5000, 3);
			}
		}
		case 2:
		{
			new Float:Poz[3]; PosaoGPS[playerid] = 1;
			GetVehiclePos(MotorInfo[i][mID], Poz[0], Poz[1], Poz[2]);
			SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vas motor je oznacen "SRWBOJA"crveno "BELA"na mapi!");
		}
		case 3:
		{
			new Float:PozAS[4], Float:HP;
			if(GetPlayerVehicleID(playerid) != MotorInfo[i][mID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom motoru!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(IsPlayerInArea(playerid, 837.1461,-1328.1970, 802.9177,-1353.6825)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini spawna!");
			if(IsPlayerInArea(playerid, 1486.062, -1776.608, 1653.387, -1567.377)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini policije!");
			if(IsPlayerInArea(playerid, 1136.201, -1014.694, 1311.132, -856.7839)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini burga!");
			if(IsPlayerInArea(playerid, 1383.386, -1077.857, 1554.513, -947.582)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati vozilo u blizini banke!");
			GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
			if(HP < 800.0) return SCM(playerid,-1, ""SIVA"Motor vam je previse ostecen, ne mozete ga parkirati!");
			GetVehiclePos(MotorInfo[i][mID], PozAS[0], PozAS[1], PozAS[2]);
			GetVehicleZAngle(MotorInfo[i][mID], PozAS[3]);
			MotorInfo[i][mPozX] = PozAS[0]; MotorInfo[i][mPozY] = PozAS[1]; MotorInfo[i][mPozZ] = PozAS[2];
			MotorInfo[i][mPozA] = PozAS[3]; DestroyVehicle(MotorInfo[i][mID]);
			MotorInfo[i][mSpawn] = 0;
			MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel],MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA],MotorInfo[i][mBoja1],MotorInfo[i][mBoja2],30000);
			SCM(playerid,-1,"[V:RPG] "ZELENA"Motor je uspesno parkiran!");
			SacuvajMotor(i); RTC(MotorInfo[i][mID]);
		}
		case 4:
		{
			if(GetPlayerVehicleID(playerid) != MotorInfo[i][mID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom motoru!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,274,DIALOG_STYLE_INPUT,""BELA"Boja Motora",""ZELENA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"ZELENA"Cena Boje: 500$","Promeni","Izlaz");
		}
		case 5:
		{
			new string[280];
			if(GetPlayerVehicleID(playerid) != MotorInfo[i][mID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom motor!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(!IsPlayerInRangeOfPoint(playerid, 35.0, 1245.6515,-1822.8895,13.4094)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na pijaci polovnih motora!");
			format(string,sizeof(string), ""BELA"Prodaja motora drzavi\n\n"SPLAVA"Dali ste sigurni da zelite da prodate motor drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", MotorInfo[i][mCijena]/2);
			SPD(playerid, 276, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja motora drzavi", string, "Prodaj", "Izlaz");
		}
		case 6:
		{
			if(GetPlayerVehicleID(playerid) != MotorInfo[i][mID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom motoru!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid, 278, DIALOG_STYLE_INPUT, "Prodaja motora", ""VARADERO"Unesite ID igraca kome zelite da prodate motor...", "Potvrdi", "Odustani");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(278)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeMotora] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes motor!");
	if(response)
	{
		new kid, string[128], Float:Poz[3];
		if(sscanf(inputtext, "u", kid)) return SPD(playerid, 278, DIALOG_STYLE_INPUT, "Prodaja motora", ""VARADERO"Unesite ID igraca kome zelite da prodate motor...", "Potvrdi", "Odustani");
		if(!IsPlayerConnected(kid)) return SPD(playerid, 278, DIALOG_STYLE_INPUT, "Prodaja motora", ""VARADERO"Unesite ID igraca kome zelite da prodate motor...", "Potvrdi", "Odustani");
		if(GetPlayerVehicleID(playerid) != MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mID]) return SCM(playerid, -1, ""SIVA"Niste u svom motoru!");
		GetPlayerPos(kid, Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, ""SIVA"Igrac nije u vasoj blizini!");
		if(kid == playerid) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sami sebi ponuditi prodaju!");
		KomeProdaje[playerid] = kid; PonudioIgrac[kid] = playerid;
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vaseg motora za koliko zelite da ga prodate...");
		SPD(playerid, 280, DIALOG_STYLE_INPUT, "Prodaja motora", string, "Potvrdi", "Odustani");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(280)
{
	if(PlayerInfo[playerid][pPosedovanjeMotora] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes motor!");
	if(response)
	{
		new cena, string[256];
		if(PlayerInfo[KomeProdaje[playerid]][pLevel] < 7) return SCM(playerid,-1,""SIVA"Igrac nije level 7+!");
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vaseg motora za koliko zelite da ga prodate...");
		if(sscanf(inputtext, "i", cena)) return SPD(playerid, 280, DIALOG_STYLE_INPUT, "Prodaja motora", string, "Potvrdi", "Odustani");
		if(cena < 0 || cena > 10000000) return SPD(playerid, 280, DIALOG_STYLE_INPUT, "Prodaja motora", string, "Potvrdi", "Odustani");
		CijenaProdaje[playerid] = cena; CijenaProdaje[KomeProdaje[playerid]] = cena;
		format(string, charsmax(string), ""VARADERO"Ponudili ste motor igracu %s za %d$ novca!",GetName(KomeProdaje[playerid]), cena);
		SCM(playerid,-1,string);
		format(string, charsmax(string), ""VARADERO"Igrac %s vam je ponudio svoj motor za %d$!",GetName(playerid),cena);
		SCM(KomeProdaje[playerid],-1,string);
		format(string,sizeof(string), ""VARADERO"Igrac %s vam je ponudio svoj motor za %d$...\n"VARADERO"Kliknite na prihvati ukoliko zelite da prihvatite prodaju", GetName(playerid), cena);
		SPD(KomeProdaje[playerid], 282, DIALOG_STYLE_MSGBOX, "Prodaja motora", string, "Prihvati", "Odustani");
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od prodaje vaseg motora!");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(282)
{
	if(response)
	{
		new id = PonudioIgrac[playerid];
		if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Vi niste level 7+!");
		if(CijenaProdaje[playerid] <= 0) return SCM(playerid,-1,""SIVA"Prodavac nije odredio cenu motora!");
		if(PlayerInfo[playerid][pNovacDzep] < CijenaProdaje[playerid]) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		if(!IsPlayerConnected(PonudioIgrac[playerid])) return SCM(playerid, -1, ""SIVA"Igrac koji vam je ponudio motor vise nije online!");
		if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
		if(PlayerInfo[id][pPosedovanjeMotora] == -1) return SCM(playerid,-1,""SIVA"Taj igrac nema motor!");
		PlayerInfo[playerid][pPosedovanjeMotora] = PlayerInfo[id][pPosedovanjeMotora];
		PlayerInfo[id][pPosedovanjeMotora] = -1;
		strmid(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
	    g_NovacMinus(playerid, CijenaProdaje[playerid]); g_NovacPlus(id, CijenaProdaje[playerid]);
		new string[128];
		format(string, charsmax(string), ""VARADERO"Uspesno ste kupili motor od igraca %s!",GetName(id));
		SCM(playerid,-1, string);
		format(string, charsmax(string), ""VARADERO"Uspesno ste prodali motor igracu %s!",GetName(playerid));
		SCM(id,-1,string);
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
		SacuvajMotor(PlayerInfo[playerid][pPosedovanjeMotora]);
		SavePlayer(playerid);
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od kupovine motora!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(276)
{
	if(!response) return 1;
	new i = PlayerInfo[playerid][pPosedovanjeMotora];
	if(PlayerInfo[playerid][pPosedovanjeMotora] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes motor!");
	if(GetPlayerVehicleID(playerid) != MotorInfo[i][mID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom motoru!");
	if(response)
	{
		new poz = random(sizeof(RandomMotorPijacaSpawn));
		MotorInfo[i][mPozX] = RandomMotorPijacaSpawn[poz][0];
		MotorInfo[i][mPozY] = RandomMotorPijacaSpawn[poz][1];
		MotorInfo[i][mPozZ] = RandomMotorPijacaSpawn[poz][2];
		MotorInfo[i][mPozA] = RandomMotorPijacaSpawn[poz][3];
		strmid(MotorInfo[i][mVlasnik], "Niko", 0, strlen("Niko"), 999);
		MotorInfo[i][mImaVlasnika] = 0; MotorInfo[i][mZakljucan] = 0;
		MotorInfo[i][mSpawn] = 0;
		DestroyVehicle(MotorInfo[i][mID]);
		MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel],MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA],MotorInfo[i][mBoja1],MotorInfo[i][mBoja2],30000);
		SacuvajMotor(i); g_NovacPlus(playerid, MotorInfo[i][mCijena]/2);
		RTC(MotorInfo[i][mID]);
		new string[128];
		format(string, charsmax(string), ""ZELENA"[V:RPG] "BELA"Prodali ste vas motor na pijacu za %d$!",MotorInfo[i][mCijena]/2);
		SCM(playerid,-1, string);
		PlayerInfo[playerid][pPosedovanjeMotora] = -1;
		SavePlayer(playerid);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(274)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeMotora] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes motor!");
	new i = PlayerInfo[playerid][pPosedovanjeMotora], boja[2];
	if(response)
	{
		if(sscanf(inputtext,"ii",boja[0],boja[1])) return SPD(playerid,274,DIALOG_STYLE_INPUT,""BELA"Boja Motora",""ZELENA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"ZELENA"Cena Boje: 500$","Promeni","Izlaz");
		if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca (500$)!");
		if(boja[0] < 0 || boja[0] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		if(boja[1] < 0 || boja[1] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		MotorInfo[i][mBoja1] = boja[0]; MotorInfo[i][mBoja2] = boja[1];
		g_NovacMinus(playerid,500); ChangeVehicleColor(MotorInfo[i][mID],boja[0],boja[1]);
		SacuvajMotor(i); SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste ofarbali vas motor za 500$!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////////
fDialog(270)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec posedujes motor!");
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 15000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,15000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 462;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = 0; MotorInfo[i][mBoja2] = 0;
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 15000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 150000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,150000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 463;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = random(5); MotorInfo[i][mBoja2] = random(5);
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 150000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 125000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,125000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 468;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = random(5); MotorInfo[i][mBoja2] = random(5);
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 125000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 100000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,100000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 471;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = random(5); MotorInfo[i][mBoja2] = random(5);
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 100000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 350000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,350000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 521;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = random(5); MotorInfo[i][mBoja2] = random(5);
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 350000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
		case 5:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 3000000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,3000000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 522;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = random(5); MotorInfo[i][mBoja2] = random(5);
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 3000000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
		case 6:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 300000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,300000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 581;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = random(5); MotorInfo[i][mBoja2] = random(5);
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 300000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
		case 7:
		{
			if(PlayerInfo[playerid][pPosedovanjeMotora] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes motor!");
			if(PlayerInfo[playerid][pNovacDzep] < 100000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
			for(new i = 0; i < sizeof(MotorInfo); i++)
			{
				new Fajl[64];
				format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
				if(!fexist(Fajl))
				{
					new poz = random(sizeof(RandomMotorSpawn));
					new poz1 = random(sizeof(RandomMotorSpawnLV));
					g_NovacMinus(playerid,100000); PlayerInfo[playerid][pPosedovanjeMotora] = i;
					MotorInfo[i][mModel] = 586;
                    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1948.6079,2068.6697,11.0610))
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawnLV[poz1][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawnLV[poz1][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawnLV[poz1][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawnLV[poz1][3];
                    }
                    else
                    {
                    MotorInfo[i][mPozX] = RandomMotorSpawn[poz][0];
                    MotorInfo[i][mPozY] = RandomMotorSpawn[poz][1];
                    MotorInfo[i][mPozZ] = RandomMotorSpawn[poz][2];
                    MotorInfo[i][mPozA] = RandomMotorSpawn[poz][3];
                    }
					MotorInfo[i][mBoja1] = random(5); MotorInfo[i][mBoja2] = random(5);
					MotorInfo[i][mImaVlasnika] = 1; MotorInfo[i][mZakljucan] = 1;
					MotorInfo[i][mCijena] = 100000;
					MotorInfo[i][mSpawn] = 0;
					strmid(MotorInfo[i][mVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel], MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA], MotorInfo[i][mBoja1], MotorInfo[i][mBoja2], 30000);
					SacuvajMotor(i); SavePlayer(playerid); Fuel[GetPlayerVehicleID(playerid)] = 45; StatusMotora(playerid, 1);
					SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste kupili motor!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Motorom mozete upravljati komandom /mo!");
					SCM(playerid,-1,"[V:RPG] "ZELENA"Vas motor se nalazi ispred salona!");
					break;
				}
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(250)
{
    if(!response) return 1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] == -1 && PlayerInfo[playerid][pPosedovanjeAuta2] == -1) return SCM(playerid,-1," "SRWBOJA"Ne posedujes auto!");
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1 && listitem != 2) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
    switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			new z[5],o[5], vid = CijeneAuta(GetVehicleModel(GetPlayerVehicleID(playerid)));
			if(VoziloInfo[i][vZakljucan] == 1) z = "Da"; else z = "Ne";
			if(VoziloInfo[i][vOruzije] != -1) o = "Da"; else o = "Ne";
			new string[256];
			SCM(playerid,-1,""SPLAVA"||-------------------------------------------------------------------------------------------||");
			format(string, charsmax(string), ""SPLAVA"Vlasnik vozila: "SRWBOJA"%s | "SPLAVA"ID Vozila: "SRWBOJA"%d | "SPLAVA"Zakljucano: "BELA"%s",VoziloInfo[i][vVlasnik],VoziloInfo[i][vID],z);
			SCM(playerid,-1, string);
			format(string, charsmax(string), ""SPLAVA"Model: "BELA"%s | "SPLAVA"Droga: "BELA"%dg | "SPLAVA"Materijali: "BELA"%d",ImenaVozila[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400], VoziloInfo[i][vDroga], VoziloInfo[i][vMats]);
			SCM(playerid,-1,string);
			format(string, charsmax(string), ""SPLAVA"Oruzije: "BELA"%s | "SPLAVA"Cena: "BELA"%d$ | "SPLAVA"Boja: "BELA"%d/%d",o, AutoSalon[vid][1],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2]);
			SCM(playerid,-1,string);
			SCM(playerid,-1,""SPLAVA"||-------------------------------------------------------------------------------------------||");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(VoziloInfo[i][vZakljucan] == 0)
			{
				VoziloInfo[i][vZakljucan] = 1;
				GameTextForPlayer(playerid, "~w~Vozilo ~r~zakljucano", 5000, 3);
				SacuvajVozilo(i);
			}
			else
			{
				VoziloInfo[i][vZakljucan] = 0;
				GameTextForPlayer(playerid, "~w~Vozilo ~g~otkljucano", 5000, 3);
				SacuvajVozilo(i);
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pPosedovanjeAuta] != -1 && PlayerInfo[playerid][pPosedovanjeAuta2] == -1)
			{
				new Float:Poz[3]; PosaoGPS[playerid] = 1;
				GetVehiclePos(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID], Poz[0], Poz[1], Poz[2]);
				SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
				SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vase auto je oznaceno "SRWBOJA"crveno "BELA"na mapi!");
			}
			else if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1 && PlayerInfo[playerid][pPosedovanjeAuta] == -1)
			{
				new Float:Poz[3]; PosaoGPS[playerid] = 1;
				GetVehiclePos(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID], Poz[0], Poz[1], Poz[2]);
				SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
				SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vase auto je oznaceno "SRWBOJA"crveno "BELA"na mapi!");
			}
			else
			{
				SPD(playerid,2444,DIALOG_STYLE_LIST,""BELA"Lociraj vozilo","Vozilo 1\nVozilo 2","Odaberi","Izlaz");
			}
		}
		case 3:
		{
			new Float:PozAS[4], Float:HP;
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(IsPlayerInArea(playerid, 837.1461,-1328.1970, 802.9177,-1353.6825)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati auto u blizini spawna!");
			if(IsPlayerInArea(playerid, 1486.062, -1776.608, 1653.387, -1567.377)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati auto u blizini policije!");
			if(IsPlayerInArea(playerid, 1136.201, -1014.694, 1311.132, -856.7839)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati auto u blizini burga!");
			if(IsPlayerInArea(playerid, 1383.386, -1077.857, 1554.513, -947.582)) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"Ne mozete parkirati auto u blizini banke!");
			GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
			if(HP < 800.0) return SCM(playerid,-1, ""SIVA"Vozilo vam je previse osteceno, ne mozete ga parkirati!");
			GetVehiclePos(VoziloInfo[i][vID], PozAS[0], PozAS[1], PozAS[2]);
			GetVehicleZAngle(VoziloInfo[i][vID], PozAS[3]);
			VoziloInfo[i][vSpawn] = 0;
			VoziloInfo[i][vPozX] = PozAS[0]; VoziloInfo[i][vPozY] = PozAS[1]; VoziloInfo[i][vPozZ] = PozAS[2];
			VoziloInfo[i][vPozA] = PozAS[3]; DestroyVehicle(VoziloInfo[i][vID]);
			VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
			SCM(playerid,-1,"[V:RPG] "ZELENA"Vozilo je uspesno parkirano!");
			SacuvajVozilo(i); RTC(VoziloInfo[i][vID]);
		}
		case 4:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,242,DIALOG_STYLE_INPUT,""BELA"Boja Auta",""ZELENA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"ZELENA"Cena Boje: 500$","Promeni","Izlaz");
		}
		case 5:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,244,DIALOG_STYLE_LIST,""BELA"Ostavi u auto","Drogu\nMaterijale\nOruzije","Odaberi","Izlaz");
		}
		case 6:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,252,DIALOG_STYLE_LIST,""BELA"Uzmi iz auta","Drogu\nMaterijale\nOruzije","Odaberi","Izlaz");
		}
		case 7:
		{
			new string[280] ,vid = CijeneAuta(GetVehicleModel(GetPlayerVehicleID(playerid)));
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(!IsPlayerInRangeOfPoint(playerid, 35.0, 1478.5558,1569.2913,10.8125)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na pijaci polovnih automobila!");
			format(string,sizeof(string), ""BELA"Prodaja auta drzavi\n\n"SPLAVA"Dali ste sigurni da zelite da prodate auto drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", AutoSalon[vid][1]/2);
			SPD(playerid, 260, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja auta drzavi", string, "Prodaj", "Izlaz");
		}
		case 8:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(VoziloInfo[i][vRadio] != 0) return SCM(playerid,-1,""SIVA"U vozilu vec ima radio!");
			if(PlayerInfo[playerid][pNovacDzep] < 3000) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca (3000$)!");
			VoziloInfo[i][vRadio] = 1; g_NovacMinus(playerid, 3000); SacuvajVozilo(i);
			SCM(playerid,-1,""ZELENA"Uspesno ste ugradili radio u vas auto za 3000$!");
		}
		case 9:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			if(VoziloInfo[i][vRadio] != 1) return SCM(playerid,-1,""SIVA"Nemate radio u autu!");
			SPD(playerid,258,DIALOG_STYLE_LIST,""VARADERO"Radio","Radio Pink\nRadio Folk\nRadio TDI\nJuzni Vetar Radio\nBalkan DJ Radio","Odaberi","Izlaz");
		}
		case 10:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid, 268, DSI, "Prodaja auta", ""SRWBOJA"Unesite ID igraca kome zelite da prodate vozilo...", "Potvrdi", "Odustani");
		}
		case 11:
		{
		SPD(playerid, 347, DIALOG_STYLE_LIST, ""SPLAVA"Control vozila"SPLAVA"RolePlay", "Lighting ( On/Off )\nHauba ( Open/Close )\nGepek ( Open/Close ) \nVrata ( Open/Close )\nEngine ( On/Off )\nAlarm ( On/Off )\nUzivaj", "Odaberi", "Nazad");
    	}
    	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(268)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeAuta] == -1 && PlayerInfo[playerid][pPosedovanjeAuta2] == -1) return SCM(playerid,-1," "CRVENA"Ne posedujes auto!");
	if(response)
	{
		new kid, string[128], Float:Poz[3];
		if(sscanf(inputtext, "u", kid)) return SPD(playerid, 268, DIALOG_STYLE_INPUT, "Prodaja auta", ""BELA"POGRESAN ID!\n"SPLAVA"Unesite ID igraca kome zelite da prodate vozilo...", "Potvrdi", "Odustani");
		if(!IsPlayerConnected(kid)) return SPD(playerid, 268, DIALOG_STYLE_INPUT, "Prodaja auta", ""BELA"POGRESAN ID!\n"SPLAVA"Unesite ID igraca kome zelite da prodate vozilo...", "Potvrdi", "Odustani");
		if(PlayerInfo[kid][pDvaV] == 1)
		{
			if(PlayerInfo[kid][pPosedovanjeAuta] != -1 && PlayerInfo[kid][pPosedovanjeAuta2] != -1) return SCM(playerid,-1,""SIVA"Taj igrac vec poseduje 2 vozila!");
		}
		else
		{
			if(PlayerInfo[kid][pPosedovanjeAuta] != -1) return SCM(playerid,-1,""SIVA"Taj igrac vec ima vozilo!");
		}
		if(GetPlayerVehicleID(playerid) != VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID] && GetPlayerVehicleID(playerid) != VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID]) return SCM(playerid, -1, ""SIVA"Niste u svom vozilu!");
		GetPlayerPos(kid, Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, ""SIVA"Igrac nije u vasoj blizini!");
		if(kid == playerid) return SCM(playerid,-1,"[V:RPG] | "CRVENA"Ne mozete sami sebi ponuditi prodaju!");
		KomeProdaje[playerid] = kid; PonudioIgrac[kid] = playerid;
		format(string,sizeof(string), ""SPLAVA"Sad unesite cenu vaseg auta za koliko zelite da ga prodate...");
		SPD(playerid, 264, DIALOG_STYLE_INPUT, "Prodaja auta", string, "Potvrdi", "Odustani");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(264)
{
	if(PlayerInfo[playerid][pPosedovanjeAuta] == -1 && PlayerInfo[playerid][pPosedovanjeAuta2] == -1) return SCM(playerid,-1," "SRWBOJA"Ne posedujes auto!");
	if(response)
	{
		new cena, string[256];
		if(PlayerInfo[KomeProdaje[playerid]][pLevel] < 7) return SCM(playerid,-1,""SIVA"Igrac nije level 7+!");
		format(string,sizeof(string), ""SPLAVA"Sad unesite cenu vaseg auta za koliko zelite da ga prodate...");
		if(sscanf(inputtext, "i", cena)) return SPD(playerid, 264, DIALOG_STYLE_INPUT, "Prodaja auta", string, "Potvrdi", "Odustani");
		if(cena < 0 || cena > 10000000) return SPD(playerid, 264, DIALOG_STYLE_INPUT, "Prodaja auta", string, "Potvrdi", "Odustani");
		CijenaProdaje[playerid] = cena; CijenaProdaje[KomeProdaje[playerid]] = cena;
		format(string, charsmax(string), "Ponudili ste auta igracu %s za %d$ novca!",GetName(KomeProdaje[playerid]), cena);
		SCM(playerid,-1, string);
		format(string, charsmax(string), ""VARADERO"Igrac %s vam je ponudio svoje auta za %d$!",GetName(playerid),cena);
		SCM(KomeProdaje[playerid],-1,string);
		format(string,sizeof(string), ""SPLAVA"Igrac %s vam je ponudio svoje vozilo za %d$...\n"SPLAVA"Kliknite na prihvati ukoliko zelite da prihvatite prodaju", GetName(playerid), cena);
		SPD(KomeProdaje[playerid], 262, DIALOG_STYLE_MSGBOX, "Prodaja auta", string, "Prihvati", "Odustani");
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od prodaje vaseg vozila!");
	}
	return 1;
}

fDialog(262)
{
	if(response)
	{
	    if(PlayerInfo[playerid][pNovacDzep] < CijenaProdaje[playerid]) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Vi niste level 7+!");
		if(CijenaProdaje[playerid] <= 0) return SCM(playerid,-1,""SIVA"Prodavac nije odredio cenu vozila!");
		if(!IsPlayerConnected(PonudioIgrac[playerid])) return SCM(playerid, -1, ""SIVA"Igrac koji vam je ponudio vozilo vise nije online!");
		new id = PonudioIgrac[playerid];
		new i = -1;
		if(PlayerInfo[id][pPosedovanjeAuta] != -1)
		{
			if(GetPlayerVehicleID(id) == VoziloInfo[PlayerInfo[id][pPosedovanjeAuta]][vID])
			{
				i = PlayerInfo[id][pPosedovanjeAuta];
				PlayerInfo[id][pPosedovanjeAuta] = -1;
			}
		}
		if(PlayerInfo[id][pPosedovanjeAuta2] != -1)
		{
			if(GetPlayerVehicleID(id) == VoziloInfo[PlayerInfo[id][pPosedovanjeAuta2]][vID])
			{
				i = PlayerInfo[id][pPosedovanjeAuta2];
				PlayerInfo[id][pPosedovanjeAuta2] = -1;
			}		
		}
		if(i == -1) return SCM(playerid,-1,""SIVA"Taj igrac nije u svom vozilu!");
		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1) { PlayerInfo[playerid][pPosedovanjeAuta2] = i; } else{ PlayerInfo[playerid][pPosedovanjeAuta] = i; }
		strmid(VoziloInfo[i][vVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
		g_NovacMinus(playerid, CijenaProdaje[playerid]); g_NovacPlus(id, CijenaProdaje[playerid]);
		new string[128];
		format(string, charsmax(string), ""VARADERO"Uspesno ste kupili auto od igraca %s!",GetName(id));
		SCM(playerid,-1,string);
		format(string, charsmax(string), ""VARADERO"Uspesno ste prodali auto igracu %s!",GetName(playerid));
		SCM(id,-1,string);
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
		SavePlayer(playerid); SavePlayer(id); SacuvajVozilo(i);
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od kupovine vozila!");
	}
	return 1;
}
fDialog(260)
{
	if(!response) return 1;
	new i = -1;
	if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
		{
			i = PlayerInfo[playerid][pPosedovanjeAuta];
			PlayerInfo[playerid][pPosedovanjeAuta] = -1;
		}
	}
	if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
		{
			i = PlayerInfo[playerid][pPosedovanjeAuta2];
			PlayerInfo[playerid][pPosedovanjeAuta2] = -1;
		}
	}
	if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	if(response)
	{
		new vid = CijeneAuta(GetVehicleModel(GetPlayerVehicleID(playerid)));
		new poz = random(sizeof(RandomPijacaSpawn));
		VoziloInfo[i][vPozX] = RandomPijacaSpawn[poz][0];
		VoziloInfo[i][vPozY] = RandomPijacaSpawn[poz][1];
		VoziloInfo[i][vPozZ] = RandomPijacaSpawn[poz][2];
		VoziloInfo[i][vPozA] = RandomPijacaSpawn[poz][3];
		strmid(VoziloInfo[i][vVlasnik], "Niko", 0, strlen("Niko"), 999);
		VoziloInfo[i][vSpawn] = 0;
		VoziloInfo[i][vImaVlasnika] = 0; VoziloInfo[i][vZakljucan] = 0;
		VoziloInfo[i][vDroga] = 0; VoziloInfo[i][vMats] = 0; VoziloInfo[i][vRadio] = 0;
		VoziloInfo[i][vOruzije] = -1; VoziloInfo[i][vMunicija] = 0;
		DestroyVehicle(VoziloInfo[i][vID]);
		VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
		SacuvajVozilo(i); g_NovacPlus(playerid, AutoSalon[vid][1]/2);
		RTC(VoziloInfo[i][vID]);
		new string[128];
		format(string, charsmax(string), ""ZELENA" "BELA"Prodali ste vase vozilo na pijacu za %d$!",AutoSalon[vid][1]/2);
		SCM(playerid,-1, string);
	}
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(259)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			PlayAudioStreamForPlayer(playerid, "http://pink.exyuserver.com/listen.pls");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Radio Pink!");
		}
		case 1:
		{
			PlayAudioStreamForPlayer(playerid, "http://89.205.127.244:8002");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Radio Folk!");
		}
		case 2:
		{
			PlayAudioStreamForPlayer(playerid, "http://streaming.tdiradio.com:9000");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Radio TDI!");
		}
		case 3:
		{
			PlayAudioStreamForPlayer(playerid, "http://rtvmerak.com:8003");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Radio Juzni Vetar!");
		}
		case 4:
		{
			PlayAudioStreamForPlayer(playerid, "http://balkan.dj.topstream.net:8070");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Balkan DJ Radio!");
		}
		case 5:
		{
			PlayAudioStreamForPlayer(playerid, "http://rts.ipradio.rs:8002/");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Radio Los Santos 1!");
		}
		case 6:
		{
			PlayAudioStreamForPlayer(playerid, "http://streaming.radiojat.rs:12111/listen.pls");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate RadioJat!");
		}
			case 7:
		{
			PlayAudioStreamForPlayer(playerid, "http://176.31.239.83:8179/");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Dzenariku!");
		}
			case 8:
		{
			PlayAudioStreamForPlayer(playerid, "http://sh1.beotel.net:8002/");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Radio S!");
		}
			case 9:
		{
			PlayAudioStreamForPlayer(playerid, "http://www.coolradio.rs/download/playlist.pls");
			SCM(playerid,-1,"[V:RPG] | "ZELENA"Slusate Radio Cool!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(258)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			PlayAudioStreamForPlayer(playerid, "http://pink.exyuserver.com/listen.pls");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Radio Pink!");
			RadioAktiviran[playerid] = 1;
		}
		case 1:
		{
			PlayAudioStreamForPlayer(playerid, "http://89.205.127.244:8002");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Radio Folk!");
			RadioAktiviran[playerid] = 1;
		}
		case 2:
		{
			PlayAudioStreamForPlayer(playerid, "http://streaming.tdiradio.com:9000");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Radio TDI!");
			RadioAktiviran[playerid] = 1;
		}
		case 3:
		{
			PlayAudioStreamForPlayer(playerid, "http://rtvmerak.com:8003");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Radio Juzni Vetar!");
			RadioAktiviran[playerid] = 1;
		}
		case 4:
		{
			PlayAudioStreamForPlayer(playerid, "http://balkan.dj.topstream.net:8070");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Balkan DJ Radio!");
			RadioAktiviran[playerid] = 1;
		}
		case 5:
		{
			PlayAudioStreamForPlayer(playerid, "http://rts.ipradio.rs:8002/");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Radio Beograd 1!");
			RadioAktiviran[playerid] = 1;
		}
		case 6:
		{
			PlayAudioStreamForPlayer(playerid, "http://streaming.radiojat.rs:12111/listen.pls");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate RadioJat!");
			RadioAktiviran[playerid] = 1;
		}
			case 7:
		{
			PlayAudioStreamForPlayer(playerid, "http://176.31.239.83:8179/");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Dzenariku!");
			RadioAktiviran[playerid] = 1;
		}
			case 8:
		{
			PlayAudioStreamForPlayer(playerid, "http://sh1.beotel.net:8002/");
			SCM(playerid,-1,"[V:RPG] "ZELENA"Slusate Radio S!");
			RadioAktiviran[playerid] = 1;
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(252)
{
	if(!response) return 1;
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,254,DIALOG_STYLE_INPUT,"Uzmi",""SPLAVA"Unesite kolicinu droge koju zelite da uzmete iz auta...","Promeni","Izlaz");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,256,DIALOG_STYLE_INPUT,"Uzmi",""SPLAVA"Unesite kolicinu materijala koju zelite da uzmete...","Promeni","Izlaz");
		}
		case 2:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(VoziloInfo[i][vOruzije] == -1) return SCM(playerid,-1,""SIVA"Nemate oruzije u vasem vozilu!");
			GivePlayerWeapon(playerid,VoziloInfo[i][vOruzije],VoziloInfo[i][vMunicija]); VoziloInfo[i][vOruzije] = -1; VoziloInfo[i][vMunicija] = -1;
			SacuvajVozilo(i);
			SCM(playerid,-1,"[V:RPG] "ZELENA"Uzeli ste oruzije iz vaseg vozila!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(254)
{
	if(!response) return 1;
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	new droga;
	if(response)
	{
		if(sscanf(inputtext,"i",droga)) return SPD(playerid,254,DIALOG_STYLE_INPUT,"Uzmi",""SPLAVA"Unesite kolicinu droge koju zelite da uzmete iz auta...","Promeni","Izlaz");
		if(VoziloInfo[i][vDroga] < droga) return SCM(playerid,-1,""SIVA"Nemate toliko droge u vozilu!");
		if(droga < 1 || droga > 5000) return SCM(playerid,-1,""SIVA"Kolicina ne mozete ici ispod 1 i iznad 5000!");
		VoziloInfo[i][vDroga] -= droga; PlayerInfo[playerid][pDroga] += droga; SacuvajVozilo(i);
		SavePlayer(playerid);
		new string[128];
		format(string, charsmax(string), "[V:RPG] "ZELENA"Uzeli ste %d grama droge iz vaseg vozila!",droga);
		SCM(playerid,-1,string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(256)
{
	if(!response) return 1;
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	new	mats;
	if(response)
	{
		if(sscanf(inputtext,"i",mats)) return SPD(playerid,256,DIALOG_STYLE_INPUT,"Uzmi",""SPLAVA"Unesite kolicinu materijala koju zelite da uzmete...","Uzmi","Izlaz");
		if(VoziloInfo[i][vMats] < mats) return SCM(playerid,-1,""SIVA"Nemate toliko materijala u vozilu!");
		if(mats < 1 || mats > 5000) return SCM(playerid,-1,""SIVA"Kolicina ne mozete ici ispod 1 i iznad 5000!");
		VoziloInfo[i][vMats] -= mats; PlayerInfo[playerid][pMats] += mats; SacuvajVozilo(i);
		new string[128];
		format(string, charsmax(string), "[V:RPG] "ZELENA"Uzeli ste %d materijala iz vaseg vozila!",mats);
		SCM(playerid,-1,string);
		SavePlayer(playerid);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(2444)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		new Float:Poz[3]; PosaoGPS[playerid] = 1;
		GetVehiclePos(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID], Poz[0], Poz[1], Poz[2]);
		SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vase auto je oznaceno "SRWBOJA"crveno "BELA"na mapi!");
	}
	else if(listitem == 1)
	{
		new Float:Poz[3]; PosaoGPS[playerid] = 1;
		GetVehiclePos(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID], Poz[0], Poz[1], Poz[2]);
		SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
		SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vase auto je oznaceno "SRWBOJA"crveno "BELA"na mapi!");
	}
	return 1;
}
fDialog(244)
{
	if(!response) return 1;
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,246,DIALOG_STYLE_INPUT,"Ostavi",""SPLAVA"Unesite kolicinu droge koju zelite da ostavite u auto (MAX 5000)...","Promeni","Izlaz");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[i][vID]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u svom vozilu!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste na mestu vozaca!");
			SPD(playerid,248,DIALOG_STYLE_INPUT,"Ostavi",""SPLAVA"Unesite kolicinu materijala koju zelite da ostavite u auto (MAX 5000)...","Promeni","Izlaz");
		}
		case 2:
		{
			if(VoziloInfo[i][vOruzije] != -1) return SCM(playerid,-1,""SIVA"Vec imas oruzije u vozilu!");
			if(GetPlayerWeapon(playerid) <= 0) return SCM(playerid,-1,""SIVA"Nemas oruzije u ruci!");
			VoziloInfo[i][vOruzije] = GetPlayerWeapon(playerid); VoziloInfo[i][vMunicija] = GetPlayerAmmo(playerid);
			SacuvajVozilo(i); SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), 0); ResetPlayerWeapons(playerid);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(246)
{
	if(!response) return 1;
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	new droga;
	if(response)
	{
		if(sscanf(inputtext,"i",droga)) return SPD(playerid,246,DIALOG_STYLE_INPUT,"Ostavi",""SPLAVA"Unesite kolicinu droge koju zelite da ostavite u auto (MAX 5000)...","Ostavi","Izlaz");
		if(PlayerInfo[playerid][pDroga] < droga) return SCM(playerid,-1,""SIVA"Nemate toliko droge!");
		if(VoziloInfo[i][vDroga] + droga >= 5000) return SCM(playerid,-1,""SIVA"Ne mozete toliko droge ostaviti u gepek (MAX 5000)!");
		if(droga < 1 || droga > 5000) return SCM(playerid,-1,""SIVA"Kolicina ne mozete ici ispod 1 i iznad 5000!");
		VoziloInfo[i][vDroga] += droga; PlayerInfo[playerid][pDroga] -= droga; SacuvajVozilo(i);
		new string[128];
		format(string, charsmax(string), "[V:RPG] "ZELENA"Ostavili ste %d grama droge u vase vozilo!",droga);
		SCM(playerid,-1,string);
		SavePlayer(playerid);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(248)
{
	if(!response) return 1;
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	new mats;
	if(response)
	{
		if(sscanf(inputtext,"i",mats)) return SPD(playerid,248,DIALOG_STYLE_INPUT,"Ostavi",""SPLAVA"Unesite kolicinu materijala koju zelite da ostavite u auto (MAX 5000)...","Ostavi","Izlaz");
		if(PlayerInfo[playerid][pMats] < mats) return SCM(playerid,-1,""SIVA"Nemate toliko materijala!");
		if(VoziloInfo[i][vMats] + mats >= 5000) return SCM(playerid,-1,""SIVA"Ne mozete toliko materijala ostaviti u gepek (MAX 5000)!");
		if(mats < 1 || mats > 5000) return SCM(playerid,-1,""SIVA"Kolicina ne mozete ici ispod 1 i iznad 5000!");
		VoziloInfo[i][vMats] += mats; PlayerInfo[playerid][pMats] -= mats; SacuvajVozilo(i);
		new string[128];
		format(string, charsmax(string), "[V:RPG] "ZELENA"Ostavili ste %d materijala u vase vozilo!",mats);
		SCM(playerid,-1,string);
		SavePlayer(playerid);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////
fDialog(242)
{
	if(!response) return 1;
	new i = -1;
    if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta];
        }
    }
    if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
    {
        if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
        {
            i = PlayerInfo[playerid][pPosedovanjeAuta2];
        }
    }
    if(i == -1) return SCM(playerid,-1,""SIVA"Niste u svom vozilu!");
	new boja[2];
	if(response)
	{
		if(sscanf(inputtext,"ii",boja[0],boja[1])) return SPD(playerid,242,DIALOG_STYLE_INPUT,""BELA"Boja Auta",""ZELENA"Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\n"ZELENA"Cena Boje: 500$","Promeni","Izlaz");
		if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca (500$)!");
		if(boja[0] < 0 || boja[0] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		if(boja[1] < 0 || boja[1] > 255) return SCM(playerid, -1, "[V:RPG] "SRWBOJA"ID boje ne moze ici ispod 1 i iznad 255 !");
		VoziloInfo[i][vBoja1] = boja[0];
		VoziloInfo[i][vBoja2] = boja[1];
		g_NovacMinus(playerid,500);
		ChangeVehicleColor(VoziloInfo[i][vID],boja[0],boja[1]);
		SacuvajVozilo(i);
		SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste ofarbali vase auto za 500$!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////
fDialog(238)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PilotVozila(GetPlayerVehicleID(playerid)))
			{
				SetPlayerCheckpoint(playerid, 1847.4221,-2414.0798,13.5547, 5.0);
				LetSF[playerid] = 1; SCM(playerid,-1,""VARADERO"Krenuli ste sa poslom, prevozite putnike u SF!");
				SetTimerEx("WarpHack", 5000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u avionu!");
		}
		case 1:
		{
			if(PilotVozila(GetPlayerVehicleID(playerid)))
			{
				SetPlayerCheckpoint(playerid, 1847.4221,-2414.0798,13.5547, 5.0);
				LetLV[playerid] = 1; SCM(playerid,-1,""VARADERO"Krenuli ste sa poslom, prevozite putnike u LV!");
				SetTimerEx("WarpHack", 5000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u avionu!");
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////
fDialog(236)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(KamiondzijaVozila(GetPlayerVehicleID(playerid)))
			{
				SetPlayerCheckpoint(playerid, 1631.9983,680.3541,11.4254, 4.0);
				TuraSF[playerid] = 1; SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Krenuli ste sa prevozenjem robe!");
	            SetTimerEx("WarpHack", 10000, false, "i", playerid);
                SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u kamionu!");
		}
		case 1:
		{
			if(KamiondzijaVozila(GetPlayerVehicleID(playerid)))
			{
				SetPlayerCheckpoint(playerid, 1800.1248,-2048.2534,13.5678, 4.0);
				TuraLV[playerid] = 1; SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Krenuli ste sa prevozenjem robe!");
				SetTimerEx("WarpHack", 10000, false, "i", playerid);
				SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u kamionu!");
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////
fDialog(234)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) >= vkomunalno[0] && GetPlayerVehicleID(playerid) <= vkomunalno[5])
			{
				SetPlayerCheckpoint(playerid, 1147.9977,-1382.6482,13.8178, 4.0);
				SmeceSakuplja[playerid] = 1;
				SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Krenuli ste sa kupljenjem smeca!");
    			SetTimerEx("WarpHack", 5000, false, "i", playerid);
                SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u vozilu za kupljenje smeca!");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) >= vkomunalno[6] && GetPlayerVehicleID(playerid) <= vkomunalno[11])
			{
				SetPlayerCheckpoint(playerid, 1427.2660,-1612.3313,13.3828, 4.0);
				CistiUlice[playerid] = 1;
				SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Krenuli ste sa ciscenjem ulica!");
    			SetTimerEx("WarpHack", 10000, false, "i", playerid);
                SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u vozilu za ciscenje ulica!");
		}
		case 2:
		{
			if(GetPlayerVehicleID(playerid) >= vkomunalno[6] && GetPlayerVehicleID(playerid) <= vkomunalno[11])
			{
				SetPlayerCheckpoint(playerid, 1415.5536,-1589.9919,13.3638, 4.0);
				CistiUlice[playerid] = 20;
				SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Krenuli ste sa ciscenjem ulica!");
    			SetTimerEx("WarpHack", 10000, false, "i", playerid);
                SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u vozilu za ciscenje ulica!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////
fDialog(232)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerVehicleID(playerid) >= postavozilo[0] && GetPlayerVehicleID(playerid) <= postavozilo[5])
			{
				new posta = random(sizeof(PostaRand));
				SetPlayerCheckpoint(playerid, PostaRand[posta][0], PostaRand[posta][1], PostaRand[posta][2], 3.0);
				PostaRaznesi[playerid] = 1;
				SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Krenuli ste sa raznosenjem poste!");
                SetTimerEx("WarpHack", 10000, false, "i", playerid);
                SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u vozilu za raznosenje poste!");
		}
		case 1:
		{
			if(GetPlayerVehicleID(playerid) >= postavozilo[6] && GetPlayerVehicleID(playerid) <= postavozilo[9])
			{
				SetPlayerCheckpoint(playerid, 800.8698,-1596.3676,13.5469, 4.0);
				PostaPreuzmi[playerid] = 1;
				SCM(playerid,-1,""VARADERO"[V:RPG] | "BELA"Krenuli ste sa preuzimanjem poste!");
    			SetTimerEx("WarpHack", 10000, false, "i", playerid);
                SetPVarInt(playerid, "WarpHack", 3);
			}
			else return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste u vozilu za preuzimanje poste!");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////
fDialog(230)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate dovoljno novca (200$)!");
			new panels, doors, lights, tires;
			GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, tires);
			UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, 0);
			FirmaNovac(96, 200); g_NovacMinus(playerid, 200); SCM(playerid,-1,""SPLAVA"[Radionica]: "BELA"Uspesno ste popravili gume za 200$!");
		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 250) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate dovoljno novca (250$)!");
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			g_NovacMinus(playerid, 250); FirmaNovac(96, 250);
			SCM(playerid,-1,""SPLAVA"[Radionica]: "BELA"Uspesno ste popravili motor vozila za 250$!");
		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate dovoljno novca (250$)!");
			new panels, doors, lights, tires;
			GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, tires);
			UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, 0);
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			g_NovacMinus(playerid, 500); FirmaNovac(96, 500);
			SCM(playerid,-1,""SPLAVA"[Radionica]: "BELA"Uspesno ste popravili kompletno vozilo za 500$!");
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////
fDialog(228)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			SetPlayerCheckpoint(playerid, 1753.4373,-1894.1589,13.5572, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla bus vozac je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 1:
		{
			SetPlayerCheckpoint(playerid, 1961.0729,-1244.3467,19.9704, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla kosac trave je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 2:
		{
			SetPlayerCheckpoint(playerid, 1821.8009, -1444.2721, 13.5947, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla mehanicar je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 3:
		{
			SetPlayerCheckpoint(playerid, 986.5231,-1252.8446,16.9844, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla postar je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 4:
		{
			SetPlayerCheckpoint(playerid, 1569.8442,-1552.7067,13.5535, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla komunalac je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 5:
		{
			SetPlayerCheckpoint(playerid, 1881.7637,-1596.7992,13.5594, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla gradjevinar je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 6:
		{
			SetPlayerCheckpoint(playerid, 1145.9216,-1295.1055,13.6410, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla bolnicar je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 7:
		{
			SetPlayerCheckpoint(playerid, 939.8203,-1086.7238,24.2962, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla grobar je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 8:
		{
			SetPlayerCheckpoint(playerid, 2351.9966,-1169.7247,28.0289, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla dzeparos je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 9:
		{
			SetPlayerCheckpoint(playerid, -38.3979,56.8901,3.1172, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla farmer je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 10:
		{
			SetPlayerCheckpoint(playerid, 1743.0222,-1943.9714,13.5683, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla masinovodja je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 11:
		{
			SetPlayerCheckpoint(playerid, 1628.9053,-1847.5642,13.5379, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla dostavljac je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 12:
		{
			SetPlayerCheckpoint(playerid, 1811.3263,-2066.6699,13.5541, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla kamiondzija je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 13:
		{
			SetPlayerCheckpoint(playerid, 1892.8370,-2328.5259,13.5469, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla pilot je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 14:
		{
			SetPlayerCheckpoint(playerid, 1083.2322,-1226.7747,15.8203, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla elektricar je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 15:
		{
			SetPlayerCheckpoint(playerid, 1778.6904,-1694.7854,13.4660, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla vodoinstalatera je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 16:
		{
			SetPlayerCheckpoint(playerid, 585.4147,871.9699,-42.4973, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla rudar je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 17:
		{
			SetPlayerCheckpoint(playerid, 110.4038,1106.6428,13.6094, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla drvosece je oznacena crveno na mapi!");
			PosaoGPS[playerid] = 1;
		}
		case 18:
		{
  			SetPlayerCheckpoint(playerid, 2899.5957,-1988.0341,8.1498, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla ribara je oznacena crveno na mapi!");
 			PosaoGPS[playerid] = 1;
		}
		case 19:
		{
  			SetPlayerCheckpoint(playerid, -539.9475,-518.3316,-23.5380, 3.0);
			SCM(playerid, -1, "[V:RPG] "SRWBOJA"Lokacija posla coca cola je oznacena crveno na mapi!");
 			PosaoGPS[playerid] = 1;
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(224)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			SetPlayerCheckpoint(playerid, 1818.7271,-1908.1355,13.3938, 5.0); // started
			SCM(playerid, -1, ""VARADERO"[L-1]: "BELA"Krenuli ste sa prevozom putnika, stanica je oznacena crveno na mapi!"); // You have started driving, go to the checkpoint.
			BusLinija[playerid] = 1; // sets variable that he started .
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
		}
		case 1:
		{
			SetPlayerCheckpoint(playerid, 1836.7954,-1178.5555,23.6376, 5.0);
			SCM(playerid, -1, ""VARADERO"[L-2]: "BELA"Krenuli ste sa prevozom putnika, stanica je oznacena crveno na mapi!");
			BusLinija[playerid] = 15; // other line same crap xd
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
		}
		case 2:
		{
			SetPlayerCheckpoint(playerid, 1819.9722,-1908.8911,13.3928, 5.0);
			SCM(playerid, -1, ""VARADERO"[L-3]: "BELA"Krenuli ste sa prevozom putnika, stanica je oznacena crveno na mapi!");
			BusLinija[playerid] = 30;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
		}
		case 3:
		{
			SetPlayerCheckpoint(playerid, 1924.6313,2314.9143,10.6719, 5.0);
			SCM(playerid, -1, ""VARADERO"[L-4]: "BELA"Krenuli ste sa prevozom putnika, stanica je oznacena crveno na mapi!");
			BusLinija[playerid] = 50;
			SetTimerEx("WarpHack", 10000, false, "i", playerid);
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(222)
{
	if(!response) return 1;
	if(FirmaInfo[KioskKupovina[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[KioskKupovina[playerid]][fProizvodi]--;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate mobilni telefon!");
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			PlayerInfo[playerid][pMobKredit] += 20;
			g_NovacMinus(playerid,20);
			FirmaNovac(KioskKupovina[playerid],20);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste 20 kredita za 20$!");
			SavePlayer(playerid);
		}
		case 1:
		{
			if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate mobilni telefon!");
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 50$!");
			PlayerInfo[playerid][pMobKredit] += 50;
			g_NovacMinus(playerid,50);
			FirmaNovac(KioskKupovina[playerid],50);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste 50 kredita za 50$!");
            SavePlayer(playerid);
		}
		case 2:
		{
			if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate mobilni telefon!");
			if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
			PlayerInfo[playerid][pMobKredit] += 100;
			g_NovacMinus(playerid,100);
			FirmaNovac(KioskKupovina[playerid],100);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste 100 kredita za 100$!");
			SavePlayer(playerid);
		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			g_NovacMinus(playerid,10);
			FirmaNovac(KioskKupovina[playerid],10);
			SetPlayerSpecialAction( playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste sok za 10$!");
		}
		case 4:
		{
			if(PlayerInfo[playerid][pCigare] != 0) {
				new string[128];
				format(string, charsmax(string), ""SRWBOJA"[V:RPG] "SIVA"Vec imas %d cigara prvo ih popusi!",PlayerInfo[playerid][pCigare]);
				return SCM(playerid,-1,string);
			}
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			PlayerInfo[playerid][pCigare] = 20;
			g_NovacMinus(playerid,20);
			FirmaNovac(KioskKupovina[playerid],20);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste cigare | Sada mozete zapliti cigaru (/zapalicigaru | /ugasicigaru)!");
			SavePlayer(playerid);
		}
		case 5:
		{
			if(PlayerInfo[playerid][pUpaljac] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes upaljac!");
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			PlayerInfo[playerid][pUpaljac] = 10;
			g_NovacMinus(playerid,10);
			FirmaNovac(KioskKupovina[playerid],10);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste upaljac za 10$!");
			SavePlayer(playerid);
		}
		case 6:
		{
			new string[128];
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			new Float:hp, Float:nhp; GetPlayerHealth(playerid, hp);
			nhp = floatadd(hp, 10.0); SetPlayerHealth(playerid, nhp);
			if(nhp > 99.0) SetPlayerHealth(playerid, 99.0);
			if(nhp >= 99.0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste gladni!");
			format(string, sizeof(string), "* %s jede cokoladicu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			g_NovacMinus(playerid,10);
			FirmaNovac(KioskKupovina[playerid],10);
		}
		case 7:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 50$!");
			g_NovacMinus(playerid,50);
			PlayerInfo[playerid][pKartica] = 1;
			FirmaNovac(KioskKupovina[playerid],50);
			SCM(playerid,-1,""ZELENA"Kupili ste halo karticu (( Koristite kod govornice ))!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(200)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	switch(listitem)
	{
		case 0:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			new string[275],string1[275],string2[550],z[3]; if(VikendiceInfo[i][viZatvoreno] == 1) z = "Da"; else z = "Ne";
			format(string,sizeof(string),""BELA"_______________________________________\n\n"SRWBOJA"Vlasnik vikendice: "BELA"%s\n"SRWBOJA"Level: "BELA"%d\n"SRWBOJA"Cena: "BELA"%d$\n"SRWBOJA"ID: "BELA"%d\n",VikendiceInfo[i][viVlasnik],VikendiceInfo[i][viLevel],VikendiceInfo[i][viCena],i);
			format(string1,sizeof(string1),""SRWBOJA"Zatvoreno: "BELA"%s\n"SRWBOJA"Droga: "BELA"%d\n"SRWBOJA"Mats: "BELA"%d\n_______________________________________", z,VikendiceInfo[i][viDroga],VikendiceInfo[i][viMats]);
			format(string2, sizeof(string2), "%s%s", string, string1);
			SPD(playerid, 202, DIALOG_STYLE_MSGBOX, ""BELA"Vikendica Informacije", string2, "Ok", "Izlaz");
		}
		case 1:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			if(VikendiceInfo[i][viZatvoreno] == 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vikendica je vec otkljucan!");
			VikendiceInfo[i][viZatvoreno] = 0; SacuvajVikendicu(i);
			SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Vikendica je otkljucana!");
		}
		case 2:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			if(VikendiceInfo[i][viZatvoreno] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vikendica je vec zakljucana!");
			VikendiceInfo[i][viZatvoreno] = 1; SacuvajVikendicu(i);
			SCM(playerid,-1, ""SRWBOJA"[V:RPG] "BELA"Vikendica je zakljucana!");
		}
		case 3:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			SPD(playerid, 204, DIALOG_STYLE_LIST, ""BELA"Ostavi u vikendici", ""SPLAVA"(1). "BELA"Drogu\n"SPLAVA"(2). "BELA"Mats", "Ok", "Izlaz");
		}
		case 4:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			SPD(playerid, 210, DIALOG_STYLE_LIST, ""BELA"Uzmi iz vikendice", ""SPLAVA"(1). "BELA"Drogu\n"SPLAVA"(2). "BELA"Mats", "Ok", "Izlaz");
		}
		case 5:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste ispred vase vikendice!");
			if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
			new cena1 = (VikendiceInfo[i][viCena]/4)*2;
			new string[256];
			format(string,sizeof(string), ""BELA"Prodaja vikendice drzavi\n\n"SPLAVA"Dali ste sigurni da zelite da prodate vikendicu drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", cena1);
			SPD(playerid, 216, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja vikendice drzavi", string, "Prodaj", "Izlaz");
		}
		case 6:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste ispred vase vikendice!");
			SPD(playerid, 220, DIALOG_STYLE_LIST, ""BELA"Preuredi vikendicu", ""SPLAVA"(1). "BELA"Standardan enterijer\n"SPLAVA"(2). "BELA"Enterijer 1 (5000$)\n"SPLAVA"(3). "BELA"Enterijer 2 (10000$)", "Ok", "Izlaz");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(220)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new idvi = PlayerInfo[playerid][pPosedovanjeVikendice];
	switch(listitem)
	{
		case 0:
		{
			VikendiceInfo[idvi][viIzlazX] = 421.9191;
			VikendiceInfo[idvi][viIzlazY] = 2536.4529;
			VikendiceInfo[idvi][viIzlazZ] = 10.0000;
			VikendiceInfo[idvi][viInt] = 10;
			SacuvajVikendicu(idvi);
			SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Uspesno ste promenili enterijer vikendice u standardan enterijer!");
		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 5000) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dovoljno novca 5000$!");
			VikendiceInfo[idvi][viIzlazX] = 443.4780;
			VikendiceInfo[idvi][viIzlazY] = 509.2601;
			VikendiceInfo[idvi][viIzlazZ] = 1001.4195;
			VikendiceInfo[idvi][viInt] = 12;
			SacuvajVikendicu(idvi);
			g_NovacMinus(playerid,5000); SavePlayer(playerid);
			SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Uspesno ste promenili enterijer vikendice (5000$)!");
		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10000) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dovoljno novca 10000$!");
			VikendiceInfo[idvi][viIzlazX] = 309.4471;
			VikendiceInfo[idvi][viIzlazY] = 311.4454;
			VikendiceInfo[idvi][viIzlazZ] = 1003.3047;
			VikendiceInfo[idvi][viInt] = 4;
			SacuvajVikendicu(idvi);
			g_NovacMinus(playerid,5000); SavePlayer(playerid);
			SCM(playerid,-1,""SPLAVA"[V:RPG] "BELA"Uspesno ste promenili enterijer vikendice (10000$)!");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(216)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	if(response)
	{
		new cena1 = (VikendiceInfo[i][viCena]/4)*2;
		g_NovacPlus(playerid, cena1);
		VikendiceInfo[i][viProveraVlasnika] = 0; VikendiceInfo[i][viDroga] = 0; VikendiceInfo[i][viMats] = 0; VikendiceInfo[i][viZatvoreno] = 1;
		strmid(VikendiceInfo[i][viVlasnik], "Niko", 0, strlen("Niko"), 255);
		PlayerInfo[playerid][pPosedovanjeVikendice] = -1;
		SacuvajVikendicu(i); VikendicaLP(i);
		new string[128];
		format(string, charsmax(string), ""SPLAVA"[V:RPG] "BELA"Prodali ste vikendicu za %d$!",cena1);
		SCM(playerid,-1,string);
		SavePlayer(playerid);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(214)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,214,DIALOG_STYLE_INPUT, ""VARADERO"Uzimanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da uzmete", "Ostavi", "Izlaz");
		if(iznos > VikendiceInfo[i][viMats]) return SCM(playerid,-1,""SIVA"Nemate toliko materijala u vikendici!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		VikendiceInfo[i][viMats] -= iznos; PlayerInfo[playerid][pMats] += iznos; SacuvajVikendicu(i); SavePlayer(playerid);
		format(string,sizeof(string),""SPLAVA"[V:RPG] "BELA"Uzeli ste iz vikendice %d materijala!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(212)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,212,DIALOG_STYLE_INPUT, ""VARADERO"Uzimanje Droge", ""BELA"Unesite kolicinu droge koju zelite da uzmete", "Ostavi", "Izlaz");
		if(iznos > VikendiceInfo[i][viDroga]) return SCM(playerid,-1,""SIVA"Nemate toliko droge u vikendici!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		VikendiceInfo[i][viDroga] -= iznos; PlayerInfo[playerid][pDroga] += iznos; SacuvajVikendicu(i); SavePlayer(playerid);
		format(string,sizeof(string),""SPLAVA"[V:RPG] "BELA"Uzeli ste iz vikendice %dg droge!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(210)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	switch(listitem)
	{
		case 0:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			SPD(playerid,212,DIALOG_STYLE_INPUT, ""VARADERO"Uzimanje Droge", ""BELA"Unesite kolicinu droge koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 1:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			SPD(playerid,214,DIALOG_STYLE_INPUT, ""VARADERO"Uzimanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da uzmete", "Ostavi", "Izlaz");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(208)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,208,DIALOG_STYLE_INPUT, ""VARADERO"Ostavljanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da ostavite", "Ostavi", "Izlaz");
		if(iznos > PlayerInfo[playerid][pMats]) return SCM(playerid,-1,""SIVA"Nemate toliko materijala!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		VikendiceInfo[i][viMats] += iznos; PlayerInfo[playerid][pMats] -= iznos; SacuvajVikendicu(i); SavePlayer(playerid);
		format(string,sizeof(string),""SPLAVA"[V:RPG] "BELA"Ostavili ste u vikendicu %d materijala!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(206)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,206,DIALOG_STYLE_INPUT, ""VARADERO"Ostavljanje Droge", ""BELA"Unesite kolicinu droge koju zelite da ostavite", "Ostavi", "Izlaz");
		if(iznos > PlayerInfo[playerid][pDroga]) return SCM(playerid,-1,""SIVA"Nemate toliko droge!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		VikendiceInfo[i][viDroga] += iznos; PlayerInfo[playerid][pDroga] -= iznos; SacuvajVikendicu(i); SavePlayer(playerid);
		format(string,sizeof(string),""SPLAVA"[V:RPG] "BELA"Ostavili ste u vikendicu %dg droge!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(204)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate vikendicu!");
	new i = PlayerInfo[playerid][pPosedovanjeVikendice];
	switch(listitem)
	{
		case 0:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			SPD(playerid,206,DIALOG_STYLE_INPUT, ""VARADERO"Ostavljanje Droge", ""BELA"Unesite kolicinu droge koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 1:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "VARADERO"Niste u vasoj vikendici!");
			SPD(playerid,208,DIALOG_STYLE_INPUT, ""VARADERO"Ostavljanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da ostavite", "Ostavi", "Izlaz");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(180)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	new i = PlayerInfo[playerid][pPosedovanjeStana];
	switch(listitem)
	{
		case 0:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Niste u vasem stanu!");
			new string[400],z[3],o[3]; if(StanInfo[i][sZatvoreno] == 1) z = "Da"; else z = "Ne"; if(StanInfo[i][sOruzije] == -1) o = "Ne"; else o = "Da";
			format(string,sizeof(string),""BELA"_______________________________________\n\n"VARADERO"Vlasnik stana: "SRWBOJA"%s\n"VARADERO"Level: "BELA"%d\n"VARADERO"Cena: "BELA"%d$\n"VARADERO"ID: "BELA"%d\n"VARADERO"Zatvoreno: "BELA"%s\n"VARADERO"Oruzije: "BELA"%s\n"VARADERO"Novac: "BELA"%d$\n_______________________________________",StanInfo[i][sVlasnik],StanInfo[i][sLevel],StanInfo[i][sCena],i,z,o,StanInfo[i][sNovac]);
			SPD(playerid, 182, DIALOG_STYLE_MSGBOX, ""BELA"Stan Informacije", string, "Ok", "Izlaz");
		}
		case 1:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Niste u vasem stanu!");
			if(StanInfo[i][sZatvoreno] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Stan je vec otkljucan!");
			StanInfo[i][sZatvoreno] = 0; SacuvajStan(i);
			SCM(playerid,-1, ""VARADERO"[V:RPG] "BELA"Stan otkljucana!");
		}
		case 2:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Niste u vasem stanu!");
			if(StanInfo[i][sZatvoreno] == 1) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Stan je vec zakljucan!");
			StanInfo[i][sZatvoreno] = 1; SacuvajStan(i);
			SCM(playerid,-1, ""VARADERO"[V:RPG] "BELA"Stan zakljucan!");
		}
		case 3:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Niste u vasem stanu!");
			SPD(playerid, 184, DIALOG_STYLE_LIST, ""BELA"Ostavi u stanu", ""VARADERO"(1). "BELA"Novac\n"VARADERO"(2). "BELA"Oruzije", "Ok", "Izlaz");
		}
		case 4:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Niste u vasem stanu!");
			SPD(playerid, 186, DIALOG_STYLE_LIST, ""BELA"Uzmi iz stana", ""VARADERO"(1). "BELA"Novac\n"VARADERO"(2). "BELA"Oruzije", "Ok", "Izlaz");
		}
		case 5:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Morate biti ispred vaseg stana da bi ga prodali!");
			if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
			new cena1 = (StanInfo[i][sCena]/4)*2;
			new string[256];
			format(string,sizeof(string), ""BELA"Prodaja stana drzavi\n\n"VARADERO"Dali ste sigurni da zelite da prodate stan drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", cena1);
			SPD(playerid, 192, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja stana drzavi", string, "Prodaj", "Izlaz");
		}
		case 6:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Morate biti ispred vaseg stana da bi ga preuredili!");
			SPD(playerid, 194, DIALOG_STYLE_LIST, ""BELA"Preuredjivanje", ""VARADERO"(1). "BELA"Standardan Enterijer\n"VARADERO"(2). "BELA"Enterijer 1 (5000$)\n"VARADERO"(3). "BELA"Enterijer 2 (10000$)\n"VARADERO"(3). "BELA"Enterijer 3 (15000$)", "Ok", "Izlaz");
		}
		case 7:
		{
			SetPlayerCheckpoint(playerid, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ], 4.0);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vas stran je oznacen "SRWBOJA"crveno "BELA"na mapi!");
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(194)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	new i = PlayerInfo[playerid][pPosedovanjeStana];
	switch(listitem)
	{
		case 0:
		{
			StanInfo[i][sIzlazX] = 244.1522;
			StanInfo[i][sIzlazY] = 305.0730;
			StanInfo[i][sIzlazZ] = 999.1484;
			StanInfo[i][sInt] = 1;
			SacuvajStan(i);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Uspesno ste promenili enterijer stana u standardan enterijer!");
		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 5000) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dovoljno novca 5000$!");
			StanInfo[i][sIzlazX] = 267.2224;
			StanInfo[i][sIzlazY] = 304.9358;
			StanInfo[i][sIzlazZ] = 999.1484;
			StanInfo[i][sInt] = 2;
			g_NovacMinus(playerid,5000); SacuvajStan(i); SavePlayer(playerid);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Uspesno ste promenili enterijer stana (5000$)!");
		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10000) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dovoljno novca 10000$!");
			StanInfo[i][sIzlazX] = 2217.6794;
			StanInfo[i][sIzlazY] = -1076.2312;
			StanInfo[i][sIzlazZ] = 1050.4844;
			StanInfo[i][sInt] = 1;
			g_NovacMinus(playerid,10000); SacuvajStan(i); SavePlayer(playerid);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Uspesno ste promenili enterijer stana (10000$)!");
		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15000) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemate dovoljno novca 15000$!");
			StanInfo[i][sIzlazX] = 2282.9861;
			StanInfo[i][sIzlazY] = -1139.9357;
			StanInfo[i][sIzlazZ] = 1050.8984;
			StanInfo[i][sInt] = 11;
			g_NovacMinus(playerid,15000); SacuvajStan(i); SavePlayer(playerid);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Uspesno ste promenili enterijer stana (15000$)!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(192)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	new i = PlayerInfo[playerid][pPosedovanjeStana];
	if(response)
	{
		new cena1 = (StanInfo[i][sCena]/4)*2;
		g_NovacPlus(playerid, cena1);
		StanInfo[i][sProveraVlasnika] = 0; StanInfo[i][sNovac] = 0; StanInfo[i][sOruzije] = -1; StanInfo[i][sMunicija] = 0; StanInfo[i][sZatvoreno] = 1;
		strmid(StanInfo[i][sVlasnik], "Niko", 0, strlen("Niko"), 255);
		PlayerInfo[playerid][pPosedovanjeStana] = -1;
		SacuvajStan(i); StanLP(i);
		new string[128];
		format(string, charsmax(string), ""VARADERO"[V:RPG] "BELA"Prodali ste stan za %d$!",cena1);
		SCM(playerid,-1, string);
		SavePlayer(playerid);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(190)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	new i = PlayerInfo[playerid][pPosedovanjeStana];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,190,DIALOG_STYLE_INPUT, ""VARADERO"Uzimanje Novca", ""BELA"Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");
		if(iznos > StanInfo[i][sNovac]) return SCM(playerid,-1,""SIVA"Nemate toliko novca u stanu!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		StanInfo[i][sNovac] -= iznos; g_NovacPlus(playerid, iznos); SacuvajStan(i); SavePlayer(playerid);
		format(string,sizeof(string),""VARADERO"[V:RPG] "BELA"Uzeli ste iz stana %d$ novca!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(186)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	new i = PlayerInfo[playerid][pPosedovanjeStana];
	switch(listitem)
	{
		case 0:
		{
			SPD(playerid,190,DIALOG_STYLE_INPUT, ""VARADERO"Uzimanje Novca", ""BELA"Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 1:
		{
			if(StanInfo[i][sOruzije] == -1) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemas oruzije u stanu!");
			GivePlayerWeapon(playerid,StanInfo[i][sOruzije],StanInfo[i][sMunicija]); StanInfo[i][sOruzije] = -1; StanInfo[i][sMunicija] = -1;
			SacuvajStan(i); SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Uzeli ste oruzije iz vaseg stana!");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(184)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	new i = PlayerInfo[playerid][pPosedovanjeStana];
	switch(listitem)
	{
		case 0:
		{
			SPD(playerid,188,DIALOG_STYLE_INPUT, ""VARADERO"Ostavljanje Novca", ""BELA"Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 1:
		{
			if(StanInfo[i][sOruzije] != -1) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vec imas oruzije u stanu!");
			if(GetPlayerWeapon(playerid) <= 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemas oruzije u ruci!");
			StanInfo[i][sOruzije] = GetPlayerWeapon(playerid); StanInfo[i][sMunicija] = GetPlayerAmmo(playerid);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Ostavili ste oruzije u stanu!"); SacuvajStan(i); SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), 0);
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(188)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeStana] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate stan!");
	new i = PlayerInfo[playerid][pPosedovanjeStana];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,188,DIALOG_STYLE_INPUT, ""VARADERO"Ostavljanje Novca", ""BELA"Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");
		if(iznos > PlayerInfo[playerid][pNovacDzep]) return SCM(playerid,-1,""SIVA"Nemate toliko novca!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		StanInfo[i][sNovac] += iznos; g_NovacMinus(playerid,iznos); SacuvajStan(i); SavePlayer(playerid);
		format(string,sizeof(string),""VARADERO"[V:RPG] "BELA"Ostavili ste u stan %d$ novca!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
fDialog(10010)
{
	if(!response) return 1;
	new lotto1 = strval(inputtext);
	if(lotto1 < 1 || lotto1 > 100)
	{
		SCM(playerid, -1, "   Ne mozete igrati manji broj od 1 ili veci od 100 !");
		return 1;
	}
	PlayerInfo[playerid][pLottoNr] = lotto1;
	new string[128];
	format(string, charsmax(string), "Izabrali ste broj: %i", lotto1);
	SCM(playerid, -1, string);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(154)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	switch(listitem)
	{
		case 0:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			new string1[275], string2[275], string[550], z[3], o[3], g[3]; if(KucaInfo[i][kZatvoreno] == 1) z = "Da"; else z = "Ne"; if(KucaInfo[i][kOdjeca] == 0) o = "Ne"; else o = "Da"; if(KucaInfo[i][kOruzije] == -1) g = "Ne"; else g = "Da";
			format(string1,sizeof(string1),""BELA"_______________________________________\n\n"HZELENA"Vlasnik kuce: "SRWBOJA"%s\n"HZELENA"Level: "BELA"%d\n"HZELENA"Cena: "BELA"%d$\n"HZELENA"Cena Renta: "BELA"%d\n",KucaInfo[i][kVlasnik],KucaInfo[i][kLevel],KucaInfo[i][kCena],KucaInfo[i][kCenaRenta]);
			format(string2,sizeof(string2),""HZELENA"ID: "BELA"%d\n"HZELENA"Zatvoreno: "BELA"%s\n"HZELENA"Novac: "BELA"%d\n"HZELENA"Droga: "BELA"%d\n"HZELENA"Mats: "BELA"%d\n"HZELENA"Odjeca: "BELA"%s\n"HZELENA"Oruzije: "BELA"%s\n_______________________________________",i,z,KucaInfo[i][kNovac],KucaInfo[i][kDroga],KucaInfo[i][kMats],o,g);
			format(string, sizeof(string), "%s%s", string1, string2);
			SPD(playerid, 156, DIALOG_STYLE_MSGBOX, ""BELA"Kuca Informacije", string, "Ok", "Izlaz");
		}
		case 1:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			if(KucaInfo[i][kZatvoreno] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec je otkljucana!");
			KucaInfo[i][kZatvoreno] = 0; SacuvajKucu(i);
			SCM(playerid,-1, "[V:RPG] "HZELENA"Kuca otkljucana!");
		}
		case 2:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			if(KucaInfo[i][kZatvoreno] == 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Vec je zakljucana!");
			KucaInfo[i][kZatvoreno] = 1; SacuvajKucu(i);
			SCM(playerid,-1, "[V:RPG] "HZELENA"Kuca zakljucana!");
		}
		case 3:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			SPD(playerid, 158, DIALOG_STYLE_LIST, ""BELA"Ostavi u kuci", ""HZELENA"(1). "BELA"Novac\n"HZELENA"(2). "BELA"Drogu\n"HZELENA"(3). "BELA"Mats\n"HZELENA"(4). "BELA"Odelo\n"HZELENA"(5). "BELA"Oruzije", "Ok", "Izlaz");
		}
		case 4:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			SPD(playerid, 166, DIALOG_STYLE_LIST, ""BELA"Uzmi iz kuce", ""HZELENA"(1). "BELA"Novac\n"HZELENA"(2). "BELA"Drogu\n"HZELENA"(3). "BELA"Mats\n"HZELENA"(4). "BELA"Odelo\n"HZELENA"(5). "BELA"Oruzije", "Ok", "Izlaz");
		}
		case 5:
		{
			if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Nemate kucu!");
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste ispred vase kuce!");
			new cena1 = (KucaInfo[i][kCena]/4)*2;
			new string[256];
			format(string,sizeof(string), ""BELA"Prodaja kuce drzavi\n\n"HZELENA"Dali ste sigurni da zelite da prodate kucu drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", cena1);
			SPD(playerid, 174, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja kuce drzavi", string, "Prodaj", "Izlaz");
		}
		case 6:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			if(KucaInfo[i][kRent] == 0)
			{
				KucaInfo[i][kRent] = 1; SacuvajKucu(i); KuceLP(i);
				SCM(playerid,-1,"[V:RPG] "SRWBOJA"Odobrili ste rent kuce!");
			}
			else if(KucaInfo[i][kRent] == 1)
			{
				KucaInfo[i][kRent] = 0; SacuvajKucu(i); KuceLP(i);
				SCM(playerid,-1,"[V:RPG] "SRWBOJA"Zabranili ste rent kuce!");
			}
		}
		case 7:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			if(KucaInfo[i][kRent] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Na vasoj kuci nije dozvoljen rent pa ne mozete podesavati cenu!");
			SPD(playerid, 176, DSI, ""HZELENA"Cena Renta", ""BELA"Unesite novu cenu renta", "Promeni", "Izlaz");
		}
		case 8:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste ispred vase kuce!");
			new string5[256];
			format(string5,sizeof(string5),""HZELENA"(1). "BELA"Zvono (2000$)\n"HZELENA"(2). "BELA"Frizder (3000$)\n"HZELENA"(3). "BELA"Standardan Enterijer 1\n"HZELENA"(4). "BELA"Enterijer 2 (30000$)\n"HZELENA"(5). "BELA"Enterijer 3 (40000$)\n"HZELENA"(6). "BELA"Enterijer 4 (100000$)");
			SPD(playerid, 178, DIALOG_STYLE_LIST, ""BELA"Nadogradnja/Preuredjivanje", string5, "Ok", "Izlaz");
		}
		case 9:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			if(KucaInfo[i][kFrizder] == 0) return SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Nemas frizder u kuci!");
			SPD(playerid, 196, DIALOG_STYLE_LIST, ""BELA"Namernice", ""HZELENA"(1). "BELA"Koristi hranu\n"HZELENA"(2). "BELA"Ostavi hranu", "Ok", "Izlaz");
		}
		case 10:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ])) return SCM(playerid,-1,"[V:RPG] "ZELENA"Niste u vasoj kuci!");
			SPD(playerid, 377, DSI, "Prodaja kuce", ""VARADERO"Unesite ID igraca kome zelite da prodate kucu...", "Potvrdi", "Odustani");
        }
		case 11:
		{
			SetPlayerCheckpoint(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ], 4.0);
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Vasa kuca je oznacena "SRWBOJA"crveno "BELA"na mapi!");
		}
		case 12:
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ])) return SCM(playerid,-1,""CRVENA"[KUCA]: "BELA"Niste ispred vase kuce!");
			SPD(playerid, 81, DIALOG_STYLE_INPUT, ""SIVA"Kuca Ime", ""SIVA"Upisite ime kuce\n"CRVENA"Zabranjeno je stavljati OOC ime Kuce!", "postavi", "izlaz");
		}
	}
	return 1;
}
fDialog(377)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes kucu!");
	if(response)
	{
		new kid, string[128], Float:Poz[3];
		if(sscanf(inputtext, "u", kid)) return SPD(playerid, 377, DIALOG_STYLE_INPUT, "Prodaja kuce", ""VARADERO"Unesite ID igraca kome zelite da prodate kucu...", "Potvrdi", "Odustani");
		if(!IsPlayerConnected(kid)) return SPD(playerid, 377, DIALOG_STYLE_INPUT, "Prodaja kuce", ""VARADERO"Unesite ID igraca kome zelite da prodate kucu...", "Potvrdi", "Odustani");
		GetPlayerPos(kid, Poz[0], Poz[1], Poz[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2])) return SCM(playerid, -1, ""SIVA"Igrac nije u vasoj blizini!");
		if(kid == playerid) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne mozete sami sebi ponuditi prodaju!");
		KomeProdaje[playerid] = kid; PonudioIgrac[kid] = playerid;
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vase kuce za koliko zelite da je prodate...");
		SPD(playerid, 378, DIALOG_STYLE_INPUT, "Prodaja Kuce", string, "Potvrdi", "Odustani");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(378)
{
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Ne posedujes kucu!");
	if(response)
	{
		new cena, string[128];
		if(PlayerInfo[KomeProdaje[playerid]][pLevel] < 7) return SCM(playerid,-1,""SIVA"Igrac nije level 7+!");
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vase kuce za koliko zelite da ga prodate...");
		if(sscanf(inputtext, "i", cena)) return SPD(playerid, 378, DIALOG_STYLE_INPUT, "Prodaja kuce", string, "Potvrdi", "Odustani");
		if(cena < 0 || cena > 10000000) return SPD(playerid, 378, DIALOG_STYLE_INPUT, "Prodaja kuce", string, "Potvrdi", "Odustani");
		CijenaProdaje[playerid] = cena; CijenaProdaje[KomeProdaje[playerid]] = cena;
		format(string, charsmax(string), ""VARADERO"Ponudili ste kucu igracu %s za %d$ novca!",GetName(KomeProdaje[playerid]), cena);
		SCM(playerid,-1, string);
		format(string, charsmax(string), ""VARADERO"Igrac %s vam je ponudio svoju kucu za %d$!",GetName(playerid),cena);
		SCM(KomeProdaje[playerid],-1,string);
		format(string,sizeof(string), ""VARADERO"Igrac %s vam je ponudio svoje kucu za %d$...\n"VARADERO"Kliknite na prihvati ukoliko zelite da prihvatite prodaju", GetName(playerid), cena);
		SPD(KomeProdaje[playerid], 379, DIALOG_STYLE_MSGBOX, "Prodaja kuce", string, "Prihvati", "Odustani");
	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od prodaje!");
	}
	return 1;
}
// ========================================================================== //
fDialog(81)
{
	if(!response) return 1;
	if(response)
	{
		if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""CRVENA"ERROR: "BELA"Ne posjedujes kucu!");
		new i = PlayerInfo[playerid][pPosedovanjeKuce];
		new imek[35];
		if(sscanf(inputtext, "s[35]", imek)) return SPD(playerid, 81, DSI, ""SIVA"Kuca Ime", ""BELA"Upisite ime kuce\n\n"CRVENA"Zabranjeno je stavljati OOC imena!", "postavi", "izlaz");
		if(strlen(imek) > 35)
		{
			SPD(playerid, 81, DSI, ""SIVA"Kuca Ime", ""CRVENA"Ime kuce ne moze vise od 35 znakova!\n"BELA"Upisite ime kuce\n\n"CRVENA"Zabranjeno je stavljati OOC imena!", "postavi", "izlaz");
			return 1;
		}
		if(strfind(imek, "|") != -1) return SCM(playerid,-1, ""CRVENA"[KUCA]: "BELA"Koriscenje znakova u imenu kuce je zabranjeno!");
		if(strfind(imek, "%") != -1) return SCM(playerid,-1, ""CRVENA"[KUCA]: "BELA"Koriscenje procenta u imenu kuce je zabranjeno!");
		strmid(KucaInfo[i][kNaziv], imek, 0, strlen(imek), 255);
		SCMF(playerid,-1, ""CRVENA"[KUCA]: "BELA"Postavili ste ime kuce na '[%s]'!", imek);
		KuceLP(i);
		SacuvajKucu(i);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(379)
{
	if(response)
	{
		new id = PonudioIgrac[playerid];
		new idkuce;
		if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Vi niste level 7+!");
		if(CijenaProdaje[playerid] <= 0) return SCM(playerid,-1,""SIVA"Prodavac nije odredio cenu kuce!");
		if(PlayerInfo[playerid][pNovacDzep] < CijenaProdaje[playerid]) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		if(!IsPlayerConnected(PonudioIgrac[playerid])) return SCM(playerid, -1, ""SIVA"Igrac koji vam je ponudio kucu vise nije online!");
		if(PlayerInfo[playerid][pPosedovanjeKuce] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes kucu!");
		if(PlayerInfo[id][pPosedovanjeKuce] == -1) return SCM(playerid,-1,""SIVA"Taj igrac nema kucu!");
		PlayerInfo[playerid][pPosedovanjeKuce] = PlayerInfo[id][pPosedovanjeKuce];
		PlayerInfo[id][pPosedovanjeKuce] = -1;
		strmid(KucaInfo[PlayerInfo[playerid][pPosedovanjeKuce]][kVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
		g_NovacMinus(playerid, CijenaProdaje[playerid]); g_NovacPlus(id, CijenaProdaje[playerid]);
		new string[128];
		format(string, charsmax(string), ""VARADERO"Uspesno ste kupili kucu od igraca %s!",GetName(id));
		SCM(playerid,-1,string);
		format(string, charsmax(string), ""VARADERO"Uspesno ste prodali kucu igracu %s!",GetName(playerid));
		SCM(id,-1,string);
	    CijenaProdaje[id] = 0;
		CijenaProdaje[playerid] = 0;
		PonudioIgrac[id] = -1;
		PonudioIgrac[playerid] = -1;
		KomeProdaje[id] = -1;
		KomeProdaje[playerid] = -1;
		SavePlayer(playerid); SavePlayer(id); SacuvajKucu(PlayerInfo[playerid][pPosedovanjeKuce]);
        SacuvajKucu(idkuce);
        KuceLP(idkuce);
        for(new i; i < MAX_KUCA; i++) { KuceLP(i); }

	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od kupovine kuce!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(196)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	switch(listitem)
	{
		case 0:
		{
			if(KucaInfo[i][kHrana] <= 0) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Nema hrane u kuci!");
			new Float:hp; GetPlayerHealth(playerid, hp);
			if(hp >= 99.0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste gladni!"); KucaInfo[i][kHrana] --; SacuvajKucu(i);
			SetPlayerHealth(playerid, 99.0); SCM(playerid,-1,""HZELENA"[V:RPG] "BELA"Pojeli ste nesto hrane iz frizdera!");
		}
		case 1:
		{
			SPD(playerid, 198, DIALOG_STYLE_INPUT, ""HZELENA"Namernice", ""BELA"Unesite kolicinu hrane koju zelite da ostavite", "Unesi", "Izlaz");
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(198)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid, 198, DIALOG_STYLE_INPUT, ""HZELENA"Namernice", ""BELA"Unesite kolicinu hrane koju zelite da ostavite", "Unesi", "Izlaz");
		if(iznos > PlayerInfo[playerid][pHrana]) return SCM(playerid,-1,""SIVA"Nemate toliko hrane!");
		if(iznos < 1 || iznos > 5) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 5 odjednom!");
		KucaInfo[i][kHrana] += iznos; PlayerInfo[playerid][pHrana] -= iznos; SacuvajKucu(i); SavePlayer(playerid);
		format(string,sizeof(string),"[V:RPG] "SRWBOJA"Ostavili ste u kucu %d namernica!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(178)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	switch(listitem)
	{
		case 0:
		{
			if(KucaInfo[i][kZvono] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vec imas zvono u kuci!");
			if(PlayerInfo[playerid][pNovacDzep] < 2000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Nemate dovoljno novac!");
			KucaInfo[i][kZvono] = 1; g_NovacMinus(playerid,2000); SacuvajKucu(i); SavePlayer(playerid); SCM(playerid,-1,""HZELENA"[V:RPG] "BELA"Ugradili ste zvono u vasu kucu /zvoni!");
		}
		case 1:
		{
			if(KucaInfo[i][kFrizder] == 1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Vec imas frizder u kuci!");
			if(PlayerInfo[playerid][pNovacDzep] < 3000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Nemate dovoljno novac!");
			KucaInfo[i][kFrizder] = 1; g_NovacMinus(playerid,3000); SacuvajKucu(i); SavePlayer(playerid); SCM(playerid,-1,""HZELENA"[V:RPG] "BELA"Ugradili ste frizder u vasu kucu!");
		}
		case 2:
		{
			if(KucaInfo[i][kVrstaIntKuce] == 1)
			{
				KucaInfo[i][kIzlazX] = 223.0732;
				KucaInfo[i][kIzlazY] = 1288.3668;
				KucaInfo[i][kIzlazZ] = 1082.1406;
				KucaInfo[i][kInt] = 1;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer kuce u standardan enterijer male kuce!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 2)
			{
				KucaInfo[i][kIzlazX] = 2365.2822;
				KucaInfo[i][kIzlazY] = -1134.5186;
				KucaInfo[i][kIzlazZ] = 1050.8750;
				KucaInfo[i][kInt] = 8;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer kuce u standardan enterijer srednje kuce!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 3)
			{
				KucaInfo[i][kIzlazX] = 2317.8977;
				KucaInfo[i][kIzlazY] = -1025.7722;
				KucaInfo[i][kIzlazZ] = 1050.2109;
				KucaInfo[i][kInt] = 9;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer kuce u standardan enterijer velike kuce!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 4)
			{
				KucaInfo[i][kIzlazX] = 140.2605;
				KucaInfo[i][kIzlazY] = 1367.4221;
				KucaInfo[i][kIzlazZ] = 1083.8615;
				KucaInfo[i][kInt] = 5;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer kuce u standardan enterijer ville!");

			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 30000) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Nemate dovoljno novca (30000$)!");
			g_NovacMinus(playerid,30000); SavePlayer(playerid);
			if(KucaInfo[i][kVrstaIntKuce] == 1)
			{
				KucaInfo[i][kIzlazX] = 2308.7527;
				KucaInfo[i][kIzlazY] = -1211.7507;
				KucaInfo[i][kIzlazZ] = 1049.0234;
				KucaInfo[i][kInt] = 6;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer male kuce (30000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 2)
			{
				KucaInfo[i][kIzlazX] = 2195.9036;
				KucaInfo[i][kIzlazY] = -1204.4109;
				KucaInfo[i][kIzlazZ] = 1049.0234;
				KucaInfo[i][kInt] = 6;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer srednje kuce (30000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 3)
			{
				KucaInfo[i][kIzlazX] = 83.1142;
				KucaInfo[i][kIzlazY] = 1323.1691;
				KucaInfo[i][kIzlazZ] = 1083.8594;
				KucaInfo[i][kInt] = 9;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer velike kuce (30000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 4)
			{
				KucaInfo[i][kIzlazX] = 226.9117;
				KucaInfo[i][kIzlazY] = 1114.2726;
				KucaInfo[i][kIzlazZ] = 1080.9961;
				KucaInfo[i][kInt] = 5;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer ville (30000$)!");

			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 40000) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Nemate dovoljno novca (30000$)!");
			g_NovacMinus(playerid,40000); SavePlayer(playerid);
			if(KucaInfo[i][kVrstaIntKuce] == 1)
			{
				KucaInfo[i][kIzlazX] = 261.0457;
				KucaInfo[i][kIzlazY] = 1285.4824;
				KucaInfo[i][kIzlazZ] = 1080.2578;
				KucaInfo[i][kInt] = 4;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer male kuce (40000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 2)
			{
				KucaInfo[i][kIzlazX] = 2269.3962;
				KucaInfo[i][kIzlazY] = -1210.4148;
				KucaInfo[i][kIzlazZ] = 1047.5625;
				KucaInfo[i][kInt] = 10;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer srednje kuce (40000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 3)
			{
				KucaInfo[i][kIzlazX] = 2324.4817;
				KucaInfo[i][kIzlazY] = -1148.3988;
				KucaInfo[i][kIzlazZ] = 1050.7101;
				KucaInfo[i][kInt] = 12;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer velike kuce (40000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 4)
			{
				KucaInfo[i][kIzlazX] = 225.9810;
				KucaInfo[i][kIzlazY] = 1022.8190;
				KucaInfo[i][kIzlazZ] = 1084.0137;
				KucaInfo[i][kInt] = 7;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer ville (40000$)!");
			}
		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 100000) return SCM(playerid,-1,""SRWBOJA"[ Varadero ] "SIVA"Nemate dovoljno novca (100000$)!");
			g_NovacMinus(playerid,100000); SavePlayer(playerid);
			if(KucaInfo[i][kVrstaIntKuce] == 1)
			{
				KucaInfo[i][kIzlazX] = 261.0457;
				KucaInfo[i][kIzlazY] = 1285.4824;
				KucaInfo[i][kIzlazZ] = 1080.2578;
				KucaInfo[i][kInt] = 4;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer male kuce (40000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 2)
			{
				KucaInfo[i][kIzlazX] = 2269.3962;
				KucaInfo[i][kIzlazY] = -1210.4148;
				KucaInfo[i][kIzlazZ] = 1047.5625;
				KucaInfo[i][kInt] = 10;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer srednje kuce (40000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 3)
			{
				KucaInfo[i][kIzlazX] = 2324.4817;
				KucaInfo[i][kIzlazY] = -1148.3988;
				KucaInfo[i][kIzlazZ] = 1050.7101;
				KucaInfo[i][kInt] = 12;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer velike kuce (40000$)!");
			}
			else if(KucaInfo[i][kVrstaIntKuce] == 4)
			{
				KucaInfo[i][kIzlazX] = 2164.1731;
	            KucaInfo[i][kIzlazY] = 457.7707;
	            KucaInfo[i][kIzlazZ] = 420.4090;
				KucaInfo[i][kInt] = 3;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
				SacuvajKucu(i);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste promenili enterijer Apartman (100000$)!");
			}
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(176)
{
	if(response)
	{
		new i = PlayerInfo[playerid][pPosedovanjeKuce],cena;
		if(sscanf(inputtext, "i", cena)) return SPD(playerid, 176, DIALOG_STYLE_INPUT, ""ZELENA"Cena Renta", ""BELA"Unesite novu cenu renta", "Promeni", "Izlaz");
		if(cena < 1 || cena > 1000) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Cena ne moze biti manja od 1 i veca od 1000!");
		KucaInfo[i][kCenaRenta] = cena; SacuvajKucu(i); KuceLP(i); SCM(playerid,-1,"[V:RPG] "HZELENA"Uspesno ste promenili cenu renta!");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(174)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new cena1 = (KucaInfo[i][kCena]/4)*2;
		g_NovacPlus(playerid, cena1);
		KucaInfo[i][kProveraVlasnika] = 0; KucaInfo[i][kNovac] = 0; KucaInfo[i][kOruzije] = -1; KucaInfo[i][kMunicija] = 0;
		KucaInfo[i][kOdjeca] = 0; KucaInfo[i][kDroga] = 0; KucaInfo[i][kMats] = 0; KucaInfo[i][kZatvoreno] = 1; KucaInfo[i][kRent] = 0;
		KucaInfo[i][kHrana] = 0; strmid(KucaInfo[i][kVlasnik], "Niko", 0, strlen("Niko"), 255);
		PlayerInfo[playerid][pPosedovanjeKuce] = -1;
		SacuvajKucu(i); KuceLP(i);
		new string[128];
		format(string, charsmax(string), ""HZELENA"[V:RPG] "BELA"Prodali ste kucu za %d$!",cena1);
		SCM(playerid,-1,string);
		SavePlayer(playerid);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(166)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	switch(listitem)
	{
		case 0:
		{
			SPD(playerid,168,DIALOG_STYLE_INPUT, ""HZELENA"Uzimanje Novca", ""BELA"Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 1:
		{
			SPD(playerid,170,DIALOG_STYLE_INPUT, ""HZELENA"Uzimanje Droge", ""BELA"Unesite kolicinu droge koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 2:
		{
			SPD(playerid,172,DIALOG_STYLE_INPUT, ""HZELENA"Uzimanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 3:
		{
			if(PlayerInfo[playerid][pLider] != 0 || PlayerInfo[playerid][pClan] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Vi ste lider/clan organizacije ne mozete koristi orman!");
			if(KucaInfo[i][kOdjeca] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate odjelo u ormanu!");
			Update_Skin(playerid, KucaInfo[i][kOdjeca]); PlayerInfo[playerid][pSkin] = KucaInfo[i][kOdjeca];
			KucaInfo[i][kOdjeca] = 0; SCM(playerid,-1,"[V:RPG] "ZELENA"Uspesno ste uzeli odelo iz ormana!");
			SacuvajKucu(i); SavePlayer(playerid);
		}
		case 4:
		{
			if(KucaInfo[i][kOruzije] == -1) return SCM(playerid,-1,"[V:RPG] "VARADERO"Nemas oruzije u kuci!");
			GivePlayerWeapon(playerid,KucaInfo[i][kOruzije],KucaInfo[i][kMunicija]); KucaInfo[i][kOruzije] = -1; KucaInfo[i][kMunicija] = -1;
			SacuvajKucu(i); SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uzeli ste oruzije iz vase kuce!");
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(172)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,172,DIALOG_STYLE_INPUT, ""HZELENA"Uzimanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da uzmete", "Ostavi", "Izlaz");
		if(iznos > KucaInfo[i][kMats]) return SCM(playerid,-1,""SIVA"Nemate toliko materijala u kuci!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		KucaInfo[i][kMats] -= iznos; PlayerInfo[playerid][pMats] += iznos; SacuvajKucu(i); SavePlayer(playerid);
		format(string,sizeof(string),"[V:RPG] "SRWBOJA"Uzeli ste iz kuce %d materijala!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(170)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,170,DIALOG_STYLE_INPUT, ""HZELENA"Uzimanje Droge", ""BELA"Unesite kolicinu droge koju zelite da uzmete", "Ostavi", "Izlaz");
		if(iznos > KucaInfo[i][kDroga]) return SCM(playerid,-1,""SIVA"Nemate toliko droge u kuci!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		KucaInfo[i][kDroga] -= iznos; PlayerInfo[playerid][pDroga] += iznos; SacuvajKucu(i); SavePlayer(playerid);
		format(string,sizeof(string),"[V:RPG] "SRWBOJA"Uzeli ste iz kuce %dg droge!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(168)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,168,DIALOG_STYLE_INPUT, ""HZELENA"Uzimanje Novca", ""BELA"Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");
		if(iznos > KucaInfo[i][kNovac]) return SCM(playerid,-1,""SIVA"Nemate toliko novca u kuci!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		KucaInfo[i][kNovac] -= iznos; g_NovacPlus(playerid, iznos); SacuvajKucu(i); SavePlayer(playerid);
		format(string,sizeof(string),"[V:RPG] "SRWBOJA"Uzeli ste iz kuce %d$ novca!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(158)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	switch(listitem)
	{
		case 0:
		{
			SPD(playerid,160,DIALOG_STYLE_INPUT, ""HZELENA"Ostavljanje Novca", ""BELA"Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 1:
		{
			SPD(playerid,164,DIALOG_STYLE_INPUT, ""HZELENA"Ostavljanje Droge", ""BELA"Unesite kolicinu droge koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 2:
		{
			SPD(playerid,162,DIALOG_STYLE_INPUT, ""HZELENA"Ostavljanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 3:
		{
				if(PlayerInfo[playerid][pLider] != 0 || PlayerInfo[playerid][pClan] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Vi ste lider/clan organizacije ne mozete koristi orman!");
				if(KucaInfo[i][kOdjeca] != 0) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Vec imas odelo u ormanu!");
				KucaInfo[i][kOdjeca] = GetPlayerSkin(playerid);
				SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste ostavili odecu u orman!");
		}
		case 4:
		{
			if(KucaInfo[i][kOruzije] != -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Vec imas oruzije u kuci!");
			if(GetPlayerWeapon(playerid) <= 0) return SCM(playerid,-1,"[V:RPG] "VARADERO"Nemas oruzije u ruci!");
			KucaInfo[i][kOruzije] = GetPlayerWeapon(playerid); KucaInfo[i][kMunicija] = GetPlayerAmmo(playerid);
			SCM(playerid,-1,"[V:RPG] "HZELENA"Ostavili ste oruzije u kucu!"); SacuvajKucu(i); SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), 0);
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(162)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,162,DIALOG_STYLE_INPUT, ""HZELENA"Ostavljanje Materijala", ""BELA"Unesite kolicinu materijala koju zelite da ostavite", "Ostavi", "Izlaz");
		if(iznos > PlayerInfo[playerid][pMats]) return SCM(playerid,-1,""SIVA"Nemate toliko materijala!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		KucaInfo[i][kMats] += iznos; PlayerInfo[playerid][pMats] -= iznos; SacuvajKucu(i); SavePlayer(playerid);
		format(string,sizeof(string),"[V:RPG] "SRWBOJA"Ostavili ste u kucu %d materijala!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(164)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,164,DIALOG_STYLE_INPUT, ""HZELENA"Ostavljanje Droge", ""BELA"Unesite kolicinu droge koju zelite da ostavite", "Ostavi", "Izlaz");
		if(iznos > PlayerInfo[playerid][pDroga]) return SCM(playerid,-1,""SIVA"Nemate toliko droge!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		KucaInfo[i][kDroga] += iznos; PlayerInfo[playerid][pDroga] -= iznos; SacuvajKucu(i); SavePlayer(playerid);
		format(string,sizeof(string),"[V:RPG] "SRWBOJA"Ostavili ste u kucu %dg droge!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(160)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeKuce] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate kucu!");
	new i = PlayerInfo[playerid][pPosedovanjeKuce];
	if(response)
	{
		new iznos,string[256];
		if(sscanf(inputtext, "i", iznos)) return SPD(playerid,160,DIALOG_STYLE_INPUT, ""ZELENA"Ostavljanje Novca", ""BELA"Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");
		if(iznos > PlayerInfo[playerid][pNovacDzep]) return SCM(playerid,-1,""SIVA"Nemate toliko novca!");
		if(iznos < 1 || iznos > 50000) return SCM(playerid,-1,""SIVA"Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");
		KucaInfo[i][kNovac] += iznos; g_NovacMinus(playerid,iznos); SacuvajKucu(i); SavePlayer(playerid);
		format(string,sizeof(string),"[V:RPG] "SRWBOJA"Ostavili ste u kucu %d$ novca!",iznos);
		SCM(playerid,-1,string);
	}
	return 1;
}
//////////////////////////////////////////////////////
fDialog(347)
{
	new veh = GetPlayerVehicleID(playerid);
	new engine,lights,alarm,doors,bonnet,boot,objective;
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(GetPVarInt(playerid, "Lights") == 0)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
				SetPVarInt(playerid, "Lights", 1);
			}
			else if(GetPVarInt(playerid, "Lights") == 1)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
				SetPVarInt(playerid, "Lights", 0);
			}
		}
		case 1:
		{
			if(GetPVarInt(playerid, "Bonnet") == 0)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
				SetPVarInt(playerid, "Bonnet", 1);
			}
			else if(GetPVarInt(playerid, "Bonnet") == 1)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
				SetPVarInt(playerid, "Bonnet", 0);
			}
		}
		case 2:
		{
			if(GetPVarInt(playerid, "Boot") == 0)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
				SetPVarInt(playerid, "Boot", 1);
			}
			else if(GetPVarInt(playerid, "Boot") == 1)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
				SetPVarInt(playerid, "Boot", 0);
			}
		}
		case 3:
		{
			if(GetPVarInt(playerid, "Doors") == 0)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,VEHICLE_PARAMS_ON,bonnet,boot,objective);
				SetPVarInt(playerid, "Doors", 1);
			}
			else if(GetPVarInt(playerid, "Doors") == 1)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
				SetPVarInt(playerid, "Doors", 0);
			}
		}
		case 4:
		{
			if(GetPVarInt(playerid, "Engine") == 0)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 1);
			}
			else if(GetPVarInt(playerid, "Engine") == 1)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 0);
			}
		}
		case 5:
		{
			if(GetPVarInt(playerid, "Alarm") == 0)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
				SetPVarInt(playerid, "Alarm", 1);
			}
			else if(GetPVarInt(playerid, "Alarm") == 1)
			{
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,VEHICLE_PARAMS_OFF,doors,bonnet,boot,objective);
				SetPVarInt(playerid, "Alarm", 0);
			}
		}
		case 6:
		{
			SCM(playerid,-1,""VARADERO"[V:RPG] "BELA"Uzivaj !");
		}
	}
	return 1;
}

function: _sqlDrvoID(iddrveta)
{
	iddrveta = cache_insert_id();
	DI[iddrveta][dSQLID] = iddrveta;
	return 1;
}
fDialog(510)
{
	if(!response) return true;
	if(response)
	{
		switch(listitem)
		{
			case 0:
			{
				if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
				new id = PlayerInfo[playerid][pPosedovanjeImanja];
				if(!IsPlayerInRangeOfPoint(playerid, II[id][iRadius], II[id][iImanjeX], II[id][iImanjeY], II[id][iImanjeZ])) return SCM(playerid, -1, "Nisi u precniku imanja!");
				if(PlayerInfo[playerid][pDrvoKruska] < 1) return SCM(playerid, -1, "Nemas nijedan primerak te vrste!");
				for(new i; i < sizeof(DI); i++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 3, DI[i][dDrvoX], DI[i][dDrvoY], DI[i][dDrvoZ]+2))
					{
						SCM(playerid, -1, "Moras se odaljiti malo!");
						return 1;
					}
				}
				PlayerInfo[playerid][pDrvoKruska]--;
				SavePlayer(playerid);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x,y,z);
				new drvoid;
				
				drvece++;
				
				DI[drvoid][dDrvoX] = x;
				DI[drvoid][dDrvoY] = y;
				DI[drvoid][dDrvoZ] = z-2;
				DestroyDynamicObject(DrvoObject[drvoid]);
				DrvoObject[drvoid] = CreateDynamicObject(633, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+1.2, 0.0, 0.0, 0.0);
				DI[drvoid][dPostavljeno] = 1;
				DI[drvoid][dIDImanja] = PlayerInfo[playerid][pPosedovanjeImanja];
				DI[drvoid][dRast] = 0;
				DI[drvoid][dRastVoca] = 0;
				DI[drvoid][dVrsta] = 1;

				new dvr[24];
				if(DI[drvoid][dVrsta] == 1) { dvr = "Kruska"; }
				else if(DI[drvoid][dVrsta] == 2) { dvr = "Jabuka"; }
				else if(DI[drvoid][dVrsta] == 3) { dvr = "Sljiva"; }

				new q[420];
				mysql_format(SQL, q, sizeof q, "INSERT INTO `drvo` (`dDrvoX`, `dDrvoY`, `dDrvoZ`, `dVrsta`, `dRast`, `dRastVoca`, `dPostavljeno`, `dIDImanja`) \
					VALUES ('%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d');",  DI[drvoid][dDrvoX],DI[drvoid][dDrvoY],DI[drvoid][dDrvoZ], DI[drvoid][dVrsta], DI[drvoid][dRast], DI[drvoid][dRastVoca], DI[drvoid][dPostavljeno], PlayerInfo[playerid][pPosedovanjeImanja]);		
				mysql_tquery(SQL, q, "_sqlDrvoID", "d", drvoid);

				new krk[256];
				format(krk,sizeof(krk),"{00FFEE}Drvo jos nije izraslo!\nPreostalo vreme do izrastanja drveta: {FFFFFF}%d sati\n{00FFEE}Vrsta drveta: {FFFFFF}%s",24-DI[drvoid][dRast],dvr);
				DrvoLabel[drvoid] = CreateDynamic3DTextLabel(krk, -1, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+2, 10);
				new mrs[128];
				format(mrs, sizeof(mrs), ""SRWBOJA"[V:RPG] {FFFFFF}Zasadio si drvo kruske. (( ID:%d ))", drvoid);
				SCM(playerid, -1, mrs);
				SacuvajDrvo(drvoid);
				new mrk[128];
				format(mrk, sizeof(mrk), "* %s sadi drvo.", GetName(playerid));
				e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
			}
			case 1:
			{
				if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
				new id = PlayerInfo[playerid][pPosedovanjeImanja];
				if(!IsPlayerInRangeOfPoint(playerid, II[id][iRadius], II[id][iImanjeX], II[id][iImanjeY], II[id][iImanjeZ])) return SCM(playerid, -1, "Nisi u precniku imanja!");
				if(PlayerInfo[playerid][pDrvoJabuka] < 1) return SCM(playerid, -1, "Nemas nijedan primerak te vrste!");
				for(new i; i < sizeof(DI); i++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 3, DI[i][dDrvoX], DI[i][dDrvoY], DI[i][dDrvoZ]+2))
					{
						SCM(playerid, -1, "Moras se odaljiti malo!");
						return true;
					}
				}
				PlayerInfo[playerid][pDrvoJabuka]--;
				SavePlayer(playerid);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x,y,z);
				new drvoid;
				
				drvece++;
				DI[drvoid][dDrvoX] = x;
				DI[drvoid][dDrvoY] = y;
				DI[drvoid][dDrvoZ] = z-2;
				DestroyDynamicObject(DrvoObject[drvoid]);
				DrvoObject[drvoid] = CreateDynamicObject(633, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+1.2, 0.0, 0.0, 0.0);
				DI[drvoid][dPostavljeno] = 1;
				DI[drvoid][dIDImanja] = PlayerInfo[playerid][pPosedovanjeImanja];
				DI[drvoid][dRast] = 0;
				DI[drvoid][dRastVoca] = 0;
				DI[drvoid][dVrsta] = 2;
				new dvr[24];
				if(DI[drvoid][dVrsta] == 1) { dvr = "Kruska"; }
				else if(DI[drvoid][dVrsta] == 2) { dvr = "Jabuka"; }
				else if(DI[drvoid][dVrsta] == 3) { dvr = "Sljiva"; }

				new q[420];
				mysql_format(SQL, q, sizeof q, "INSERT INTO `drvo` (`dDrvoX`, `dDrvoY`, `dDrvoZ`, `dVrsta`, `dRast`, `dRastVoca`, `dPostavljeno`, `dIDImanja`) \
					VALUES ('%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d');",  DI[drvoid][dDrvoX],DI[drvoid][dDrvoY],DI[drvoid][dDrvoZ], DI[drvoid][dVrsta], DI[drvoid][dRast], DI[drvoid][dRastVoca], DI[drvoid][dPostavljeno], PlayerInfo[playerid][pPosedovanjeImanja]);		
				mysql_tquery(SQL, q, "_sqlDrvoID", "d", drvoid);


				new krk[256];
				format(krk,sizeof(krk),"{00FFEE}Drvo jos nije izraslo!\nPreostalo vreme do izrastanja drveta: {FFFFFF}%d sati\n{00FFEE}Vrsta drveta: {FFFFFF}%s",24-DI[drvoid][dRast],dvr);
				DrvoLabel[drvoid] = CreateDynamic3DTextLabel(krk, -1, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+2, 10);
				new mrs[128];
				format(mrs, sizeof(mrs), ""SRWBOJA"[V:RPG] {FFFFFF}Zasadio si drvo jabuke. (( ID:%d ))", drvoid);
				SCM(playerid, -1, mrs);
				SacuvajDrvo(drvoid);
				new mrk[128];
				format(mrk, sizeof(mrk), "* %s sadi drvo.", GetName(playerid));
				e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
			}
			case 2:
			{
				if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
				new id = PlayerInfo[playerid][pPosedovanjeImanja];
				if(!IsPlayerInRangeOfPoint(playerid, II[id][iRadius], II[id][iImanjeX], II[id][iImanjeY], II[id][iImanjeZ])) return SCM(playerid, -1, "Nisi u precniku imanja!");
				if(PlayerInfo[playerid][pDrvoSljiva] < 1) return SCM(playerid, -1, "Nemas nijedan primerak te vrste!");
				for(new i; i < sizeof(DI); i++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 3, DI[i][dDrvoX], DI[i][dDrvoY], DI[i][dDrvoZ]+2))
					{
						SCM(playerid, -1, "Moras se odaljiti malo!");
						return true;
					}
				}
				PlayerInfo[playerid][pDrvoSljiva]--;
				SavePlayer(playerid);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x,y,z);
				new drvoid;
			
				drvece++;
				DI[drvoid][dDrvoX] = x;
				DI[drvoid][dDrvoY] = y;
				DI[drvoid][dDrvoZ] = z-2;
				DestroyDynamicObject(DrvoObject[drvoid]);
				DrvoObject[drvoid] = CreateDynamicObject(633, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+1.2, 0.0, 0.0, 0.0);
				DI[drvoid][dPostavljeno] = 1;
				DI[drvoid][dIDImanja] = PlayerInfo[playerid][pPosedovanjeImanja];
				DI[drvoid][dRast] = 0;
				DI[drvoid][dRastVoca] = 0;
				DI[drvoid][dVrsta] = 3;
				new dvr[24];
				if(DI[drvoid][dVrsta] == 1) { dvr = "Kruska"; }
				else if(DI[drvoid][dVrsta] == 2) { dvr = "Jabuka"; }
				else if(DI[drvoid][dVrsta] == 3) { dvr = "Sljiva"; }

				new q[420];
				mysql_format(SQL, q, sizeof q, "INSERT INTO `drvo` (`dDrvoX`, `dDrvoY`, `dDrvoZ`, `dVrsta`, `dRast`, `dRastVoca`, `dPostavljeno`, `dIDImanja`) \
					VALUES ('%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d');",  DI[drvoid][dDrvoX],DI[drvoid][dDrvoY],DI[drvoid][dDrvoZ], DI[drvoid][dVrsta], DI[drvoid][dRast], DI[drvoid][dRastVoca], DI[drvoid][dPostavljeno], PlayerInfo[playerid][pPosedovanjeImanja]);		
				mysql_tquery(SQL, q, "_sqlDrvoID", "d", drvoid);

				new krk[256];
				format(krk,sizeof(krk),"{00FFEE}Drvo jos nije izraslo!\nPreostalo vreme do izrastanja drveta: {FFFFFF}%d sati\n{00FFEE}Vrsta drveta: {FFFFFF}%s",24-DI[drvoid][dRast],dvr);
				DrvoLabel[drvoid] = CreateDynamic3DTextLabel(krk, -1, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+2, 10);
				new mrs[128];
				format(mrs, sizeof(mrs), ""SRWBOJA"[V:RPG] {FFFFFF}Zasadio si drvo sljive. (( ID:%d ))", drvoid);
				SCM(playerid, -1, mrs);
				SacuvajDrvo(drvoid);
				new mrk[128];
				format(mrk, sizeof(mrk), "* %s sadi drvo.", GetName(playerid));
				e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
			}
		}
	}
	return 1;
}

fDialog(508)
{
	if(!response) return 1;
	if(response)
	{
		switch(listitem)
		{
			case 0:
			{
				if(PlayerInfo[playerid][pNovacDzep] < 21000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (21000$)");
				g_NovacMinus(playerid, 21000);
				PlayerInfo[playerid][pDrvoKruska]++;
				SavePlayer(playerid);
				new mrk[128];
				format(mrk, sizeof(mrk), "* %s kupuje drvo kruske.", GetName(playerid));
				e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
				new string[128];
				format(string, charsmax(string), ""SRWBOJA"[V:RPG] {FFFFFF}Kupili ste drvo kruske. Imate ih ukupno %d. ",PlayerInfo[playerid][pDrvoKruska]);
				SCM(playerid,-1, string);
				
			}
			case 1:
			{
				if(PlayerInfo[playerid][pNovacDzep] < 21000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (21000$)");
				g_NovacMinus(playerid, 21000);
				PlayerInfo[playerid][pDrvoJabuka]++;
				SavePlayer(playerid);
				new mrk[128];
				format(mrk, sizeof(mrk), "* %s kupuje drvo jabuke.", GetName(playerid));
				e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
				new string[128];
				format(string, charsmax(string), ""SRWBOJA"[V:RPG] {FFFFFF}Kupili ste drvo jabuke. Imate ih ukupno %d. (/komande)",PlayerInfo[playerid][pDrvoJabuka]);
				SCM(playerid,-1, string);
			}
			case 2:
			{
				if(PlayerInfo[playerid][pNovacDzep] < 21000) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca za sverc (21000$)");
				g_NovacMinus(playerid, 21000);
				PlayerInfo[playerid][pDrvoSljiva]++;
				SavePlayer(playerid);
				new mrk[128];
				format(mrk, sizeof(mrk), "* %s kupuje drvo sljive.", GetName(playerid));
				e_RadiusMSG(30.0, playerid, HEX_PROX, mrk);
				new string[128];
				format(string, charsmax(string), ""SRWBOJA"[V:RPG] {FFFFFF}Kupili ste drvo sljive. Imate ih ukupno %d. (/komande)",PlayerInfo[playerid][pDrvoSljiva]);
				SCM(playerid,-1, string);
			}
		}
	}
	return 1;
}
fDialog(506)
{
	if(response)
	{
		if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
		new i = PlayerInfo[playerid][pPosedovanjeImanja];
		switch(listitem)
		{
			case 0:
			{
				SCM(playerid,-1,"|--------------------------------------------------------------------------------|");
				new string[128];
				format(string, charsmax(string), "- Vlasnik imanja: %s | Level: %d | Cena: %d | Adresa: %d", II[i][iVlasnik], II[i][iLevel],II[i][iCena],i);
				SCM(playerid,-1, string);
				SCM(playerid,-1,"|--------------------------------------------------------------------------------|");
			}
			case 1:
			{
				new klj = PlayerInfo[playerid][pPosedovanjeImanja];
				if(!IsPlayerInRangeOfPoint(playerid, 5, II[klj][iImanjeX], II[klj][iImanjeY], II[klj][iImanjeZ])) return SCM(playerid, -1, "Niste kod imanja.");
				if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
				new cena1 = (II[i][iCena]/4)*2;
				new string[256];
				format(string,sizeof(string), "{FFFFFF}Prodaja imanja drzavi\n\nDa li ste sigurni da zelite da prodate imanje drzavi za $%d!\n\nAko ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", cena1);
				SPD(playerid, 505, DSB, ""SRWBOJA"Prodaja imanja drzavi", string, "Prodaj", "Izlaz");
			}
			case 2:
			{
				new klj = PlayerInfo[playerid][pPosedovanjeImanja];
				SetPlayerCheckpoint(playerid, II[klj][iImanjeX], II[klj][iImanjeY], II[klj][iImanjeZ], 5.0);
				SCM(playerid, -1, ""SRWBOJA"[V:RPG] {FFFFFF}(( Mesto oznaceno na mapi! ))");
			}
		}
	}
	return 1;
}
fDialog(505)
{
	if(PlayerInfo[playerid][pPosedovanjeImanja] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate imanje!");
	new i = PlayerInfo[playerid][pPosedovanjeImanja];
	if(response)
	{
		new cena1 = (II[i][iCena]/4)*2;
		GivePlayerMoney(playerid,cena1);
		II[i][iImaVlasnika] = 0;
		strmid(II[i][iVlasnik], "Niko", 0, strlen("Niko"), 255);
		PlayerInfo[playerid][pPosedovanjeImanja] = -1;
		SacuvajImanje(i);
		ImanjeLabelIPickup(i);
		new string[128];
		format(string, charsmax(string), ""SRWBOJA"[V:RPG] {FFFFFF}Prodali ste imanje drzavi za $%d!",cena1);
		SCM(playerid,-1, string);
	}
	return 1;
}

//////////////////////////////////////////////////////
fDialog(600)
{
				if(!response) return 1;
				switch(listitem)
				{
		        case 0:
		        {
				new info[2000];
                strcat(info, "\t"VARADERO"Osnovne Komande:\n\n", sizeof(info));
				strcat(info, ""BELA"/pdozvole /prihvati /odbij /promenipass /eject /kupidozvole /banka /kredit /otvoriracun /posao\n", sizeof(info));
			    strcat(info, ""BELA"/me /do /daj /osvezi /novi /pitaj /report /s /tiho /b /w /unrent /rent /vreme /naocare /prekiniposao\n", sizeof(info));
				strcat(info, ""BELA"/call /podbij /p (prihvati poziv) /anims /h (prekini poziv) /sms /broj (vidi broj) /zavezi /odvezi /stats\n", sizeof(info));
			    strcat(info, ""BELA"/zapalicigaru /ugasicigaru /kockica /marama /otvori /koristi /promenispawn /napustiorg /otkaz /Gamemasteri\n", sizeof(info));
			    strcat(info, ""BELA"/pravila /anims /plati /gorivo /marama /teamspeak /Admini /koristi /pismeni /zatvoriprozor /otvoriprozor /furniture /attach /naruciubistvo /lideri /Admini\n", sizeof(info));
			    strcat(info, ""BELA"/kupikucu /kuca /kupifirmu /firma /kupistan /stan /kupivikendicu /vikendica\n", sizeof(info));
			    strcat(info, ""BELA"/donirajbanderi /selfi /furniture /attach /propose /witness /opljackajopstinu /opljackajzlataru /divorce /neon /pasos\n", sizeof(info));
			    strcat(info, ""BELA"Koristite broj 2 da upalite ili ugasite motor.\n\n", sizeof(info));
				SPD(playerid, 601, DIALOG_STYLE_MSGBOX, "OSNOVNE KOMANDE", info, "Ok", "");
				}
				case 1:
				{
				new info[2000];
				strcat(info, ""VARADERO"- Kuca: "BELA"/kupikucu /kuca /unrentkucu /iznajmisobu\n", sizeof(info));
	    		strcat(info, ""VARADERO"- Stan: "BELA"/kupistan /stan\n", sizeof(info));
	    		strcat(info, ""VARADERO"- Vikendica: "BELA"/kupivikendicu /vikendica\n", sizeof(info));
	    		strcat(info, ""VARADERO"- Firma: "BELA"/kupifirmu /firma\n", sizeof(info));
	    		strcat(info, ""VARADERO"- Vozila: "BELA"/v - Automobil, /mo - Motor, /pl - Plovilo, /bi - bicikli\n", sizeof(info));
	    		SPD(playerid, 602, DIALOG_STYLE_MSGBOX, "IMOVINA", info, "Ok", "");
				}
				case 2:
				{
				new info[2000];
				if(PlayerInfo[playerid][pPosao] == 0) return SCM(playerid, -1, ""SRWBOJA"#UPOZORENJE: "BELA"Nemas posao!");
	        	if (PlayerInfo[playerid][pPosao] == POSAO_BUSVOZAC)
       	        {
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/linija /prekiniposao\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_KOSACTRAVE)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/kositravu /prekiniposao\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_MEHANICAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"CTRL da zakacite/otkacite vozilo | /mlociraj | /popravi | /napuni\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_POSTAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/posta /prekiniposao\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_KOMUNALAC)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/komunalno /prekiniposao\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_GRADJEVINAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/malter /poravnaj /prekiniposao\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_BOLNICAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/izleci /oprema\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_GROBAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/grobar /oprema\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_DZEPAROS)
				{ 
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/ukradi | Posle svake kradje morate sacekati odredjeno vreme\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_RIBAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/ribari \n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_FARMER)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/mleko /oranje /vrsenje\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_MASINOVODJA)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/voz\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_DOSTAVLJAC)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/uzmikutiju /utovari /istovari\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_KAMIONDZIJA)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/tura /oprema\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_PILOT)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/let /oprema\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_ELEKTRICAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/kvar /oprema\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_VODOINSTALATER)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/pronadjikvar /oprema /zatvoriventil /popravikvar\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_RUDAR)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/kopajzlato /predajzlato /utovarizlato /istovarizlato\n\n", sizeof(info));
				}
				if (PlayerInfo[playerid][pPosao] == POSAO_DRVOSECA)
				{
				    strcat(info, ""VARADERO"- [KOMANDE] "BELA"/drva /oprema\n\n", sizeof(info));
				}
				SPD(playerid, 603, DIALOG_STYLE_MSGBOX, "POSAO", info, "Ok", "");
	   	        }
				case 3:
				{
				new info[2000];
				if(PlayerInfo[playerid][pClan] == 0 && PlayerInfo[playerid][pLider] == 0) return SCM(playerid, -1, ""CRVENA"#UPOZORENJE: "BELA"Nisi clan nijedne organizacije!");
	          	if (PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1)
				{
                    strcat(info, "\t"VARADERO"Los Santos Police Department:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /cuff /uncuff /vuci /pusti /duznost /tazer /kazna /najjava /su /ocistidosije\n", sizeof(info));
				    strcat(info, ""BELA"/pojacanje /pdoprema /ponistilociranje /lociraj /mdc /swatoprema /oduzmi /pretresi\n", sizeof(info));
					strcat(info, ""BELA"/trazeni /pu /uhapsi /megafon /proveridosije /prepreka /unistiprepreku /unistisveprepreke\n", sizeof(info));
					strcat(info, ""BELA"/stavirotaciju /skinirotaciju /ram /skinimaramu /obori\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
				{
                    strcat(info, "\t"VARADERO"The Vinci Family:\n\n", sizeof(info));
					strcat(info, ""BELA"/sverc /oponisti /f /clanovi | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
				{
                    strcat(info, "\t"VARADERO"Black Dragon Triads:\n\n", sizeof(info));
					strcat(info, ""BELA"/sverc /oponisti /f /clanovi | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pLider] == 4)
				{
                    strcat(info, "\t"VARADERO"Grove Street Family:\n\n", sizeof(info));
					strcat(info, ""BELA"/kupisjeme /posadidrogu /beridrogu /oponisti /f /clanovi | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
				{
                    strcat(info, "\t"VARADERO"Ballas:\n\n", sizeof(info));
					strcat(info, ""BELA"/sverc /oponisti /f /clanovi | "SRWBOJA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 6 || PlayerInfo[playerid][pLider] == 6)
				{
                    strcat(info, "\t"VARADERO"Novinari:\n\n", sizeof(info));
					strcat(info, ""BELA"/intervju /oglasi /vesti /f /clanovi | "SRWBOJA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 7)
				{
                    strcat(info, "\t"VARADERO"Central Intelligence Agency:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /cuff /uncuff /vuci /pusti /duznost /tazer /kazna /najjava /su /moprema\n", sizeof(info));
			        strcat(info, ""BELA"/pojacanje /pdoprema /ponistilociranje /lociraj /mdc /swatoprema /oduzmi /pretresi\n", sizeof(info));
					strcat(info, ""BELA"/trazeni /pu /uhapsi /megafon /proveridosije /prepreka /unistiprepreku /unistisveprepreke\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
			    if (PlayerInfo[playerid][pClan] == 8 || PlayerInfo[playerid][pLider] == 8)
				{
                    strcat(info, "\t"VARADERO"Parking Servis:\n\n", sizeof(info));
					strcat(info, ""BELA"/zakaci /psduznost /psparkiraj /otkaci /psnajjava | "SRWBOJA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
			    if (PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
				{
                    strcat(info, "\t"VARADERO"Condor:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE(Sef) | "SRWBOJA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 10 || PlayerInfo[playerid][pLider] == 10)
				{
                    strcat(info, "\t"VARADERO"Hitman:\n\n", sizeof(info));
					strcat(info, ""BELA"/htrazeni /hlociraj /oprema /baci | "SRWBOJA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
				{
                    strcat(info, "\t"VARADERO"Blue Lagoon:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
				{
                    strcat(info, "\t"VARADERO"La Cosa Nostra:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
				{
                    strcat(info, "\t"VARADERO"Da Naga Boys:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 14 || PlayerInfo[playerid][pLider] == 14)
				{
                    strcat(info, "\t"VARADERO"Taxi:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /taxi /prihvati | "SRWBOJA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
				{
                    strcat(info, "\t"VARADERO"Yakuza:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 16)
				{
                    strcat(info, "\t"VARADERO"Federal Bureau of Investigation:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /cuff /uncuff /vuci /pusti /duznost /tazer /kazna /najjava /su /ocistidosije\n", sizeof(info));
			        strcat(info, ""BELA"/pojacanje /fbioprema /ponistilociranje /lociraj /mdc /swatoprema /oduzmi /pretresi\n", sizeof(info));
					strcat(info, ""BELA"/trazeni /pu /uhapsi /megafon /proveridosije /prepreka /unistiprepreku /unistisveprepreke\n", sizeof(info));
					strcat(info, ""BELA"/obori /ram /kazna /skinimaramu\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
				{
                    strcat(info, "\t"VARADERO"Black Cobra Corporation:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 18 || PlayerInfo[playerid][pLider] == 18)
				{
                    strcat(info, "\t"VARADERO"Vatrogasci:\n\n", sizeof(info));
					strcat(info, ""BELA"/vatrenaoprema /f /clanovi | "SRWBOJA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
				{
                    strcat(info, "\t"VARADERO"DeathRow:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
				{
                    strcat(info, "\t"VARADERO"Russian Mafia:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 21 || PlayerInfo[playerid][pLider] == 21)
				{
                    strcat(info, "\t"VARADERO"Narco Cartel:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				if (PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
				{  
                    strcat(info, "\t"VARADERO"Loca Cartel:\n\n", sizeof(info));
					strcat(info, ""BELA"/f /clanovi /sverc ENTER/SPACE (Sef) /baci/podigni | "SIVA"Lider: "BELA"/ubaci /izbaci /clanovi /dodelirank\n", sizeof(info));
					strcat(info, ""BELA"Nove komande, /lpanel /orgpanel /togchat", sizeof(info));
				}
				SPD(playerid, 604, DIALOG_STYLE_MSGBOX, "ORGANIZACIJA", info, "Ok", "");
				}
				case 4:
				{
			    new info[2048];
			    if(PlayerInfo[playerid][pPosedovanjeImanja] == 0) return SCM(playerid, -1, ""SRWBOJA"#UPOZORENJE: "BELA"Nemas Imanje!");
	            if (PlayerInfo[playerid][pPosedovanjeImanja] >= 1)
		     	{
                    strcat(info, "\t"VARADERO"Imanje:\n\n", sizeof(info));
			        strcat(info, ""BELA"/prodajsvojeimanje /kupiimanje /imanje /posadidrvo /ukradivoce /oberivoce\n", sizeof(info));
                }
				SPD(playerid, 680, DIALOG_STYLE_MSGBOX, "IMANJE", info, "Ok", "");
				}
			    }
	            return 1;
}
///////////////////////////////////////////////////////////
fDialog(16120)
{
if(!response) return 1;

switch(listitem) {
case 0, 1: { // auto 1 ili 2
new vehId = ((listitem == 0) ? (PlayerInfo[playerid][pPosedovanjeAuta]) : (PlayerInfo[playerid][pPosedovanjeAuta2]));

if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete vozilo.");
}
new Float:fPos[3];
GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
SetVehiclePos(VoziloInfo[vehId][vID], fPos[0], fPos[1], fPos[2]);
SendClientMessage(playerid, -1, "Vozilo je teleportovano.");
}
case 2:
{
new idmotora = PlayerInfo[playerid][pPosedovanjeMotora];

if(idmotora < 0 || strcmp(MotorInfo[idmotora][mVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete motor.");
}
new Float:fPos[3];
GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
SetVehiclePos(MotorInfo[idmotora][mID], fPos[0], fPos[1], fPos[2]);
SendClientMessage(playerid, -1, "Vozilo je teleportovano.");
}
case 3:
{
new idletelice = PlayerInfo[playerid][pPosedovanjeAviona];

if(idletelice < 0 || strcmp(AvionInfo[idletelice][avVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete vozilo.");
}
new Float:fPos[3];
GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
SetVehiclePos(AvionInfo[idletelice][avID], fPos[0], fPos[1], fPos[2]);
SendClientMessage(playerid, -1, "Vozilo je teleportovano.");
}
case 4:
{
new idplovila = PlayerInfo[playerid][pPosedovanjePlovila];

if(idplovila < 0 || strcmp(PlovilaInfo[idplovila][plVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete plovilo.");
}
new Float:fPos[3];
GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
SetVehiclePos(PlovilaInfo[idplovila][plID], fPos[0], fPos[1], fPos[2]);
SendClientMessage(playerid, -1, "Vozilo je teleportovano.");
}
}
return 1;
}
fDialog(16121)
{
if(!response) return 1;

switch(listitem) {
case 0, 1: { // auto 1 ili 2
new vehId = ((listitem == 0) ? (PlayerInfo[playerid][pPosedovanjeAuta]) : (PlayerInfo[playerid][pPosedovanjeAuta2]));

if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete vozilo.");
}
SetVehicleToRespawn(VoziloInfo[vehId][vID]);
SendClientMessage(playerid, -1, "Vozilo je respawnovano.");
}
case 2:
{
new idmotora = PlayerInfo[playerid][pPosedovanjeMotora];

if(idmotora < 0 || strcmp(MotorInfo[idmotora][mVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete motor.");
}
SetVehicleToRespawn(MotorInfo[idmotora][mID]);
SendClientMessage(playerid, -1, "Vozilo je respawnovano.");
}
case 3:
{
new idletelice = PlayerInfo[playerid][pPosedovanjeAviona];

if(idletelice < 0 || strcmp(AvionInfo[idletelice][avVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete avion.");
}
SetVehicleToRespawn(AvionInfo[idletelice][avID]);
SendClientMessage(playerid, -1, "Vozilo je respawnovano.");
}
case 4:
{
new idplovila = PlayerInfo[playerid][pPosedovanjePlovila];

if(idplovila < 0 || strcmp(PlovilaInfo[idplovila][plVlasnik], GetName(playerid)) != 0) {
return SendClientMessage(playerid, -1, "Vi ne posedujete plovilo.");
}
SetVehicleToRespawn(PlovilaInfo[idplovila][plID]);
SendClientMessage(playerid, -1, "Vozilo je respawnovano.");
}
}
return 1;
}
///////////////////////////////////////////////////////////////////////////////////
fDialog(152)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMAL;
			SCM(playerid, -1, ""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na Varadero Spawn !");
			SavePlayer(playerid);
		}
		case 1:
		{
			if(PlayerInfo[playerid][pPosedovanjeKuce] != -1)
			{
				PlayerInfo[playerid][pProveraSpawna] = SPAWN_KUCA;
				SCM(playerid,-1,""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na vasu kucu !");
				SavePlayer(playerid);
			}
			else return SCM(playerid, -1, ""CRVENA"[GRESKA] "BELA"Ne posedujete kucu !");
		}
		case 2:
		{
			if(PlayerInfo[playerid][pClan] > 0 || PlayerInfo[playerid][pLider] > 0)
			{
				PlayerInfo[playerid][pProveraSpawna] = SPAWN_BAZA;
				SCM(playerid,-1,""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na bazu Organizacije !");
				SavePlayer(playerid);
			}
			else return SCM(playerid, -1, ""CRVENA"[GRESKA] "BELA"Niste clan organizacije !");
		}
		case 3:
		{
			if(PlayerInfo[playerid][pRent] != -1)
			{
				PlayerInfo[playerid][pProveraSpawna] = SPAWN_RENTKUCA;
				SCM(playerid,-1,""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na rentanu kucu !");
				SavePlayer(playerid);
			}
			else return SCM(playerid, -1, ""CRVENA"[GRESKA] "BELA"Nemate rentanu kucu !");
		}
		case 4:
		{
			if(PlayerInfo[playerid][pPosedovanjeStana] != -1)
			{
				PlayerInfo[playerid][pProveraSpawna] = SPAWN_STAN;
				SCM(playerid,-1,""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na vas stan !");
				SavePlayer(playerid);
			}
			else return SCM(playerid, -1, ""CRVENA"[GRESKA] "BELA"Ne posedujete stan !");
		}
		case 5:
		{
			if(PlayerInfo[playerid][pPosedovanjeVikendice] != -1)
			{
				PlayerInfo[playerid][pProveraSpawna] = SPAWN_VIKENDICA;
				SCM(playerid,-1,""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na vasu vikendicu !");
				SavePlayer(playerid);
			}
			else return SCM(playerid, -1, ""CRVENA"[GRESKA] "BELA"Ne posedujete vikendicu !");
		}
		case 6:
		{
			PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMALV;
			SCM(playerid,-1,""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na LV Aerodrom !");
			SavePlayer(playerid);
		}
		case 7:
		{
			PlayerInfo[playerid][pProveraSpawna] = SPAWN_VIPBAZA;
			SCM(playerid,-1,""VARADERO"[INFO] "BELA"Uspesno ste promenili spawn na VIP bazu !");
			SavePlayer(playerid);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
fDialog(148)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
			{
				if(OrgInfo[BallasOruzije] < 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pistolj 9mm sa 100 metaka!");
				GivePlayerWeapon(playerid,22,100);
				OrgInfo[BallasOruzije] --;
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
			{
				if(OrgInfo[BallasOruzije] < 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pusku ak47 sa 100 metaka!");
				GivePlayerWeapon(playerid,30,100);
				OrgInfo[BallasOruzije] -= 2;
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
			{
				if(OrgInfo[BallasOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste Tec - 9 sa 150 metaka!");
				GivePlayerWeapon(playerid,32,150);
				OrgInfo[BallasOruzije] -= 2;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
fDialog(1483)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				if(OrgInfo[BaseOruzije] < 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pistolj 9mm sa 100 metaka!");
				GivePlayerWeapon(playerid,22,100);
				OrgInfo[BaseOruzije] --;
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				if(OrgInfo[BaseOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pusku ak47 sa 100 metaka!");
				GivePlayerWeapon(playerid,30,100);
				OrgInfo[BaseOruzije] -= 2;
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				if(OrgInfo[BaseOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste Tec - 9 sa 150 metaka!");
				GivePlayerWeapon(playerid,32,150);
				OrgInfo[BaseOruzije] -= 2;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////
fDialog(1484)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
			{
				if(OrgInfo[LCNOruzije] < 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pistolj 9mm sa 100 metaka!");
				GivePlayerWeapon(playerid,22,100);
				OrgInfo[LCNOruzije] --;
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
			{
				if(OrgInfo[LCNOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pusku ak47 sa 100 metaka!");
				GivePlayerWeapon(playerid,30,100);
				OrgInfo[LCNOruzije] -= 2;
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
			{
				if(OrgInfo[LCNOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste Tec - 9 sa 150 metaka!");
				GivePlayerWeapon(playerid,32,150);
				OrgInfo[LCNOruzije] -= 2;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
fDialog(1481)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
				if(OrgInfo[CondorOruzije] < 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pistolj 9mm sa 100 metaka!");
				GivePlayerWeapon(playerid,22,100);
				OrgInfo[CondorOruzije] --;
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
				if(OrgInfo[CondorOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pusku ak47 sa 100 metaka!");
				GivePlayerWeapon(playerid,30,100);
				OrgInfo[CondorOruzije] -= 2;
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
				if(OrgInfo[CondorOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste Tec - 9 sa 150 metaka!");
				GivePlayerWeapon(playerid,32,150);
				OrgInfo[CondorOruzije] -= 2;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////
fDialog(1482)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
			{
				if(OrgInfo[PoOruzije] < 1) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pistolj 9mm sa 100 metaka!");
				GivePlayerWeapon(playerid,22,100);
				OrgInfo[PoOruzije] --;
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
			{
				if(OrgInfo[PoOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste pusku ak47 sa 100 metaka!");
				GivePlayerWeapon(playerid,30,100);
				OrgInfo[PoOruzije] -= 2;
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
			{
				if(OrgInfo[PoOruzije] < 2) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nema dovljno resursa za to oruzije otidjite nasvercati!");
				SCM(playerid,-1,""SIVA"Uzeli ste Tec - 9 sa 150 metaka!");
				GivePlayerWeapon(playerid,32,150);
				OrgInfo[PoOruzije] -= 2;
			}
		}
	}
	return 1;
}
fDialog(14000)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14001,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 1:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14002,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 2:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14003,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 3:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14004,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 4:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14005,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 5:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14006,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 6:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14007,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 7:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14008,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
		case 8:
		{
		    new string[128];
			format(string, sizeof(string), "Stavi/Skini dodatak\nIzmeni dodatak\nObrisi dodatak");
            SPD(playerid,14009,DIALOG_STYLE_LIST, "{FF0000}Dodaci", string, "Izaberi", "Izadji");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////
fDialog(14001)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 0;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:0.");
    		    AttachInfo[playerid][iteam][attStatus] = 0;
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
                AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:0.");
			}
		}
		case 1:
		{
		    new iteam = 0;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:0");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 0;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach1] = -1;
       			PlayerInfo[playerid][pBone1] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:0.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14002)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 1;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
       			AttachInfo[playerid][iteam][attStatus] = 0;
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:1.");
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:1.");
			}
		}
		case 1:
		{
		    new iteam = 1;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:1");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 1;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach2] = -1;
       			PlayerInfo[playerid][pBone2] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:1.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14003)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 2;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
       			AttachInfo[playerid][iteam][attStatus] = 0;
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:2.");
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:2.");
			}
		}
		case 1:
		{
		    new iteam = 2;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:2");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 2;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach3] = -1;
       			PlayerInfo[playerid][pBone3] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:2.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14004)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 3;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
       			AttachInfo[playerid][iteam][attStatus] = 0;
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:3.");
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:3.");
			}
		}
		case 1:
		{
		    new iteam = 3;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:3");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 3;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach4] = -1;
       			PlayerInfo[playerid][pBone4] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:3.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14005)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 4;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
       			AttachInfo[playerid][iteam][attStatus] = 0;
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:4.");
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:4.");
			}
		}
		case 1:
		{
		    new iteam = 4;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:4");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 4;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach5] = -1;
       			PlayerInfo[playerid][pBone5] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:4.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14006)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 5;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
       			AttachInfo[playerid][iteam][attStatus] = 0;
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:5.");
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:5.");
			}
		}
		case 1:
		{
		    new iteam = 5;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        AttachInfo[playerid][iteam][attStatus] = 0;
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:5");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 5;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
				AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach6] = -1;
       			PlayerInfo[playerid][pBone6] = -1;
       			PlayerInfo[playerid][pAttach1] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:5.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14007)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 6;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:6.");
    		    AttachInfo[playerid][iteam][attStatus] = 0;
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:6.");
			}
		}
		case 1:
		{
		    new iteam = 6;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:6");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 6;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach7] = -1;
       			PlayerInfo[playerid][pBone7] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:6.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14008)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 7;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
       			AttachInfo[playerid][iteam][attStatus] = 0;
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:7.");
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:7.");
			}
		}
		case 1:
		{
		    new iteam = 7;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:7");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 7;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach8] = -1;
       			PlayerInfo[playerid][pBone8] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:7.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14009)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
            new iteam = 8;
           	if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
       			RemovePlayerAttachedObject(playerid, iteam);
       			AttachInfo[playerid][iteam][attStatus] = 0;
    		    SendClientMessage(playerid, -1, "Skinuli ste dodatak ID:8.");
			}
			else
			{
				new mod = AttachInfo[playerid][iteam][attModel];
				new bon = AttachInfo[playerid][iteam][attBone];
				new Float:of1 = AttachInfo[playerid][iteam][attFOffsetX];
				new Float:of2 = AttachInfo[playerid][iteam][attFOffsetY];
				new Float:of3 = AttachInfo[playerid][iteam][attFOffsetZ];
				new Float:rf1 = AttachInfo[playerid][iteam][attFRotX];
				new Float:rf2 = AttachInfo[playerid][iteam][attFRotY];
				new Float:rf3 = AttachInfo[playerid][iteam][attFRotZ];
				new Float:sf1 = AttachInfo[playerid][iteam][attFScaleX];
				new Float:sf2 = AttachInfo[playerid][iteam][attFScaleY];
        		new Float:sf3 = AttachInfo[playerid][iteam][attFScaleZ];
        		AttachInfo[playerid][iteam][attStatus] = 1;
				SetPlayerAttachedObject(playerid,iteam,mod,bon,of1,of2,of3,rf1,rf2,rf3,sf1,sf2,sf3);
				SendClientMessage(playerid, -1, "Stavili ste dodatak ID:8.");
			}
		}
		case 1:
		{
		    new iteam = 8;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
		        EditAttachedObject(playerid, iteam);
		        SendClientMessage(playerid, -1, "Preuredjujete attachment ID:8");
			}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete izmeniti dodatak jer ga niste postavili na sebe!");
    		}
		}
		case 2:
		{
		    new iteam = 8;
			if(IsPlayerAttachedObjectSlotUsed(playerid, iteam))
       		{
				AttachInfo[playerid][iteam][attIndex] = -1;
				AttachInfo[playerid][iteam][attModel] = -1;
				AttachInfo[playerid][iteam][attBone] = -1;
				AttachInfo[playerid][iteam][attFOffsetX] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetY] = 0.000000;
				AttachInfo[playerid][iteam][attFOffsetZ] = 0.000000;
				AttachInfo[playerid][iteam][attFRotX] = 0.000000;
				AttachInfo[playerid][iteam][attFRotY] = 0.000000;
				AttachInfo[playerid][iteam][attFRotZ] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleX] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleY] = 0.000000;
				AttachInfo[playerid][iteam][attFScaleZ] = 0.000000;
       			AttachInfo[playerid][iteam][attIndex] = -1;
       			AttachInfo[playerid][iteam][attStatus] = -1;
       			PlayerInfo[playerid][pAttach9] = -1;
       			PlayerInfo[playerid][pBone9] = -1;
       			PUAttach[playerid] = -1;

                SaveAttach(playerid);

				RemovePlayerAttachedObject(playerid, iteam);
    			SendClientMessage(playerid, -1, "Obrisali ste attachment ID:8.");
    		}
    		else
    		{
    			SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Ne mozete obrisati dodatak jer ga niste postavili na sebe!");
    		}
		}
	}
	return 1;
}

fDialog(14010)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
	    	if(PlayerInfo[playerid][pAttach1] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:0 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 0;
		}
		case 1:
		{
			if(PlayerInfo[playerid][pAttach2] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:1 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 1;
		}
		case 2:
		{
			if(PlayerInfo[playerid][pAttach3] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:2 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 2;
		}
		case 3:
		{
			if(PlayerInfo[playerid][pAttach4] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:3 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 3;
		}
		case 4:
		{
			if(PlayerInfo[playerid][pAttach5] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:4 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 4;
		}
		case 5:
		{
			if(PlayerInfo[playerid][pAttach6] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:5 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 5;
		}
		case 6:
		{
			if(PlayerInfo[playerid][pAttach7] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:6 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 6;
		}
		case 7:
		{
			if(PlayerInfo[playerid][pAttach8] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA""BELA" Na slotu ID:7 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 7;
		}
		case 8:
		{
			if(PlayerInfo[playerid][pAttach9] != -1) return SCM(playerid, -1, ""CRVENA"INFO"BELA" "BELA" Na slotu ID:8 imate dodatak, morate ga prvo obrisati /attach!");
            new string[4000+1];
            for(new x;x<sizeof(AttachmentObjects);x++)
            {
               	format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
           	}
            ShowPlayerDialog(playerid, 14011, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranj Modela", string, "Izaberi", "Odustani");
           	PUAttach[playerid] = 8;
		}
	}
	return 1;
}

fDialog(14011)
{
    if(response)
    {
        if(PUAttach[playerid] == 0)
        {
			PlayerInfo[playerid][pAttach1] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 1.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 1)
        {
			PlayerInfo[playerid][pAttach2] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 2.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 2)
        {
			PlayerInfo[playerid][pAttach3] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 3.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 3)
        {
			PlayerInfo[playerid][pAttach4] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 4.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 4)
        {
			PlayerInfo[playerid][pAttach5] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 5.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 5)
        {
			PlayerInfo[playerid][pAttach6] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 6.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 6)
        {
			PlayerInfo[playerid][pAttach7] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 7.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 7)
        {
			PlayerInfo[playerid][pAttach8] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 8.");
            g_NovacMinus(playerid, -500);
        }
        else if(PUAttach[playerid] == 8)
        {
			PlayerInfo[playerid][pAttach9] = AttachmentObjects[listitem][attachmodel];
			new string[256+1];
            for(new x;x<sizeof(AttachmentBones);x++)
            {
                format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
            }
            ShowPlayerDialog(playerid, 13512, DIALOG_STYLE_LIST, \
            "{FF0000}Attach Modifikacija - Biranje modela", string, "Izaberi", "Odustani");
            SendClientMessage(playerid, -1, "Izabrali ste dodatak ID 9.");
            g_NovacMinus(playerid, -500);
        }
    }
    else
	{

	}
    return 1;
}

fDialog(13512)
{
    if(response)
    {
		new Float:x,Float:y,Float:z;
   	    GetPlayerPos(playerid,x,y,z);
        if(PUAttach[playerid] == 0)
        {
            PlayerInfo[playerid][pBone1] = listitem+1;
            SetPlayerAttachedObject(playerid, 0, PlayerInfo[playerid][pAttach1], PlayerInfo[playerid][pBone1]);
            EditAttachedObject(playerid, 0);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
        else if(PUAttach[playerid] == 1)
        {
            PlayerInfo[playerid][pBone2] = listitem+1;
            SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pAttach2], PlayerInfo[playerid][pBone2]);
            EditAttachedObject(playerid, 1);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
		else if(PUAttach[playerid] == 2)
        {
            PlayerInfo[playerid][pBone3] = listitem+1;
            SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pAttach3], PlayerInfo[playerid][pBone3]);
            EditAttachedObject(playerid, 2);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
		else if(PUAttach[playerid] == 3)
        {
            PlayerInfo[playerid][pBone4] = listitem+1;
            SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pAttach4], PlayerInfo[playerid][pBone4]);
            EditAttachedObject(playerid, 3);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
		else if(PUAttach[playerid] == 4)
        {
            PlayerInfo[playerid][pBone5] = listitem+1;
            SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pAttach5], PlayerInfo[playerid][pBone5]);
            EditAttachedObject(playerid, 4);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
		else if(PUAttach[playerid] == 5)
        {
            PlayerInfo[playerid][pBone6] = listitem+1;
            SetPlayerAttachedObject(playerid, 5, PlayerInfo[playerid][pAttach6], PlayerInfo[playerid][pBone6]);
            EditAttachedObject(playerid, 5);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
		else if(PUAttach[playerid] == 6)
        {
            PlayerInfo[playerid][pBone7] = listitem+1;
            SetPlayerAttachedObject(playerid, 6, PlayerInfo[playerid][pAttach7], PlayerInfo[playerid][pBone7]);
            EditAttachedObject(playerid, 6);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
		else if(PUAttach[playerid] == 7)
        {
            PlayerInfo[playerid][pBone8] = listitem+1;
            SetPlayerAttachedObject(playerid, 7, PlayerInfo[playerid][pAttach8], PlayerInfo[playerid][pBone8]);
            EditAttachedObject(playerid, 7);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
		else if(PUAttach[playerid] == 8)
        {
            PlayerInfo[playerid][pBone9] = listitem+1;
            SetPlayerAttachedObject(playerid, 8, PlayerInfo[playerid][pAttach9], PlayerInfo[playerid][pBone9]);
            EditAttachedObject(playerid, 8);
            SendClientMessage(playerid, -1, "Koristite 'SPACE' kako bi ste pokretali kameru.");
		}
    }
    else
    {

    }
    return 1;
}
/////////////////////////////////////////////////////////////////////////////////
fDialog(138)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			SPD(playerid, 140, DIALOG_STYLE_LIST, "ORGANIZACIJE", "Los Santos Police Department\nBlack Dragon Triads\nMesto za drogu\nThe Vinci Family\nGrove Street Family\nBallas\nNovinari\nParking Servis\nCondor\nBlue Lagoon\nYakuza\nBlack Cobra Corporation\nDeathRow\nVatrogasci\nDa Naga Boys\nFederal Bureau of Investigation\nTaxi\nLa Cosa Nostra\nHangar\nThe Russia Mafia\nHitman\nCentral Intelligence Agency\nLoca Cartel\nNarco Cartel\nThe Blood Brothers\nVarrio Los Aztecas", "Odabir", "Izlaz");
		}
		case 1:
		{
			SPD(playerid, 142, DIALOG_STYLE_LIST, "LOS SANTOS LOKACIJE", "Burg\nBanka\nLos Santos Centar\nSpawn\nBolnica\nPlaza\nAuto Skola\nVip Baza\nHotel\nDrift Staza\nOpstina\nZlatara\nMotor Salon\nBina\nSalon Plovila\nAuto Salon\nSalon Aviona\nTune Car", "Odabir", "Izlaz");
		}
		case 2:
		{
            SPD(playerid, 143, DIALOG_STYLE_LIST, "LAS VENTURAS & SAN FIERRO", "Banka\nCentar\nSpawn\nAuto Salon\nGlavni GunShop\nBurg\nSan Fierro", "Odabir", "Izlaz");
		}
		case 3:
		{
			SPD(playerid, 144, DIALOG_STYLE_LIST, "POSLOVI", "Bus Vozac\nKamiondzija\nPilot\nGradjevinar\nMehanicar\nKosac Trave\nGrobar\nFarmer\nDrvoseca\nRudar\nPostar\nKomunalac\nDzeparos\nMasinovodja\nDostavljac\nElektricar\nRibar\nCoca Cola", "Odabir", "Izlaz");
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////
fDialog(143)
{
			if(!response) return 1;
			switch(listitem)
			{
		    case 0:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2472.3936,2239.4668,10.8203);
			}
			else
			{
				SetPlayerPos(playerid,2472.3936,2239.4668,10.8203);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		   }
	       case 1:
		   {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2332.7595,2163.9521,10.8211);
			}
			else
			{
				SetPlayerPos(playerid,2332.7595,2163.9521,10.8211);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 2:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1690.4329,1447.2113,10.7663);
			}
			else
			{
				SetPlayerPos(playerid,1690.4329,1447.2113,10.7663);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 3:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2161.5476,1378.7594,10.8203);
			}
			else
			{
				SetPlayerPos(playerid,2161.5476,1378.7594,10.8203);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 4:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2533.4314,2083.3643,10.8203);
			}
			else
			{
				SetPlayerPos(playerid,2533.4314,2083.3643,10.8203);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 5:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2450.0464,2042.7434,10.8203);
			}
			else
			{
				SetPlayerPos(playerid,2450.0464,2042.7434,10.8203);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
				case 6:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-1399.1519,-321.2615,14.1484);
			}
			else
			{
				SetPlayerPos(playerid,-1399.1519,-321.2615,14.1484);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"Varadero Teleport"BELA"(Teleportovali ste se, do San Fiero)!");
			}
			}
			return 1;
}
fDialog(142)
{
			if(!response) return 1;
			switch(listitem)
			{
	  		case 0:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1207.0798,-936.4898,42.7406);
			}
			else
			{
				SetPlayerPos(playerid,1207.0798,-936.4898,42.7406);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
	    	SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
		    case 1:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1471.5444,-1038.1741,23.7503);
			}
			else
			{
				SetPlayerPos(playerid,1471.5444,-1038.1741,23.7503);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
            case 2:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1526.1333,-1665.1233,13.3828);
			}
			else
			{
				SetPlayerPos(playerid,1526.1333,-1665.1233,13.3828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
		    case 3:
            {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,699.3864,-1357.8580,13.5966);
			}
			else
			{
				SetPlayerPos(playerid,699.3864,-1357.8580,13.5966);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
		    SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
	        }
	        case 4:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1204.2029,-1329.0402,13.3984);
			}
			else
			{
				SetPlayerPos(playerid,1204.2029,-1329.0402,13.3984);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
            SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
	        }
		    case 5:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,438.8236,-1810.8392,5.5469);
			}
			else
			{
				SetPlayerPos(playerid,438.8236,-1810.8392,5.5469);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 6:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1540.0463,-2268.5000,13.5469);
			}
			else
			{
				SetPlayerPos(playerid,1540.0463,-2268.5000,13.5469);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 7:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1372.1948,-1647.9924,13.3828);
			}
			else
			{
				SetPlayerPos(playerid,1372.1948,-1647.9924,13.3828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"Varadero Teleport"BELA"(Teleportovali ste se, do VIP BAZE !)!");
			}
	  		case 8:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,941.1453,-1411.2128,13.3889);
			}
			else
			{
				SetPlayerPos(playerid,941.1453,-1411.2128,13.3889);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 9:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-521.0,-3643.0,7.0);
			}
			else
            {
				SetPlayerPos(playerid,-521.0,-3643.0,7.0);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 10:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1482.3445,-1736.5898,13.3828);
			}
			else
            {
				SetPlayerPos(playerid,1482.3445,-1736.5898,13.3828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
	    	}
			case 11:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1193.7480,-1441.1434,13.0587);
			}
			else
            {
				SetPlayerPos(playerid,1193.7480,-1441.1434,13.0587);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 12:
	    	{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,696.5967,-1583.2915,13.9821);
			}
			else
            {
				SetPlayerPos(playerid,696.5967,-1583.2915,13.9821);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 13:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,264.0621,-1830.2249,3.7725);
			}
			else
            {
				SetPlayerPos(playerid,264.0621,-1830.2249,3.7725);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 14:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,275.1755,-1872.4954,2.4768);
			}
			else
            {
				SetPlayerPos(playerid,275.1755,-1872.4954,2.4768);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
            }
			case 15:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,525.3322,-1268.6993,16.1449);
			}
			else
            {
				SetPlayerPos(playerid,525.3322,-1268.6993,16.1449);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 16:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1891.4626,-2280.5093,13.5469);
			}
			else
            {
				SetPlayerPos(playerid,1891.4626,-2280.5093,13.5469);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 17:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2511.8857,-1503.4752,23.8281);
			}
			else
   			{
				SetPlayerPos(playerid,2511.8857,-1503.4752,23.8281);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
  			}
			}
			return 1;
}
//////////////////////////////////////////////////////////////////////////////
            fDialog(140)
            {
	        if(!response) return 1;
			switch(listitem)
			{
			case 0:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1526.1333,-1665.1233,13.3828);
			}
			else
			{
				SetPlayerPos(playerid,1526.1333,-1665.1233,13.3828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
		    SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 1:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1262.8628,-736.4495,93.8375);
			}
			else
			{
				SetPlayerPos(playerid,1262.8628,-736.4495,93.8375);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 2:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-1057.4580,-1661.8391,77.1505);
			}
			else
			{
				SetPlayerPos(playerid,-1057.4580,-1661.8391,77.1505);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 3:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2236.4727,-2186.4226,13.5469);
			}
			else
			{
				SetPlayerPos(playerid,2236.4727,-2186.4226,13.5469);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 4:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2437.6843,-1652.9661,13.4803);
			}
			else
			{
				SetPlayerPos(playerid,2437.6843,-1652.9661,13.4803);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 5:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2000.9080,-1139.2330,25.3028);
			}
			else
			{
				SetPlayerPos(playerid,2000.9080,-1139.2330,25.3028);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 6:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1721.1100,-1820.9573,13.5469);
			}
			else
			{
				SetPlayerPos(playerid,1721.1100,-1820.9573,13.5469);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
		    SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 7:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1632.7848,-1160.6322,23.6233);
			}
			else
			{
				SetPlayerPos(playerid,1632.7848,-1160.6322,23.6233);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 8:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,789.6747,-1151.4834,23.3656);
			}
			else
			{
				SetPlayerPos(playerid,789.6747,-1151.4834,23.3656);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 9:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-707.5719,901.4854,12.4713);
			}
			else
			{
				SetPlayerPos(playerid,-707.5719,901.4854,12.4713);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 10:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-94.4386,-373.2594,1.4297);
			}
			else
			{
				SetPlayerPos(playerid,-94.4386,-373.2594,1.4297);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 11:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2288.1577,609.3864,10.8203);
			}
			else
			{
				SetPlayerPos(playerid,2288.1577,609.3864,10.8203);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 12:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-1056.4683,-1268.6368,128.6815);
			}
			else
			{
				SetPlayerPos(playerid,-1056.4683,-1268.6368,128.6815);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 13:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,220.7318,-1442.7168,13.2399);
			}
			else
			{
				SetPlayerPos(playerid,220.7318,-1442.7168,13.2399);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 14:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1263.0208,-2060.5903,59.3571);
			}
			else
			{
				SetPlayerPos(playerid,1263.0208,-2060.5903,59.3571);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
		    SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 15:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1340.6367,-1357.3140,13.4828);
			}
			else
			{
				SetPlayerPos(playerid,1340.6367,-1357.3140,13.4828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 16:
		   {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1246.8146,-1820.9006,13.5104);
			}
			else
			{
				SetPlayerPos(playerid,1246.8146,-1820.9006,13.5104);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 17:
		   {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2803.1550,2659.0454,10);
			}
			else
            {
				SetPlayerPos(playerid,2803.1550,2659.0454,10);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 18:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,34.8246,1886.3667,17.6406);
			}
			else
            {
				SetPlayerPos(playerid,34.8246,1886.3667,17.6406);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		  	}
			case 19:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-2331.6465,-1639.7330,483.7031);
			}
			else
   			{
				SetPlayerPos(playerid,-2331.6465,-1639.7330,483.7031);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 20:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1025.9390,-384.8113,71.6478);
			}
			else
   			{
				SetPlayerPos(playerid,1025.9390,-384.8113,71.6478);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 21:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1297.7930,-1657.3230,13.4828);
			}
			else
   			{
				SetPlayerPos(playerid,1297.7930,-1657.3230,13.4828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 22:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,115.2473,-1625.6174,10.2075);
			}
			else
            {
				SetPlayerPos(playerid,115.2473,-1625.6174,10.2075);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
   			case 23:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-2126.8997,-76.6020,35.1797);
			}
			else
            {
				SetPlayerPos(playerid,-2126.8997,-76.6020,35.1797);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
	        case 24:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-660.1028,-1541.0958,22.1596);
			}
			else
			{
				SetPlayerPos(playerid,-660.1028,-1541.0958,22.1596);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			//UcitavanjeIgraca(playerid);
			SCM(playerid,-1,""SPLAVA"([V:RPG] ) "BELA"Teleportovali ste do TBB-a!"); //1133.8668,-1740.7040,13.4074
            }
            case 25:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2646.0093,-2003.9674,13.3828);
			}
			else
			{
				SetPlayerPos(playerid,2646.0093,-2003.9674,13.3828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			//UcitavanjeIgraca(playerid);
			SCM(playerid,-1,""SPLAVA"([V:RPG] ) "BELA"Teleportovali ste do VL-a!"); //1133.8668,-1740.7040,13.4074
            }
	        }
            return 1;
            }
//////////////////////////////////////////////////////////////////////////////
fDialog(144)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1805.2898,-1895.1699,13.4047);
			}
			else
			{
				SetPlayerPos(playerid,1805.2898,-1895.1699,13.4047);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
		    SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 1:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1791.0249,-2066.1953,13.5789);
			}
			else
			{
				SetPlayerPos(playerid,1791.0249,-2066.1953,13.5789);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 2:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1970.4949,-2270.2085,13.5469);
			}
			else
			{
				SetPlayerPos(playerid,1970.4949,-2270.2085,13.5469);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 3:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1880.7382,-1607.4833,13.3828);
			}
			else
			{
				SetPlayerPos(playerid,1880.7382,-1607.4833,13.3828);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 4:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1832.7748,-1440.8700,13.5935);
			}
			else
			{
				SetPlayerPos(playerid,1832.7748,-1440.8700,13.5935);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 5:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1899.1639,-1237.6647,15.4565);
			}
			else
			{
				SetPlayerPos(playerid,1899.1639,-1237.6647,15.4565);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 6:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,934.1129,-1105.6099,24.2754);
			}
			else
			{
				SetPlayerPos(playerid,934.1129,-1105.6099,24.2754);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
		    SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 7:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-69.7204,26.1115,3.1172);
			}
			else
			{
				SetPlayerPos(playerid,-69.7204,26.1115,3.1172);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 8:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,112.5598,1073.8737,13.6094);
			}
			else
			{
				SetPlayerPos(playerid,112.5598,1073.8737,13.6094);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 9:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,605.0556,877.4213,-42.9609);
			}
			else
			{
				SetPlayerPos(playerid,605.0556,877.4213,-42.9609);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 10:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,978.7337,-1273.5811,15.1160);
			}
			else
			{
				SetPlayerPos(playerid,978.7337,-1273.5811,15.1160);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 11:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1564.0120,-1547.2556,13.5469);
			}
			else
			{
				SetPlayerPos(playerid,1564.0120,-1547.2556,13.5469);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
		case 12:
		{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2353.6851,-1160.3630,27.4577);
			}
			else
			{
				SetPlayerPos(playerid,2353.6851,-1160.3630,27.4577);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 13:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1722.3798,-1943.8256,13.5717);
			}
			else
			{
				SetPlayerPos(playerid,1722.3798,-1943.8256,13.5717);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 14:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1633.4341,-1840.5732,13.5407);
			}
			else
			{
				SetPlayerPos(playerid,1633.4341,-1840.5732,13.5407);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
			}
			case 17:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,-408.9716,-632.7991,12.717);
			}
			else
			{
				SetPlayerPos(playerid,-408.9716,-632.7991,12.717);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
		    case 15:
			{
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,1092.4558,-1234.0677,15.8203);
			}
			else
			{
				SetPlayerPos(playerid,1092.4558,-1234.0677,15.8203);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		    }
			case 16:
		    {
			if(GetPlayerState(playerid) == 2)
			{
				new idv = GetPlayerVehicleID(playerid);
				SetVehiclePos(idv,2881.3286,-1964.0175,11.1899);
			}
			else
			{
				SetPlayerPos(playerid,2881.3286,-1964.0175,11.1899);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Uspesno ste se teleportovali na odredjeno mesto!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////
fDialog(136)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(SvercUlja[playerid] >= 1 && SvercMaterijala[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec prevozis ulje ili materijale!");
			if(!IsPlayerInRangeOfPoint(playerid, 5.0,2133.8552,-2296.7241,13.4270)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
			if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovolj novca za sverc (200$)");
			SvercMaterijala[playerid] = 1; g_NovacMinus(playerid,200);
			PlayerInfo[playerid][pRadi] = 1;
			SetPlayerCheckpoint(playerid, 210.9088,-228.5437,1.7786, 5.0);
			SCM(playerid,-1,""SPLAVA"[TVF]: "BELA"Krenuli ste sa svercom otidjite u selo da utovarite materijale.");
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
		case 1:
		{
			if(SvercUlja[playerid] >= 1 && SvercMaterijala[playerid] >= 1) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Vec prevozis ulje ili materijale!");
			if(!IsPlayerInRangeOfPoint(playerid, 5.0,2133.8552,-2296.7241,13.4270)) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Niste na mjestu pokretanja sverca!");
			if(PlayerInfo[playerid][pNovacDzep] < 400) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovolj novca za sverc (400$)");
			SvercUlja[playerid] = 1; g_NovacMinus(playerid,400);
			PlayerInfo[playerid][pRadi] = 1;
			SetPlayerCheckpoint(playerid, -132.7977,-1670.5424,1.0940, 5.0);
			SCM(playerid,-1,""ZELENA"[TVF]: "BELA"Otidjite u luku los santosa i utovarite ulje...");
			SetTimerEx("WarpHack", 5000, false, "i", playerid);
			SetPVarInt(playerid, "WarpHack", 3);
		}
		case 2:
		{
			if(SvercUlja[playerid] == 0 && SvercMaterijala[playerid] == 0) return SCM(playerid,-1, ""VARADERO"[V:RPG] "SIVA"Nemas aktiviran sverc!");
			SvercMaterijala[playerid] = 0; SvercUlja[playerid] = 0; DisablePlayerCheckpoint(playerid);
			PlayerInfo[playerid][pRadi] = 0;
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Prekinuli ste sverc!");
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
fDialog(120)
{
	if(!response) return 1;
	new string[128], lider = PlayerInfo[playerid][pLider], clan = PlayerInfo[playerid][pClan];
	switch(listitem)
	{
		case 0:
		{
			if(clan == 2 || lider == 2)
			{
				format(string,sizeof(string),""SRWBOJA"The Vinci Family stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d\nUlja u masini: %d L",OrgInfo[TvfMats],OrgInfo[TvfNovac],OrgInfo[TvfDroga],OrgInfo[TvfMasina]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"The Vinci Family",string,"Ok","");
			}
			else if(clan == 3 || lider == 3)
			{
				format(string,sizeof(string),""VARADERO"Black Dragon Triads stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[BdtMats],OrgInfo[BdtNovac],OrgInfo[BdtDroga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Black Dragon Triads",string,"Ok","");
			}
			else if(clan == 4 || lider == 4)
			{
				format(string,sizeof(string),""ZELENA"Grove Street Family stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[GsfMats],OrgInfo[GsfNovac],OrgInfo[GsfDroga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Grove Street Family",string,"Ok","");
			}
			else if(clan == 5 || lider == 5)
			{
				format(string,sizeof(string),""BALLASC"Ballas stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d\nOruzije resursi: %d",OrgInfo[BallasMats],OrgInfo[BallasNovac],OrgInfo[BallasDroga],OrgInfo[BallasOruzije]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Ballas",string,"Ok","");
			}
			else if(clan == 9 || lider == 9)
			{
				format(string,sizeof(string),""BALLASC"Condor stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d\nOruzije resursi: %d",OrgInfo[CondorMats],OrgInfo[CondorNovac],OrgInfo[CondorDroga],OrgInfo[CondorOruzije]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Condor",string,"Ok","");
			}
			else if(clan == 11 || lider == 11)
			{
				format(string,sizeof(string),""BALLASC"Blue Lagoon stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d\nOruzije resursi: %d",OrgInfo[PoMats],OrgInfo[PoNovac],OrgInfo[PoDroga],OrgInfo[PoOruzije]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Blue Lagoon",string,"Ok","");
			}
			else if(clan == 12 || lider == 12)
			{
				format(string,sizeof(string),""BALLASC"La Cosa Nostra stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[Po2Mats],OrgInfo[Po2Novac],OrgInfo[Po2Droga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"La Cosa Nostra",string,"Ok","");
			}
			else if(clan == 13 || lider == 13)
			{
				format(string,sizeof(string),""BALLASC"Da Naga Boys stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[Po3Mats],OrgInfo[Po3Novac],OrgInfo[Po3Droga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Da Naga Boys",string,"Ok","");
			}
			else if(clan == 15 || lider == 15)
			{
				format(string,sizeof(string),""BALLASC"Yakuza stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d\nOruzije resursi: %d",OrgInfo[BaseMats],OrgInfo[BaseNovac],OrgInfo[BaseDroga],OrgInfo[BaseOruzije]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Yakuza",string,"Ok","");
			}
			else if(clan == 17 || lider == 17)
			{
				format(string,sizeof(string),""BALLASC"Black Cobra Corporation stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[RbMats],OrgInfo[RbNovac],OrgInfo[RbDroga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Black Cobra Corporation",string,"Ok","");
			}
			else if(clan == 19 || lider == 19)
			{
				format(string,sizeof(string),""BALLASC"Death Row stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d\nOruzije resursi: %d",OrgInfo[LCNMats],OrgInfo[LCNNovac],OrgInfo[LCNDroga],OrgInfo[LCNOruzije]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Death Row",string,"Ok","");
			}
			else if(clan == 20 || lider == 20)
			{
				format(string,sizeof(string),""BALLASC"The Russia Mafia stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[Po4Mats],OrgInfo[Po4Novac],OrgInfo[Po4Droga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"The Russia Mafia",string,"Ok","");
			}
			else if(clan == 21 || lider == 21)
			{
				format(string,sizeof(string),""BALLASC"Narco Cartel stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[SmithMats],OrgInfo[SmithNovac],OrgInfo[SmithDroga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Narco Cartel",string,"Ok","");
			}
			else if(clan == 22 || lider == 22)
			{
				format(string,sizeof(string),""BALLASC"Loca Cartel stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[LCSMats],OrgInfo[LCSNovac],OrgInfo[LCSDroga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Narco Cartel",string,"Ok","");
			}
			else if(clan == 23 || lider == 23)
			{
				format(string,sizeof(string),""BALLASC"TBB stanje u sefu\n\n"BELA"Materijali: %d\nNovac: %d$\nDroga: %d",OrgInfo[TCMats],OrgInfo[TCNovac],OrgInfo[TCDroga]);
				SPD(playerid,122,DIALOG_STYLE_MSGBOX,""BELA"Narco Cartel",string,"Ok","");
			}
		}
		case 1:
		{
			if(lider == 0) return SCM(playerid,-1,""SIVA"Samo lider moze uzimati stvari iz sefa!");
			if(lider == 2 || lider == 3 || lider == 4 || lider == 5 || lider == 9 || lider == 11 || lider == 12 || lider == 13 || lider == 15 || lider == 17 || lider == 19 || lider == 20 || lider == 21 || lider == 22 || lider == 23)
			{
				SPD(playerid,124,DIALOG_STYLE_INPUT,""BELA"Sef uzimanje", ""SRWBOJA"Unesite kolicinu materijala koju zelite da uzmete...", "Uzmi", "Izlaz");
			}
		}
		case 2:
		{
			if(clan == 2 || lider == 2 || clan == 3 || lider == 3 || clan == 4 || lider == 4 || clan == 5 || lider == 5 || clan == 9 || lider == 9 || clan == 11 || lider == 11 || clan == 12 || lider == 12 || clan == 13 || lider == 13 || clan == 15 || lider == 15 || clan == 17 || lider == 17 || clan == 19 || lider == 19 || lider == 20 || clan == 20 || lider == 21 || clan == 21 || lider == 22 || clan == 22 || lider == 23 || clan == 23)
			{
				SPD(playerid,126,DIALOG_STYLE_INPUT,""BELA"Sef ostavljanje", ""SRWBOJA"Unesite kolicinu materijala koju zelite da ostavite...", "Ostavi", "Izlaz");
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pLider] == 0) return SCM(playerid,-1,""SIVA"Samo lider moze uzimati stvari iz sefa!");
			if(lider == 2 || lider == 3 || lider == 4 || lider == 5 || lider == 9 || lider == 11 || lider == 12 || lider == 13 || lider == 15 || lider == 17 || lider == 19 || lider == 20 || lider == 21 || lider == 22 || lider == 23)
			{
				SPD(playerid,128,DIALOG_STYLE_INPUT,""BELA"Sef uzimanje", ""SRWBOJA"Unesite kolicinu novca koju zelite da uzmete...", "Uzmi", "Izlaz");
			}
		}
		case 4:
		{
			if(clan == 2 || lider == 2 || clan == 3 || lider == 3 || clan == 4 || lider == 4 || clan == 5 || lider == 5 ||  clan == 9 || lider == 9 || clan == 11 || lider == 11 || clan == 12 || lider == 12 || clan == 13 || lider == 13 || clan == 15 || lider == 15 || clan == 17 || lider == 17 || clan == 19 || lider == 19 || lider == 20 || clan == 20 || lider == 21 || clan == 21 || lider == 22 || clan == 22 || lider == 23 || clan == 23)
			{
				SPD(playerid,130,DIALOG_STYLE_INPUT,""BELA"Sef ostavljanje", ""SRWBOJA"Unesite kolicinu novca koju zelite da ostavite...", "Ostavi", "Izlaz");
			}
		}
		case 5:
		{
			if(lider == 0) return SCM(playerid,-1,""SIVA"Samo lider moze uzimati stvari iz sefa!");
			if(lider == 2 || lider == 3 || lider == 4 || lider == 5 || lider == 9 || lider == 11 || lider == 12 || lider == 13 || lider == 15 || lider == 17 || lider == 19 || lider == 20 || lider == 21 || lider == 22 || lider == 23)
			{
				SPD(playerid,132,DIALOG_STYLE_INPUT,""BELA"Sef uzimanje", ""SRWBOJA"Unesite kolicinu droge koju zelite da uzmete...", "Uzmi", "Izlaz");
			}
		}
		case 6:
		{
			if(clan == 2 || lider == 2 || clan == 3 || lider == 3 || clan == 4 || lider == 4 || clan == 5 || lider == 5 || clan == 9 || lider == 9 || clan == 11 || lider == 11 || clan == 12 || lider == 12 || clan == 13 || lider == 13 || clan == 15 || lider == 15 || clan == 17 || lider == 17 || clan == 19 || lider == 19 || lider == 20 || clan == 20 || lider == 21 || clan == 21 || lider == 22 || clan == 22 || lider == 23 || clan == 23)
			{
				SPD(playerid,134,DIALOG_STYLE_INPUT,""BELA"Sef ostavljanje", ""SRWBOJA"Unesite kolicinu droge koju zelite da ostavite...", "Ostavi", "Izlaz");
			}
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(134)
{
	if(!response) return 1;
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste uneli kolicinu droge za ostavljanje!");
		if(iznos < 1 || iznos > 10000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Kolicina droge ne moze biti ispod 1 i iznad 10000!");
		if(iznos > PlayerInfo[playerid][pDroga]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate toliko droge kod sebe!");
		if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[TvfDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TVF]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[BdtDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""VARADERO"[BDT]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[GsfDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""ZELENA"[GSF]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[BallasDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Ballas]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[CondorDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Condor]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[PoDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Blue Lagoon]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[Po2Droga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[LCN]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[Po4Droga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Russian Mafia]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[Po3Droga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Da Naga Boys]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[BaseDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Yakuza]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[RbDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Black Cobra Corporation]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[LCNDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[DR]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[SmithDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Narco Cartel]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[LCSDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Loca Cartel]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23)
		{
			PlayerInfo[playerid][pDroga] -= iznos;
			OrgInfo[TCDroga] += iznos;
			SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[TBB]: "BELA"Ostavili ste %dg droge u sef!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(132)
{
	if(!response) return 1;
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste uneli kolicinu droge za uzimanje!");
		if(iznos < 1 || iznos > 10000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Kolicina droge ne moze biti ispod 1 i iznad 10000!");
		if(PlayerInfo[playerid][pLider] == 2)
		{
			if(iznos > OrgInfo[TvfDroga]) return SCM(playerid,-1,"[TVF]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[TvfDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TVF]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 3)
		{
			if(iznos > OrgInfo[BdtDroga]) return SCM(playerid,-1,"[BDT]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[BdtDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""VARADERO"[BDT]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 4)
		{
			if(iznos > OrgInfo[GsfDroga]) return SCM(playerid,-1,"[GSF]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[GsfDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""ZELENA"[GSF]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 5)
		{
			if(iznos > OrgInfo[BallasDroga]) return SCM(playerid,-1,"[Ballas]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[BallasDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Ballas]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 9)
		{
			if(iznos > OrgInfo[CondorDroga]) return SCM(playerid,-1,"[Condor]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[CondorDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Condor]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 11)
		{
			if(iznos > OrgInfo[PoDroga]) return SCM(playerid,-1,"[Blue Lagoon]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[PoDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Blue Lagoon]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 12)
		{
			if(iznos > OrgInfo[Po2Droga]) return SCM(playerid,-1,"[LCN]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[Po2Droga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[LCN]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 20)
		{
			if(iznos > OrgInfo[Po4Droga]) return SCM(playerid,-1,"[LCN]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[Po4Droga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Russian Mafia]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 13)
		{
			if(iznos > OrgInfo[Po3Droga]) return SCM(playerid,-1,"[Da Naga Boys]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[Po3Droga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Da Naga Boys]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 15)
		{
			if(iznos > OrgInfo[BaseDroga]) return SCM(playerid,-1,"[Yakuza]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[BaseDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Yakuza]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 17)
		{
			if(iznos > OrgInfo[RbDroga]) return SCM(playerid,-1,"[Black Cobra Corporation]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[RbDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Black Cobra Corporation]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 21)
		{
			if(iznos > OrgInfo[SmithDroga]) return SCM(playerid,-1,"[NC]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[SmithDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[NC]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 22)
		{
			if(iznos > OrgInfo[LCSDroga]) return SCM(playerid,-1,"[LC]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[LCSDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[LC]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 23)
		{
			if(iznos > OrgInfo[TCDroga]) return SCM(playerid,-1,"[TBB]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[TCDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TBB]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 19)
		{
			if(iznos > OrgInfo[LCNDroga]) return SCM(playerid,-1,"[DR]: "SRWBOJA"Nema toliko droge u sefu!");
			PlayerInfo[playerid][pDroga] += iznos; OrgInfo[LCNDroga] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[DR]: "BELA"Uzeli ste %dg droge iz sefa!",iznos);
			SCM(playerid,-1,string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
	}
	SavePlayer(playerid);
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////
fDialog(128)
{
	if(!response) return 1;
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste uneli kolicinu novca za uzimanje!");
		if(iznos < 1 || iznos > 100000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Kolicina novca ne moze biti ispod 1 i iznad 100000!");
		if(PlayerInfo[playerid][pLider] == 2)
		{
			if(iznos > OrgInfo[TvfNovac]) return SCM(playerid,-1,"[TVF]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[TvfNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TVF]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 3)
		{
			if(iznos > OrgInfo[BdtNovac]) return SCM(playerid,-1,"[BDT]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[BdtNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""VARADERO"[BDT]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 4)
		{
			if(iznos > OrgInfo[GsfNovac]) return SCM(playerid,-1,"[GSF]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[GsfNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""ZELENA"[GSF]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 5)
		{
			if(iznos > OrgInfo[BallasNovac]) return SCM(playerid,-1,"[Ballas]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[BallasNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Ballas]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 9)
		{
			if(iznos > OrgInfo[CondorNovac]) return SCM(playerid,-1,"[Condor]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[CondorNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Condor]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 11)
		{
			if(iznos > OrgInfo[PoNovac]) return SCM(playerid,-1,"[Blue Lagoon]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[PoNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Blue Lagoon]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 12)
		{
			if(iznos > OrgInfo[Po2Novac]) return SCM(playerid,-1,"[LCN]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[Po2Novac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[LCN]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 21)
		{
			if(iznos > OrgInfo[SmithNovac]) return SCM(playerid,-1,"[NC]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[SmithNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[NC]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 22)
		{
			if(iznos > OrgInfo[LCSNovac]) return SCM(playerid,-1,"[LC]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[LCSNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[LC]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 23)
		{
			if(iznos > OrgInfo[TCNovac]) return SCM(playerid,-1,"[TBB]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[TCNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TBB]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 20)
		{
			if(iznos > OrgInfo[Po4Novac]) return SCM(playerid,-1,"[RM]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[Po4Novac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Russian Mafia]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 13)
		{
			if(iznos > OrgInfo[Po3Novac]) return SCM(playerid,-1,"[Da Naga Boys]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[Po3Novac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Da Naga Boys]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 15)
		{
			if(iznos > OrgInfo[BaseNovac]) return SCM(playerid,-1,"[Yakuza]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[BaseNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Yakuza]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 17)
		{
			if(iznos > OrgInfo[RbNovac]) return SCM(playerid,-1,"[Black Cobra Corporation]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[RbNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Black Cobra Corporation]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 19)
		{
			if(iznos > OrgInfo[LCNNovac]) return SCM(playerid,-1,"[DR]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[LCNNovac] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[DR]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 8)
		{
			if(iznos > OrgInfo[PSSef]) return SCM(playerid,-1,"[Parking Servis]: "SRWBOJA"Nema toliko novca u sefu!");
			g_NovacPlus(playerid, iznos); OrgInfo[PSSef] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[PS]: "BELA"Uzeli ste %d$ novca iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(130)
{
	if(!response) return 1;
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste uneli kolicinu novca za ostavljanje!");
		if(iznos < 1 || iznos > 100000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Kolicina novca ne moze biti ispod 1 i iznad 100000!");
		if(iznos > PlayerInfo[playerid][pNovacDzep]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate toliko novca kod sebe!");
		if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[TvfNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TVF]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[BdtNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""VARADERO"[BDT]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[GsfNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""ZELENA"[GSF]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[BallasNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Ballas]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[CondorNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Condor]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[PoNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Blue Lagoon]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[Po2Novac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[LCN]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[Po4Novac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Russian Mafia]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[Po3Novac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Da Naga Boys]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[BaseNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Yakuza]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[RbNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Black Cobra Corporation]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[LCNNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[DR]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[SmithNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Narco Cartel]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[LCSNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Loca Cartel]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23)
		{
			g_NovacMinus(playerid,iznos); OrgInfo[TCNovac] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TBB]: "BELA"Ostavili ste %d$ novca u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(126)
{
	if(!response) return 1;
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste uneli kolicinu materijala za ostavljanje!");
		if(iznos < 1 || iznos > 10000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Kolicina materijala ne moze biti ispod 1 i iznad 10000!");
		if(iznos > PlayerInfo[playerid][pMats]) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Nemate toliko materijala kod sebe!");
		if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[TvfMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TVF]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pLider] == 3)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[BdtMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""VARADERO"[BDT]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
			format(string, charsmax(string), ""ZELENA"[GSF]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[GsfMats] += iznos; SacuvajOrgInfo();
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 5 || PlayerInfo[playerid][pLider] == 5)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[BallasMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Ballas]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 9 || PlayerInfo[playerid][pLider] == 9)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[CondorMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Condor]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[PoMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Blue Lagoon]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[Po2Mats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[LCN]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 20 || PlayerInfo[playerid][pLider] == 20)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[Po4Mats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Russian Mafia]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[Po3Mats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Da Naga Boys]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 15 || PlayerInfo[playerid][pLider] == 15)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[BaseMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Yakuza]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 17 || PlayerInfo[playerid][pLider] == 17)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[RbMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Black Cobra Corporation]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 19 || PlayerInfo[playerid][pLider] == 19)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[LCNMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[DR]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[SmithMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Narco Cartel]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 22 || PlayerInfo[playerid][pLider] == 22)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[LCSMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Loca Cartel]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pClan] == 23 || PlayerInfo[playerid][pLider] == 23)
		{
			PlayerInfo[playerid][pMats] -= iznos; OrgInfo[TCMats] += iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TBB]: "BELA"Ostavili ste %d materijala u sef!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s ostavlja neke stvari u sef.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
	}
	SavePlayer(playerid);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////
fDialog(124)
{
	if(!response) return 1;
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos)) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Niste uneli kolicinu materijala za uzimanje!");
		if(iznos < 1 || iznos > 10000) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Kolicina materijala ne moze biti ispod 1 i iznad 10000!");
		if(PlayerInfo[playerid][pLider] == 2)
		{
			if(iznos > OrgInfo[TvfMats]) return SCM(playerid,-1,"[TVF]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[TvfMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TVF]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 3)
		{
			if(iznos > OrgInfo[BdtMats]) return SCM(playerid,-1,"[BDT]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[BdtMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""VARADERO"[BDT]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 4)
		{
			if(iznos > OrgInfo[GsfMats]) return SCM(playerid,-1,"[GSF]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[GsfMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""ZELENA"[GSF]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 5)
		{
			if(iznos > OrgInfo[BallasMats]) return SCM(playerid,-1,"[Ballas]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[BallasMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""BALLASC"[Ballas]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 9)
		{
			if(iznos > OrgInfo[CondorMats]) return SCM(playerid,-1,"[Condor]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[CondorMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Condor]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 11)
		{
			if(iznos > OrgInfo[PoMats]) return SCM(playerid,-1,"[Blue Lagoon]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[PoMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Blue Lagoon]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 12)
		{
			if(iznos > OrgInfo[Po2Mats]) return SCM(playerid,-1,"[LCN]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[Po2Mats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[LCN]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 20)
		{
			if(iznos > OrgInfo[Po4Mats]) return SCM(playerid,-1,"[Russian Mafia]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[Po4Mats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Russian Mafia]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 13)
		{
			if(iznos > OrgInfo[Po3Mats]) return SCM(playerid,-1,"[Da Naga Boys]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[Po3Mats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Da Naga Boys]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 15)
		{
			if(iznos > OrgInfo[BaseMats]) return SCM(playerid,-1,"[Base 5]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[BaseMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Yakuza]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 17)
		{
			if(iznos > OrgInfo[BaseMats]) return SCM(playerid,-1,"[Black Cobra Corporation]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[RbMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[Black Cobra Corporation]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 19)
		{
			if(iznos > OrgInfo[LCNMats]) return SCM(playerid,-1,"[DR]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[LCNMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SPLAVA"[DR]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 21)
		{
			if(iznos > OrgInfo[SmithMats]) return SCM(playerid,-1,"[Narco Cartel]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[SmithMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Narco  Cartel]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
        else if(PlayerInfo[playerid][pLider] == 22)
		{
			if(iznos > OrgInfo[LCSMats]) return SCM(playerid,-1,"[Loca Cartel]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[LCSMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[Loca  Cartel]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
		else if(PlayerInfo[playerid][pLider] == 23)
		{
			if(iznos > OrgInfo[TCMats]) return SCM(playerid,-1,"[TBB]: "SRWBOJA"Nema toliko materijala u sefu!");
			PlayerInfo[playerid][pMats] += iznos; OrgInfo[TCMats] -= iznos; SacuvajOrgInfo();
			format(string, charsmax(string), ""SRWBOJA"[TBB]: "BELA"Uzeli ste %d materijala iz sefa!",iznos); //conver
			SCM(playerid,-1, string);
			format(string, sizeof(string), "* %s uzima neke stvari iz sefa.", GetName(playerid));
			e_RadiusMSG(20.0,playerid, HEX_PROX, string);
		}
	}
	SavePlayer(playerid);
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////
fDialog(112)
{
	if(!response) return 1;
	new string[128];
	switch(listitem)
	{
		case 0:
		{
			if(ServerInfo[isRegistracija] == 0)
			{
				ServerInfo[isRegistracija] = 1; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je onemogucio registraciju na serveru!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
			else if(ServerInfo[isRegistracija] == 1)
			{
				ServerInfo[isRegistracija] = 0; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je omogucio registraciju na serveru!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
		}
		case 1:
		{
			if(ServerInfo[isOglas] == 0)
			{
				ServerInfo[isOglas] = 1; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je onemogucio davanje oglasa na serveru!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
			else if(ServerInfo[isOglas] == 1)
			{
				ServerInfo[isOglas] = 0; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je omogucio davanje oglasa na serveru!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
		}
		case 2:
		{
			if(ServerInfo[isPitanja] == 0)
			{
				ServerInfo[isPitanja] = 1; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je onemogucio igracima koriscenje pitanja za admine!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
			else if(ServerInfo[isPitanja] == 1)
			{
				ServerInfo[isPitanja] = 0; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je omogucio igracima koriscenje pitanja za admine!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
		}
		case 3:
		{
			if(ServerInfo[isReport] == 0)
			{
				ServerInfo[isReport] = 1; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je onemogucio igracima koriscenje reporta!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
			else if(ServerInfo[isReport] == 1)
			{
				ServerInfo[isReport] = 0; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je omogucio igracima koriscenje reporta!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
		}
		case 4:
		{
			if(ServerInfo[isdozvolakupovine] == 1)
			{
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je onemogucio igracima koriscenje kupovinu vozila!",GetName(playerid));
				ServerInfo[isdozvolakupovine] = 0; SacuvajPodesavanja();
				AdminGameMaster(-1,string);
			}
			else if(ServerInfo[isdozvolakupovine] == 0)
			{
				ServerInfo[isdozvolakupovine] = 1; SacuvajPodesavanja();
				format(string,sizeof(string),"[V:RPG] "SRWBOJA"Administrator %s je omogucio igracima kupovinu vozila!",GetName(playerid));
				AdminGameMaster(-1,string);
			}
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(108)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	switch(listitem)
	{
		case 0:
		{
			if(!IsPlayerAttachedObjectSlotUsed(playerid, FRIZURA_SLOT)) return SCM(playerid, -1, "[V:RPG] "SPLAVA"Vec imate klasicnu frizuru!");
			if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
			FirmaNovac(UsaoFirma[playerid], 100);
			g_NovacMinus(playerid,100);
			RemovePlayerAttachedObject(playerid, FRIZURA_SLOT);
			SCM(playerid,-1, ""ZELENA"(S) "SIVA"Osisali ste se na klasicnu frizuru!");
		}
		case 1:
		{
			if(!IsPlayerAttachedObjectSlotUsed(playerid, FRIZURA_SLOT)) RemovePlayerAttachedObject(playerid, FRIZURA_SLOT);
			if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
			SetPlayerAttachedObject(playerid, FRIZURA_SLOT, 19077, 2, 0.124588, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
			FirmaNovac(UsaoFirma[playerid], 200);
			g_NovacMinus(playerid,200);
			SCM(playerid,-1, ""ZELENA"(S) "SIVA"Osisali ste se na elvis frizuru!");
		}
		case 2:
		{
			if(!IsPlayerAttachedObjectSlotUsed(playerid, FRIZURA_SLOT)) RemovePlayerAttachedObject(playerid, FRIZURA_SLOT);
			if(PlayerInfo[playerid][pNovacDzep] < 300) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
			SetPlayerAttachedObject(playerid, FRIZURA_SLOT, 18640, 2, 0.081841, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
			FirmaNovac(UsaoFirma[playerid], 300);
			g_NovacMinus(playerid,300);
			SCM(playerid,-1, ""ZELENA"(S) "SIVA"Osisali ste se na afro frizuru!");
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(106)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
			FirmaNovac(UsaoFirma[playerid], 100);
			g_NovacMinus(playerid,100);
			PlayerInfo[playerid][pBorbeniStil] = FIGHT_STYLE_NORMAL;
			SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pBorbeniStil]);
			SCM(playerid,-1, ""SPLAVA"[T] "BELA"Stil vase borbe je 'Normal'!");
			SavePlayer(playerid);
		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 200) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 200$!");
			FirmaNovac(UsaoFirma[playerid], 200);
			g_NovacMinus(playerid,200);
			PlayerInfo[playerid][pBorbeniStil] = FIGHT_STYLE_BOXING;
			SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pBorbeniStil]);
			SCM(playerid,-1, ""SPLAVA"[T] "BELA"Stil vase borbe je 'Boxing'!");
			SavePlayer(playerid);
		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 300) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 300$!");
			FirmaNovac(UsaoFirma[playerid], 300);
			g_NovacMinus(playerid,300);
			PlayerInfo[playerid][pBorbeniStil] = FIGHT_STYLE_KUNGFU;
			SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pBorbeniStil]);
			SCM(playerid,-1, ""SPLAVA"[T] "BELA"Stil vase borbe je 'Kung Fu'!");
			SavePlayer(playerid);
		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 400) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 400$!");
			FirmaNovac(UsaoFirma[playerid], 400);
			g_NovacMinus(playerid,400);
			PlayerInfo[playerid][pBorbeniStil] = FIGHT_STYLE_KNEEHEAD;
			SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pBorbeniStil]);
			SCM(playerid,-1, ""SPLAVA"[T] "BELA"Stil vase borbe je 'KneeHead'!");
			SavePlayer(playerid);
		}
		case 4:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 500$!");
			FirmaNovac(UsaoFirma[playerid], 500);
			g_NovacMinus(playerid,500);
			PlayerInfo[playerid][pBorbeniStil] = FIGHT_STYLE_GRABKICK;
			SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pBorbeniStil]);
			SCM(playerid,-1, ""SPLAVA"[T] "BELA"Stil vase borbe je 'GrabKick'!");
			SavePlayer(playerid);
		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 600) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 600$!");
			FirmaNovac(UsaoFirma[playerid], 600);
			g_NovacMinus(playerid,600);
			PlayerInfo[playerid][pBorbeniStil] = FIGHT_STYLE_ELBOW;
			SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pBorbeniStil]);
			SCM(playerid,-1, ""SPLAVA"[T] "BELA"Stil vase borbe je 'Elbow'!");
			SavePlayer(playerid);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(104)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	new string[50];
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije pivo.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			FirmaNovac(UsaoFirma[playerid], 20);
			g_NovacMinus(playerid,20);
			format(string, sizeof(string), "* %s pije rakiju.", GetName(playerid));
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+450);
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 50$!");
			FirmaNovac(UsaoFirma[playerid], 50);
			g_NovacMinus(playerid,50);
			format(string, sizeof(string), "* %s pije viski.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 40) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 40$!");
			FirmaNovac(UsaoFirma[playerid], 40);
			g_NovacMinus(playerid,40);
			format(string, sizeof(string), "* %s pije liker.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 4:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 35) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 35$!");
			FirmaNovac(UsaoFirma[playerid], 35);
			g_NovacMinus(playerid,35);
			format(string, sizeof(string), "* %s pije pelinkovac.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 30) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 30$!");
			FirmaNovac(UsaoFirma[playerid], 30);
			g_NovacMinus(playerid,30);
			format(string, sizeof(string), "* %s pije vodku.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 6:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 25) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 25$!");
			FirmaNovac(UsaoFirma[playerid], 25);
			g_NovacMinus(playerid,25);
			format(string, sizeof(string), "* %s pije lozovacu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+400);
		}
		case 7:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 30) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 30$!");
			FirmaNovac(UsaoFirma[playerid], 30);
			g_NovacMinus(playerid,30);
			format(string, sizeof(string), "* %s pije vino.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 8:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""VARADERO"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije vodu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)-1000);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(102)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	new string[50];
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 30) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 30$!");
			FirmaNovac(UsaoFirma[playerid], 30);
			g_NovacMinus(playerid,30);
			format(string, sizeof(string), "* %s jede kapricozu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 25) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 25$!");
			FirmaNovac(UsaoFirma[playerid], 25);
			g_NovacMinus(playerid,25);
			format(string, sizeof(string), "* %s jede margarita.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 15$!");
			FirmaNovac(UsaoFirma[playerid], 15);
			g_NovacMinus(playerid,15);
			format(string, sizeof(string), "* %s jede piletinu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 15$!");
			FirmaNovac(UsaoFirma[playerid], 15);
			g_NovacMinus(playerid,15);
			format(string, sizeof(string), "* %s jede pomfrit.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 4:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije limunadu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije kafu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(100)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	new string[50];
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s jede hamburger.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			FirmaNovac(UsaoFirma[playerid], 20);
			g_NovacMinus(playerid,20);
			format(string, sizeof(string), "* %s jede sladoled tortu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s jede sendvic.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			FirmaNovac(UsaoFirma[playerid], 20);
			g_NovacMinus(playerid,20);
			format(string, sizeof(string), "* %s jede burek.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 4:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 15$!");
			FirmaNovac(UsaoFirma[playerid], 15);
			g_NovacMinus(playerid,15);
			format(string, sizeof(string), "* %s jede krofnu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 15$!");
			FirmaNovac(UsaoFirma[playerid], 15);
			g_NovacMinus(playerid,15);
			format(string, sizeof(string), "* %s pije kakao.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
		case 6:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije coca cola.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
		case 7:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije kafu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(94)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	new string[50];
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s jede hamburger.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 15$!");
			FirmaNovac(UsaoFirma[playerid], 15);
			g_NovacMinus(playerid,15);
			format(string, sizeof(string), "* %s jede cheeseburger.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 15$!");
			FirmaNovac(UsaoFirma[playerid], 15);
			g_NovacMinus(playerid,15);
			format(string, sizeof(string), "* %s jede pomfrit.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			FirmaNovac(UsaoFirma[playerid], 20);
			g_NovacMinus(playerid,20);
			format(string, sizeof(string), "* %s jede pilece medaljone.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 4:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 25) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 25$!");
			FirmaNovac(UsaoFirma[playerid], 25);
			g_NovacMinus(playerid,25);
			format(string, sizeof(string), "* %s jede mijesanu salatu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije kafu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);

		}
		case 6:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 15) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 15$!");
			FirmaNovac(UsaoFirma[playerid], 15);
			g_NovacMinus(playerid,15);
			format(string, sizeof(string), "* %s pije caj.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
		case 7:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			FirmaNovac(UsaoFirma[playerid], 20);
			g_NovacMinus(playerid,20);
			format(string, sizeof(string), "* %s jede sladoled.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 8:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije coca colu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
		case 9:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije vodu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);

		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(92)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	new string[50];
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			FirmaNovac(UsaoFirma[playerid], 20);
			g_NovacMinus(playerid,20);
			format(string, sizeof(string), "* %s jede supu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 30) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 30$!");
			FirmaNovac(UsaoFirma[playerid], 30);
			g_NovacMinus(playerid,30);
			format(string, sizeof(string), "* %s jede pasulj.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 40) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 40$!");
			FirmaNovac(UsaoFirma[playerid], 40);
			g_NovacMinus(playerid,40);
			format(string, sizeof(string), "* %s jede riblju corbu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 60) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 60$!");
			FirmaNovac(UsaoFirma[playerid], 60);
			g_NovacMinus(playerid,60);
			format(string, sizeof(string), "* %s jede slovenski kulen.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 4:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 30) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 30$!");
			FirmaNovac(UsaoFirma[playerid], 30);
			g_NovacMinus(playerid,30);
			format(string, sizeof(string), "* %s jede pitu od sira.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 70) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 70$!");
			FirmaNovac(UsaoFirma[playerid], 70);
			g_NovacMinus(playerid,70);
			format(string, sizeof(string), "* %s jede raznjice.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);

		}
		case 6:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s jede palacinke.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);
		}
		case 7:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 30) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 30$!");
			FirmaNovac(UsaoFirma[playerid], 30);
			g_NovacMinus(playerid,30);
			format(string, sizeof(string), "* %s jede cvarke.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);
		}
		case 8:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 90) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 90$!");
			FirmaNovac(UsaoFirma[playerid], 90);
			g_NovacMinus(playerid,90);
			format(string, sizeof(string), "* %s jede biftek.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);
		}
		case 9:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 50$!");
			FirmaNovac(UsaoFirma[playerid], 50);
			g_NovacMinus(playerid,50);
			format(string, sizeof(string), "* %s jede proju.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			SetPlayerHealth(playerid, 100);
		}
		case 10:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije coca colu.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);
		}
		case 11:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
			FirmaNovac(UsaoFirma[playerid], 100);
			g_NovacMinus(playerid,100);
			format(string, sizeof(string), "* %s pije viski.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			SetPlayerHealth(playerid, 100);
		}
		case 12:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije pivo.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
			SetPlayerHealth(playerid, 100);
		}
		case 13:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			FirmaNovac(UsaoFirma[playerid], 10);
			g_NovacMinus(playerid,10);
			format(string, sizeof(string), "* %s pije gusti sok.", GetName(playerid));
			e_RadiusMSG(15.0, playerid, HEX_PROX, string);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SetPlayerHealth(playerid, 100);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(88)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas dovoljno novca 50$!");
			g_NovacMinus(playerid,50);
			FirmaNovac(UsaoFirma[playerid], 50);
			GivePlayerWeapon(playerid, 13, 1);
			SCM(playerid, -1, ""LJUB"Prodavac | "BELA"Kupili ste sivi vibrator za 50$.");
		}
		case 1:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas dovoljno novca 50$!");
			g_NovacMinus(playerid,50);
			FirmaNovac(UsaoFirma[playerid], 50);
			GivePlayerWeapon(playerid, 11, 1);
			SCM(playerid, -1, ""LJUB"Prodavac | "BELA"Kupili ste beli vibrator za 50$.");
		}
		case 2:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 70) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas dovoljno novca 70$!");
			g_NovacMinus(playerid,70);
			FirmaNovac(UsaoFirma[playerid], 70);
			GivePlayerWeapon(playerid, 10, 1);
			SCM(playerid, -1, ""LJUB"Prodavac | "BELA"Kupili ste ljubicasti vibrator za 70$.");
		}
		case 3:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemas dovoljno novca 10$!");
			g_NovacMinus(playerid,10);
			FirmaNovac(UsaoFirma[playerid], 10);
			GivePlayerWeapon(playerid, 14, 1);
			SCM(playerid, -1, ""LJUB"Prodavac | "BELA"Kupili ste cvece za 10$.");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(86)
{
	if(!response) return 1;
	if(FirmaInfo[UsaoFirma[playerid]][fProizvodi] <= 0) return SCM(playerid,-1,""ZPLAVA"[Firma]: "BELA"Nemamo vise proizvoda!");
	FirmaInfo[UsaoFirma[playerid]][fProizvodi]--;
	new string[128];
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pMobilni] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes mobilni telefon!");
			if(PlayerInfo[playerid][pNovacDzep] < 150) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 150$!");
			new br = 100000 + random(899000);
			PlayerInfo[playerid][pMobilni] = br;
			g_NovacMinus(playerid,150);
			FirmaNovac(UsaoFirma[playerid],150);
			format(string, charsmax(string), ""ZELENA"Kupili ste mobilni telefon | Broj vaseg mobilnog je: "SIVA"%d!",br); //conver
			SCM(playerid,-1, string);
            SavePlayer(playerid);
		}
		case 1:
		{
			if(PlayerInfo[playerid][pImenik] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes imenik!");
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 50$!");
			PlayerInfo[playerid][pImenik] = 1;
			g_NovacMinus(playerid,50);
			FirmaNovac(UsaoFirma[playerid],50);
			SCM(playerid,-1,""ZELENA"Kupili ste imenik za 50$! | /broj [Za listu brojeva]");
			SavePlayer(playerid);
		}
		case 2:
		{
			if(PlayerInfo[playerid][pCigare] != 0) {
				format(string, charsmax(string), ""SRWBOJA"[V:RPG] "SIVA"Vec imas %d cigara prvo ih popusi!",PlayerInfo[playerid][pCigare]); //conver
				return SCM(playerid,-1, string);
			}
			if(PlayerInfo[playerid][pNovacDzep] < 20) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 20$!");
			PlayerInfo[playerid][pCigare] = 20;
			g_NovacMinus(playerid,20);
			FirmaNovac(UsaoFirma[playerid],20);
			SCM(playerid,-1,""ZELENA"Kupili ste cigare | Sada mozete zapliti cigaru (/zapalicigaru | /ugasicigaru)!");
			SavePlayer(playerid);
		}
		case 3:
		{
			if(PlayerInfo[playerid][pUpaljac] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes upaljac!");
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			PlayerInfo[playerid][pUpaljac] = 10;
			g_NovacMinus(playerid,10);
			FirmaNovac(UsaoFirma[playerid],10);
			SCM(playerid,-1,""ZELENA"Kupili ste upaljac za 10$!");
			SavePlayer(playerid);
		}
		case 4:
		{
			if(PlayerInfo[playerid][pMobilni] == 0) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate mobilni telefon!");
			if(PlayerInfo[playerid][pNovacDzep] < 100) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
			PlayerInfo[playerid][pMobKredit] += 100;
			//boughtCredits = true;
			g_NovacMinus(playerid,100);
			FirmaNovac(UsaoFirma[playerid],100);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste 100 kredita za 100$!");
			SavePlayer(playerid);
		}
		case 5:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10000) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 100$!");
   			PlayerInfo[playerid][pGPS] = 1;
			g_NovacMinus(playerid,10000);
			FirmaNovac(UsaoFirma[playerid],10000);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste GPS Za 10000 !");
			SavePlayer(playerid);
			//500creditstobuy here
		}
		case 6:
		{
		    if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1, "[V:RPG] "VARADERO"Morate biti najmanje level 7 da bi mogli kupovati kanap!");
			if(PlayerInfo[playerid][pKanap] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes kanap!");
			if(PlayerInfo[playerid][pNovacDzep] < 350) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 350$!");
			PlayerInfo[playerid][pKanap] = 1;
			g_NovacMinus(playerid,350);
			FirmaNovac(UsaoFirma[playerid],350);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste kanap za 350$!");
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Sada mozete nekoga kindapovati | /zavezi | /odvezi!");
			SavePlayer(playerid);
		}
		case 7:
		{
			if(PlayerInfo[playerid][pNaocare] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes kolekciju naocara!");
			if(PlayerInfo[playerid][pNovacDzep] < 300) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 300$!");
			PlayerInfo[playerid][pNaocare] = 1;
			g_NovacMinus(playerid,300);
			FirmaNovac(UsaoFirma[playerid],300);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste naocare za 300$!");
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Sada mozete staviti naocare /naocare!");
			SavePlayer(playerid);
		}
		case 8:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 500$!");
			PlayerInfo[playerid][pPovez] = 1;
			g_NovacMinus(playerid,500);
			FirmaNovac(UsaoFirma[playerid],500);
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Kupili ste povez za 500$!");
			SCM(playerid,-1,""VARADERO"INFO | "SIVA"Sada mozete nekoga kindapovati | /povez | /skinipovez!");
			SavePlayer(playerid);
		}
		case 9:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			g_NovacMinus(playerid,10);
			FirmaNovac(UsaoFirma[playerid],10);
			SetPlayerSpecialAction( playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			SCM(playerid,-1,""ZELENA"Kupili ste sok za 10$!");
		}
		case 10:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 10) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 10$!");
			g_NovacMinus(playerid,10);
			FirmaNovac(UsaoFirma[playerid],10);
			SetPlayerSpecialAction( playerid, SPECIAL_ACTION_DRINK_BEER);
			SCM(playerid,-1,""ZELENA"Kupili ste pivo za 10$!");
		}
		case 11:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 700) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 700$!");
			g_NovacMinus(playerid,700);
			FirmaNovac(UsaoFirma[playerid],700);
			PlayerInfo[playerid][pRadio] = 1;
			SCM(playerid,-1,""ZELENA"Kupili ste mp3 (/mp3)!");
		}
		case 12:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 70) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 70$!");
			g_NovacMinus(playerid,70);
			FirmaNovac(UsaoFirma[playerid],70);
			GivePlayerWeapon(playerid, 41, 500);
			SCM(playerid,-1,""ZELENA"Kupili ste sprej za 70$!");
		}
		case 13:
		{
			if(PlayerInfo[playerid][pSat] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes sat!");
			if(PlayerInfo[playerid][pNovacDzep] < 130) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 130$!");
			g_NovacMinus(playerid,130);
			FirmaNovac(UsaoFirma[playerid],130);
			PlayerInfo[playerid][pSat] = 1;
			SCM(playerid,-1,""ZELENA"Kupili ste sat za 130$ (/vreme)!!");
		}
		case 14:
		{
			if(Marama[playerid] == 1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes maramu!");
			if(PlayerInfo[playerid][pNovacDzep] < 500) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 500$!");
			g_NovacMinus(playerid,500);
			FirmaNovac(UsaoFirma[playerid],500);
			Marama[playerid] = 1;
			SCM(playerid,-1,""ZELENA"Kupili ste maramu za 500$ (/marama)!");
		}
		case 15:
		{
			if(PlayerInfo[playerid][pHrana] == 5) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Ne mozete imati vise od 5 hrane!");
			if(PlayerInfo[playerid][pNovacDzep] < 300) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 300$!");
			g_NovacMinus(playerid,300);
			FirmaNovac(UsaoFirma[playerid],300);
			PlayerInfo[playerid][pHrana] ++;
			SCM(playerid,-1,""ZELENA"Kupili ste hranu (/koristi)!");
		}
		case 16:
		{
			if(PlayerInfo[playerid][pNovacDzep] < 50) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate dovoljno novca 50$!");
			g_NovacMinus(playerid,50);
			FirmaNovac(UsaoFirma[playerid],300);
			PlayerInfo[playerid][pKartica] = 1;
			SCM(playerid,-1,""ZELENA"Kupili ste halo karticu (( Koristite kod govornice ))!");
		}
 	 }
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(74)
{
	if(!response) return 1;
	if(response)
	{
		if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Nemate firmu!");
		new i = PlayerInfo[playerid][pPosedovanjeFirme];
		switch(listitem)
		{
			case 0:
			{
				if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred vase firme!");
					new string1[275], string2[275], string[550],z[3]; if(FirmaInfo[i][fZatvoreno] == 1) z = "Da"; else z = "Ne";
					format(string1,sizeof(string1),""BELA"_______________________________________\n\n"ZELENA"Vlasnik Firme: "CRVENA"%s\n"ZELENA"Naziv Firme: "CRVENA"%s\n"ZELENA"Reket: "CRVENA"%s\n"ZELENA"Level: "BELA"%d\n"ZELENA"Cena: "BELA"%d\n",FirmaInfo[i][fVlasnik],FirmaInfo[i][fNaziv],FirmaInfo[i][fIznuda],FirmaInfo[i][fLevel],FirmaInfo[i][fCena]);
					format(string2,sizeof(string2),""ZELENA"ID: "BELA"%d\n"ZELENA"Zatvoreno: "BELA"%s\n"ZELENA"Kasa: "BELA"%d$\n"ZELENA"Proizvodi: "BELA"%d/%d\n_______________________________________",i,z,FirmaInfo[i][fKasa],FirmaInfo[i][fProizvodi],FirmaInfo[i][fMaxProizvodi]);
					format(string, sizeof(string), "%s%s", string1, string2);
					SPD(playerid, 110, DIALOG_STYLE_MSGBOX, ""BELA"Firma Informacije", string, "Ok", "Izlaz");
				}
				else
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste u vasoj firmi!");
					new string1[275], string2[275], string[550],z[3]; if(FirmaInfo[i][fZatvoreno] == 1) z = "Da"; else z = "Ne";
					format(string1,sizeof(string1),""BELA"_______________________________________\n\n"ZELENA"Vlasnik Firme: "CRVENA"%s\n"ZELENA"Naziv Firme: "CRVENA"%s\n"ZELENA"Reket: "CRVENA"%s\n"ZELENA"Level: "BELA"%d\n"ZELENA"Cena: "BELA"%d\n",FirmaInfo[i][fVlasnik],FirmaInfo[i][fNaziv],FirmaInfo[i][fIznuda],FirmaInfo[i][fLevel],FirmaInfo[i][fCena]);
					format(string2,sizeof(string2),""ZELENA"ID: "BELA"%d\n"ZELENA"Zatvoreno: "BELA"%s\n"ZELENA"Kasa: "BELA"%d$\n"ZELENA"Proizvodi: "BELA"%d/%d\n_______________________________________",i,z,FirmaInfo[i][fKasa],FirmaInfo[i][fProizvodi],FirmaInfo[i][fMaxProizvodi]);
					format(string, sizeof(string), "%s%s", string1, string2);
					SPD(playerid, 110, DIALOG_STYLE_MSGBOX, ""BELA"Firma Informacije", string, "Ok", "Izlaz");
				}
			}
			case 1:
			{
				if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Nemate firmu!");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]) && !IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred ili u vasoj firmi!");
				if(FirmaInfo[i][fZatvoreno] == 0) return SCM(playerid,-1,""ZELENA"[Firma]: "BELA"Vec je otkljucana!");
				FirmaInfo[i][fZatvoreno] = 0;
				SCM(playerid,-1, ""ZELENA"[Firma]: "BELA"Firma otkljucana!");
				SacuvajFirmu(i);
			}
			case 2:
			{
				if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Nemate firmu!");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]) && !IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred ili u vasoj firmi!");
				if(FirmaInfo[i][fZatvoreno] == 1) return SCM(playerid,-1,""ZELENA"[Firma]: "BELA"Vec je zakljucana!");
				FirmaInfo[i][fZatvoreno] = 1;
				SCM(playerid,-1, ""ZELENA"[Firma]: "BELA"Firma zakljucana!");
				SacuvajFirmu(i);
			}
			case 3:
			{
				if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred vase firme!");
					new string[128];
					format(string,sizeof(string), ""BELA"Unesite kolicinu novca koji zelite da podignete\n"ZELENA"U kasi trenutno ima %d$!", FirmaInfo[i][fKasa]);
					SPD(playerid, 76, DIALOG_STYLE_INPUT, ""ZELENA"Dizanje novca iz Firme", string, "Podigni", "Izlaz");
				}
				else
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste u vasoj firmi!");
					new string[128];
					format(string,sizeof(string), ""BELA"Unesite kolicinu novca koji zelite da podignete\n"ZELENA"U kasi trenutno ima %d$!", FirmaInfo[i][fKasa]);
					SPD(playerid, 76, DIALOG_STYLE_INPUT, ""ZELENA"Dizanje novca iz Firme", string, "Podigni", "Izlaz");
				}
			}
			case 4:
			{
				if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred vase firme!");
					new string[128];
					format(string,sizeof(string), ""BELA"Upisite kolicinu novca koji zelite da ostavite u firmu\n"ZELENA"U kasi treutno ima %d$!", FirmaInfo[i][fKasa]);
					SPD(playerid, 78, DIALOG_STYLE_INPUT, ""ZELENA"Ostavljanje novca u firmu", string, "Ostavi", "Izlaz");
				}
				else
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste u vasoj firmi!");
					new string[128];
					format(string,sizeof(string), ""BELA"Upisite kolicinu novca koji zelite da ostavite u firmu\n"ZELENA"U kasi treutno ima %d$!", FirmaInfo[i][fKasa]);
					SPD(playerid, 78, DIALOG_STYLE_INPUT, ""ZELENA"Ostavljanje novca u firmu", string, "Ostavi", "Izlaz");
				}
			}
			case 5:
			{
				//new stringp[128];
				if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ) return SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"U vasoj firmi nisu potrebni proizvodi!");
				if(FirmaInfo[i][fProizvodi] >= 200) return SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"U vasoj firmi nisu potrebni proizvodi imate preko 200!");
				SCM(playerid,-1,""ZELENA"[Firma]: "BELA"Narucili ste proizvode za vasu firmu, obavestili smo sve online dostavljace!");
			}
			case 6:
			{
				if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred vase firme!");
					SPD(playerid, 80, DIALOG_STYLE_INPUT, ""SRWBOJA"Firma Ime", ""SIVA"Upisite novo ime firme\n"CRVENA"Zabranjeno je stavljati OOC ime firme!", "Promeni", "Izlaz");
				}
				else
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste u vasoj firmi!");
					SPD(playerid, 80, DIALOG_STYLE_INPUT, ""SRWBOJA"Firma Ime", ""SIVA"Upisite novo ime firme\n"CRVENA"Zabranjeno je stavljati OOC ime firme!", "Promeni", "Izlaz");
				}
			}
			case 7:
			{
				if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""CRVENA"ERROR: "SIVA"Nemate firmu!");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred vase firme!");
				new cena1 = (FirmaInfo[i][fCena]/4)*2;
				new string[256];
				format(string,sizeof(string), ""BELA"Prodaja firme drzavi\n\n"ZELENA"Dali ste sigurni da zelite da prodate firmu drzavi za %d$!\n\n"BELA"Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", cena1);
				SPD(playerid, 84, DIALOG_STYLE_MSGBOX, ""BELA"Prodaja firme drzavi", string, "Prodaj", "Izlaz");
			}
			case 8:
			{
				if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred vase firme!");
					SPD(playerid, 96, DIALOG_STYLE_LIST, ""BELA"Postavljanje iznude", ""ZELENA"(1). "BELA"The Vinci Family\n"ZELENA"(2). "BELA"Black Dragon Triads", "Postavi", "Izlaz");
				}
				else
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste u vasoj firmi!");
					SPD(playerid, 96, DIALOG_STYLE_LIST, ""BELA"Postavljanje iznude", ""ZELENA"(1). "BELA"The Vinci Family\n"ZELENA"(2). "BELA"Black Dragon Triads", "Postavi", "Izlaz");
				}
			}
			case 9:
			{
				if(FirmaInfo[i][fVrsta] == VRSTA_SBIZZ)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste ispred vase firme!");
					strmid(FirmaInfo[i][fIznuda], "Niko", 0, strlen("Niko"), 255);
					SCM(playerid,-1, ""ZELENA"[Firma]: "BELA"Uklonili ste iznudu sa svoje firme!");
					FirmaLabelIPickup(i); SacuvajFirmu(i);
				}
				else
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SRWBOJA"Niste u vasoj firmi!");
					strmid(FirmaInfo[i][fIznuda], "Niko", 0, strlen("Niko"), 255);
					SCM(playerid,-1, ""ZELENA"[Firma]: "BELA"Uklonili ste iznudu sa svoje firme!");
					FirmaLabelIPickup(i); SacuvajFirmu(i);
				}
			}
			case 10:
			{
			    if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "ZELENA"Niste u vasoj firmi!");
				SPD(playerid, 645, DIALOG_STYLE_INPUT, "Prodaja firme", ""VARADERO"Unesite ID igraca kome zelite da prodate firmu...", "Potvrdi", "Odustani");
	        }
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(645)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Ne posedujes firmu!");
	if(response)
	{
		new Float:x, Float:y, Float:z, kid, string[128];
		if(sscanf(inputtext, "u", kid)) return SPD(playerid, 645, DIALOG_STYLE_INPUT, "Prodaja firme", ""VARADERO"Unesite ID igraca kome zelite da prodate firmu...", "Potvrdi", "Odustani");
		if(!IsPlayerConnected(kid)) return SPD(playerid, 645, DIALOG_STYLE_INPUT, "Prodaja firme", ""VARADERO"Unesite ID igraca kome zelite da prodate firmu...", "Potvrdi", "Odustani");
		GetPlayerPos(kid, x, y, z);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z)) return SCM(playerid, -1, ""SIVA"Igrac nije u vasoj blizini!");
		if(kid == playerid) return SCM(playerid,-1,""SRWBOJA"[V:RPG] "BELA"Ne mozete sami sebi ponuditi prodaju!");
		KomeProdaje[playerid] = kid; PonudioIgrac[kid] = playerid;
		format(string,sizeof(string), ""VARADERO"Sad unesite cenu vase firme za koliko zelite da je prodate...");
		SPD(playerid, 647, DIALOG_STYLE_INPUT, "Prodaja Firme", string, "Potvrdi", "Odustani");
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(647)
{
	if(response)
	{
		new id = PonudioIgrac[playerid];
		new firmaid;
		if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid,-1,""SIVA"Vi niste level 7+!");
		if(CijenaProdaje[playerid] <= 0) return SCM(playerid,-1,""SIVA"Prodavac nije odredio cenu firme!");
		if(PlayerInfo[playerid][pNovacDzep] < CijenaProdaje[playerid]) return SCM(playerid,-1,""SIVA"Nemate dovoljno novca!");
		if(!IsPlayerConnected(PonudioIgrac[playerid])) return SCM(playerid, -1, ""SIVA"Igrac koji vam je ponudio firmu vise nije online!");
		if(PlayerInfo[playerid][pPosedovanjeFirme] != -1) return SCM(playerid,-1,""SIVA"Vec posedujes firmu!");
		if(PlayerInfo[id][pPosedovanjeFirme] == -1) return SCM(playerid,-1,""SIVA"Taj igrac nema firmu!");
		PlayerInfo[playerid][pPosedovanjeFirme] = PlayerInfo[id][pPosedovanjeFirme];
		PlayerInfo[id][pPosedovanjeFirme] = -1;
		strmid(FirmaInfo[PlayerInfo[playerid][pPosedovanjeFirme]][fVlasnik], GetName(playerid), 0, strlen(GetName(playerid)), 999);
		g_NovacMinus(playerid, CijenaProdaje[playerid]); g_NovacPlus(id, CijenaProdaje[playerid]);
		SCMF(playerid,-1,""VARADERO"Uspesno ste kupili firmu od igraca %s!",GetName(id));
		SCMF(id,-1,""VARADERO"Uspesno ste prodali firmu igracu %s!",GetName(playerid));
	    CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
		SavePlayer(playerid);
		SavePlayer(id);
		FirmaLabelIPickup(firmaid);
		SacuvajFirmu(firmaid);
        for(new i; i < MAX_FIRMI; i++)
		{
			FirmaLabelIPickup(i);
		}

	}
	if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
		SCM(playerid,-1,""VARADERO"Odustali ste od kupovine kuce!");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(84)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate firmu!");
	new i = PlayerInfo[playerid][pPosedovanjeFirme];
	if(response)
	{
		new cena1 = (FirmaInfo[i][fCena]/4)*2;
		g_NovacPlus(playerid,cena1);
		FirmaInfo[i][fImaVlasnika] = 0;
		FirmaInfo[i][fKasa] = 0;
		FirmaInfo[i][fZatvoreno] = 1;
		strmid(FirmaInfo[i][fIznuda],"Niko",0,strlen("Niko"),255);
		strmid(FirmaInfo[i][fVlasnik], "Niko", 0, strlen("Niko"), 255);
		PlayerInfo[playerid][pPosedovanjeFirme] = -1;
		SacuvajFirmu(i);
		FirmaLabelIPickup(i);
		SavePlayer(playerid);
		new string[128];
		format(string, charsmax(string), ""ZPLAVA"[Firma]: "BELA"Prodali ste firmu za %d$!",cena1); //conver
		SCM(playerid,-1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(76)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate firmu!");
	new i = PlayerInfo[playerid][pPosedovanjeFirme];
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos))
		{
			format(string,sizeof(string), ""SRWBOJA"Pogresan Iznos!\n"BELA"Unesite kolicinu novca koji zelite da podignete\n"ZELENA"U kasi trenutno ima %d$!", FirmaInfo[i][fKasa]);
			SPD(playerid, 76, DIALOG_STYLE_INPUT, ""ZELENA"Dizanje novca iz Firme", string, "Podigni", "Izlaz");
			return 1;
		}
		if(iznos > FirmaInfo[i][fKasa])
		{
			SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate toliko novca u kasi!");
			format(string,sizeof(string), ""SRWBOJA"Nemate toliko novca u kasi!\n"BELA"Unesite kolicinu novca koji zelite da podignete\n"ZELENA"U kasi trenutno ima %d$!", FirmaInfo[i][fKasa]);
			SPD(playerid, 76, DIALOG_STYLE_INPUT, ""ZELENA"Dizanje novca iz Firme", string, "Podigni", "Izlaz");
			return 1;
		}
		if(iznos < 1 || iznos > 1000000)
		{
			SCM(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Suma ne moze biti manja od 1$ i vec od 1000000$!");
			format(string,sizeof(string), ""SRWBOJA"Suma ne moze biti manja od 1$ i vec od 1000000$!\n"BELA"Unesite kolicinu novca koji zelite da podignete\n"ZELENA"U kasi trenutno ima %d$!", FirmaInfo[i][fKasa]);
			SPD(playerid, 76, DIALOG_STYLE_INPUT, ""ZELENA"Dizanje novca iz Firme", string, "Podigni", "Izlaz");
			return 1;
		}
		FirmaInfo[i][fKasa] -= iznos;
		g_NovacPlus(playerid, iznos);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""ZPLAVA"[Firma]: "BELA"Podigli ste %d$ novca iz firme!", iznos); //conver
		SCM(playerid,-1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(78)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate firmu!");
	new i = PlayerInfo[playerid][pPosedovanjeFirme];
	if(response)
	{
		new iznos,string[128];
		if(sscanf(inputtext, "i", iznos))
		{
			format(string,sizeof(string), ""BELA"Upisite kolicinu novca koji zelite da ostavite u firmu\n"ZELENA"U kasi treutno ima %d$!", FirmaInfo[i][fKasa]);
			SPD(playerid, 78, DIALOG_STYLE_INPUT, ""ZELENA"Ostavljanje novca u firmu", string, "Ostavi", "Izlaz");
			return 1;
		}
		if(iznos > PlayerInfo[playerid][pNovacDzep])
		{
			SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate toliko novca!");
			format(string,sizeof(string), ""SRWBOJA"Nemate toliko novca!\n"BELA"Upisite kolicinu novca koji zelite da ostavite u firmu\n"ZELENA"U kasi treutno ima %d$!", FirmaInfo[i][fKasa]);
			SPD(playerid, 78, DIALOG_STYLE_INPUT, ""ZELENA"Ostavljanje novca u firmu", string, "Ostavi", "Izlaz");
			return 1;
		}
		if(iznos < 1 || iznos > 1000000)
		{
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Suma ne moze biti manja od 1$ i vec od 1000000$!");
			format(string,sizeof(string), ""SRWBOJA"Suma ne moze biti manja od 1$ i vec od 1000000$!\n"BELA"Upisite kolicinu novca koji zelite da ostavite u firmu\n"ZELENA"U kasi treutno ima %d$!", FirmaInfo[i][fKasa]);
			SPD(playerid, 78, DIALOG_STYLE_INPUT, ""ZELENA"Ostavljanje novca u firmu", string, "Ostavi", "Izlaz");
			return 1;
		}
		FirmaInfo[i][fKasa] += iznos;
		g_NovacMinus(playerid, iznos);
		SacuvajFirmu(i);
		format(string, charsmax(string), ""ZPLAVA"[Firma]: "BELA"Ostavili ste %d$ novca u firmu!", iznos); //conver
		SCM(playerid,-1, string);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(80)
{
	if(!response) return 1;
	if(response)
	{
		if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""SRWBOJA"[GRESKA]: "SIVA"Nemate firmu!");
		new i = PlayerInfo[playerid][pPosedovanjeFirme];
		new imeq[35];
		if(sscanf(inputtext, "s[35]", imeq)) return SPD(playerid, 80, DIALOG_STYLE_INPUT, ""SPLAVA"Firma Ime", ""SIVA"Upisite novo ime firme\n"SRWBOJA"Zabranjeno je stavljati OOC ime firme!", "Promeni", "Izlaz");
		if(strlen(imeq) > 35)
		{
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ime firme ne moze sadrzavati vise od 35 znakova!");
			SPD(playerid, 80, DIALOG_STYLE_INPUT, ""SPLAVA"Firma Ime", ""SRWBOJA"Ime firme je predugacno!\n"SIVA"Upisite novo ime firme\n"SRWBOJA"Zabranjeno je stavljati OOC ime firme!", "Promeni", "Izlaz");
			return 1;
		}
		if(strfind(imeq, "|") != -1) return SCM(playerid,-1, ""ZPLAVA"[Firma]: "BELA"Koriscenje znakova u imenu firme je zabranjeno!");
		if(strfind(imeq, "%") != -1) return SCM(playerid,-1, ""ZPLAVA"[Firma]: "BELA"Koriscenje procenta u imenu firme je zabranjeno!");
		strmid(FirmaInfo[i][fNaziv], imeq, 0, strlen(imeq), 255);
		new string[128];
		format(string, charsmax(string), ""ZPLAVA"[Firma]: "BELA"Postavili ste ime firme na '%s'!", imeq); //conver
		SCM(playerid,-1, string);
		FirmaLabelIPickup(i);
		SacuvajFirmu(i);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(96)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pPosedovanjeFirme] == -1) return SCM(playerid,-1, ""SRWBOJA"[V:RPG] "SIVA"Nemate firmu!");
	new i = PlayerInfo[playerid][pPosedovanjeFirme];
	switch(listitem)
	{
		case 0:
		{
			strmid(FirmaInfo[i][fIznuda], "The Vinci Family", 0, strlen("The Vinci Family"), 255);
			SCM(playerid,-1, ""ZPLAVA"[Firma]: "BELA"Iznudu firme ste postavili The Vinci Family Mafiji.");
			FirmaLabelIPickup(i); SacuvajFirmu(i);
		}
		case 1:
		{
			strmid(FirmaInfo[i][fIznuda], "Black Dragon Triads", 0, strlen("Black Dragon Triads"), 255);
			SCM(playerid,-1, ""ZPLAVA"[Firma]: "BELA"Iznudu firme ste postavili Black Dragon Triads Mafiji.");
			FirmaLabelIPickup(i); SacuvajFirmu(i);
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(72)
{
	if(!response) return 1;
	new string[80];
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pMats] < 50) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Nemate dovoljno materijala (50)!");
			GivePlayerWeapon(playerid,4,1);
			PlayerInfo[playerid][pMats] -= 50;
			SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Preradili ste 50 materijala i dobili ste noz!");
			format(string, sizeof(string), "* %s preradjuje materijale u masini.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				OrgInfo[TvfMasina] --;
			}
		}
		case 1:
		{
			if(PlayerInfo[playerid][pMats] < 50) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Nemate dovoljno materijala (50)!");
			GivePlayerWeapon(playerid,5,1);
			PlayerInfo[playerid][pMats] -= 50;
			SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Preradili ste 50 materijala i dobili ste palicu!");
			format(string, sizeof(string), "* %s preradjuje materijale u masini.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				OrgInfo[TvfMasina] --;
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pMats] < 100) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Nemate dovoljno materijala (100)!");
			GivePlayerWeapon(playerid,24,50);
			PlayerInfo[playerid][pMats] -= 100;
			SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Preradili ste 100 materijala i dobili ste dezert!");
			format(string, sizeof(string), "* %s preradjuje materijale u masini.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				OrgInfo[TvfMasina] --;
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pMats] < 200) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Nemate dovoljno materijala (200)!");
			GivePlayerWeapon(playerid,28,150);
			PlayerInfo[playerid][pMats] -= 200;
			SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Preradili ste 200 materijala i dobili ste uzi!");
			format(string, sizeof(string), "* %s preradjuje materijale u masini.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				OrgInfo[TvfMasina] --;
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pMats] < 400) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Nemate dovoljno materijala (400)!");
			GivePlayerWeapon(playerid,30,200);
			PlayerInfo[playerid][pMats] -= 400;
			SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Preradili ste 400 materijala i dobili ste kalas!");
			format(string, sizeof(string), "* %s preradjuje materijale u masini.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				OrgInfo[TvfMasina] --;
			}
		}
		case 5:
		{
			if(PlayerInfo[playerid][pMats] < 400) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Nemate dovoljno materijala (400)!");
			GivePlayerWeapon(playerid,31,200);
			PlayerInfo[playerid][pMats] -= 400;
			SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Preradili ste 400 materijala i dobili ste m4!");
			format(string, sizeof(string), "* %s preradjuje materijale u masini.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				OrgInfo[TvfMasina] --;
			}
		}
		case 6:
		{
			if(PlayerInfo[playerid][pMats] < 500) return SCM(playerid,-1,""SPLAVA"[V:RPG] "SIVA"Nemate dovoljno materijala (500)!");
			GivePlayerWeapon(playerid,34,50);
			PlayerInfo[playerid][pMats] -= 500;
			SCM(playerid,-1,""SPLAVA"[V:RPG] | "SIVA"Preradili ste 500 materijala i dobili ste snajper!");
			format(string, sizeof(string), "* %s preradjuje materijale u masini.", GetName(playerid));
			e_RadiusMSG(20.0, playerid, HEX_PROX, string);
			if(PlayerInfo[playerid][pClan] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
				OrgInfo[TvfMasina] --;
			}
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(70)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			if(Poligon[playerid] == 1) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Vec imas zapoceto polaganje!");
			if(PlayerInfo[playerid][pADozvola] > 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Vec posedujes vozacku dozvolu!");
			if(PlayerInfo[playerid][pNovacDzep] < 1000) return SendClientMessage(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Nemas dovljno novac (1000$)!");
			Poligon[playerid] = 1;
			g_NovacMinus(playerid,1000);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Zapoceli ste sa polaganjem udjite u vozilo ispred!");
		}
		case 1:
		{
			if(PlayerInfo[playerid][pKamionDozvola] > 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Vec posedujes dozvolu za voznju kamiona!");
			if(PlayerInfo[playerid][pNovacDzep] < 2000) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Nemas dovljno novac (2000$)!");
			PlayerInfo[playerid][pKamionDozvola] = 1;
			g_NovacMinus(playerid,2000);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste kupili dozvolu za kamion (-2000$)!");
		}
		case 2:
		{
			if(PlayerInfo[playerid][pAvionDozvola] > 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Vec posedujes dozvolu za voznju aviona!");
			if(PlayerInfo[playerid][pNovacDzep] < 4000) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Nemas dovljno novac (4000$)!");
			PlayerInfo[playerid][pAvionDozvola] = 1;
			g_NovacMinus(playerid,4000);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste kupili dozvolu za avion (-4000$)!");
		}
		case 3:
		{
			if(PlayerInfo[playerid][pMotorDozvola] > 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Vec posedujes dozvolu za voznju motora!");
			if(PlayerInfo[playerid][pNovacDzep] < 500) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Nemas dovljno novac (500$)!");
			PlayerInfo[playerid][pMotorDozvola] = 1;
			g_NovacMinus(playerid,500);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste kupili dozvolu za motor (-500$)!");
		}
		case 4:
		{
			if(PlayerInfo[playerid][pBrodDozvola] > 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Vec posedujes dozvolu za voznju broda!");
			if(PlayerInfo[playerid][pNovacDzep] < 3000) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA]: "SIVA"Nemas dovljno novac (3000$)!");
			PlayerInfo[playerid][pBrodDozvola] = 1;
			g_NovacMinus(playerid,3000);
			SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Uspesno ste kupili dozvolu za brod (-3000$)!");
		}
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////
fDialog(66)
{
	if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
			new string[128];
			format(string,sizeof(string),""VARADERO"- Iznos Kredita: "BELA"%d$\n"VARADERO"- Iznos Rate Kredita: "BELA"%d$\n"VARADERO"- Preostalo za otplatu: "BELA"%d$",PlayerInfo[playerid][pIznosKredita], PlayerInfo[playerid][pIznosRate], PlayerInfo[playerid][pPreostaloZaOtplatu]);
			SPD(playerid, 62, DSB, ""BELA"Kredit Info", string, "Ok", "");
		}
		case 1: SPD(playerid, 68, DIALOG_STYLE_INPUT, ""BELA"Promena Rate", ""VARADERO"Upisite novi iznos rate koje cete otplacivati...", "Upisi", "Izlaz");
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////
fDialog(68)
{
	if(!response) return SPD(playerid, 66, DIALOG_STYLE_LIST, ""BELA"Informacije Kredit", ""BELA"(1). "VARADERO"Info Kredit\n"BELA"(2). "VARADERO"Promena Iznosa Rate", "Odaberi", "Izadji");
	new iznos;
	if(sscanf(inputtext, "i", iznos)) return SPD(playerid, 68, DIALOG_STYLE_INPUT, ""SRWBOJA"Promena Rate", "Upisite novi iznos rate", "Upisi", "Izlaz");
	if(iznos < 1000 || iznos > 5000)
	{
		SCM(playerid, -1, ""SRWBOJA"[Banka]: "SIVA"Suma ne moze biti manja od 1000$ i veca od 5000$!");
		SPD(playerid, 68, DIALOG_STYLE_INPUT, ""SRWBOJA"Iznos rate", ""BELA"Upisite novi iznos rate", "Upisi", "Izlaz");
		return 1;
	}
	PlayerInfo[playerid][pIznosRate] = iznos;
	new string[128];
	format(string, charsmax(string), ""VARADERO"[Banka]: "SIVA"Podesili ste iznos rate kredita na %d$.", iznos); //conver
	SCM(playerid, -1, string);
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(64)
{
	if(!response) return 1;
	if(PlayerInfo[playerid][pIznosKredita] > 0) return SCM(playerid, -1, ""SRWBOJA"[BANKA]: "SIVA"Vec imate podignut kredit!");
	if(PlayerInfo[playerid][pLevel] >= 55) return SCM(playerid, -1, ""SRWBOJA"[BANKA]: "SIVA"Vi ste penzioner!");
	switch(listitem)
	{
		case 0:
		{
			if(PlayerInfo[playerid][pLevel] < 2) return SCM(playerid, -1, ""SRWBOJA"[Banka]: "SIVA"Morate biti level 2+ za ovaj kredit!");
			PlayerInfo[playerid][pIznosKredita] = 10000;
			PlayerInfo[playerid][pIznosRate] = 1000;
			PlayerInfo[playerid][pPreostaloZaOtplatu] = PlayerInfo[playerid][pIznosKredita];
			PlayerInfo[playerid][pNovacBanka] += PlayerInfo[playerid][pIznosKredita];
			SCM(playerid, -1, ""VARADERO"[BANKA]: "SIVA"Podigli ste kredit u iznosu od 10000$ | INFO: /kredit.");
			SavePlayer(playerid);
		}
		case 1:
		{
			if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, -1, ""SRWBOJA"[Banka]: "SIVA"Morate biti level 3+ za ovaj kredit!");
			PlayerInfo[playerid][pIznosKredita] = 20000;
			PlayerInfo[playerid][pIznosRate] = 1000;
			PlayerInfo[playerid][pPreostaloZaOtplatu] = PlayerInfo[playerid][pIznosKredita];
			PlayerInfo[playerid][pNovacBanka] += PlayerInfo[playerid][pIznosKredita];
			SCM(playerid, -1, ""VARADERO"[BANKA]: "SIVA"Podigli ste kredit u iznosu od 20000$ | INFO: /kredit.");
			SavePlayer(playerid);
		}
		case 2:
		{
			if(PlayerInfo[playerid][pLevel] < 4) return SCM(playerid, -1, ""SRWBOJA"[Banka]: "SIVA"Morate biti level 4+ za ovaj kredit!");
			PlayerInfo[playerid][pIznosKredita] = 30000;
			PlayerInfo[playerid][pIznosRate] = 1000;
			PlayerInfo[playerid][pPreostaloZaOtplatu] = PlayerInfo[playerid][pIznosKredita];
			PlayerInfo[playerid][pNovacBanka] += PlayerInfo[playerid][pIznosKredita];
			SCM(playerid, -1, ""VARADERO"[BANKA]: "SIVA"Podigli ste kredit u iznosu od 30000$ | INFO: /kredit.");
			SavePlayer(playerid);
		}
		case 3:
		{
			if(PlayerInfo[playerid][pLevel] < 5) return SCM(playerid, -1, ""SRWBOJA"[Banka]: "SIVA"Morate biti level 5+ za ovaj kredit!");
			PlayerInfo[playerid][pIznosKredita] = 40000;
			PlayerInfo[playerid][pIznosRate] = 1000;
			PlayerInfo[playerid][pPreostaloZaOtplatu] = PlayerInfo[playerid][pIznosKredita];
			PlayerInfo[playerid][pNovacBanka] += PlayerInfo[playerid][pIznosKredita];
			SCM(playerid, -1, ""VARADERO"[BANKA]: "SIVA"Podigli ste kredit u iznosu od 40000$ | INFO: /kredit.");
			SavePlayer(playerid);
		}
		case 4:
		{
			if(PlayerInfo[playerid][pLevel] < 6) return SCM(playerid, -1, ""SRWBOJA"[Banka]: "SIVA"Morate biti level 6+ za ovaj kredit!");
			PlayerInfo[playerid][pIznosKredita] = 50000;
			PlayerInfo[playerid][pIznosRate] = 2000;
			PlayerInfo[playerid][pPreostaloZaOtplatu] = PlayerInfo[playerid][pIznosKredita];
			PlayerInfo[playerid][pNovacBanka] += PlayerInfo[playerid][pIznosKredita];
			SCM(playerid, -1, ""VARADERO"[BANKA]: "SIVA"Podigli ste kredit u iznosu od 50000$ | INFO: /kredit.");
			SavePlayer(playerid);
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(54)
{
	if(!response) return 1;
	new id;
	id = strval(inputtext);
	if(!IsPlayerConnected(id)) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igrac nije na serveru!");
	PlayerInfo[id][pTrazeniLevel] = 0;
	strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);
	new string[128];
	format(string, charsmax(string), ""SRWBOJA"[LSPD] "BELA"Policajac %s vam je ocistio dosije!",GetName(playerid)); //conver
	SCM(id,-1, string);
	format(string, charsmax(string), ""SRWBOJA"[LSPD] "BELA"Ocistili ste dosije igracu %s!",GetName(id)); //conver
	SCM(playerid,-1, string);
	format(string, sizeof(string), ""SRWBOJA"[LSPD] "BELA"Policajac %s je ocisti dosije igracu %s!",GetName(playerid), GetName(id));
	ChatPD(-1,string);
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////
fDialog(56)
{
	if(!response) return 1;
	new id,zlocin[64];
	id = strval(inputtext);
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Taj igrac je offline!");
	if(id == playerid) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Ne mozete sebi dati wanted level!");
	if(IgracPolicajac(id)) return SCM(playerid,-1,""SRWBOJA"INFO | "SIVA"Ne mozes dati wanted level policajcu!");
	if(GetPlayerWantedLevel(id) > 5) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Igrac moze imati max 6 wanted levela!");
	PostaviWanted(id, zlocin, GetName(playerid), 1);
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////
fDialog(58)
{
	if(!response) return 1;
	new id,string[128];
	id = strval(inputtext);
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "SIVA"Igrac je offline!");
	SCM(playerid,-1,""SRWBOJA"|----------------------DOSIJE-----------------------|");
	format(string, sizeof(string), "- Nick: %s", GetName(id));
	SCM(playerid, -1, string);
	format(string, sizeof(string), "- Zlocin: %s", ZlocinInfo[id][zZlocin]);
	SCM(playerid, -1, string);
	format(string, sizeof(string), "- Prijavio: %s", ZlocinInfo[id][zPrijavio]);
	SCM(playerid, -1, string);
	SCM(playerid,-1,""SRWBOJA"|------------------------------------------------------|");
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////
fDialog(60)
{
	if(!response) return 1;
	new id;
	id = strval(inputtext);
	if(PlayerInfo[id][pTrazeniLevel] == 0) return SCM(playerid, -1, ""SRWBOJA"[GRESKA] "SIVA"Igrac nema Wanted Level!");
	new Float:Poz[3];
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 5.0);
	new string[128];
	format(string, charsmax(string), ""VARADERO"(LSPD) "SIVA"Igrac %s je oznacen crveno na mapi!",GetName(id)); //conver
	SCM(playerid,-1, string);
	SCM(playerid,-1,""VARADERO"(LSPD) "SIVA"Da ugasite lociranje kucajte /ponistilociranje!");
	Lociranje[playerid] = 1;
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////
fDialog(5148)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		SPD(playerid, 5150, DIALOG_STYLE_LIST, ""BELA"Hitmen Oruzija", ""BELA"Noz\nPistolj sa prigusivacen\nSniper", "Odaberi", "Izlaz");
	}
	if(listitem == 1)
	{
		SetPlayerHealth(playerid, 99.0);
		SetPlayerArmour(playerid, 99.0);
		SCM(playerid,-1,""SRWBOJA"Hitmen | "BELA"Uzeli ste Pancir i Helte!");
	}
	return 1;
}
//////////////////////////////////////////////////////////
fDialog(5150)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		GivePlayerWeapon(playerid,4,1);
		SCM(playerid,-1,""SRWBOJA"Hitmen | "BELA"Uzeli ste Noz!");
	}
	if(listitem == 1)
	{
		GivePlayerWeapon(playerid,23,300);
		SCM(playerid,-1,""SRWBOJA"Hitmen | "BELA"Uzeli ste Pistolj!");
	}
	if(listitem == 2)
	{
		GivePlayerWeapon(playerid,34,300);
		SCM(playerid,-1,""SRWBOJA"Hitmen | "BELA"Uzeli ste Sniper!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////
fDialog(48)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		SPD(playerid, 50, DIALOG_STYLE_LIST, ""BELA"Los Santos Police Department Oruzija", ""BELA"M4\nDeagle\nShootgun\nMP5\nSpray\nPendrek\nSniper", "Odaberi", "Izlaz");
	}
	if(listitem == 1)
	{
		SPD(playerid, 52, DIALOG_STYLE_LIST, ""BELA"Los Santos Police Department Undercover", ""BELA"[ITA] Mafia\nBiznismen\nArmy\nObican Momak\nCartel\nZenski Undercover", "Odaberi", "Izlaz");
	}
	if(listitem == 2)
	{
		SetPlayerHealth(playerid, 99.0);
		SetPlayerArmour(playerid, 99.0);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste Pancir i Helte!");
	}
	if(listitem == 3)
	{
		if((swatoprema) == 1)
		{
			SCM(playerid, COLOR_GRAD2, ""SRWBOJA"[LSPD] "SIVA"ne mozete uzeti swat dok lider neodobri!");
			return 1;
		}
		SetPlayerHealth(playerid, 99.0);
		SetPlayerArmour(playerid, 99.0);
		GivePlayerWeapon(playerid,24,300);
		GivePlayerWeapon(playerid,31,300);
		GivePlayerWeapon(playerid,34,300);
		GivePlayerWeapon(playerid,25,300);
		GivePlayerWeapon(playerid,17,100);
		Update_Skin(playerid,285);
		if(IsPlayerAttachedObjectSlotUsed(playerid,STIT_SLOT)) RemovePlayerAttachedObject(playerid,STIT_SLOT);
        SetPlayerAttachedObject( playerid, STIT_SLOT, 18637, 5, 0.093000, 0.039999, 0.027000, 79.900039, 2.700009, 172.099960, 1.000000, 1.000000, 1.000000 );
		foreach(new i:Player)
        {
            ShowPlayerNameTagForPlayer(i, playerid, 0);
        }
        SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste SWAT Opremu!");
	}
	if(listitem == 4)
	{
		new stskin = PlayerInfo[playerid][pSkin];
		Update_Skin(playerid, stskin);
		RemovePlayerAttachedObject(playerid,STIT_SLOT);
		SCM(playerid, -1, ""SRWBOJA"LSPD | "BELA"Uzeo si svoju staru odjecu!");
	}
	return 1;
}
//////////////////////////////////////////////////////////
fDialog(52)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		Update_Skin(playerid,126);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Obukli ste se u ITA Mafia!");
	}
	if(listitem == 1)
	{
		Update_Skin(playerid,186);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Obukli ste se u Biznismena!");
	}
	if(listitem == 2)
	{
		Update_Skin(playerid,121);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Obukli ste se u Armz!");
	}
	if(listitem == 3)
	{
		Update_Skin(playerid,119);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Obukli ste se u Obicnog Momka!");
	}
	if(listitem == 4)
	{
		Update_Skin(playerid,60);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Obukli ste se u Cartel-a!");
	}
	if(listitem == 5)
	{
		if(PlayerInfo[playerid][pSex] == 1) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Niste Zensko!");
		Update_Skin(playerid,141);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Obukli ste se u Zenski Undercover!");
	}
	return 1;
}
//////////////////////////////////////////////////////////
fDialog(50)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		GivePlayerWeapon(playerid,31,600);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste M4!");
	}
	if(listitem == 1)
	{
		GivePlayerWeapon(playerid,24,600);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste Deagle!");
	}
	if(listitem == 2)
	{
		GivePlayerWeapon(playerid,25,600);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste Shotgun!");
	}
	if(listitem == 3)
	{
		GivePlayerWeapon(playerid,29,600);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste MP5!");
	}
	if(listitem == 4)
	{
		GivePlayerWeapon(playerid,41,600);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste Spray!");
	}
	if(listitem == 5)
	{
		GivePlayerWeapon(playerid,3,600);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste Pendrek!");
	}
	if(listitem == 6)
	{
		GivePlayerWeapon(playerid,34,600);
		SCM(playerid,-1,""SRWBOJA"LSPD | "BELA"Uzeli ste Sniper!");
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////
fDialog(487)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		SPD(playerid, 50, DIALOG_STYLE_LIST, ""BELA"FBI Oruzija", ""BELA"M4\nDeagle\nShootgun\nMP5\nSpray\nPendrek\nSniper", "Odaberi", "Izlaz");
	}
	if(listitem == 1)
	{
		SPD(playerid, 52, DIALOG_STYLE_LIST, ""BELA"FBI Undercover", ""BELA"[ITA] Mafia\nBiznismen\nArmy\nObican Momak\nCartel\nZenski Undercover", "Odaberi", "Izlaz");
	}
	if(listitem == 2)
	{
		SetPlayerHealth(playerid, 99.0);
		SetPlayerArmour(playerid, 99.0);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste Pancir i Helte!");
	}
	if(listitem == 3)
	{
		if((swatoprema) == 1)
		{
			SCM(playerid, COLOR_GRAD2, ""SRWBOJA"[FBI] "SIVA"ne mozete uzeti swat dok lider neodobri!");
			return 1;
		}
		SetPlayerHealth(playerid, 99.0);
		SetPlayerArmour(playerid, 99.0);
		GivePlayerWeapon(playerid,24,300);
		GivePlayerWeapon(playerid,31,300);
		GivePlayerWeapon(playerid,34,300);
		GivePlayerWeapon(playerid,25,300);
		GivePlayerWeapon(playerid,17,100);
		Update_Skin(playerid,285);
		if(IsPlayerAttachedObjectSlotUsed(playerid,STIT_SLOT)) RemovePlayerAttachedObject(playerid,STIT_SLOT);
        SetPlayerAttachedObject( playerid, STIT_SLOT, 18637,1, 0, -0.05, 0.175, 270.0, 180.0, 90.0, 1, 1, 1 );
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste SWAT Opremu!");
	}
	if(listitem == 4)
	{
		new stskin = PlayerInfo[playerid][pSkin];
		Update_Skin(playerid, stskin);
		RemovePlayerAttachedObject(playerid,STIT_SLOT);
		SCM(playerid, -1, ""SRWBOJA"FBI | "BELA"Uzeo si svoju staru odjecu!");
	}
	return 1;
}
//////////////////////////////////////////////////////////
fDialog(501)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		GivePlayerWeapon(playerid,31,600);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste M4!");
	}
	if(listitem == 1)
	{
		GivePlayerWeapon(playerid,24,600);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste Deagle!");
	}
	if(listitem == 2)
	{
		GivePlayerWeapon(playerid,25,600);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste Shotgun!");
	}
	if(listitem == 3)
	{
		GivePlayerWeapon(playerid,29,600);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste MP5!");
	}
	if(listitem == 4)
	{
		GivePlayerWeapon(playerid,41,600);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste Spray!");
	}
	if(listitem == 5)
	{
		GivePlayerWeapon(playerid,3,600);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste Pendrek!");
	}
	if(listitem == 6)
	{
		GivePlayerWeapon(playerid,34,600);
		SCM(playerid,-1,""SRWBOJA"FBI | "BELA"Uzeli ste Sniper!");
	}
	return 1;
}
//////////////////////////////////////////////////////////
fDialog(42)
{
	if(!response) return 1;
	if(listitem == 0)
	{
		if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
		{
			SetPlayerPos(playerid, 1568.2965,-1689.9768,6.2188);
			SCM(playerid,-1,""SRWBOJA"[LSPD] "BELA"Garaza LSPD-a!");
			PlayerInfo[playerid][pUfbi] = 0;
			SetPlayerInterior(playerid,0);
		}
	}
	if(listitem == 1)
	{
		if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7)
		{
			SetPlayerPos(playerid, 1572.7169,-1676.1721,28.1313);
			SCM(playerid,-1,""SRWBOJA"[LSPD] "BELA"Krov LSPD-a!");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pUfbi] = 0;
		}
	}
	return 1;
}
fDialog(3131)
{
	if(response)
	{
		SPD(playerid, 422, DIALOG_STYLE_INPUT, "NAPISI PITANJE:", "Postavite pitanje Admin Teamu:", "Posalji", "Izlaz");
	}
	if(!response)
	{
		SPD(playerid, 423, DIALOG_STYLE_INPUT, "NAPISI PITANJE:", "Postavite pitanje GameMaster Teamu:", "Posalji", "Izlaz");
	}
	return 1;
}
fDialog(422)
{
	if(!response) return 1;
	if( response ) {
		new askQ = -1;

		for( new id = 1; id < MAX_ASKQS; id++ ) {
			if( adMaskqList[ id ][ askqSend ] == false ) {
				askQ = id;
				break;
			}
		}

	    if( askQ == -1 ) return SCM( playerid, -1, "Vec ima maksimalan broj poslatih pitanja." );

	    adMaskqList[ askQ ][ askqSend ] = true;
		adMaskqList[ askQ ][ askqID ] = playerid;

		askqInfo[ playerid ][ askqSended ] = true;
		askqInfo[ playerid ][ askqAnswered ] = false;

		strmid( adMaskqList[ askQ ][ askqOwner ], GetName( playerid ), 0, strlen( GetName( playerid ) ), 32 );
		strmid( adMaskqList[ askQ ][ askqQuestion ], inputtext, 0, strlen( inputtext ), 128 );

		SCM( playerid, -1, ""ORANGE2"#!: Poslao si pitanje Administratorima !" );

		format( globalstring, sizeof( globalstring ), ""ORANGE2"(/lp): Igrac %s je poslao pitanje Administratorima.", GetName( playerid ), playerid );
		SendAdminMessage( -1, globalstring );
	}
	return 1;
}
fDialog(423)
{
	if(!response) return 1;
	if( response ) {
		new askQ = -1;

		for( new id = 1; id < MAX_ASKQS; id++ ) {
			if( GMaskqList[ id ][ askqSendA ] == false ) {
				askQ = id;
				break;
			}
		}

	    if( askQ == -1 ) return SCM( playerid, -1, "Vec ima maksimalan broj poslatih pitanja." );

	    GMaskqList[ askQ ][ askqSendA ] = true;
		GMaskqList[ askQ ][ askqIDA ] = playerid;

		askqInfo[ playerid ][ askqSended ] = true;
		askqInfo[ playerid ][ askqAnswered ] = false;

		strmid( GMaskqList[ askQ ][ askqOwnerA ], GetName( playerid ), 0, strlen( GetName( playerid ) ), 32 );
		strmid( GMaskqList[ askQ ][ askqQuestionA ], inputtext, 0, strlen( inputtext ), 128 );

		SCM( playerid, -1, ""ORANGE2"#!: Poslao si pitanje GameMasterima !" );

		format( globalstring, sizeof( globalstring ), ""ORANGE2"(/lp): Igrac %s [%d] je poslao pitanje GameMasterima.", GetName( playerid ), playerid );
		AdminGameMaster( -1, globalstring );
	}
	return 1;
}
fDialog(424)
{
	if( !response ) return true;
	if( response ) {
		    listitem++;
		    new string[ 256 ];
		    if( adMaskqList[ listitem ][ askqSend ] == false ) return SCM( playerid, -1, "U ovom slotu nema pitanja." );

            IzabraniAskQ[ playerid ] = listitem;

			format( string, sizeof( string ), "Igrac %s [ID:%d] je poslao pitanje.\n\nPitanje: %s", adMaskqList[ listitem ][ askqOwner ], listitem, adMaskqList[ listitem ][ askqQuestion ] );

		    SPD( playerid, 425, DSI, "PITANJE", string, "Odgovori", "Odustani" );
	}
	return 1;
}
fDialog(425)
{
	if( !response ) return true;
	if( response ) {
			new text[ 128 ];
		    if( sscanf( inputtext, "s[128]", text ) ) return 1;

			new askid = IzabraniAskQ[ playerid ];

		    if( adMaskqList[ askid ][ askqSend ] == false ) return SCM( playerid, -1, "U ovom slotu nema pitanja." );

			adMaskqList[ askid ][ askqSend ] = false;

			new id = adMaskqList[ askid ][ askqID ];
			IzabraniAskQ[ playerid ] = -1;

			if( strcmp( GetName( id ), adMaskqList[ askid ][ askqOwner ], true ) == 0 )
			{

				askqInfo[ id ][ askqAnswered ] = true;
				strmid( askqInfo[ id ][ askqAdmin ], GetName( playerid ), 0, strlen( GetName( playerid ) ), 32 );
	            strmid( askqInfo[ id ][ askqAnswer ], text, 0, strlen( text ), 128 );

               	new odg1[ 128 ], odg2[ 128 ];
	            format(odg1,sizeof odg1 ,""ORANGE2"#!: Igracu %s ste odgovorili na pitanje !", adMaskqList[ askid ][ askqOwner ] );
	            SCM(playerid, -1, odg1);
	            format(odg2,sizeof odg2 ,""ORANGE2"#!: Vas odgovor glasi: %s", text );
	            SCM(playerid, -1, odg2);
               	new sob[ 512 ], aRank[50];
               	if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
               	if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
               	if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
                if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
                if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
                if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
                if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
                if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
	            format(sob, 512, ""ORANGE2"#AdmWarn: %s %s [%d] je odgovorio na pitanje igracu %s [ASKID - %d].", aRank, GetName( playerid ), playerid, adMaskqList[ askid ][ askqOwner ], askid );
	            SendAdminMessage(-1, sob);
                PlayerInfo[playerid][pLPodg]++;

	            SendClientMessage( id, -1, ""ORANGE2"#!: Na vase pitanje je poslat odgovor." );
	            SendClientMessage( id, -1, ""ORANGE2"#!: Da pogledate odgovor koristite '/pogledajodgovor'." );

                strmid( adMaskqList[ askid ][ askqOwner ], "Prazno", 0, strlen( "Prazno" ), 32 );
                adMaskqList[ askid ][ askqID ] = -1;
			}
            else {

                if( id != IPI ) {
	                askqInfo[ id ][ askqSended ] = false;
	                askqInfo[ id ][ askqAnswered ] = false;
					strmid( askqInfo[ id ][ askqAdmin ], "Prazno", 0, strlen( "Prazno" ), 32 );
		            strmid( askqInfo[ id ][ askqAnswer ], "Prazno", 0, strlen( "Prazno" ), 128 );
                }

                strmid( adMaskqList[ askid ][ askqOwner ], "Prazno", 0, strlen( "Prazno" ), 32 );
                adMaskqList[ askid ][ askqID ] = -1;
				SCM( playerid, -1, "Taj igrac nije online." );
				return 1;
			}
	}
	return 1;
}
fDialog(8372)
{
	if( !response ) return true;
	if( response ) {
		    listitem++;
		    new string[ 256 ];
		    if( GMaskqList[ listitem ][ askqSendA ] == false ) return SCM( playerid, -1, "U ovom slotu nema pitanja." );

            IzabraniAskQ[ playerid ] = listitem;

			format( string, sizeof( string ), "Igrac %s [ID:%d] je poslao pitanje.\n\nPitanje: %s", GMaskqList[ listitem ][ askqOwnerA ], listitem, GMaskqList[ listitem ][ askqQuestionA ] );

		    SPD( playerid, 8373, DSI, "PITANJE", string, "Odgovori", "Odustani" );
	}
	return 1;
}
fDialog(8373)
{
	if( !response ) return true;
	if( response ) {
			new text[ 128 ];
		    if( sscanf( inputtext, "s[128]", text ) ) return 1;

			new askid = IzabraniAskQ[ playerid ];

		    if( GMaskqList[ askid ][ askqSendA ] == false ) return SCM( playerid, -1, "U ovom slotu nema pitanja." );

			GMaskqList[ askid ][ askqSendA ] = false;

			new id = GMaskqList[ askid ][ askqIDA ];
			IzabraniAskQ[ playerid ] = -1;

			if( strcmp( GetName( id ), GMaskqList[ askid ][ askqOwnerA ], true ) == 0 ) {

				askqInfo[ id ][ askqAnswered ] = true;
				strmid( askqInfo[ id ][ askqAdmin ], GetName( playerid ), 0, strlen( GetName( playerid ) ), 32 );
	            strmid( askqInfo[ id ][ askqAnswer ], text, 0, strlen( text ), 128 );

               	new odg1[ 128 ], odg2[ 128 ];
	            format(odg1,sizeof odg1 ,""ORANGE2"#!: Igracu %s ste odgovorili na pitanje !", GMaskqList[ askid ][ askqOwnerA ] );
	            SCM(playerid, -1, odg1);
	            format(odg2,sizeof odg2 ,""ORANGE2"#!: Vas odgovor glasi: %s", text );
	            SCM(playerid, -1, odg2);
				new sob[ 512 ], aRank[50];
               	if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
               	if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
	            format(sob, 512, ""ORANGE2"#AdmWarn: %s %s [%d] je odgovorio na pitanje igracu %s [ASKID - %d].", aRank, GetName( playerid ), playerid, GMaskqList[ askid ][ askqOwnerA ], askid );
	            SendAdminMessage(-1, sob);

	            SendClientMessage( id, -1, ""ORANGE2"#!: Na vase pitanje je poslat odgovor." );
	            SendClientMessage( id, -1, ""ORANGE2"#!: Da pogledate odgovor koristite '/pogledajodgovor'." );

                strmid( GMaskqList[ askid ][ askqOwnerA ], "None", 0, strlen( "None" ), 32 );
                GMaskqList[ askid ][ askqIDA ] = -1;
			}
            else {

                if( id != IPI ) {
	                askqInfo[ id ][ askqSended ] = false;
	                askqInfo[ id ][ askqAnswered ] = false;
					strmid( askqInfo[ id ][ askqAdmin ], "None", 0, strlen( "None" ), 32 );
		            strmid( askqInfo[ id ][ askqAnswer ], "None", 0, strlen( "None" ), 128 );
                }

                strmid( GMaskqList[ askid ][ askqOwnerA ], "None", 0, strlen( "None" ), 32 );
                GMaskqList[ askid ][ askqIDA ] = -1;
				SCM( playerid, -1, "Taj igrac nije online." );
				return 1;
			}
	}
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////
fDialog(32)
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
	if(!response) return 1;
	if(listitem == 0)
	{
		SPD(playerid,33,DSI,""VARADERO"Ostavljanje novca",""BELA"Unesi koliko zelis novca da ostavi","Ostavi","Izadji");
	}
	if(listitem == 1)
	{
		SPD(playerid,34,DSI,""VARADERO"Podizanje novca",""BELA"Unesi koliko zelis novca da podignes","Podigni","Izadji");
	}
	if(listitem == 2)
	{
		SPD(playerid,35,DSI,""VARADERO"Transfer novca",""BELA"Unesi ID igraca kojim zelis da posaljes novac","Dalje","Izadji");
	}
	if(listitem == 3)
	{
		new string[128];
		format(string,sizeof(string),""BELA"Imate "SRWBOJA"%d$ "BELA"na vasem bankovnom racunu!",PlayerInfo[playerid][pNovacBanka]);
		SPD(playerid, 62, DSB, ""VARADERO"Stanje Bankovnog Racuna", string, "Ok", "");
	}
	if(listitem == 4)
	{
		SPD(playerid,64,DSL,""SPLAVA"Banka",""BELA"Kredit - 10000$ (Level 2)\nKredit - 20000$ (Level 3)\nKredit - 30000$ (Level 4)\nKredit - 40000$ (Level 5)\nKredit - 50000$ (Level 6)","Odaberi","Izadji");
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(35)
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
	if(!response) return 1;
	new id;
    sscanf(inputtext, "u", id);
	if(id == INVALID_PLAYER_ID)
	{
		SPD(playerid,35,DSI,""VARADERO"Transfer novca",""BELA"Unesi ID/Ime igraca kojim zelis da posaljes novac","Dalje","Izadji");
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Taj igrac nije na serveru!");
		return 1;
	}
	if(PlayerInfo[playerid][pLevel] < 7) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Morate biti level 7+!");
	if(PlayerInfo[id][pBankovniRacun] == 0)
	{
        SPD(playerid,35,DSI,""VARADERO"Transfer novca",""BELA"Unesi ID/Ime igraca kojim zelis da posaljes novac","Dalje","Izadji");
		SCM(playerid, -1, ""SRWBOJA"[V:RPG] "SIVA"Igrac nema otvoren bankovni racun!");
		return 1;
	}
	if(id == playerid) {
        SPD(playerid,35,DSI,""VARADERO"Transfer novca",""BELA"Unesi ID/Ime igraca kojim zelis da posaljes novac","Dalje","Izadji");
        return SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Ne mozete sebi slati novac!");
    }
	new ime[MAX_PLAYER_NAME];
	IgracKojimSaljes[playerid] = id;
	GetPlayerName(IgracKojimSaljes[playerid], ime, sizeof(ime));
	new string[128];
	format(string,sizeof(string),""BELA"Unesi kolicinu novca koju zelis da posaljes igracu %s.",ime);
	SPD(playerid,37,DSI,""VARADERO"Transfer novca",string,"Posalji","Izadji");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////
fDialog(37)
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
	if(!response) return 1;
	new kolicina;
	sscanf(inputtext, "d", kolicina);
	if(!IsPlayerConnected(IgracKojimSaljes[playerid]))
	{
		SPD(playerid,35,DSI,""VARADERO"Transfer novca",""BELA"Unesi ID/Ime igraca kojim zelis da posaljes novac","Dalje","Izadji");
		SCM(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Taj igrac nije na serveru!");
		return 1;
	}
	if(kolicina < 1 || kolicina > 5000000) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete ici ispod 1 i iznad 5M!");
	if(PlayerInfo[playerid][pNovacBanka] < kolicina) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Nemas toliko para na banci!");
	new imes[MAX_PLAYER_NAME];
	new ime[MAX_PLAYER_NAME];
    new iTarget = IgracKojimSaljes[playerid],
        oldstate = PlayerInfo[playerid][pNovacBanka],
        oldstate_target = PlayerInfo[iTarget][pNovacBanka];
	GetPlayerName(playerid, imes, sizeof(imes));
	GetPlayerName(IgracKojimSaljes[playerid], ime, sizeof(ime));
	PlayerInfo[playerid][pNovacBanka] -= kolicina;
	PlayerInfo[IgracKojimSaljes[playerid]][pNovacBanka] += kolicina;
	new string[256];
	format(string, charsmax(string), ""VARADERO"Poslao si igracu %s novca %d$!",ime,kolicina); //conver
	SCM(playerid,-1, string);
	format(string, charsmax(string), ""VARADERO"%s vam je poslao %d$ na vas bankovni racun!",imes,kolicina);
	SCM(IgracKojimSaljes[playerid],-1,string);

    format(string, charsmax(string), "BANKA | %s | Transfer | Banka: %d$/%d$/%d$ | Iznos: %d$ | Primalac: %s | Banka: %d$/%d$/%d$", imes, oldstate, PlayerInfo[playerid][pNovacBanka], (oldstate-PlayerInfo[playerid][pNovacBanka]), kolicina, ime, oldstate_target, PlayerInfo[iTarget][pNovacBanka], (PlayerInfo[iTarget][pNovacBanka]-oldstate_target));
    Log("logs/transfer.log", string);

    IgracKojimSaljes[playerid] = -1;
	return 1;
}
forward GolCount();
public GolCount()
{
 	foreach(new i : Player)
    {
    	if(fudbaltim[i] == 1 || fudbaltim[i] == 2)
     	{
      		SetPlayerArmour(i, 99);
		}
	}
    if(IsObjectInTheArea(lopta,1343.9974,2108.0566,1353.3119,2112.6431))
	{
	    new ime[MAX_PLAYER_NAME]; GetPlayerName(strelac, ime, MAX_PLAYER_NAME);
	    new str[128];
	    golovi1++;
		if(fudbaltim[strelac] == 1)
		{
			format(str, sizeof(str), "Fudbal | AUTOGOL! |{FFFFFF} Igrac %s (tim 1) je dao gol svojem timu! |{FF0000} Tim 1: %d, Tim 2: %d",ime,golovi2, golovi1);
            FudbalPoruka(-1, str);
		}
		else
		{
			format(str, sizeof(str), "Fudbal | GOOOOOL! |{FFFFFF} Igrac %s (tim 2) je dao gol za svoj tim! |{FFFF00} Tim 1: %d, Tim 2: %d",ime,golovi2, golovi1);
			FudbalPoruka(-1, str);
		}
  		foreach(new i : Player)
	    {
     		if(fudbaltim[i] == 1) { SetPlayerPos(i, 1348.9005,2115.8665,11.0364); SetPlayerInterior(i, 0); }
     		else if(fudbaltim[i] == 2) { SetPlayerPos(i, 1348.7242,2184.3674,11.0344); SetPlayerFacingAngle(i, 180); SetPlayerInterior(i, 0); }
		}
	    DestroyDynamicObject(lopta);
		lopta = CreateDynamicObject(2114, 1348.4065,2149.4966,10.2, 0, 0, 0);
		SetDynamicObjectMaterial(lopta, 0, 5033, "union_las", "ws_carparkwall2", 0);
	}
	else if(IsObjectInTheArea(lopta,1343.9312,2186.9382,1353.5435,2191.6492))
	{
	    new ime[MAX_PLAYER_NAME]; GetPlayerName(strelac, ime, MAX_PLAYER_NAME);
	    new str[128];
	    golovi2++;
		if(fudbaltim[strelac] == 2)
		{
			format(str, sizeof(str), "Fudbal | AUTOGOL ! |{FFFFFF} Igrac %s (tim 2) je dao gol svom timu! "SRWBOJA" Tim 1: %d, Tim 2: %d",ime,golovi2, golovi1);
			FudbalPoruka(-1, str);
		}
		else
		{
			format(str, sizeof(str), "Fudbal | GOOOOOL ! |{FFFFFF} Igrac %s (tim 1) je dao gol za svoj tim! "SRWBOJA" Tim 1: %d, Tim 2: %d",ime,golovi2, golovi1);
			FudbalPoruka(-1, str);
		}
		foreach(new i : Player)
	    {
     		if(fudbaltim[i] == 1) { SetPlayerPos(i, 1348.9005,2115.8665,11.0364); SetPlayerInterior(i, 0); }
     		else if(fudbaltim[i] == 2) { SetPlayerPos(i, 1348.7242,2184.3674,11.0344); SetPlayerFacingAngle(i, 180); SetPlayerInterior(i, 0); }
		}
	    DestroyDynamicObject(lopta);
		lopta = CreateDynamicObject(2114, 1348.4065,2149.4966,10.2, 0, 0, 0);
		SetDynamicObjectMaterial(lopta, 0, 5033, "union_las", "ws_carparkwall2", 0);
	}
	else if(!IsObjectInTheArea(lopta,1311.3945,2112.2881,1384.5884,2187.2483))
	{
		DestroyDynamicObject(lopta);
		lopta = CreateDynamicObject(2114, 1348.4065,2149.4966,10.2, 0, 0, 0);
		SetDynamicObjectMaterial(lopta, 0, 5033, "union_las", "ws_carparkwall2", 0);
	}
	return 1;
}
IsObjectInTheArea(objectid, Float:minx, Float:miny, Float:maxx, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetDynamicObjectPos(objectid, x, y, z);
    if(x >= minx && x <= maxx && y >= miny && y <= maxy) return true;
    else return false;
}
forward FudbalVreme();
public FudbalVreme()
{
    new str[128];
    foreach(new i : Player)
    {
	    if(fudbaltim[i] == 1)
	    {
		    format(str, sizeof(str), "| KRAJ UTAKMICE |{FFFFFF} Vi: %d | Oni: %d", golovi2, golovi1);
		    SCM(i, -1, str);
		    fudbaltim[i] = 0;
		    SpawnPlayer(i);
		    SpawnIgraca(i);
		}
		else if(fudbaltim[i] == 2)
		{
			format(str, sizeof(str), "| KRAJ UTAKMICE |{FFFFFF} Vi: %d | Oni: %d", golovi1, golovi2);
			SCM(i, -1, str);
			fudbaltim[i] = 0;
			SpawnPlayer(i);
			SpawnIgraca(i);
		}
	}
	DestroyDynamicObject(lopta);
	fudbalon = false;
	golovi1 = 0;
	golovi2 = 0;
	KillTimer(gol);
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(34)
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
	if(!response) return 1;
	new kolicina;
    sscanf(inputtext, "d", kolicina);
    if(kolicina < 1 || kolicina > 5000000) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete ici ispod 1 i iznad 5M!");
	new string[256];
	if(PlayerInfo[playerid][pNovacBanka] < kolicina) {
		format(string, charsmax(string), ""SRWBOJA"[V:RPG] "SIVA"Nemas %d$ novca u banci,ukupno imas %d$!",kolicina, PlayerInfo[playerid][pNovacBanka]); //conver
		return SCM(playerid,-1, string);
	}
    new oldstate = PlayerInfo[playerid][pNovacBanka], szPlayerName[MAX_PLAYER_NAME],
        poldstate = PlayerInfo[playerid][pNovacDzep];
    GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME-1);
	PlayerInfo[playerid][pNovacBanka] -= kolicina;
	g_NovacPlus(playerid, kolicina);
	format(string, charsmax(string), ""SRWBOJA"INFO | "SIVA"Podigao si iz banke %d$, ukupno imas %d$!",kolicina,PlayerInfo[playerid][pNovacBanka]); //conver
	SCM(playerid,-1, string);
    format(string, charsmax(string), "BANKA | %s | Podizanje | Banka: %d$/%d$/%d$ | Iznos: %d$ | Igraca: %d$/%d$/%d$", szPlayerName, oldstate, PlayerInfo[playerid][pNovacBanka], (oldstate-PlayerInfo[playerid][pNovacBanka]), kolicina, poldstate, PlayerInfo[playerid][pNovacDzep], (PlayerInfo[playerid][pNovacDzep]-poldstate));
    Log("logs/transfer.log", string);
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(33)
{
    if(g_Settings & SETTING_BANK_DISABLED) {
        return SCM(playerid,-1,"[Banka]: "SRWBOJA"Banka je trenutno zatvorena!");
    }
	if(!response) return 1;
	new kolicina;
    sscanf(inputtext, "d", kolicina);
	if(kolicina < 1 || kolicina > 3000000) return SCM(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Ne mozete ici ispod 1 i iznad 3M!!");
	new string[256];
	if(PlayerInfo[playerid][pNovacDzep] < kolicina) {
		format(string, charsmax(string), ""SRWBOJA"INFO | "SIVA"Nemas %d$,u dzepu imas %d$!",kolicina,PlayerInfo[playerid][pNovacDzep]); //conver
		return SCM(playerid,-1, string);
	}
    new oldstate = PlayerInfo[playerid][pNovacBanka],
        poldstate = PlayerInfo[playerid][pNovacDzep],
        szPlayerName[MAX_PLAYER_NAME];

    g_NovacMinus(playerid, kolicina);
	PlayerInfo[playerid][pNovacBanka] += kolicina;

    GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME-1);
	format(string, charsmax(string), ""SRWBOJA"[V:RPG] "SIVA"Ostavio si u banku %d$,ukupno imas %d$!",kolicina,PlayerInfo[playerid][pNovacBanka]); //conver
	SCM(playerid,-1, string);

    format(string, charsmax(string), "BANKA | %s | Uplata | Banka: %d$/%d$/%d$ | Iznos: %d$ | Igraca: %d$/%d$/%d$", szPlayerName, oldstate, PlayerInfo[playerid][pNovacBanka], (PlayerInfo[playerid][pNovacBanka]-oldstate), kolicina, poldstate, PlayerInfo[playerid][pNovacDzep], (poldstate-PlayerInfo[playerid][pNovacDzep]));
    Log("logs/transfer.log", string);
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(45) // ovo
{
    TogglePlayerSpectating( playerid, true );
	InterpolateCameraPos(playerid, 316.629119, -2347.745361, -2.533203, 343.586669, -1786.615478, 40.193359, 20000);
	InterpolateCameraLookAt(playerid, 316.142669, -2342.800292, -3.089434, 344.673248, -1791.454101, 39.555686, 20000);
    OcistiChat( playerid, 25 );
    for(new i = 0; i < 37; i ++) {
		PlayerTextDrawShow( playerid, RegisterTD[ playerid ] [ i ] );
	}
	SelectTextDraw( playerid, BLUE );
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(3)
	{
		if(response)
		{
			info(playerid, "Odabrali ste Muski spol !");
			PlayerInfo[ playerid ][ pSkin ] = 29;
 			PlayerInfo[ playerid ][ pSex ] = 1;
   			RegSex[ playerid ] = 1;
		}
		else
		{
			info(playerid, "Odabrali ste Zenski spol !");
  			PlayerInfo[ playerid ][ pSkin ] = 12;
	   		PlayerInfo[ playerid ][ pSex ] = 2;
	   		RegSex[ playerid ] = 2;
		}
		return 1;
    }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(57)
{
	if(!response) return Kick(playerid);
	switch(listitem)
	{
		case 0:
		{
			PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMAL;
			SCM(playerid,-1,""SRWBOJA"Ok, "BELA"znaci zivite u "SRWBOJA"Los Santosu");
			SPD(playerid, 5, DIALOG_STYLE_LIST, ""BELA"Odakle ste ?", ""SPLAVA"- "BELA"Srbija\n"SPLAVA"- "BELA"Bosna i Hercegovina\n"SPLAVA"- "BELA"Kosovo\n"SPLAVA"- "BELA"Crna Gora\n"SPLAVA"- "BELA"Hrvatska\n"SPLAVA"- "BELA"Makedonija\n"SPLAVA"- "BELA"Slovenija\n"SPLAVA"- "BELA"Ostalo", "Dalje", "Odustani");
		}
		case 1:
		{
			PlayerInfo[playerid][pProveraSpawna] = SPAWN_NORMALV;
			SCM(playerid,-1,""SRWBOJA"Ok, "BELA"znaci zivite u "SRWBOJA"Las Vegasu");
			SPD(playerid, 5, DIALOG_STYLE_LIST, ""BELA"Odakle ste ?", ""SPLAVA"- "BELA"Srbija\n"SPLAVA"- "BELA"Bosna i Hercegovina\n"SPLAVA"- "BELA"Kosovo\n"SPLAVA"- "BELA"Crna Gora\n"SPLAVA"- "BELA"Hrvatska\n"SPLAVA"- "BELA"Makedonija\n"SPLAVA"- "BELA"Slovenija\n"SPLAVA"- "BELA"Ostalo", "Dalje", "Odustani");
		}
	}
	return 1;
}
fDialog(5)
{
	if(!response) return Kick(playerid);
	if(response)
	{
		switch(listitem)
		{
			case 0:
			{
					PlayerInfo[playerid][pDrzava] = 1;
					SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"OK, Vi ste iz Srbije!");
					ChoseCountry[ playerid ] = true;
			}
			case 1:
			{
					PlayerInfo[playerid][pDrzava] = 2;
					SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"OK, Vi ste iz Bosne i Hercegovine!");
					ChoseCountry[ playerid ] = true;
			}
			case 2:
			{
					PlayerInfo[playerid][pDrzava] = 5;
					SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"OK, Vi ste iz Hrvatske!");
					ChoseCountry[ playerid ] = true;
			}
			case 3:
			{
					PlayerInfo[playerid][pDrzava] = 6;
					SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"OK, Vi ste iz Makedonije!");
					ChoseCountry[ playerid ] = true;
			}
			case 4:
			{
					PlayerInfo[playerid][pDrzava] = 4;
					SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"OK, Vi ste iz Crne Gore!");
					ChoseCountry[ playerid ] = true;
			}
			case 5:
			{
					PlayerInfo[playerid][pDrzava] = 7;
					SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"OK, Vi ste iz Slovenije!");
					ChoseCountry[ playerid ] = true;
			}
			case 6:
			{
					PlayerInfo[playerid][pDrzava] = 8;
					SCM(playerid,-1,""CRVENA"[V:RPG] "BELA"OK, Vi ste iz neke druge drzave!");
					ChoseCountry[ playerid ] = true;
			}
		}
	}
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(3124)
{
if(response)
{
new imeu[128];
if(sscanf(inputtext, "s[128]", imeu)) return SPD(playerid, 3124, DSI, "Garaza", "Promeni novo ime", "Promeni", "Odustani");
for(new id = 1;id <= sizeof(GarageInfo); id++)
{
new ime[MAX_PLAYER_NAME];
GetPlayerName(playerid, ime, 24);
if(strcmp(GarageInfo[id][gOwner],ime, false ) == 0)
{
strmid(GarageInfo[id][gName], imeu, 0, strlen(imeu), 255);
new str[128];
format(str, sizeof(str), ""SRWBOJA"Garaza "BELA"%s\n"SRWBOJA"Vlasnik: "BELA"%s\n"SRWBOJA"Space za ulazak", GarageInfo[id][gName], GarageInfo[id][gOwner]);
Update3DTextLabelText(GarageText[id],-1,str);
}
}

}
return 1;
}

fDialog(3123)
{
if(response)
{
if(listitem == 0)
{
SPD(playerid, 3124, DSI, "Garaza", "Promeni novo ime", "Promeni", "Odustani");
}
if(listitem == 1)
{
for(new id = 1;id <= sizeof(GarageInfo); id++)
{
new ime[MAX_PLAYER_NAME];
GetPlayerName(playerid, ime, 24);
if(strcmp(GarageInfo[id][gOwner],ime, false ) == 0)
{
GarageInfo[id][gOwned] = 0;
strmid(GarageInfo[id][gOwner], "Niko", 0, strlen("Niko"), 255);

new str[128];
format(str, sizeof(str), ""SRWBOJA"Garaza "BELA"%s\n"SRWBOJA"Vlasnik: "BELA"Drzava\n"SRWBOJA"Cena: "BELA"%d\n"SRWBOJA"/kupigarazu", GarageInfo[id][gName], GarageInfo[id][gPrice]);
Update3DTextLabelText(GarageText[id],-1,str);
g_NovacPlus(playerid, GarageInfo[id][gPrice]);
SCM(playerid, -1, "Prodali ste garazu");
if(GarageInfo[id][gPrice] == 0) break;
SaveGarage(id);
}
}
}

if(listitem == 2)
{
for(new id = 1;id <= sizeof(GarageInfo); id++)
{
new ime[MAX_PLAYER_NAME];
GetPlayerName(playerid, ime, 24);
if(strcmp(GarageInfo[id][gOwner],ime, false ) == 0)
{
GarageInfo[id][gLocked] = 1;
SCM(playerid, -1, "Zakljuco si garazu");

if(GarageInfo[id][gPrice] == 0) break;
SaveGarage(id);
}
}
}
if(listitem == 3)
{
for(new id = 1;id <= sizeof(GarageInfo); id++)
{
new ime[MAX_PLAYER_NAME];
GetPlayerName(playerid, ime, 24);
if(strcmp(GarageInfo[id][gOwner],ime, false ) == 0)
{
GarageInfo[id][gLocked] = 0;
SCM(playerid, -1, "Otkljuco si garazu");

if(GarageInfo[id][gPrice] == 0) break;
SaveGarage(id);
}
}
}


}
return 1;
}

fDialog(4)
	{
		if(!response) return Kick(playerid);
		if(response)
		{
            new godine;
		    godine = strval(inputtext);
            if(godine < 7 || godine > 60)
	        {
				info(playerid, "Godine ne mogu biti manje od 7, a vece od 60 !");
                SPD(playerid, 4, DIALOG_STYLE_INPUT,""SRWBOJA"GODINE", ""BELA"Unesite broj vasih Godina. Godine ne mogu biti manje od 7, a vece od 60 !", ""SRWBOJA"Nastavi", ""CRVENA"Odustani");
				return 1;
			}
			new string [128];
			PlayerInfo[playerid][pGodine] = strval(inputtext);
			format(string,sizeof(string),""SRWBOJA"V Â» "BELA"U redu, vi imate %d Godina.",PlayerInfo[playerid][pGodine]);
			SCM(playerid,-1,string);
			InputAge[ playerid ] = true;
	    }
	    return 1;
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(12)
	{
	    if (!response) return Kick(playerid);
		if(response)
		{
			new emailp = strfind(inputtext, "@", true);
		    if(strfind(inputtext,"%",true) != -1) return 0;
			if(emailp == -1)
			{
				info(playerid, "Unesena E-Mail Adresa nije validna !");
				new szRegEmail[] = ""BELA"Unesite vas E-Mail. Molimo vas da vas E-Mail bude tacan.";
  				SPD(playerid, 12, DIALOG_STYLE_INPUT, ""SRWBOJA"E-MAIL", szRegEmail, ""SRWBOJA"Nastavi", ""CRVENA"Odustani");
				return 1;
			}
			else
			{
			    new string2[256];
			    format(string2,sizeof(string2),""SRWBOJA"V Â» "BELA"Vasa E-Mail Adresa je: "SRWBOJA"%s",inputtext);
			    SCM(playerid,-1,string2);
			    new string[128];				
				format(string, sizeof(string), "%s", inputtext);
				PlayerInfo[playerid][pEmail] = string;				
				InputMail[ playerid ] = true;
			}
	    }
	    return 1;
	}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(22)
{
	if (!response) return Kick(playerid);
	PlayerInfo[ playerid ][ pTutorial ] = 0; TutorialTimer[playerid] = SetTimerEx("Tutorial1",465, false, "i", playerid);
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fDialog(1)
{
	if(strlen(inputtext) < MIN_DUZINA_LOZINKE)
				{
	 				new regstring[512], spojiba[1024], regname[64]; GetPlayerName(playerid,regname,sizeof(regname));
	 				format(regstring,sizeof(regstring),""SRWBOJA"'%s', "BELA"dobro dosao na "SRWBOJA"Varadero OGC.\n\n"BELA"Vas korisnicki nalog "CRVENA"nije registrovan "BELA"na serveru.\nMolimo vas unesite zeljenu Lozinku da bi nastavili sa Registracijom !", regname);
					SPD(playerid,1,DIALOG_STYLE_PASSWORD,""SRWBOJA"LOZINKA",regstring,""SRWBOJA"Nastavi",""CRVENA"Odustani");
		            format(spojiba,sizeof(spojiba),"{800000}%s%s",regstring);
     				info(playerid, "Lozinka ne moze biti manja od 5, a veca od 26 znakova !");
				}
				else if(strlen(inputtext) > MAX_DUZINA_LOZINKE)
				{
				    new regstring[512], spojiba[1024], regname[64]; GetPlayerName(playerid,regname,sizeof(regname));
					format(regstring,sizeof(regstring),""SRWBOJA"'%s', "BELA"dobro dosao na "SRWBOJA"Varadero OGC.\n\n"BELA"Vas korisnicki nalog "CRVENA"nije registrovan "BELA"na serveru.\nMolimo vas unesite zeljenu Lozinku da bi nastavili sa Registracijom !", regname);
					SPD(playerid,1,DIALOG_STYLE_PASSWORD,""SRWBOJA"LOZINKA",regstring,""SRWBOJA"Nastavi",""CRVENA"Odustani");
		            format(spojiba,sizeof(spojiba),"{800000}%s%s",regstring);
					info(playerid, "Lozinka ne moze biti manja od 5, a veca od 26 znakova !");
				}
				else if(strlen(inputtext) >= MIN_DUZINA_LOZINKE && strlen(inputtext) <= MAX_DUZINA_LOZINKE)
				{
					strmid(PlayerInfo[playerid][pPassword], inputtext, 0, strlen(inputtext));					
					InputPassword [ playerid ] = true;
					new string[128];
					format(string,sizeof(string),""SRWBOJA"V Â» "BELA"Vasa Lozinka je: "SRWBOJA"%s",inputtext);
					SCM(playerid,-1,string);
	}
	return 1;
}
OnPlayerLoginEx(playerid) 
{
		if(DailyRecord < Iter_Count(Player))
		{
			DailyRecord = Iter_Count(Player);
		}
		if(!IsPlayerConnected(playerid)) {
			return 0;
		}		
        new rand = random(sizeof(RandomSpawn2));
        SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], RandomSpawn2[rand][0], RandomSpawn2[rand][1], RandomSpawn2[rand][2], 1.0, -1, -1, -1, -1, -1, -1);
		SpawnPlayer(playerid); SpawnIgraca(playerid); GivePlayerMoney(playerid, PlayerInfo[playerid][pNovacDzep]); SetPlayerHealth(playerid, 100);
		SetPlayerFightingStyle(playerid, PlayerInfo[playerid][pBorbeniStil]);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < 24; i ++) // ovo
			PlayerTextDrawHide(playerid, LoginTD[playerid][i]);


		new string[256],iskustvo,novac,dzep,banka,kuca,kucanovac,firma,firmanovac,stan,stannovac,vikendica,vikendicanovac;
		banka = PlayerInfo[playerid][pNovacBanka];
		dzep = PlayerInfo[playerid][pNovacDzep];
		if(PlayerInfo[playerid][pPosedovanjeKuce] != -1)
		{
			kuca = KucaInfo[PlayerInfo[playerid][pPosedovanjeKuce]][kCena];
			kucanovac = KucaInfo[PlayerInfo[playerid][pPosedovanjeKuce]][kNovac];
		}
		else if(PlayerInfo[playerid][pPosedovanjeKuce] == -1)
		{
			kuca = 0;
			kucanovac = 0;
		}
		if(PlayerInfo[playerid][pPosedovanjeFirme] != -1)
		{
			firma = FirmaInfo[PlayerInfo[playerid][pPosedovanjeFirme]][fCena];
			firmanovac = FirmaInfo[PlayerInfo[playerid][pPosedovanjeFirme]][fKasa];
		}
		else if(PlayerInfo[playerid][pPosedovanjeFirme] == -1)
		{
			firma = 0;
			firmanovac = 0;
		}
		if(PlayerInfo[playerid][pPosedovanjeStana] != -1)
		{
			stan = StanInfo[PlayerInfo[playerid][pPosedovanjeStana]][sCena];
			stannovac = StanInfo[PlayerInfo[playerid][pPosedovanjeStana]][sNovac];
		}
		else if(PlayerInfo[playerid][pPosedovanjeStana] == -1)
		{
			stan = 0;
			stannovac = 0;
		}
		if(PlayerInfo[playerid][pPosedovanjeVikendice] != -1)
		{
			vikendica = VikendiceInfo[PlayerInfo[playerid][pPosedovanjeVikendice]][viCena];
			vikendicanovac = VikendiceInfo[PlayerInfo[playerid][pPosedovanjeVikendice]][viNovac];
		}
		else if(PlayerInfo[playerid][pPosedovanjeVikendice] == -1)
		{
			vikendica = 0;
			vikendicanovac = 0;
		}

		novac = (banka + dzep + kuca + kucanovac + firma + firmanovac + stan + stannovac + vikendica + vikendicanovac);
	    /////////////////////////////////////////////////////////
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new aRank[50];
		    if(PlayerInfo[playerid][pAdmin] == 1) { aRank = "Admin Level 1"; }
		    if(PlayerInfo[playerid][pAdmin] == 2) { aRank = "Admin Level 2"; }
		    if(PlayerInfo[playerid][pAdmin] == 3) { aRank = "Admin Level 3"; }
		    if(PlayerInfo[playerid][pAdmin] == 4) { aRank = "Admin Level 4"; }
		    if(PlayerInfo[playerid][pAdmin] == 5) { aRank = "Admin Level 5 (Head-Admin)"; }
		    if(PlayerInfo[playerid][pAdmin] == 6) { aRank = "Admin Level 6 (Direktor)"; }
		    if(PlayerInfo[playerid][pAdmin] == 7) { aRank = "Vlasnik"; }
		    if(PlayerInfo[playerid][pAdmin] == 8) { aRank = "Developer"; }
			format(string,sizeof(string),""ORANGE2"#!: Igrac %s [%d] je ulogovan kao %s.", GetName(playerid), playerid, aRank);
			SendAdminMessage(-1, string);
		}
		if(PlayerInfo[playerid][pGM] >= 1)
		{
			new aRank[50];
		    if(PlayerInfo[playerid][pGM] == 1) { aRank = "GameMaster 1"; }
		    if(PlayerInfo[playerid][pGM] == 2) { aRank = "GameMaster 2 (Vodja)"; }
			format(string,sizeof(string),""ORANGE2"#!: Igrac %s [%d] je ulogovan kao %s.", GetName(playerid), playerid, aRank);
			SendAdminMessage(-1, string);
		}
		if(novac > 1)
		{
			format(string,sizeof(string),""VARADERO"[BOGATSTVO] "BELA"Igrac %s [%d] | Ukupno Bogatstvo: $%d", GetName(playerid), playerid, novac);
			SendAdminMessage(-1, string);
	    }
        if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pClan] == 16 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pClan] == 24 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pGM] >= 1)
	    { TextDrawShowForPlayer(playerid, WarnTD); }
		//////////
		new spawninfo[512];
		format(spawninfo, 512, ""SIVA"Dobro dosao nazad "VARADERO"%s "SIVA"na Varadero.", GetName(playerid));
		SCM(playerid, -1, spawninfo);
		format(spawninfo, 512,""VARADERO"[INFO] "BELA"Sati igre: %d | Trenutni Level: %d | Respekti: %d/%d | Ukupno Bogatstvo: $%d",PlayerInfo[playerid][pSatiIgre],PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pExp],iskustvo,novac);
		SCM(playerid, -1, spawninfo);
		////////////////////
	    SetPlayerHealth(playerid, 99.0);
		if(PlayerInfo[playerid][pTutorial] == 0)
		{
			TogglePlayerSpectating( playerid, 1 );
			SCM(playerid,-1,"[V:RPG] "VARADERO"Niste zavrsili tutorail pa ste vraceni na tutorijal!");
			SetPlayerCameraPos( playerid, 1465.5031, -1713.1963, 31.2710 ); // ovo menjas
			SetPlayerCameraLookAt( playerid, 1465.9106, -1714.1077, 30.9309 ); // ovo menjas
			SetPlayerInterior( playerid, 0 );
			SetPlayerVirtualWorld( playerid, 1 );
			SetPlayerPos( playerid, 1465.5031, -1713.1963, 31.2710 ); // ovo menjas

			TutorialTimer[playerid] = SetTimerEx("Tutorijal",465, false, "ii", playerid, 1 );
		}
		/////////////////////////////////////////////////////////////////////////////////////////////////
        new onlineclanovilider[146];
		if(PlayerInfo[playerid][pClan] >= 1)
		{
            if(PlayerInfo[playerid][pLider] >= 1)
		    {
                format( onlineclanovilider, sizeof( onlineclanovilider ), ""CRVENA"#ONLINE: "BELA"Lider vase organizacije %s [%d] je usao na server.", GetName(playerid),playerid );
		        OrgPoruka( PlayerInfo[ playerid ][ pClan ], -1, onlineclanovilider );
            }
	        else
            {
                format( onlineclanovilider, sizeof( onlineclanovilider ), ""CRVENA"#ONLINE: "BELA"Clan vase organizacije %s [%d] je usao na server.", GetName(playerid),playerid );
	            OrgPoruka( PlayerInfo[ playerid ][ pClan ], -1, onlineclanovilider );
            }
		}
		new szPlayer[MAX_PLAYER_NAME];
		GetPlayerName(playerid, szPlayer, MAX_PLAYER_NAME);
  		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1) {

			new i = PlayerInfo[playerid][pPosedovanjeAuta];
			new vFile[50];
			format(vFile, sizeof(vFile), AUTO_FILE, i);
			if(fexist(vFile)) {
				INI_ParseFile(vFile, "UcitajVozila", .bExtra = true, .extra = i);

				if(strcmp(szPlayer, VoziloInfo[i][vVlasnik], true) == 0) {
					VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
					VoziloInfo[i][vSpawn] = 0;
					VoziloInfo[i][vMod][0] = -1;
					INI_ParseFile(vFile, "UcitajTune", .bExtra = true, .extra = i);
					for(new id = 1; id <= 17; id++)
					{
						if(VoziloInfo[i][vMod][id]!=0) { AddVehicleComponent(VoziloInfo[i][vID],VoziloInfo[i][vMod][id]); }
					}
					if(VoziloInfo[i][vMod][0]>=0) { ChangeVehiclePaintjob(VoziloInfo[i][vID],VoziloInfo[i][vMod][0]); }
				}
			}
		}
		if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
		{
			new i = PlayerInfo[playerid][pPosedovanjeAuta2];
			new vFile[50];
			format(vFile, sizeof(vFile), AUTO_FILE, i);
			if(fexist(vFile))
			{
				INI_ParseFile(vFile, "UcitajVozila", .bExtra = true, .extra = i);
				if(strcmp(szPlayer, VoziloInfo[i][vVlasnik]) == 0) {
					VoziloInfo[i][vID] = CreateVehicle(VoziloInfo[i][vModel],VoziloInfo[i][vPozX],VoziloInfo[i][vPozY],VoziloInfo[i][vPozZ],VoziloInfo[i][vPozA],VoziloInfo[i][vBoja1],VoziloInfo[i][vBoja2],30000);
					VoziloInfo[i][vSpawn] = 0;
					VoziloInfo[i][vMod][0] = -1;
					INI_ParseFile(vFile, "UcitajTune", .bExtra = true, .extra = i);
					for(new id = 1; id <= 17; id++)
					{
						if(VoziloInfo[i][vMod][id]!=0) { AddVehicleComponent(VoziloInfo[i][vID],VoziloInfo[i][vMod][id]); }
					}
					if(VoziloInfo[i][vMod][0]>=0) { ChangeVehiclePaintjob(VoziloInfo[i][vID],VoziloInfo[i][vMod][0]); }
				}
			}
		}
		if(PlayerInfo[playerid][pPosedovanjeMotora] != -1)
		{
			new i = PlayerInfo[playerid][pPosedovanjeMotora];
			new mFile[50];
			format(mFile, sizeof(mFile), MOTOR_FILE, i);
			if(fexist(mFile))
			{
				INI_ParseFile(mFile, "UcitajMotore", .bExtra = true, .extra = i);
				if(strcmp(szPlayer, MotorInfo[i][mVlasnik]) == 0) {
					MotorInfo[i][mID] = CreateVehicle(MotorInfo[i][mModel],MotorInfo[i][mPozX],MotorInfo[i][mPozY],MotorInfo[i][mPozZ],MotorInfo[i][mPozA],MotorInfo[i][mBoja1],MotorInfo[i][mBoja2],30000);
					MotorInfo[i][mSpawn] = 0;
				}
			}
		}
		////////////////////////AVIONI UCITAVANJE////////////////////////////////////////
		if(PlayerInfo[playerid][pPosedovanjeAviona] != -1)
		{
			new i = PlayerInfo[playerid][pPosedovanjeAviona];
			new avFile[50];
			format(avFile, sizeof(avFile), AVION_FILE, i);
			if(fexist(avFile))
			{
				INI_ParseFile(avFile, "UcitajAvione", .bExtra = true, .extra = i);
				if(strcmp(szPlayer, AvionInfo[i][avVlasnik]) == 0)
				{
					AvionInfo[i][avID] = CreateVehicle(AvionInfo[i][avModel],AvionInfo[i][avPozX],AvionInfo[i][avPozY],AvionInfo[i][avPozZ],AvionInfo[i][avPozA],AvionInfo[i][avBoja1],AvionInfo[i][avBoja2],30000);
					AvionInfo[i][avSpawn] = 0;
				}
			}
		}
		//////////////////////PLOVILA UCITAVANJE//////////////////////////////////////////
		if(PlayerInfo[playerid][pPosedovanjePlovila] != -1)
		{
		new i = PlayerInfo[playerid][pPosedovanjePlovila];
		new plFile[50];
		format(plFile, sizeof(plFile), PLOVILA_FILE, i);
		if(fexist(plFile))
		{
		INI_ParseFile(plFile, "UcitajPlovila", .bExtra = true, .extra = i);
		if(strcmp(szPlayer, PlovilaInfo[i][plVlasnik]) == 0) {
		PlovilaInfo[i][plID] = CreateVehicle(PlovilaInfo[i][plModel],PlovilaInfo[i][plPozX],PlovilaInfo[i][plPozY],PlovilaInfo[i][plPozZ],PlovilaInfo[i][plPozA],PlovilaInfo[i][plBoja1],PlovilaInfo[i][plBoja2],30000);
		PlovilaInfo[i][plSpawn] = 0;
		}
		}
		}
        return 1;
        }
fDialog(5000)
{
	new pin = strval(inputtext);
	if(pin == PlayerInfo[playerid][pAdminpin])
	{
		UlogovanProvera[playerid] = 1;
		OnPlayerLoginEx(playerid);
		return 1;
	}
	else
	{
		new szFile[128], szLog[128], szIp[128], string[512], Year, Month, Day;
		getdate(Year, Month, Day);
		GetPlayerIp(playerid, szIp, charsmax(szIp));
		format(szFile, charsmax(szFile), "logs/security_%02d%02d%d.log", Day, Month, Year);
		format(szLog, charsmax(szLog), "INVALID PIN %s | IP: %s", GetName(playerid), szIp);
		Log(szFile, szLog);
	    SCM(playerid, -1, ""ORANGE2"#!: Pogresili ste vas sigurnosni PIN Kod, kikovani ste.");
	    format(string, sizeof(string), ""ORANGE2"#AdmWarn: Administrator %s je pogresio svoj sigurnosni PIN Kod. IP: %s", GetName(playerid), szIp);
	    PosaljiVlasniku(-1,string);
		g_freeze[playerid] = SetTimerEx("KonektKick", 1000, 0, "d", playerid);
	}
	return 1;
}


fDialog(2)
{
    if(UlogovanProvera[playerid] == 1)
    {
		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
		{
			DestroyVehicle(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID]);
			SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta]);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
		{
			DestroyVehicle(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID]);
			SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta2]);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeMotora] != -1)
		{
			DestroyVehicle(MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mID]);
			SacuvajMotor(PlayerInfo[playerid][pPosedovanjeMotora]);
			MotorInfo[PlayerInfo[playerid][pPosedovanjeMotora]][mID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjeAviona] != -1)
		{
			DestroyVehicle(AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avID]);
			SacuvajAvione(PlayerInfo[playerid][pPosedovanjeAviona]);
			AvionInfo[PlayerInfo[playerid][pPosedovanjeAviona]][avID] = -1;
		}
		if(PlayerInfo[playerid][pPosedovanjePlovila] != -1)
		{
			DestroyVehicle(PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plID]);
			SacuvajPlovila(PlayerInfo[playerid][pPosedovanjePlovila]);
			PlovilaInfo[PlayerInfo[playerid][pPosedovanjePlovila]][plID] = -1;
		}
	}
	if(!response)
		return Kick(playerid);

	//SHA256_PassHash(inputtext, saltHush , PI[playerid][Password], 65);
	//SHA256_PassHash(password[], salt[], ret_hash[], ret_hash_len)
	//if(strcmp(inputtext, PlayerInfo[playerid][pPassword], false) == 0)
	if(strcmp(inputtext, PlayerInfo[playerid][pPassword]) != 0)	
	{
		new loginstring[512],loginname[64];
		GetPlayerName(playerid,loginname,sizeof(loginname));
		format(loginstring,sizeof(loginstring),""BELA"Dobro dosao "SRWBOJA"%s "BELA"na "SRWBOJA"Varadero RPG.\n"BELA"Upisite vasu lozinku kako bi nastavili sa igrom\nUpisali ste pogresnu lozinku "SRWBOJA"%d/4 "BELA"puta.\n\n"SRWBOJA"* Imate 2 minuta da unesete tacnu lozinku.", loginname, LoginPokusaji[playerid]);
		SPD(playerid,2,DIALOG_STYLE_PASSWORD,"LOGIN",loginstring,"Login","Izlaz");
		LoginPokusaji[playerid] += 1;
		//new string[128];
		//format(string, charsmax(string), "[V:RPG] "CRVENA"Pogresna lozinka | Preostalo Pokusaja: %d/4!",LoginPokusaji[playerid]); //conver
		//SCM(playerid,-1, string);
		if(LoginPokusaji[playerid] >= 4) 
		{
			StatusKonekta(playerid, 6);
		}		
	}
	else
	{
		new q[64];
		mysql_format(SQL, q, sizeof(q), "SELECT * FROM `players` WHERE `Name` = '%e' LIMIT 1", GetName(playerid));
		mysql_tquery(SQL, q, "_sqlLoadAccount", "i", playerid);		

		if(PlayerInfo[playerid][pAdmin] >= 1)
			ShowPlayerDialog(playerid, 5000, DIALOG_STYLE_PASSWORD, "PIN KOD", ""BELA"Da bi nastavili sa igrom morate upisati vas admin pin:", "Login", "Izlaz");
		else 
		{
			UlogovanProvera[playerid] = 1;
			OnPlayerLoginEx(playerid);
		}
	}
	return 1;
}
forward PlayerCollisionChecker(playerid, vehicleid);
public PlayerCollisionChecker(playerid, vehicleid)
{
	new Float:newhp;
	GetVehicleHealth(vehicleid, newhp);
	if(PlayerInfo[playerid][pAdmin] > 1)
	{
	return 1;
	}
	if(prevVehicleHealth[playerid] - newhp > 0)
	{
	OnPlayerCollide(playerid, vehicleid, prevVehicleHealth[playerid] - newhp);
	}
	prevVehicleHealth[playerid] = newhp;
	return 1;
}
forward IgracevaBrzina(playerid,bool:kmh);
public IgracevaBrzina(playerid,bool:kmh)
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz); else GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}
forward OnPlayerCollide(playerid, vehicleid, Float:vehicle_health_loss);
public OnPlayerCollide(playerid, vehicleid, Float:vehicle_health_loss)
{
new Float:pHP;
new speed = IgracevaBrzina(playerid, true);
if(UsingBelt[playerid]==0)
{
if(speed <= 20)
{
return 1;
}
else if(speed >= 20 && speed < 59)
{
GetPlayerHealth(playerid,pHP);
return SetPlayerHealth(playerid,pHP-8);
}
else if(speed >= 60)
{
GetPlayerHealth(playerid,pHP);
return SetPlayerHealth(playerid,pHP-10);
}
}
else if(UsingBelt[playerid]==1)
{
if(speed <= 20)
{
return 1;
}
else if(speed >= 20 && speed < 59)
{
GetPlayerHealth(playerid,pHP);
return SetPlayerHealth(playerid,pHP-2);
}
else if(speed >= 60)
{
GetPlayerHealth(playerid,pHP);
return SetPlayerHealth(playerid,pHP-4);
}
}
return 1;
}
UcitajGVozila()
{
   new FileName[128];
   for(new i = 0; i < MAX_VEHICLES; i++)
   {
	   	format(FileName, sizeof(FileName), "/Gepek/Vozilo_%d.ini", i);
	   	if(fexist(FileName))
    	{
            GepekInfo[i][gNovac] = dini_Int(FileName, "Novac" );
            GepekInfo[i][gOruzije] = dini_Int(FileName, "Oruzije" );
            GepekInfo[i][gMunicija] = dini_Int(FileName, "Municija" );
		}
	}
}
/*function: RekordTimer(playerid)
{
    new string1[512];
    format(string1, 512, "ONLINE:_%d", Konektovano());
    TextDrawSetString(TDEditor_TD[28], string1);
    new string2[64];
    format(string2, sizeof(string2), "REKORD:_%d", rekordigraca);
    TextDrawSetString(TDEditor_TD[29], string2);
    onlinepl++;
    if(Konektovano() > rekordigraca)
    {
        rekordigraca = Konektovano();
        new string[128];
        format(string,sizeof(string),""SRWBOJA"[REKORD]: "BELA"Oboren je stari Rekord Online igraca ! Novi iznosi "SRWBOJA"%d "BELA"igraca !",rekordigraca);
        SCMTA(-1,string);
        format(string2, sizeof(string2), "REKORD:_%d", rekordigraca);
        TextDrawSetString(TDEditor_TD[29], string2);
        SacuvajRekord();
    }
    return 1;
}*/
////////////////////////////////////////////////////////////////////////////////
forward DosadasnjiRekord();
public DosadasnjiRekord()
{
    new strFromFile[24], arrCoords[6][5], File: file = fopen("rekord.txt", io_read);
    if (file)
    {
        fread(file, strFromFile);
        razdvoji(strFromFile, arrCoords, ',');
        rekordigraca = strval(arrCoords[0]);
        fclose(file);
    }
    return 1;
}
forward SacuvajRekord();
public SacuvajRekord()
{
    new coordsstring[24];
    format(coordsstring, sizeof(coordsstring), "%d", rekordigraca);
    new File: file = fopen("rekord.txt", io_write);
    fwrite(file, coordsstring);
    fclose(file);
    return 1;
}

forward Menjacnica();
public Menjacnica()
{
	new stringase[300];
	Berza();
	format(stringase, sizeof(stringase), "BERZA: ZLATO Kupovna cena:%d || Prodajna cena:%d!.", KupovnaCena, ProdajnaCena);
    SCMTA(-1, stringase);
	return 1;
}
forward Konektovano();
public Konektovano()
{
	new Connected;
	foreach(new i:Player) if(IsPlayerConnected(i) && !IsPlayerNPC(i)) Connected++;
	return Connected;
}
razdvoji(const strsrc[], strdest[][], delimiter)
{
    new i, li;
    new aNum;
    new len;
    while(i <= strlen(strsrc))
    {
        if(strsrc[i] == delimiter || i == strlen(strsrc))
        {
            len = strmid(strdest[aNum], strsrc, li, i, 128);
            strdest[aNum][len] = 0;
            li = i+1;
            aNum++;
        }
        i++;
    }
    return 1;
}
SacuvajVoziloo(id)
{
    new FileName[128];
   	format(FileName, sizeof(FileName), "/Gepek/Vozilo_%d.ini", id);
    if(fexist(FileName))
    {
		dini_IntSet(FileName, "Novac", GepekInfo[id][gNovac]);
		dini_IntSet(FileName, "Oruzije", GepekInfo[id][gOruzije]);
    	dini_IntSet(FileName, "Municija", GepekInfo[id][gMunicija]);
	}
}
fDialog(1338)
{
        if(response)
        {
                if(listitem == 0) //Paintjobs
                {
                        SPD(playerid, 1339, DIALOG_STYLE_LIST, "Select a Paintjob", "Paint Job 1\nPaint Job 2\nPaint Job 3\nBACK", "Select", "Exit");
                }
                if(listitem == 1) //Colors
                {
                        SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");
                }
                if(listitem == 2) //Exhausts
                {
                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                }
                if(listitem == 3) //Front Bumpers
                {
                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                }
                if(listitem == 4) //Rear Bumpers
                {
                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                }
                if(listitem == 5) //Roofs
                {
                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                }
                if(listitem == 6) //Spoilers
                {
                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                }
                if(listitem == 7) //SideSkirts
                {
                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                }
                if(listitem == 8) //Bullbars
                {
                        SPD(playerid, 1347, DIALOG_STYLE_LIST, "Select a Bullbar", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\nBACK", "Select", "Exit");
                }
                if(listitem == 9) //Wheels
                {
                        SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 10) //Car stereo
                {
                        SPD(playerid, 1349, DIALOG_STYLE_LIST, "Select a Car Stereo.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nBACK", "Select", "Exit");
                }
                if(listitem == 11) //Tune car menu 2
                {
                        SPD(playerid, 1350, DIALOG_STYLE_LIST, "Tune car menu", "Hydraulics\nNitro x10\nRepair Car\nBACK", "Select", "Exit");
                }
                if(listitem == 12) //Wheels2
                {
                        SPD(playerid, 1351, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
   }
}

fDialog(1339) //Paintjobs
{
	if(response)
	{
		new vehicleid = -1;
		if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
		{
			if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
			{
				vehicleid = PlayerInfo[playerid][pPosedovanjeAuta];
			}
		}
		if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
		{
			if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
			{
				vehicleid = PlayerInfo[playerid][pPosedovanjeAuta2];
			}
		}
		if(listitem == 0)
		{
			if(pmodelid[playerid] == 562 ||
			pmodelid[playerid] == 565 ||
			pmodelid[playerid] == 559 ||
			pmodelid[playerid] == 561 ||
			pmodelid[playerid] == 560 ||
			pmodelid[playerid] == 575 ||
			pmodelid[playerid] == 534 ||
			pmodelid[playerid] == 567 ||
			pmodelid[playerid] == 536 ||
			pmodelid[playerid] == 535 ||
			pmodelid[playerid] == 576 ||
			pmodelid[playerid] == 558)
			{
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,0);
					VoziloInfo[vehicleid][vMod][0] = 0;
					new vFile[80];
					format(vFile, sizeof(vFile), AUTO_FILE, vehicleid);
					new INI:File = INI_Open(vFile);
					INI_WriteInt(File,"Tune[0]",0);
					INI_Close(File);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added paintjob number 1 to the car.");
					SPD(playerid, 1339, DIALOG_STYLE_LIST, "Select a Paintjob", "Paint Job 1\nPaint Job 2\nPaint Job 3\nBACK", "Select", "Exit");
			}
			else
			{
			   SendClientMessage(playerid,0xAA3333AA,"[ERROR]: Paintjob is only for Wheel Arch Angel and Loco Low Co. types of cars!");
			   SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\n\nCar Stereo\nNext page", "Select", "Exit");
			}
		}
		if(listitem == 1)
		{
			if(pmodelid[playerid] == 562 ||
			pmodelid[playerid] == 565 ||
			pmodelid[playerid] == 559 ||
			pmodelid[playerid] == 561 ||
			pmodelid[playerid] == 560 ||
			pmodelid[playerid] == 575 ||
			pmodelid[playerid] == 534 ||
			pmodelid[playerid] == 567 ||
			pmodelid[playerid] == 536 ||
			pmodelid[playerid] == 535 ||
			pmodelid[playerid] == 576 ||
			pmodelid[playerid] == 558)
			{
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,1);
					VoziloInfo[vehicleid][vMod][0] = 1;
					new vFile[80];
					format(vFile, sizeof(vFile), AUTO_FILE, vehicleid);
					new INI:File = INI_Open(vFile);
					INI_WriteInt(File,"Tune[0]",1);
					INI_Close(File);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added paintjob number 2 to the car.");
					SPD(playerid, 1339, DIALOG_STYLE_LIST, "Select a Paintjob", "Paint Job 1\nPaint Job 2\nPaint Job 3\nBACK", "Select", "Exit");
			}
			else
			{
			   SendClientMessage(playerid,0xAA3333AA,"[ERROR]: Paintjob is only for Wheel Arch Angel and Loco Low Co. types of cars!");
			   SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
			}
		}
		if(listitem == 2)
		{
			if(pmodelid[playerid] == 562 ||
			pmodelid[playerid] == 565 ||
			pmodelid[playerid] == 559 ||
			pmodelid[playerid] == 561 ||
			pmodelid[playerid] == 560 ||
			pmodelid[playerid] == 575 ||
			pmodelid[playerid] == 534 ||
			pmodelid[playerid] == 567 ||
			pmodelid[playerid] == 536 ||
			pmodelid[playerid] == 535 ||
			pmodelid[playerid] == 576 ||
			pmodelid[playerid] == 558)
			{
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,2);
					VoziloInfo[vehicleid][vMod][0] = 2;
					new vFile[80];
					format(vFile, sizeof(vFile), AUTO_FILE, vehicleid);
					new INI:File = INI_Open(vFile);
					INI_WriteInt(File,"Tune[0]",2);
					INI_Close(File);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added paintjob number 3 to the car.");
					SPD(playerid, 1339, DIALOG_STYLE_LIST, "Select a Paintjob", "Paint Job 1\nPaint Job 2\nPaint Job 3\nBACK", "Select", "Exit");
			}
			else
			{
			   SendClientMessage(playerid,0xAA3333AA,"[ERROR]: Paintjob is only for Wheel Arch Angel and Loco Low Co. types of cars!");
			   SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
			}
		}
		if(listitem == 3)
		{
			SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
		}
	}
}

fDialog(1340) //Colours
{
        if(response)
        {
                if(listitem == 0)
                {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,0,0);//Black
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to black.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");

                }
                if(listitem == 1)
                {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,1,1);//White
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to white.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");

                }
                if(listitem == 2)
                {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,3,3);//Red
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to red.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");

                }
                if(listitem == 3)
                {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,79,79); //Blue
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to blue.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");

                }
                if(listitem == 4)
                {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,86,86);//Green
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to green.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");

                }
                if(listitem == 5)
                {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,6,6);//Yellow
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to yellow.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");

                }
                if(listitem == 6)
           {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,126,126);//Pink
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to pink.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");
                }
                if(listitem == 7)
                {
                                new car = GetPlayerVehicleID(playerid);
                                ChangeVehicleColor(car,66,66);//Brown
                                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You painted your car to brown.");
                                SPD(playerid, 1340, DIALOG_STYLE_LIST, "Select a Color", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\nBACK", "Select", "Exit");
                }
                if(listitem == 8)
                {
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
        }
}

fDialog(1341) //Exhausts
{
        if(response)
        {
                if(listitem == 0)//Wheel Arch Cars Alien Exausts
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1034);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Exhaust component on Elegy.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1046);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Exhaust component on Flash.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1065);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Exhaust component on Jetser.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1064);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Exhaust component on Stratum.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1028);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Exhaust component on Sultan.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1089);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Exhaust component on Uranus.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 1)//Wheel Arch Cars X-Flow Exausts
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1037);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Exhaust component on Elegy.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1045);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Exhaust component on Flash.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1066);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow exaust component on Jester.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1059);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Exhaust component on Stratum.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1029);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Exhaust component on Sultan.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1092);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Exhaust component on Uranus.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 2)//Locos Low Co. Cars Chromer Exausts
                {
                        if(pmodelid[playerid] == 575 ||
                        pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536 ||
                        pmodelid[playerid] == 576 ||
                        pmodelid[playerid] == 535)
                        {
                                if(pmodelid[playerid] == 575)
                                {
                                        AddTune(playerid,1044);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer Exhaust component on Brodway.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1126);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer Exhaust component on Remington.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 567)
                                {
                                        AddTune(playerid,1129);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer Exhaust component on Savanna.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                        AddTune(playerid,1104);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer Exhaust component on Blade.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1113);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer Exhaust component on Slamvan.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 576)
                                {
                                        AddTune(playerid,1136);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer Exhaust component on Tornado.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 3)//Locos Low Co. Cars Salmin Exausts
                {
                        if(pmodelid[playerid] == 575 ||
                        pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536 ||
                        pmodelid[playerid] == 576 ||
                        pmodelid[playerid] == 535)
                        {
                                if(pmodelid[playerid] == 575)
                                {
                                        AddTune(playerid,1043);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO] You have succesfully added Locos Low Slamin Exhaust component on Brodway.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1127);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO] You have succesfully added Locos Low Slamin Exhaust component on Remingon.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 567)
                                {
                                        AddTune(playerid,1132);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO] You have succesfully added Locos Low Slamin Exhaust component on Savanna.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                        AddTune(playerid,1105);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO] You have succesfully added Locos Low Slamin Exhaust component on Blade.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }

                                else if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1114);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO] You have succesfully added Locos Low Slamin Exhaust component on Slamvan.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }

                                else if(pmodelid[playerid] == 576)
                                {
                                        AddTune(playerid,1135);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO] You have succesfully added Locos Low Slamin Exhaust component on Tornado.");
                                        SPD(playerid, 1341, DIALOG_STYLE_LIST, "Select a Exhaust", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 4)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
        }
}

fDialog(1342)//Front Bumpers
{
        if(response)
        {
                if(listitem == 0)//Wheel Arch Cars Alien Front Bumper
                {
                           if(pmodelid[playerid] == 562 ||
                           pmodelid[playerid] == 565 ||
                           pmodelid[playerid] == 559 ||
                           pmodelid[playerid] == 561 ||
                           pmodelid[playerid] == 560)
                           {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1171);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien front bumper component on Elegy.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1153);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien front bumper component on Flash.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1160);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien front bumper component on Jester.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1155);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien front bumper component on Stratum.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1169);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien front bumper component on Sultan.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1166);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien front bumper component on Uraus.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 1)//Wheel Arch Cars X-Flow Front Bumper
                {
                           if(pmodelid[playerid] == 562 ||
                           pmodelid[playerid] == 565 ||
                           pmodelid[playerid] == 559 ||
                           pmodelid[playerid] == 561 ||
                           pmodelid[playerid] == 560)
                           {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1172);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow front bumper component on Elegy.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1152);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow front bumper component on Flash.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1173);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow front bumper component on Jester.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1157);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow front bumper component on Stratum.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1170);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow front bumper component on Sultan.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1165);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow front bumper component on Uranus.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 2)//Locos Low Co. Car Chromer Front Bumper
                {
                        if(pmodelid[playerid] == 575 ||
                        pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536 ||
                        pmodelid[playerid] == 576 ||
                        pmodelid[playerid] == 535)
                        {
                                if(pmodelid[playerid] == 575)
                                {
                                        AddTune(playerid,1174);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer front bumper component on Brodway.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1179);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer front bumper component on Remington.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 567)
                                {
                                        AddTune(playerid,1189);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]:You have succesfully added Locos Low Chromer front bumper component on Savanna.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                        AddTune(playerid,1182);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer front bumper component on Blade.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1115);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer front bumper component on Slamvan.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 576)
                                {
                                        AddTune(playerid,1191);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer front bumper component on Tornado.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 3)//Locos Low Co. Salmin Front Bumper
                {
                        if(pmodelid[playerid] == 575 ||
                        pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536 ||
                        pmodelid[playerid] == 576 ||
                        pmodelid[playerid] == 576)
                        {
                                if(pmodelid[playerid] == 575)
                                {
                                        AddTune(playerid,1175);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin front bumper component on Brodway.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1185);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin front bumper component on Remington.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 567)
                                {
                                        AddTune(playerid,1188);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin front bumper component on Savanna.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                        AddTune(playerid,1181);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin front bumper component on Blade.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1116);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin front bumper component on Slamvan.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 576)
                                {
                                        AddTune(playerid,1190);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin front bumper component on Tornado.");
                                        SPD(playerid, 1342, DIALOG_STYLE_LIST, "Select a Front Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 4)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
        }
        return 1;
}

fDialog(1343)//Rear Bumpers
{
        if(response)
        {
                if(listitem == 0)//Wheel Arch Cars Alien Rear Bumper
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1149);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien rear bumper component on Elegy.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1150);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien rear bumper component on Flash.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1159);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien rear bumper component on Jester.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1154);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien rear bumper component on Stratum.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1141);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien rear bumper component on Sultan.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1168);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien rear bumper component on Uranus.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 1)//Wheel Arch Cars X-Flow Rear Bumper
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1148);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow rear bumper component on Elegy.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1151);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow rear bumper component on Flash.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1161);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow rear bumper component on Jester.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1156);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow rear bumper component on Stratum.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1140);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow rear bumper component on Sultan.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1167);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch  X-Flow rear bumper component on Uranus.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 2)//Locos Low Co. Cars Chromer Rear Bumper
                {
                        if(pmodelid[playerid] == 575 ||
                        pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536 ||
                        pmodelid[playerid] == 576 ||
                        pmodelid[playerid] == 535)
                        {
                                if(pmodelid[playerid] == 575)
                                {
                                        AddTune(playerid,1176);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer rear bumper component on Brodway.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1180);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer rear bumper component on Remington.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 567)
                                {
                                        AddTune(playerid,1187);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer rear bumper component on Savanna.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                        AddTune(playerid,1184);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer rear bumper component on Blade.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1109);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer rear bumper component on Slamvan.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 576)
                                {
                                        AddTune(playerid,1192);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chromer rear bumper component on Tornado.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 3)//Locos Low Co. Cars Salmin Rear Bumper
                {
                        if(pmodelid[playerid] == 575 ||
                        pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536 ||
                        pmodelid[playerid] == 576 ||
                        pmodelid[playerid] == 535)
                        {
                                if(pmodelid[playerid] == 575)
                                {
                                        AddTune(playerid,1177);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin rear bumper component on Brodway.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1178);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin rear bumper component on Remington.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 567)
                                {
                                        AddTune(playerid,1186);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin rear bumper component on Savanna.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                        AddTune(playerid,1183);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin rear bumper component on Blade.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }

                                else if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1110);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin rear bumper component on Slamvan.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }

                                else if(pmodelid[playerid] == 576)
                                {
                                        AddTune(playerid,1193);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Slamin rear bumper component on Tornado.");
                                        SPD(playerid, 1343, DIALOG_STYLE_LIST, "Select a Rear Bumper", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 4)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
        }
        return 1;
}

fDialog(1344)//Roofs
{
        if(response)
        {
                if(listitem == 0)//Wheel Arch Cars Alien Roof Vent
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1035);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien roof vent component on Elegy.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1054);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien roof vent component on Flash.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1067);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien roof vent component on Jester.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1055);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien roof vent component on Stratum.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1032);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien roof vent component on Sultan.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1088);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien roof vent component on Uranus.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 1)//Wheel Arch Cars X-Flow Roof Vent
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1035);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow roof vent component on Elegy.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1053);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow roof vent component on Flash.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1068);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow roof vent component on Jester.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1061);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow roof vent component on Stratum.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1033);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow roof vent component on Sultan.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1091);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow roof vent component on Uranus.");
                                        SPD(playerid, 1344, DIALOG_STYLE_LIST, "Select a Roof", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 2)//Locos Low Co. Cars Hardtop Roof
                {
                        if(pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536)
                        {
                                if(pmodelid[playerid] == 567)
                                {
                                        SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
								 SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types Savanna and Blade!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 3)//Locos Low Co. Cars Softtop Roof
                {
                         if(pmodelid[playerid] == 567 ||
                        pmodelid[playerid] == 536)
                        {
                                if(pmodelid[playerid] == 567)
                                {
                                         SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                         SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types Savanna and Blade!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 4)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
         }
}

fDialog(1345)//Spoilers
{
        if(response)
        {
                if(listitem == 0)//Wheel Arch Cars Alien Spoilers
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1147);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Spoilers component on Elegy.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1049);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Spoilers component on Flash.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1162);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Spoilers component on Jester.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1158);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Spoilers component on Stratum.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1138);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Spoilers component on Sultan.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1164);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Spoilers component on Uranus.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 1)//Wheel Arch Cars X-Flow Spoilers
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1146);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Spoilers component on Elegy.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1150);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Spoilers component on Flash.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1158);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Spoilers component on Jester.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1060);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Spoilers component on Stratum.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1139);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Spoilers component on Sultan.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1163);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Spoilers component on Uranus.");
                                        SPD(playerid, 1345, DIALOG_STYLE_LIST, "Select a Spoiler", "Alien Spoiler\nX-Flow Spoiler\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to X-Flow Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 2)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
         }
}

fDialog(1346)//Sideskirts
{
        if(response)
        {
                if(listitem == 0)//Wheel Arch Cars Alien Sideskirts
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1036);
                                        AddTune(playerid,1040);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Side Skirts component on Elegy.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1047);
                                        AddTune(playerid,1051);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Sideskirts vent component on Flash.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1069);
                                        AddTune(playerid,1071);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Side Skirts component on Jester.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1056);
                                        AddTune(playerid,1062);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Side Skirts component on Stratum.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1026);
                                        AddTune(playerid,1027);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Side Skirts bumper component on Sultan.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1090);
                                        AddTune(playerid,1094);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch Alien Side Skirts component on Uranus.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 1)//Wheel Arch Cars X-Flow Sideskirts
                {
                        if(pmodelid[playerid] == 562 ||
                        pmodelid[playerid] == 565 ||
                        pmodelid[playerid] == 559 ||
                        pmodelid[playerid] == 561 ||
                        pmodelid[playerid] == 560)
                        {
                                if(pmodelid[playerid] == 562)
                                {
                                        AddTune(playerid,1039);
                                        AddTune(playerid,1041);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Side Skirts component on Elegy.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 565)
                                {
                                        AddTune(playerid,1048);
                                        AddTune(playerid,1052);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Side Skirts component on Flash.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 559)
                                {
                                        AddTune(playerid,1070);
                                        AddTune(playerid,1072);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Side Skirts component on Jester.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 561)
                                {
                                        AddTune(playerid,1057);
                                        AddTune(playerid,1063);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Side Skirts component on Stratum.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 560)
                                {
                                        AddTune(playerid,1031);
                                        AddTune(playerid,1030);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Side Skirts component on Sultan.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 558)
                                {
                                        AddTune(playerid,1093);
                                        AddTune(playerid,1095);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wheel Arch X-Flow Side Skirts component on Uranus.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Wheel Arch Angels Car types!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 2)//Locos Low Co. Cars Chrome Strip Sideskirts
                {
                         if(pmodelid[playerid] == 575 ||
                           pmodelid[playerid] == 536 ||
                           pmodelid[playerid] == 576 ||
                           pmodelid[playerid] == 567)
                           {
                                if(pmodelid[playerid] == 575)
                                {
                                        AddTune(playerid,1042);
                                        AddTune(playerid,1099);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Strip Side Skirts component on Brodway.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 567)
                                {
                                        AddTune(playerid,1102);
                                        AddTune(playerid,1133);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Strip Side Skirts component on Savanna.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 576)
                                {
                                        AddTune(playerid,1134);
                                        AddTune(playerid,1137);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Strip Side Skirts component on Tornado.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                else if(pmodelid[playerid] == 536)
                                {
                                        AddTune(playerid,1108);
                                        AddTune(playerid,1107);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Strip Side Skirts component on Blade.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car types Brodway, Savanna Tornado and Blade!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 3)//Locos Low Co. Cars Chrome Flames Sideskirts
                {
                        if(pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 534)
                        {
                                if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1122);
                                        AddTune(playerid,1101);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Flames Side Skirts component on Remington.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Remington!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 4)//Locos Low Co. Cars Chrome Arches Sideskirts
                {
                        if(pmodelid[playerid] == 534 ||
                        pmodelid[playerid] == 534)
                        {
                                if(pmodelid[playerid] == 534)
                                {
                                        AddTune(playerid,1106);
                                        AddTune(playerid,1124);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Arches Side Skirts component on Remington.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Remington!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 5)//Locos Low Co. Cars Chrome Trim Sideskirts
                {
                        if(pmodelid[playerid] == 535)

                        {
                                if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1118);
                                        AddTune(playerid,1120);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Trim Side Skirts component on Slamvan.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Slamvan!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 6)//Locos Low Co. Cars Chrome Wheelcovers Sideskirts
                {
                        if(pmodelid[playerid] == 535)

                        {
                                if(pmodelid[playerid] == 535)
                                {
                                        AddTune(playerid,1119);
                                        AddTune(playerid,1121);
                                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                                        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Locos Low Chrome Wheelcovers component on Slamvan.");
                                        SPD(playerid, 1346, DIALOG_STYLE_LIST, "Select a SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nBACK", "Select", "Exit");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Slamvan!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 7)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
         }
}
fDialog(1347)//Bullbars
{
        if(response)
        {
                if(listitem == 0)//Locos Low Co. Cars Chrome Grill
                {
                        if(pmodelid[playerid] == 534)

                        {
                                if(pmodelid[playerid] == 534)
                                {
          						SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Remington!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 1)//Locos Low Co. Cars Chrome Bars
                {
                         if(pmodelid[playerid] == 534)

                        {
                                if(pmodelid[playerid] == 534)
                                {
                          	     SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Remington!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 2)//Locos Low Co. Cars Chrome Lights
                {
                        if(pmodelid[playerid] == 534)

                        {
                                if(pmodelid[playerid] == 534)
                                {
                                SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Remington!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 3)//Locos Low Co. Cars Chrome Bullbar
                {
                        if(pmodelid[playerid] == 535)

                        {
                                if(pmodelid[playerid] == 535)
                                {
                                SCM(playerid, -1, "Nije moguce staviti ovu komponentu!");
                                }
                                }
                                else
                                {
                                SendClientMessage(playerid,0xAA3333AA,"[ERROR]: You can only add this component to Locos Low Car type Slamvan!");
                                SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                                }
                }
                if(listitem == 4)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
   }
}

fDialog(1348)//Wheels
{
        if(response)
        {
                if(listitem == 0)//Offroad
                {
                         AddTune(playerid,1025);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO] You have succesfully added Offroad Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 1)//Mega
                {
                         AddTune(playerid,1074);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Mega Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 2)//Wires
                {
                         AddTune(playerid,1076);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Wires Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 3)//Twist
                {
                         AddTune(playerid,1078);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Twist Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 4)//Groove
                {
                         AddTune(playerid,1081);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Groove Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 5)//Import
                {
                         AddTune(playerid,1082);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Import Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 6)//Atomic
                {
                         AddTune(playerid,1085);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Atomic Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 7)//Ahab
                {
                         AddTune(playerid,1096);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Ahab Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 8)//Virtual
                {
                         AddTune(playerid,1097);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Virtual Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 9)//Access
                {
                         AddTune(playerid,1098);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Access Wheels.");
                         SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
                if(listitem == 10)//Next page
                {
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 11)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }

        }
}

fDialog(1349)//Car Stereo
{
        if(response)
        {
                if(listitem == 0)//Bass Boost
                {
                         AddTune(playerid,1086);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Stereo Bass Bost system.");
                         SPD(playerid, 1349, DIALOG_STYLE_LIST, "Select a Car Stereo.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nBACK", "Select", "Exit");
                }
                if(listitem == 1)//Super Bass Boost
                {
                         AddTune(playerid,1086);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Stereo Super Bass Bost system.");
                         SPD(playerid, 1349, DIALOG_STYLE_LIST, "Select a Car Stereo.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nBACK", "Select", "Exit");
                }
                if(listitem == 2)//Ultra Bass Boost
                {
                         AddTune(playerid,1086);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Stereo Ultra Bass Bost system.");
                         SPD(playerid, 1349, DIALOG_STYLE_LIST, "Select a Car Stereo.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nBACK", "Select", "Exit");
                }
                if(listitem == 3)//King Bass Boost
                {
                         AddTune(playerid,1086);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added King Stereo Bass Bost system.");
                         SPD(playerid, 1349, DIALOG_STYLE_LIST, "Select a Car Stereo.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nBACK", "Select", "Exit");
                }
                if(listitem == 4)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
        }
}

fDialog(1350)//Tune car menu 2
{
        if(response)
        {
                if(listitem == 0)//Hydraulics
                {
                         AddTune(playerid,1087);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Hydraulics to car.");
                         SPD(playerid, 1350, DIALOG_STYLE_LIST, "Tune car menu", "Hydraulics\nNitro x10\nRepair Car\nBACK", "Select", "Exit");
                }
                if(listitem == 1)//Nitro x10
                {
                         AddTune(playerid,1010);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added 10x Nitro to car.");
                         SPD(playerid, 1350, DIALOG_STYLE_LIST, "Tune car menu", "Hydraulics\nNitro x10\nRepair Car\nBACK", "Select", "Exit");
                }
                if(listitem == 2)//Repair Car
                {
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Nema hleba bez motike!!! ");
                         SPD(playerid, 1350, DIALOG_STYLE_LIST, "Tune car menu", "Hydraulics\nNitro x10\nRepair Car\nBACK", "Select", "Exit");
                }
                if(listitem == 3)//BACK
                {
                         SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
                }
        }
}

fDialog(1357)//Wheels 2
{
        if(response)
        {
                if(listitem == 0)//Trance
                {
                         AddTune(playerid,1084);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Trance Wheels.");
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 1)//Shadow
                {
                         AddTune(playerid,1073);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Shadow Wheels.");
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 2)//Rimshine
                {
                         AddTune(playerid,1075);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Rimshine Wheels.");
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 3)//Classic
                {
                         AddTune(playerid,1077);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Classic Wheels.");
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 4)//Cutter
                {
                         AddTune(playerid,1079);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Cutter Wheels.");
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 5)//Switch
                {
                         AddTune(playerid,1080);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Switch Wheels.");
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 6)//Dollar
                {
                         AddTune(playerid,1083);
                         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                         SendClientMessage(playerid,0xFFFF00AA,"[INFO]: You have succesfully added Dollar Wheels.");
                         SPD(playerid, 1357, DIALOG_STYLE_LIST, "Select a Wheel type", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nBACK", "Select", "Exit");
                }
                if(listitem == 7)//BACK
                {
                        SPD(playerid, 1348, DIALOG_STYLE_LIST, "Select a Wheel type", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nNext Page\nBACK", "Select", "Exit");
                }
         }
}
CMD:tunecar(playerid, params[])
{
	#pragma unused params
	//#pragma unused help
    if(!PlayerToPoint(5.0,playerid,2534.2839,-1544.9838,26.0105)){ SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF}Niste na mestu za tuniranje vozila !");return 1;}
	SPD(playerid, 1338, DIALOG_STYLE_LIST, "Tune car menu","Paint Jobs\nColors\nExhausts\nFront Bumper\nRear Bumper\nRoof\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nNext page", "Select", "Exit");
	return 1;
}
CMD:skinitune(playerid, params[])
{
	new string[256];
	if(!PlayerToPoint(5.0,playerid,2534.0623,-1552.2810,25.5523)){ SendClientMessage(playerid, -1, "{FF0000}[GRESKA]{FFFFFF}Niste na mestu za tuniranje vozila !");return 1;}
	new vehicleid = -1;
	if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
		{
			vehicleid = PlayerInfo[playerid][pPosedovanjeAuta];
		}
	}
	if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
		{
			vehicleid = PlayerInfo[playerid][pPosedovanjeAuta2];
		}
	}
	if(vehicleid == -1) return 1;
	new voz = GetPlayerVehicleID(playerid);
	for(new i = 1; i <= 17; i++)
	{
		if(GetVehicleComponentInSlot(voz, GetVehicleComponentType(VoziloInfo[vehicleid][vMod][i])) == VoziloInfo[vehicleid][vMod][i])
		{
			RemoveVehicleComponent(voz, VoziloInfo[vehicleid][vMod][i]);
		}
		VoziloInfo[vehicleid][vMod][i] = 0;
		VoziloInfo[vehicleid][vMod][0] = -1;
		new vFile[80];
		format(vFile, sizeof(vFile), AUTO_FILE, vehicleid);
		new INI:File = INI_Open(vFile);
		format(string, sizeof(string),"Tune[%i]",i);
		INI_RemoveEntry(File,"Tune[0]");
		INI_RemoveEntry(File,string);
		INI_Close(File);
	}
	return 1;
}
AddTune(playerid, mod)
{
	new vehicleid = -1;
	if(PlayerInfo[playerid][pPosedovanjeAuta] != -1)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])
		{
			vehicleid = PlayerInfo[playerid][pPosedovanjeAuta];
		}
	}
	if(PlayerInfo[playerid][pPosedovanjeAuta2] != -1)
	{
		if(GetPlayerVehicleID(playerid) == VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])
		{
			vehicleid = PlayerInfo[playerid][pPosedovanjeAuta2];
		}
	}
	if(!IsComponentidCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)), mod)) return 1;
	AddVehicleComponent(GetPlayerVehicleID(playerid), mod);
	new i, id = -1, string[10];
	for(i=0; i<20; i++)
	{
	    if(spoiler[i][0]==mod)
		{
			VoziloInfo[vehicleid][vMod][1] = mod;
			id = 1;
		}
	}
	for(i=0; i<3; i++)
	{
	    if(nitro[i][0]==mod)
		{
			VoziloInfo[vehicleid][vMod][2] = mod;
			id = 2;
		}
	}
	for(i=0; i<23; i++)
	{
	    if(fbumper[i][0]==mod)
   		{
			VoziloInfo[vehicleid][vMod][3] = mod;
			id = 3;
		}
	}
	for(i=0; i<22; i++)
	{
	    if(rbumper[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][4] = mod;
			id = 4;
		}
	}
	for(i=0; i<29; i++)
	{
	    if(exhaust[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][5] = mod;
			id = 5;
		}
	}
	for(i=0; i<2; i++)
	{
	    if(bventr[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][6] = mod;
			id = 6;
		}
	}
	for(i=0; i<2; i++)
	{
	    if(bventl[i][0]==mod)
        {
			VoziloInfo[vehicleid][vMod][7] = mod;
			id = 7;
		}
	}
	for(i=0; i<4; i++)
	{
	    if(bscoop[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][8] = mod;
			id = 8;
		}
	}
	for(i=0; i<13; i++)
	{
	    if(rscoop[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][9] = mod;
			id = 9;
		}
	}
	for(i=0; i<21; i++)
	{
	    if(lskirt[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][10] = mod;
			id = 10;
		}
	}
	for(i=0; i<21; i++)
	{
	    if(rskirt[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][11] = mod;
			id = 11;
		}
	}
	if(hydraulics[0][0]==mod)
	{
		VoziloInfo[vehicleid][vMod][12] = mod;
		id = 12;
	}
	if(base2[0][0]==mod)
	{
		VoziloInfo[vehicleid][vMod][13] = mod;
		id = 13;
	}
	for(i=0; i<2; i++)
	{
	    if(rbbars[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][14] = mod;
			id = 14;
		}
	}
	for(i=0; i<2; i++)
	{
	    if(fbbars[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][15] = mod;
			id = 15;
		}
	}
	for(i=0; i<17; i++)
	{
	    if(wheels[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][16] = mod;
			id = 16;
		}
	}
	for(i=0; i<2; i++)
	{
	    if(tunelights[i][0]==mod)
	    {
			VoziloInfo[vehicleid][vMod][17] = mod;
			id = 17;
		}
	}
	new vFile[80];
    format(vFile, sizeof(vFile), AUTO_FILE, vehicleid);
	new INI:File = INI_Open(vFile);
	format(string, sizeof(string),"Tune[%i]",id);
	INI_WriteInt(File,string,VoziloInfo[vehicleid][vMod][id]);
	INI_Close(File);
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    switch(componentid)
	{
		case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid)) RemoveVehicleComponent(vehicleid, componentid);
	}
	if(!IsComponentidCompatible(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
	return 1;
}
IsPlayerInInvalidNosVehicle(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	#define MAX_INVALID_NOS_VEHICLES 52
	new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
	{
		581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
		509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
		452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
	};
	if(IsPlayerInAnyVehicle(playerid))
	{
		for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
		{
			if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i]) return true;
		}
	}
	return false;
}
IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return true;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return false;
}
forward RTC(vehicleid);
public RTC(vehicleid)
{
    SetVehicleHealth(vehicleid, 1000.0);
    SetVehicleToRespawn(vehicleid);
    return 1;
}
//===================================================================================================
//                                             Commands
//===================================================================================================
CMD:gcam(playerid, params[])
{
	#pragma unused params
	//#pragma unused help
    if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, ""VARADERO"[V:RPG] "SIVA"Samo Vlasnik !");
	SPD(playerid,1400,DIALOG_STYLE_LIST,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Main menu","{37FF00}Create speedcamera\n\nGet closest speedcamera ID\nEdit closest speedcamera\n{FF1400}Delete closest speedcamera\n{FF1400}Delete all speedcameras","OK","Cancel");
	return 1;
}
//===================================================================================================
//                      					  Functions
//===================================================================================================
LoadCameras()
{
	new file[64];
	for(new i = 0;i<CAMERA_LIMIT;i++)
	{
	    format(file,sizeof file,"/Radari/%i.txt",i);
	    if(fexist(file))
	    {
	        INI_ParseFile(file,"LoadCam",.bExtra = true,.extra = i);
	        #if STREAMER_ENABLED == true
				SpeedCameras[i][_objectid] = STREAMER_ADD(18880,SpeedCameras[i][_x],SpeedCameras[i][_y],SpeedCameras[i][_z],0,0,SpeedCameras[i][_rot]);
			#else
			    SpeedCameras[i][_objectid] = CreateObject(18880,SpeedCameras[i][_x],SpeedCameras[i][_y],SpeedCameras[i][_z],0,0,SpeedCameras[i][_rot]);
			#endif
			SpeedCameras[i][_active] = true;
			if(SpeedCameras[i][_activelabel] == true)
			{
				SpeedCameras[i][_label] = AttachLabelToCamera(i,SpeedCameras[i][_labeltxt]);
			}
			loaded_cameras++;
	    }
	}
}
forward LoadCam(cameraid,name[],value[]);
public LoadCam(cameraid,name[],value[])
{
	INI_Float("_x",SpeedCameras[cameraid][_x]);
	INI_Float("_y",SpeedCameras[cameraid][_y]);
	INI_Float("_z",SpeedCameras[cameraid][_z]);
	INI_Float("_rot",SpeedCameras[cameraid][_rot]);
	INI_Int("_range",SpeedCameras[cameraid][_range]);
	INI_Int("_limit",SpeedCameras[cameraid][_limit]);
	INI_Int("_fine",SpeedCameras[cameraid][_fine]);
	INI_Int("_usemph",SpeedCameras[cameraid][_usemph]);
	INI_Bool("_activelabel",SpeedCameras[cameraid][_activelabel]);
	INI_String("_labeltxt",SpeedCameras[cameraid][_labeltxt],128);
	return 1;
}
generate_id()
{
	new file[64];
	for(new i = 0;i<CAMERA_LIMIT;i++)
	{
		format(file,sizeof file,"/Radari/%i.txt",i);
		if(!fexist(file)) return i;
	}
	return -1;
}
CreateSpeedCam(Float:x,Float:y,Float:z,Float:rot,range,limit,fine,use_mph = 0)
{
	new newid = generate_id();
	if(newid == -1)
	{
	    print("gSpeedcam: ERROR! Cannot create speedcam, max ammount of speedcameras has been reached!");
	    return 1;
	}
	if (newid == loaded_cameras || newid > loaded_cameras)
	{
	    loaded_cameras++;
	}
	SpeedCameras[newid][_x] = x;
	SpeedCameras[newid][_y] = y;
	SpeedCameras[newid][_z] = z;
	SpeedCameras[newid][_rot] = rot;
	SpeedCameras[newid][_range] = range;
	SpeedCameras[newid][_limit] = limit;
	SpeedCameras[newid][_fine] = fine;
	SpeedCameras[newid][_usemph] = use_mph;
	#if STREAMER_ENABLED == true
		SpeedCameras[newid][_objectid] = STREAMER_ADD(18880,x,y,z,0,0,rot);
	#else
		SpeedCameras[newid][_objectid] = CreateObject(18880,x,y,z,0,0,rot);
	#endif
	SpeedCameras[newid][_active] = true;
	SpeedCameras[newid][_activelabel] = false;
	SpeedCameras[newid][_labeltxt] = 0;
	new file[64];format(file,sizeof file,"/Radari/%i.txt",newid);
	new INI:handler = INI_Open(file);
	INI_WriteFloat(handler,"_x",SpeedCameras[newid][_x]);
	INI_WriteFloat(handler,"_y",SpeedCameras[newid][_y]);
	INI_WriteFloat(handler,"_z",SpeedCameras[newid][_z]);
	INI_WriteFloat(handler,"_rot",SpeedCameras[newid][_rot]);
	INI_WriteInt(handler,"_range",SpeedCameras[newid][_range]);
	INI_WriteInt(handler,"_limit",SpeedCameras[newid][_limit]);
	INI_WriteInt(handler,"_fine",SpeedCameras[newid][_fine]);
	INI_WriteInt(handler,"_usemph",SpeedCameras[newid][_usemph]);
	INI_WriteBool(handler,"_activelabel",SpeedCameras[newid][_activelabel]);
	INI_WriteString(handler,"_labeltxt",SpeedCameras[newid][_labeltxt]);
	INI_Close(handler);
	return newid;
}
SaveCamera(cameraid)
{
	new file[64];format(file,sizeof file,"/Radari/%i.txt",cameraid);
	new INI:handler = INI_Open(file);
	INI_WriteFloat(handler,"_x",SpeedCameras[cameraid][_x]);
	INI_WriteFloat(handler,"_y",SpeedCameras[cameraid][_y]);
	INI_WriteFloat(handler,"_z",SpeedCameras[cameraid][_z]);
	INI_WriteFloat(handler,"_rot",SpeedCameras[cameraid][_rot]);
	INI_WriteInt(handler,"_range",SpeedCameras[cameraid][_range]);
	INI_WriteInt(handler,"_limit",SpeedCameras[cameraid][_limit]);
	INI_WriteInt(handler,"_fine",SpeedCameras[cameraid][_fine]);
	INI_WriteInt(handler,"_usemph",SpeedCameras[cameraid][_usemph]);
	INI_WriteBool(handler,"_activelabel",SpeedCameras[cameraid][_activelabel]);
	INI_WriteString(handler,"_labeltxt",SpeedCameras[cameraid][_labeltxt]);
	INI_Close(handler);
}
DestroySpeedCam(cameraid)
{
    SpeedCameras[cameraid][_active] = false;
	#if STREAMER_ENABLED == true
		STREAMER_REMOVE(SpeedCameras[cameraid][_objectid]);
	#else
		DestroyObject(SpeedCameras[cameraid][_objectid]);
	#endif
	if(SpeedCameras[cameraid][_activelabel] == true)
	{
		Delete3DTextLabel(SpeedCameras[cameraid][_label]);
	}
	SpeedCameras[cameraid][_activelabel] = false;
	SpeedCameras[cameraid][_labeltxt] = 0;
    new file[64];format(file,sizeof file,"/Radari/%i.txt",cameraid);
    if(fexist(file)){fremove(file);}
	return 1;
}
Float:GetDistanceBetweenPoints(Float:x,Float:y,Float:tx,Float:ty)
{
	new Float:temp1, Float:temp2;
	temp1 = x-tx;temp2 = y-ty;
	return floatsqroot(temp1*temp1+temp2*temp2);
}

GetClosestCamera(playerid)
{
	new Float:distance = 10,Float:temp,Float:x,Float:y,Float:z,current = -1;GetPlayerPos(playerid,x,y,z);
	for(new i = 0;i<loaded_cameras +1;i++)
	{
	    if(SpeedCameras[i][_active] == true)
	    {
			temp = GetDistanceBetweenPoints(x,y,SpeedCameras[i][_x],SpeedCameras[i][_y]);
			if(temp < distance)
			{
				distance = temp;
				current = i;
			}
		}
	}
	return current;
}

SCMF(playerid,color,type[],{Float,_}:...)
{
	new string[128];
	for(new i = 0;i<numargs() -2;i++)
	{
	    switch(type[i])
	    {
	        case 's':
	        {
				new result[128];
				for(new a= 0;getarg(i +3,a) != 0;a++)
				{
				    result[a] = getarg(i +3,a);
				}
				if(!strlen(string))
				{
				    format(string,sizeof string,"%s",result);
				}
				else format(string,sizeof string,"%s%s",string,result);
	        }

	        case 'i':
	        {
	            new result = getarg(i +3);
				if(!strlen(string))
				{
				    format(string,sizeof string,"%i",result);
				}
				else format(string,sizeof string,"%s%i",string,result);
	        }

	        case 'f':
	        {
				new Float:result = Float:getarg(i +3);
				if(!strlen(string))
				{
				    format(string,sizeof string,"%f",result);
				}
				else format(string,sizeof string,"%s%f",string,result);
	        }
	    }
	}
    SendClientMessage(playerid,color,string);
    return 1;
}
//===================================================================================================
//                                              Timers
//===================================================================================================
forward UpdateCameras();
public UpdateCameras() {

	foreach(new a:Player) 
	{
	    if(!IsPlayerInAnyVehicle(a)) continue;
		if(Policajac(a) && PolicajacNaDuznosti[a] == 1) continue;
		if(AdminDuty[a] == 1) continue;
		if(GMDuty[a] == 1) continue;
	    if(GetPVarInt(a,"PlayerHasBeenFlashed") == 1)
		{
			continue;
		} 
		else if (GetPVarInt(a,"PlayerHasBeenFlashed") == 2)
		{
			DeletePVar(a,"PlayerHasBeenFlashed");
			continue;
		}
	    for(new b = 0;b<loaded_cameras +1;b++)
	    {
	        if(SpeedCameras[b][_active] == false) continue;
	        if(IsPlayerInRangeOfPoint(a,SpeedCameras[b][_range],SpeedCameras[b][_x],SpeedCameras[b][_y],SpeedCameras[b][_z]))
	        {
                new speed = GetSpeed(a);
	            new limit = SpeedCameras[b][_limit];
	            if(speed > limit)
	            {
	                TextDrawShowForPlayer(a,flash);
	                #if CAMERA_PERSPECTIVE == true
	                SetPlayerCameraPos(a,SpeedCameras[b][_x],SpeedCameras[b][_y],SpeedCameras[b][_z] + 5);
	                new Float:x,Float:y,Float:z;GetPlayerPos(a,x,y,z);
	                SetPlayerCameraLookAt(a,x,y,z);
	                #endif
	                SetPVarInt(a,"PlayerHasBeenFlashed",1);
	                SetTimerEx("RemoveFlash",CAMERA_FLASH_TIME,false,"i",a);
					if(GetPlayerState(a) == PLAYER_STATE_DRIVER)
					{
						if(SpeedCameras[b][_usemph] == 0)
						{
							SCMF(a,0xFF1E00FF,"sisis","Vozis previse brzo! Uhvacen si u voznji brzinom ",speed,"kmh gde je dozvoljeno ",limit, "kmh.");
							SCMF(a,0xFF1E00FF,"sis","Platili ste kaznu od $",SpeedCameras[b][_fine],".");
						} 
						else 
						{
							SCMF(a,0xFF1E00FF,"sisis","Vozis previse brzo! Uhvacen si u voznji brzinom ",speed,"mph gde je dozvoljeno ",limit, "mph.");
							SCMF(a,0xFF1E00FF,"sis","Platili ste kaznu od $",SpeedCameras[b][_fine],".");
						}
						PlayerInfo[a][pNovacBanka] -= SpeedCameras[b][_fine];
						OrgInfo[DrzavaNovac] += SpeedCameras[b][_fine];
						SacuvajOrgInfo();
						new seff[200];
						format(seff, sizeof(seff), "{F3FF02}DRZAVNI SEF\n\nUkupno novca u drzavnom sefu: %d$ ", OrgInfo[DrzavaNovac]);
						UpdateDynamic3DTextLabelText(dsef, 0x00FFF9FF, seff);
					}
	            }
	        }
	    }
	}
}
forward RemoveFlash(playerid);
public RemoveFlash(playerid)
{
	TextDrawHideForPlayer(playerid,flash);
	SetPVarInt(playerid,"PlayerHasBeenFlashed",2);
	#if CAMERA_PERSPECTIVE == true
	SetCameraBehindPlayer(playerid);
	#endif
}
fDialog(1400)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	switch(listitem)
	{
		case 0: SPD(playerid,1401,DIALOG_STYLE_INPUT,"Insert a range","Please insert a range (recommended: 20-30)","OK","Cancel");
		case 1:
		{
			new cam = GetClosestCamera(playerid);
			if(cam == -1) return SendClientMessage(playerid,0xFF1E00FF,"No nearby cameras found!");
			SCMF(playerid,0x05FF00FF,"sis","The closest cameraID is ID: ",cam,".");
		}
		case 2:
		{
			new cam = GetClosestCamera(playerid);
			if(cam == -1) return SendClientMessage(playerid,0xFF1E00FF,"No nearby cameras found!");
			SetPVarInt(playerid,"selected",cam);
			SPD(playerid,1404,DIALOG_STYLE_LIST,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor","Change angle\nChange range\nChange speedlimit\nChange fine\nToggle mph mode\nAdd/Remove/Edit textlabel\n{FF1400}Delete camera","OK","Cancel");
		}
		case 3:
		{
			new cam = GetClosestCamera(playerid);
			if(cam == -1) return SendClientMessage(playerid,0xFF1E00FF,"No nearby cameras found!");
			DestroySpeedCam(cam);
			SendClientMessage(playerid,0x05FF00FF,"Camera has been removed.");
			DeletePVar(playerid,"selected");
		}
		case 4:
		{
			for(new i = 0;i<loaded_cameras +1;i++)
			{
				if(SpeedCameras[i][_active] == true)
				{
					DestroySpeedCam(i);
				}
			}
			SendClientMessage(playerid,0x05FF00FF,"All speedcameras have been removed.");
		}
	}
	return 1;
}
//======================================================
//                  Making a speedcam
//======================================================
fDialog(1401)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext)) return SPD(playerid,1401,DIALOG_STYLE_INPUT,"Insert a range","Please insert a range (recommended: 20-30)","OK","Cancel");
	SetPVarInt(playerid,"range",strval(inputtext));
	SPD(playerid,1402,DIALOG_STYLE_INPUT,"Insert a speedlimit","Please insert a speedlimit","OK","Cancel");
	return 1;
}
fDialog(1402)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext)) return SPD(playerid,1402,DIALOG_STYLE_INPUT,"Insert a speedlimit","Please insert a speedlimit","OK","Cancel");
	SetPVarInt(playerid,"limit",strval(inputtext));
	SPD(playerid,1403,DIALOG_STYLE_INPUT,"Insert a fine","Please insert a fine","OK","Cancel");
	return 1;
}
fDialog(1403)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext)) return SPD(playerid,1403,DIALOG_STYLE_INPUT,"Insert a fine","Please insert a fine","OK","Cancel");
	SetPVarInt(playerid,"fine",strval(inputtext));
	new Float:x,Float:y,Float:z,Float:angle;
	GetPlayerPos(playerid,x,y,z);GetPlayerFacingAngle(playerid,angle);
	angle = angle + 180;if(angle > 360){angle = angle - 360;}
	new id = CreateSpeedCam(x,y,z -3,angle,GetPVarInt(playerid,"range"),GetPVarInt(playerid,"limit"),GetPVarInt(playerid,"fine"),CAMERA_USEMPH);
	SetPlayerPos(playerid,x,y+2,z);
	DeletePVar(playerid,"range");
	DeletePVar(playerid,"limit");
	DeletePVar(playerid,"fine");
	SetPVarInt(playerid,"selected",id);
	SPD(playerid,1404,DIALOG_STYLE_LIST,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor","Change angle\nChange range\nChange speedlimit\nChange fine\nToggle mph mode\nAdd/Remove/Edit textlabel\n{FF1400}Delete camera","OK","Cancel");
	return 1;
}

//======================================================
//                  	Edit menu
//======================================================
fDialog(1404)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	switch(listitem)
	{
		case 0: SPD(playerid,1405,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Angle","Please enter a new angle","OK","Cancel");
		case 1: SPD(playerid,1407,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Range","Please enter a new range","OK","Cancel");
		case 2: SPD(playerid,1406,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Speedlimit","Please enter a new speedlimit","OK","Cancel");
		case 3: SPD(playerid,1408,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Fine","Please enter a new fine","OK","Cancel");
		case 4: SPD(playerid,1409,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Mph/Kmh","enter 1 to use mph and 0 for kmh","OK","Cancel");
		case 5: SPD(playerid,1410,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Textlabel","Please fill in the text you want to attach, or leave it empty to remove an existing label!","OK","Cancel");
		case 6:
		{
			DestroySpeedCam(GetPVarInt(playerid,"selected"));
			SendClientMessage(playerid,0x05FF00FF,"Camera has been removed.");
			DeletePVar(playerid,"selected");
		}
	}
	return 1;
}

//======================================================
//                 Editing a speedcam
//======================================================
fDialog(1405)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext)) return SPD(playerid,1405,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Angle","Please enter a new angle","OK","Cancel");
	new id = GetPVarInt(playerid,"selected");
	new rot = strval(inputtext);
	rot = rot + 180;
	if (rot > 360)
	{
		rot = rot - 360;
	}
	SpeedCameras[id][_rot] = rot;
	SetObjectRot(SpeedCameras[id][_objectid],0,0,rot);
	SaveCamera(id);
	SCMF(playerid,0x05FF00FF,"sisis","The angle of cameraID ",id," has succesfully been updated to ",strval(inputtext),".");
	return 1;
}
fDialog(1407)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext)) return SPD(playerid,1407,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Range","Please enter a new range","OK","Cancel");
	new id = GetPVarInt(playerid,"selected");
	SpeedCameras[id][_range] = strval(inputtext);
	SaveCamera(id);
	SCMF(playerid,0x05FF00FF,"sisis","The range of cameraID ",id," has succesfully been updated to ",strval(inputtext),".");
	return 1;
}
fDialog(1406)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext)) return SPD(playerid,1406,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Speedlimit","Please enter a new Speedlimit","OK","Cancel");
	new id = GetPVarInt(playerid,"selected");
	SpeedCameras[id][_limit] = strval(inputtext);
	SaveCamera(id);
	SCMF(playerid,0x05FF00FF,"sisis","The speedlimit of cameraID ",id," has succesfully been updated to ",strval(inputtext),".");
	return 1;
}
fDialog(1408)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext)) return SPD(playerid,1408,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Fine","Please enter a new fine","OK","Cancel");
	new id = GetPVarInt(playerid,"selected");
	SpeedCameras[id][_fine] = strval(inputtext);
	SaveCamera(id);
	SCMF(playerid,0x05FF00FF,"sisis","The fine of cameraID ",GetPVarInt(playerid,"selected")," has succesfully been updated to ",strval(inputtext),".");
	return 1;
}
fDialog(1409)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	if(!strlen(inputtext) || strval(inputtext) != 0 && strval(inputtext) != 1) return SPD(playerid,1409,DIALOG_STYLE_INPUT,"{00A5FF}gCamera {FFFFFF}- {FFDC00}Editor - Mph/Kmh","enter 1 to use mph and 0 for kmh","OK","Cancel");
	new id = GetPVarInt(playerid,"selected");
	SpeedCameras[id][_usemph] = strval(inputtext);
	if(strval(inputtext) == 1)
	{
		SCMF(playerid,0x05FF00FF,"sis","CameraID ",GetPVarInt(playerid,"selected")," does now meassure speed in mph.");
	} 
	else 
	{
		SCMF(playerid,0x05FF00FF,"sis","CameraID ",GetPVarInt(playerid,"selected")," does now meassure speed in kmh.");
	}
	return 1;
}
fDialog(1410)
{
	if(!response) 
	{
		DeletePVar(playerid,"range");
		DeletePVar(playerid,"limit");
		DeletePVar(playerid,"fine");
		DeletePVar(playerid,"selected");
		return 1;
	}
	new id = GetPVarInt(playerid,"selected");
	if(!strlen(inputtext))
	{
		if(SpeedCameras[id][_activelabel] == true)
		{
			Delete3DTextLabel(SpeedCameras[id][_label]);
			SpeedCameras[id][_activelabel] = false;
			SpeedCameras[id][_labeltxt] = 0;
		}
		SCMF(playerid,0x05FF00FF,"sis","The textlabel of cameraID ",GetPVarInt(playerid,"selected")," has succesfully been removed.");
	} 
	else 
	{
		if(SpeedCameras[id][_activelabel] == true)
		{
			format(SpeedCameras[id][_labeltxt],128,"%s",inputtext);
			UpdateCameraLabel(SpeedCameras[id][_label],inputtext);
		} 
		else 
		{
			SpeedCameras[id][_activelabel] = true;
			format(SpeedCameras[id][_labeltxt],128,"%s",inputtext);
			SpeedCameras[id][_label] = AttachLabelToCamera(id,inputtext);
		}
		SCMF(playerid,0x05FF00FF,"sisss","The textlabel of cameraID ",GetPVarInt(playerid,"selected")," has succesfully been updated to ",inputtext,".");
	}
	SaveCamera(id);
	return 1;
}
CMD:hostname(playerid, params[])
{
//#pragma unused help
if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,-1,""CRVENA"[V:RPG] "SIVA"Niste ovlasceni.!");
SCM(playerid, -1, "Upisi ime servera koje ce biti setovano.");
SPD(playerid, 344, DSI, "Ime servera", "Upisite zeljeno ime servera:", "Postavi", "Odustani");
return 1;
}
fDialog(344)
{
	if(response)
	{
		new string [128];
		format(string,sizeof(string),"hostname %s",inputtext);
		SendRconCommand(string);
		format(string,sizeof string, ""CRVENA"[!] "SRWBOJA"Vlasnik %s je promenio hostname, novi glasi: "BELA"%s", GetName(playerid) ,inputtext);
		SendAdminMessage(-1,string);
	}
	return 1;
}
CMD:mp3(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	if(PlayerInfo[playerid][pRadio] != 1) return SCM(playerid,-1,""SIVA"Nemate mp3!");
	SPD(playerid,259,DIALOG_STYLE_LIST,""VARADERO"=====>>MP3 Radio<<======","[1]-Radio Pink\n[2]-Radio Folk\n[3]-Radio TDI\n[4]-Juzni Vetar Radio\n[5]-Balkan DJ Radio\n[6]-Radio Los Santos1\n[7]-Radio Jat\n[8]-Dzenarika\n[9]-RadioS\n[10]-Radio Cool","Odaberi","Izlaz");
	SetPlayerAttachedObject(playerid, 9, 19421, 2, 0.055999, 0.012000, 0.002000, 88.099975, -172.999923, 90.499984, 1.000000, 1.000000, 1.000000 );
	return 1;
}

CMD:ram(playerid, params[])
{
	//#pragma unused help
	#pragma unused params
	new ime[20];
	if(UlogovanProvera[playerid] == 0) return SCM(playerid,-1,"[V:RPG] "SRWBOJA"Moras se ulogovati da bi koristio ovu komandu!");
	if(!Policajac(playerid)) return SendClientMessage(playerid,-1,""SRWBOJA"[GRESKA] "SIVA"Samo clanovi LSPD!");
	if(PolicajacNaDuznosti[playerid] == 0) return SendClientMessage(playerid, -1, ""SRWBOJA"(LSPD) "SIVA"Niste uzeli znacku(duznost) pa ne mozete koristi tu komandu!");
	for(new i; i < MAX_KUCA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
		{
			ime = "kucu";
			SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
			SetPlayerInterior(playerid, KucaInfo[i][kInt]);
			SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
		}
	}
	for(new i; i < MAX_STANOVA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
		{
			ime = "stan";
			SetPlayerVirtualWorld(playerid, StanInfo[i][sVW]);
			SetPlayerInterior(playerid, StanInfo[i][sInt]);
			SetPlayerPos(playerid, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]);
		}
	}
	for(new i; i < MAX_FIRMI; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
		{
			ime = "firmu";
			SetPlayerVirtualWorld(playerid, FirmaInfo[i][fVW]);
			SetPlayerInterior(playerid, FirmaInfo[i][fInt]);
			SetPlayerPos(playerid, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]);
		}
	}
	for(new i; i < MAX_VIKENDICA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, VikendiceInfo[i][viUlazX], VikendiceInfo[i][viUlazY], VikendiceInfo[i][viUlazZ]))
		{
			ime = "vikendicu";
			SetPlayerVirtualWorld(playerid, VikendiceInfo[i][viVW]);
			SetPlayerInterior(playerid, VikendiceInfo[i][viInt]);
			SetPlayerPos(playerid, VikendiceInfo[i][viIzlazX], VikendiceInfo[i][viIzlazY], VikendiceInfo[i][viIzlazZ]);
		}
	}
	new string[128];
	format(string, sizeof(string), "* Policajac %s provaljuje vrata i ulazi u %s.", GetName(playerid), ime);
	e_RadiusMSG(30.0, playerid, HEX_PROX, string);
	return 1;
}

forward CruiseControl(playerid);
DistanceFlat(Float:ax, Float:ay, Float:bx,Float:by, &Float:distance)
{
	distance = floatsqroot(floatpower(bx-ax,2)+floatpower(by-ay,2));
	return floatround(distance);
}

public CruiseControl(playerid)
{
    new vid = GetPlayerVehicleID(playerid);
    new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vid, x, y, z);

	new keys, ud, lr;
	GetPlayerKeys(playerid, keys, ud, lr);

	new Float:angle, Float:heading, Float:speed;
	GetVehicleZAngle(vid, angle);
	GetVehicleHeadingAngle(vid, heading);
	DistanceFlat(0, 0, x, y, speed);

	if(PlayerCruiseSpeed[playerid] == 0.00 || //If player released LCTRL or CruiseSpeed got cancelled by other means (spacebar press)
	GetPlayerState(playerid) != PLAYER_STATE_DRIVER ||
	(speed < 0.7 * PlayerCruiseSpeed[playerid]) || //if player slowed down too much
	z > 1 || //if car is going upwards too fast
	(floatabs(angle - heading) > 50 && floatabs(angle - heading) < 310))//if vehicle goes sideways
	{                                   //Cruise control will turn off:
	    PlayerCruiseSpeed[playerid] = 0.00;
		GameTextForPlayer(playerid, "~w~Tempomat~n~~r~ugasen", 1500, 1);
		return false;
	}
	GetVehicleZAngle(vid, PlayerHeadingAngle[playerid]);
	GetXYVelocity(vid, x, y, PlayerCruiseSpeed[playerid]);
	SetVehicleVelocity(vid, x, y, z);
	return SetTimerEx("CruiseControl", 500, false, "d", playerid);
}
GetXYVelocity(vehicleid, &Float:x, &Float:y, Float:speed)
{
	new Float:a;
	x = 0.0;
	y = 0.0;
	GetVehicleZAngle(vehicleid, a);
	x += (speed * floatsin(-a, degrees));
	y += (speed * floatcos(-a, degrees));
}

GetAngleToXY(Float:Xx, Float:Yy, Float:CurrentX, Float:CurrentY, &Float:Angle)
{
    Angle = atan2(Yy-CurrentY, Xx-CurrentX);
    Angle = floatsub(Angle, 90.0);
    if(Angle < 0.0) Angle = floatadd(Angle, 360.0);
}

GetVehicleHeadingAngle(vehicleid, &Float:a)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vehicleid, x, y, z);
	GetAngleToXY(x, y, 0, 0, a);
}
forward Taxi(playerid);
public Taxi(playerid)
{
	if(TaxiAuta(GetPlayerVehicleID(playerid)))
	{
		new string[128];
		taxicena[playerid] += 1;
		format(string, sizeof(string), "~r~TAXI~n~$%d", taxicena[playerid]);
		GameTextForPlayer(playerid, string, 1000, 3);
	}
	return 1;
}
fDialog(345)
{
	if(response)
	{
        if(listitem == 0)
		{
			Update_Skin(playerid, 5); //Bumbar
		}
		if(listitem == 1)
		{
			Update_Skin(playerid, 4); //Mrsa
		}
        if(listitem == 2)
		{
			Update_Skin(playerid, 8); //Riki
		}
        if(listitem == 3)
		{
			Update_Skin(playerid, 22); //Milos
		}
		if(listitem == 4)
        {
			Update_Skin(playerid, 66); //Mica
        }
        if(listitem == 5)
        {
			Update_Skin(playerid, 101); //Nikola
        }
        if(listitem == 6)
        {
			Update_Skin(playerid, 112); //Celavi
        }
        if(listitem == 7)
        {
			Update_Skin(playerid, 137); //Prosjak
        }
		if(listitem == 8)
        {
			Update_Skin(playerid, 158); //Seljak
        }
        if(listitem == 9)
        {
			Update_Skin(playerid, 167); //Kokosar
        }
        if(listitem == 10)
        {
			Update_Skin(playerid, 206); //Zoran
        }
        if(listitem == 11)
        {
			Update_Skin(playerid, 252); //Peder :D
        }
        if(listitem == 12)
        {
			Update_Skin(playerid, 260); //Gradjevinac :D
        }
        if(listitem == 13)
        {
			Update_Skin(playerid, 264); //Klovn :D
        }
        if(listitem == 14)
        {
			Update_Skin(playerid, 289); //Streberko :D
        }
    }
}
CMD:quiz(playerid, params[])
{
	//#pragma unused help
	new choice[10], subparam[64];
	if(sscanf(params, "s[10]S()[64]", choice, subparam)) return SendClientMessage(playerid, 0xAFAFAFAA, "USAGE: /quiz [create/answer/delete/end/help]");

	if(!strcmp(choice, "create"))
	{
		if(PlayerInfo[playerid][pLider] == 6)
		{
		    if(!quizexist)
		    {
				SPD(playerid, 5555, DIALOG_STYLE_INPUT, "Quiz Create [Input Question]", "Input the quiz question", "Next", "Cancel");
			}
			else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: Ne mozes napraviti vise od jednog kviza!");
		}
		else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: Samo Novinari.");
	}
	else if(!strcmp(choice, "answer"))
	{
	    if(quizexist)
	    {
	    	if(!isnull(subparam))
	    	{
				if(!strcmp(subparam, answer))
				{
					new string[100];
					format(string, sizeof(string), "QUIZINFO{FFFFFF}: Kviz odgovor je bio '{FFFF00}%s{FFFFFF}'", answer);
					SendClientMessageToAll(0xFFFF00AA, string);
					format(string, sizeof(string), "* {FFFF00}%s{FFFFFF} je pobedio u kvizu.", GetName(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
					
					switch(rewardtype)
					{
					    case 1: GivePlayerWeapon(playerid, reward, 999999);
						case 2: g_NovacPlus(playerid, reward);
					}
					quizexist = false;
					format(question, 256, "None");
					format(answer, 256, "None");
					rewardtype = 0;
					reward = 0;					
				}
				else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: Pogresan odgovor.");
			}
			else return SendClientMessage(playerid, 0xAFAFAFAA, "USAGE: /quiz answer [ODGOVOR]");
		}
		else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: Nema dostupnog kviza.");
	}
	else if(!strcmp(choice, "delete"))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 7 || PlayerInfo[playerid][pLider] == 6)
	    {
	    	if(quizexist)
	    	{
	    	    new string[100];
				quizexist = false;
				format(question, 256, "None");
				format(answer, 256, "None");
				rewardtype = 0;
				reward = 0;
				format(string, sizeof(string), "QUIZINFO{FFFFFF}: Administrator {FFFF00}%s{FFFFFF} je obrisao trenutno dostupan kviz.", GetName(playerid));
				SendClientMessageToAll(0xFFFF00AA, string);
			}
			else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: Nema dostupnog kviza.");
		}
		else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: NISI RCON Administrator.");
	}
 	else if(!strcmp(choice, "end"))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 7)
	    {
			if(quizexist)
			{
				new string[100];
				format(string, sizeof(string), "QUIZINFO{FFFFFF}: Administrator {FFFF00}%s{FFFFFF} je zavrsio kviz.", GetName(playerid));
				SendClientMessageToAll(0xFFFF00AA, string);
				format(string, sizeof(string), "* Tacan odgovor bio je '{FFFF00}%s{FFFFFF}'", answer);
				SendClientMessageToAll(0xFFFFFFFF, string);
				quizexist = false;
				format(question, 256, "None");
				format(answer, 256, "None");
				rewardtype = 0;
				reward = 0;
			}
			else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: There is no available quiz.");
		}
		else return SendClientMessage(playerid, 0xAFAFAFAA, "ERROR: You are not RCON Administrator.");
	}
	else if(!strcmp(choice, "help"))
	{
	    SendClientMessage(playerid, 0x33CCFFAA, "Tutorial Kviz Sistema SA!:");
	    SendClientMessage(playerid, 0xFFFFFFFF, "Postoji komanda /quiz sa 5 stavki");
	    SendClientMessage(playerid, 0x33CCFFAA, "/quiz create {FFFFFF}- Ova je komanda za pravljenje kviza ({FF0000}Note{FFFFFF}: RCON Administrator Only)");
	    SendClientMessage(playerid, 0x33CCFFAA, "/quiz answer {FFFFFF}- Ova je komanda za odgovor na postavljeno pitanje.");
	    SendClientMessage(playerid, 0x33CCFFAA, "/quiz delete {FFFFFF}- Ova je komanda za brisanje postojeceg kviza. ({FF0000}Note{FFFFFF}: RCON Administrator Only)");
	    SendClientMessage(playerid, 0x33CCFFAA, "/quiz end {FFFFFF}-    Ova komanda je za zavrsetak kviza. ({FF0000}Note{FFFFFF}: RCON Administrator Only Only)");
		SendClientMessage(playerid, 0x33CCFFAA, "/quiz help {FFFFFF}- Ovu komandu upravo sad koristis,budalo!");
		SendClientMessage(playerid, 0xFFFFFFFF, "Ako ti treba pomoc oko kviza obrati se vlasniku.");
	}
	else return SendClientMessage(playerid, 0xAFAFAFAA, "USAGE: /quiz [create/answer/delete/end/help]");
	return 1;
}
GetWeaponNameEx(weaponid)
{
	new name[25]; switch (weaponid)
	{
		case 0: name = "Fist"; case 1: name = "Brass Knuckles"; case 2: name = "Golf Club"; case 3: name = "Nite Stick";
		case 4: name = "Knife"; case 5: name = "Bat"; case 6: name = "Shovel"; case 7: name = "Pool Kue"; case 8: name = "Katana";
		case 9: name = "Chainsaw"; case 10: name = "Purple Dildo"; case 11: name = "Small White Vibrator";
		case 12: name = "Large White Vibrator"; case 13: name = "Silver Vibrator"; case 14: name = "Flowers"; case 15: name = "Cane";
		case 16: name = "Grenade"; case 17: name = "Tear Gas"; case 18: name = "Molotov"; case 22: name = "9mm";
		case 23: name = "Silenced 9mm"; case 24: name = "Desert"; case 25: name = "Shotgun"; case 26: name = "Saw'n'Off";
		case 27: name = "S.P.A.Z. 12"; case 28: name = "UZI"; case 29: name = "MP5"; case 30: name = "AK47"; case 31: name = "M4";
		case 32: name = "TEC9"; case 33: name = "Country Rifle"; case 34: name = "Sniper"; case 35: name = "Rocket Launcher";
		case 36: name = "Heat Seeker"; case 37: name = "Flamethrower"; case 38: name = "Minigun"; case 39: name = "Satchel Charge";
		case 40: name = "Detonator"; case 41: name = "Spray Can"; case 42: name = "Fire Extinguisher"; case 43: name = "Camera";
		case 46: name = "Parachute"; default: name = "Undefined";
	}
	return name;
}
fDialog(5555)
{
	if(response)
	{
		if(!isnull(inputtext))
		{
			format(question, sizeof(question), "%s", inputtext);
			SPD(playerid, 5557, DIALOG_STYLE_INPUT, "Quiz Create [Input Answer]", "Input the quiz answer", "Next", "Cancel");
		}
		else
		{
			SPD(playerid, 5555, DIALOG_STYLE_INPUT, "Quiz Create [Input Question]", "ERROR!\nInput the quiz question", "Next", "Cancel");
		}
	}
}
fDialog(5556)
{
	if(response)
	{
		if(!isnull(inputtext))
		{
			format(answer, sizeof(answer), "%s", inputtext);
			SPD(playerid, 5557, DIALOG_STYLE_LIST, "Quiz Create [Select Rewards]", "Weapons\nMoney", "Next", "Cancel");
		}
		else
		{
			SPD(playerid, 5556, DIALOG_STYLE_INPUT, "Quiz Create [Input Answer]", "ERROR!\nInput the quiz answer", "Next", "Cancel");
		}
	}
	else
	{
		format(question, sizeof(question), "None");
	}
}
fDialog(5557)
{
	if(response)
	{
		listitem = 1;
		if(listitem == 0)
		{
			rewardtype = 1;
			SPD(playerid, 5558, DIALOG_STYLE_INPUT, "Quiz Create [Input Weapon ID]", "Input the weapon ID (1-46)", "Create!", "Cancel");
		}
		if(listitem == 1)
		{
			rewardtype = 2;
			format(answer, sizeof(answer), "%s", inputtext);
			SPD(playerid, 5559, DIALOG_STYLE_INPUT, "Quiz Create [Input Money]", "Input the amount of money", "Create!", "Cancel");
		}
	}
	else
	{
		format(question, sizeof(question), "None");
		format(answer, sizeof(answer), "None");
	}
}
fDialog(5558)
{
	if(response)
	{
		if(!isnull(inputtext))
		{
			if(strval(inputtext) >= 1 && strval(inputtext) <= 46)
			{
				new string[100];
				reward = strval(inputtext);
				quizexist = true;
				format(string, sizeof(string), "QUIZ{FFFFFF}: {FFFF00}%s{FFFFFF} ({FFFF00}%s{FFFFFF})", question, GetWeaponNameEx(strval(inputtext)));
				SendClientMessageToAll(0xFFFF00AA, string);
				SendClientMessageToAll(0xFFFFFFFF, "* Koristi '{FFFF00}/quiz answer{FFFFFF}' da odgovoris na kviz.");
			}
			else
			{
				SPD(playerid, 5558, DIALOG_STYLE_INPUT, "Quiz Create [Input Weapon ID]", "ERROR!\nInput the weapon ID (1-46)", "Create!", "Cancel");
			}
		}
		else
		{
			SPD(playerid, 5558, DIALOG_STYLE_INPUT, "Quiz Create [Input Weapon ID]", "ERROR!\nInput the weapon ID (1-46)", "Create!", "Cancel");
		}
	}
	else
	{
		format(question, sizeof(question), "None");
		format(answer, sizeof(answer), "None");
		rewardtype = 0;
	}
}
fDialog(5559)
{
	if(response)
	{
		if(!isnull(inputtext))
		{
			if(strval(inputtext) >= 1 && strval(inputtext) >= 1 && strval(inputtext) <= 5000) 
			{
				new string[100];
				reward = strval(inputtext);
				quizexist = true;
				format(string, sizeof(string), "QUIZ{FFFFFF}: {FFFF00}%s{FFFFFF} ({FFFF00}$%d{FFFFFF})", question, reward);
				SendClientMessageToAll(0xFFFF00AA, string);
				SendClientMessageToAll(0xFFFFFFFF, "* Koristi '{FFFF00}/quiz answer{FFFFFF}' da odgovoris na kviz.");
			}
			else
			{
				SPD(playerid, 5558, DIALOG_STYLE_INPUT, "Quiz Create [Input Weapon ID]", "ERROR!\nInput the amount of money", "Create!", "Cancel");
			}
		}
		else
		{
			SPD(playerid, 5559, DIALOG_STYLE_INPUT, "Quiz Create [Input Money]", "ERROR!\nInput the amount of money", "Create!", "Cancel");
		}
	}
	else
	{
		format(question, sizeof(question), "None");
		format(answer, sizeof(answer), "None");
		rewardtype = 0;
	}
}
public RobberyUpdate(playerid)
{
	if(RobberyCounter[playerid] > 1) {
	    RobberyCounter[playerid]--;

     	new string[32];
		switch(RobberyType[playerid])
		{
			case 1: format(string, sizeof(string), "~w~Hakujes: %s%d", (RobberyCounter[playerid] <= 5) ? ("~r~~h~") : ("~y~"), RobberyCounter[playerid]);
			case 2: format(string, sizeof(string), "~w~Prazljenje: %s%d", (RobberyCounter[playerid] <= 3) ? ("~r~~h~") : ("~y~"), RobberyCounter[playerid]);
		}

		GameTextForPlayer(playerid, string, 1000, 4);
	}else if(RobberyCounter[playerid] == 1) {
        switch(RobberyType[playerid])
		{
			case 1:
			{
				BankControls[LasersOn] = false;
				SetDynamicObjectPos(VaultObjects[TYPE_LASER1], 2142.983, 1606.679, 990.0);
				SetDynamicObjectPos(VaultObjects[TYPE_LASER2], 2142.983, 1606.679, 990.0);
				SetDynamicObjectPos(VaultObjects[TYPE_LASER3], 2142.983, 1606.679, 990.0);
				SetTimer("ResetLasers", 240000, false);
				SendClientMessage(playerid, -1, "Iskljucili ste lasere. Sada moÅ¾ete oticÂ´i do vrata trezora bez podizanja alarma.");
				SendClientMessage(playerid, -1, "Laseri cÂ´e se ponovo ukljuciti za 4 minuta.");
			}

			case 2:
			{
			    new cash = RandomEx(DEPOSIT_MIN, DEPOSIT_MAX), string[128];
			    if(BankControls[VaultDoorState] == 2) cash -= floatround(cash * 0.1, floatround_floor); // explosion damaged deposit boxes, 10% damage penalty
				RobberyCash[playerid] += cash;
				format(string, sizeof(string), "Ispraznili ste set kutija.", cash);
				SendClientMessage(playerid, -1, string);
				SendClientMessage(playerid, -1, "MoÅ¾ete napustiti banku da bi dobili svoj novac ili nastavite pljackati.");
			}
		}

		ClearAnimations(playerid, 1);
		ResetRobbery(playerid);
	}

	return 1;
}

public ResetLasers()
{
    BankControls[LasersOn] = true;
    SetDynamicObjectPos(VaultObjects[TYPE_LASER1], 2142.983, 1606.679, 993.188);
	SetDynamicObjectPos(VaultObjects[TYPE_LASER2], 2142.983, 1606.679, 993.938);
	SetDynamicObjectPos(VaultObjects[TYPE_LASER3], 2142.983, 1606.679, 994.688);

	if(IsAnyPlayerInDynamicArea(AlarmArea, 1)) TriggerAlarm();
	return 1;
}

public OpenVaultDoor(type, seconds)
{
	if(seconds > 1) {
	    seconds--;

	    new string[128];
        switch(type)
		{
			case 2: format(string, sizeof(string), " / postavibombu da raznese vrata trezora (brzo i glasno)\n{2ECC71}%s", ConvertToMinutes(seconds));
			case 3: format(string, sizeof(string), "/ timelock za pokretanje vremenskog zakljucavanja (sporo i tiho)\n{2ECC71}%s", ConvertToMinutes(seconds));
		}

		UpdateDynamic3DTextLabelText((type == 2) ? VaultLabels[TYPE_EXPLOSIVE] : VaultLabels[TYPE_TIMELOCK], 0xF39C12FF, string);
        SetTimerEx("OpenVaultDoor", 1000, false, "ii", type, seconds);
	}else if(seconds == 1) {
        BankControls[VaultDoorState] = type;
		SetTimer("ResetVaultDoor", 120000, false);

		switch(type)
		{
			case 2:
			{
			    // explosive
			    CreateExplosion(2144.1624, 1626.25, 993.6882, 11, 5.0);
				SetDynamicObjectPos(VaultObjects[TYPE_VAULTDOOR], 2143.185, 1626.965, 985.298);
                UpdateDynamic3DTextLabelText(VaultLabels[TYPE_EXPLOSIVE], 0xF39C12FF, "Postavibombu da raznese vrata trezora (brzo i glasno)");
				TriggerAlarm(1);
			}

			case 3:
			{
			    // timelock
				MoveDynamicObject(VaultObjects[TYPE_VAULTDOOR], 2143.185, 1626.965, 994.35, 0.01, 0.000, -0.400, -270.0);
                UpdateDynamic3DTextLabelText(VaultLabels[TYPE_TIMELOCK], 0xF39C12FF, " timelock za pocetak vremenske blokade (sporo i tiho)");
			}
		}
	}

	return 1;
}

public ResetVaultDoor()
{
	switch(BankControls[VaultDoorState])
	{
		case 2: SetDynamicObjectPos(VaultObjects[TYPE_VAULTDOOR], 2143.185, 1626.965, 994.298);
		case 3: MoveDynamicObject(VaultObjects[TYPE_VAULTDOOR], 2143.185, 1626.965, 994.298, 0.01, 0.000, -0.400, -180.0);
	}

	for(new i; i < sizeof(DepositCoords); ++i)
	{
		DepositRobbed[i] = false;
		Streamer_SetIntData(STREAMER_TYPE_3D_TEXT_LABEL, InsideVaultLabels[i], E_STREAMER_COLOR, 0x2ECC71FF);
	}

	BankControls[VaultDoorState] = 0; // closed
	return 1;
}

public DisableAlarm()
{
	BankControls[Alarm] = false;
	for(new i; i < GetMaxPlayers(); ++i)
	{
		if(!IsPlayerConnected(i)) continue;
		if(!GetPVarInt(i, "Alarm")) continue;
  		SetPVarInt(i, "Alarm", 0);
        PlayerPlaySound(i, 3402, 0.0, 0.0, 0.0);
	}
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(GetPVarInt(playerid, "BankPickupCooldown") > gettime()) return 1;
	if(GetPVarInt(playerid, "Alarm"))
	{
	SetPVarInt(playerid, "Alarm", 0);
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	}
	if(RobberyCash[playerid] > 0 && !IsValidDynamicCP(RobberyEscape[playerid]))
	{
	new id = random(sizeof(GetawayLocations));
	RobberyEscape[playerid] = CreateDynamicCP(GetawayLocations[id][0], GetawayLocations[id][1], GetawayLocations[id][2], 3.0, .playerid = playerid, .streamdistance = 5000.0);
	SendClientMessage(playerid, -1, "Idite na oznacenu lokaciju da biste dobili svoj novac. Ako umres, izgubices ga.");
	}	
	return 1;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
       if(checkpointid == RobberyEscape[playerid])
       {
                RobberyCash[playerid] = 0;
                g_NovacPlus(playerid, 500000);
                SCM(playerid, -1, ""CRVENA"[V:RPG] "BELA"Uspesno ste opljackali banku i sacuvali novac dobili ste 500k");
                DestroyDynamicCP(RobberyEscape[playerid]);
                RobberyEscape[playerid] = -1;
       }
       return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
    return 1;
}
////////////////////////////////////////////////////////////////////////////////
forward GaddafiTimer(playerid);
public GaddafiTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(GaddafiTime[playerid] == 1)
	    {
			GaddafiTime[playerid] = 0;
	    }
	}
}
////////////////////////////////////////////////////////////////////////////////
forward DodatiPaket();
public DodatiPaket()
{
GaddafiPaketa++;
return 1;
}
forward CountDown(playerid);
public CountDown(playerid)
{
    CountVar[playerid]--;
    if(CountVar[playerid] <= 0)
    {
		CountVar[playerid] = 25;
		KillTimer(CountTime[playerid]);
    }
    else
    {
        new str[124];
        format(str, sizeof(str),"~n~~n~~n~~n~~n~~n~~r~%d/~y~25 ~n~~g~ZAUZIMANJE", CountVar[playerid]);
		GameTextForPlayer(playerid, str, 1000, 3);
    }
    CountTime[playerid] = SetTimerEx("CountDown", 1000, false,"i", playerid);
    return 1;
}

forward VehProtection(vehicleid);
public VehProtection(vehicleid)
{
    for(new i = 0; i < sizeof(VoziloInfo); i++)
	{
 		new Fajl[64];
	 	format(Fajl, sizeof(Fajl), AUTO_FILE, i);
		if(!fexist(Fajl))
		{
		    if(VoziloInfo[i][vID] == vehicleid)
		    {
		    	if(VoziloInfo[i][vSpawn] == 1) SetVehicleVirtualWorld(vehicleid, 100);
			}
		}
	}
	for(new i = 0; i < sizeof(MotorInfo); i++)
	{
 		new Fajl[64];
	 	format(Fajl, sizeof(Fajl), MOTOR_FILE, i);
		if(!fexist(Fajl))
		{
		    if(MotorInfo[i][mID] == vehicleid)
		    {
		    	if(MotorInfo[i][mSpawn] == 1) SetVehicleVirtualWorld(vehicleid, 100);
			}
		}
	}
	for(new i = 0; i < sizeof(AvionInfo); i++)
	{
 		new Fajl[64];
	 	format(Fajl, sizeof(Fajl), AVION_FILE, i);
		if(!fexist(Fajl))
		{
		    if(AvionInfo[i][avID] == vehicleid)
		    {
		    	if(AvionInfo[i][avSpawn] == 1) SetVehicleVirtualWorld(vehicleid, 100);
			}
		}
	}
	for(new i = 0; i < sizeof(PlovilaInfo); i++)
	{
 		new Fajl[64];
	 	format(Fajl, sizeof(Fajl), PLOVILA_FILE, i);
		if(!fexist(Fajl))
		{
		    if(PlovilaInfo[i][plID] == vehicleid)
		    {
		    	if(PlovilaInfo[i][plSpawn] == 1) SetVehicleVirtualWorld(vehicleid, 100);
			}
		}
	}
}

forward VozilaProtect();
public VozilaProtect()
{
    for(new h = (0); h < sizeof(VoziloInfo); h++)
    {
        new hFile[64];
        format(hFile, sizeof(hFile), AUTO_FILE, h);
        if(fexist(hFile))
        {
      		VoziloInfo[h][vSpawn] = 1;
      		//SetVehicleVirtualWorld(VoziloInfo[h][vID], 100);
            //SacuvajVozilo(h);
        }
    }
    for(new h = (0); h < sizeof(PlovilaInfo); h++)
    {
        new hFile[64];
        format(hFile, sizeof(hFile), PLOVILA_FILE, h);
        if(fexist(hFile))
        {
      		PlovilaInfo[h][plSpawn] = 1;
      		//SetVehicleVirtualWorld(PlovilaInfo[h][plID], 100);
            //SacuvajPlovila(h);
        }
    }
    for(new h = (0); h < sizeof(AvionInfo); h++)
    {
        new hFile[64];
        format(hFile, sizeof(hFile), AVION_FILE, h);
        if(fexist(hFile))
        {
      		AvionInfo[h][avSpawn] = 1;
      		//SetVehicleVirtualWorld(AvionInfo[h][avID], 100);
            //SacuvajAvione(h);
        }
    }
    for(new h = (0); h < sizeof(MotorInfo); h++)
    {
        new hFile[64];
        format(hFile, sizeof(hFile), MOTOR_FILE, h);
        if(fexist(hFile))
        {
      		MotorInfo[h][mSpawn] = 1;
      		//SetVehicleVirtualWorld(MotorInfo[h][mID], 100);
            //SacuvajMotor(h);
        }
    }
}
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
IsPlayerNearPlayer(Float:radi, playerid, targetid)
{
    if( IsPlayerConnected( playerid ) && IsPlayerConnected( targetid ) ) {
	    if( GetPlayerVirtualWorld( playerid ) == GetPlayerVirtualWorld( targetid ) ) {

			new Float:posx,
			    Float:posy,
				Float:posz,
			    Float:oldposx,
				Float:oldposy,
				Float:oldposz,
			    Float:tempposx,
				Float:tempposy,
				Float:tempposz;

			GetPlayerPos( playerid, oldposx, oldposy, oldposz);

			GetPlayerPos(targetid, posx, posy, posz);
			tempposx = (oldposx -posx);
			tempposy = (oldposy -posy);
			tempposz = (oldposz -posz);

			if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{
				return 1;
			}
		}
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////////
KreirajTelo(name[], h, mi, s, Float:xa, Float:ya, Float:za, world, interior, killer[])
{
    for(new i = 1; i < MAX_LESEVA; i++)
	{
		if(SmrtInfo[i][dPlanted] == 0 && SmrtInfo[i][dID] == 0)
		{
            SmrtInfo[i][dObject] = CreateDynamicObject(2907, xa,ya,za-0.8, 0, 0, 0, world, interior, -1, 100);
			SmrtInfo[i][dObject2] = CreateDynamicObject(2908, xa,ya-0.5,za-0.8, 0, 90, 0, world, interior, -1, 100);
			SmrtInfo[i][dObject3] = CreateDynamicObject(2906, xa+0.3,ya,za-0.8, 0, 0, 0, world, interior, -1, 100);
			SmrtInfo[i][dObject4] = CreateDynamicObject(2906, xa-0.3,ya,za-0.8, 0, 0, 0, world, interior, -1, 100);
			SmrtInfo[i][dObject5] = CreateDynamicObject(2905, xa+0.1,ya+0.8,za-0.8, 0, 90, 0, world, interior, -1, 100);
			SmrtInfo[i][dObject6] = CreateDynamicObject(2905, xa-0.1,ya+0.8,za-0.8, 0, 90, 0, world, interior, -1, 100);
			SmrtInfo[i][dObject7] = CreateDynamicObject(18698, xa,ya,za-0.7, 0, 90, 0, world, interior, -1, 100);
			SmrtInfo[i][dX] = xa;
		    SmrtInfo[i][dY] = ya;
		    SmrtInfo[i][dZ] = za;
		    SmrtInfo[i][dPlanted] = 1;
		    SmrtInfo[i][dID] = i;
		    format(telostring, sizeof(telostring), "{40d81e}Mrtvo Telo(%d)\nMrtvac: %s\nVreme: %d:%d:%d\nUbio: %s", i, name, h, mi, s, killer);
			SmrtInfo[i][d3DText] = CreateDynamic3DTextLabel(telostring, -1, xa, ya, za, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, world, interior, -1, 5.0);
		    return 1;
		}
	}
	return 0;
}
//-------------------------------Zauzimanje-------------------------------------
CMD:kreirajzonu(playerid, params[])
{
    //#pragma unused help
	if(PlayerInfo[playerid][pAdmin] < 6)
	{
		SCM(playerid, -1, ""SPLAVA"[GRESKA]: "SIVA"Niste ovlasteni da koristite ovu komandu!");
		return 1;
	}	
	new cosid = 0,
		team;
    if(sscanf(params, "i",team))
	{
		SCM(playerid, -1, "/napravizonu [Team]");
		SCM(playerid, -1, "Teamovi: 1. The Vinci Family | 2.Black Dragon Triads | 3.Groove Street Family | 4.Ballas");
		SCM(playerid, -1, "Teamovi: 5. Condor | 6. Hitman | 7. Blue Lagoon | 8. La Cosa Nostra | 9. Da Naga Boys ");
		SCM(playerid, -1, "Teamovi: 10. Yakuza | 11. Black Cobra Corporation");
		SCM(playerid, -1, "Teamovi: | 12.DeathRow | 13. The Russia Mafia | 14. Narco Cartel | 15. Loca Cartel | 16. TBB");
		return 1;
	}

	new q[128];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `gangzone` SET `Team` = '%d'", team);	
	mysql_tquery(SQL, q, "_sqlInsertGangZone", "ddd", cosid, playerid, team);
	
	new str[126];
    format(str,128, ""SPLAVA"#Staff: "SIVA"Administrator %s je napravio zonu pod ID-em: %d", GetName(playerid), cosid);
    ABroadCast(-1,str,1);
    SCM(playerid, -1, "NAPOMENA: Sada morate definisati regiju,Definisete je sa slovom N.");
    SCM(playerid, -1, "Kada oznacite jednu tacku idite diagonalno na drugu tacku.");
    SCM(playerid, -1, "JAKO JE BITNO DA ZONA IDE OD LEVO DIAGONALNO NA DESNO!!!!!!");
	return 1;
}

function: _sqlInsertGangZone(cosid, playerid, team)
{
	cosid = cache_insert_id();
	GZ[cosid][gZSQLID] = cosid;
	GZ[cosid][zonaTeam] = team;
	dodajezonu[playerid] = cosid;
	zonalvl[playerid] = 1;	
	SacuvajZonu(cosid);
	return 1;
}

CMD:obrisizonu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6)
	{
		SCM(playerid,-1,""CRVENA"[GRESKA]: "BELA"Niste ovlasceni za ovu komandu!");
		return 1;
	}
	for(new id = 0; id < sizeof(GZ); id++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz]))
		{
			new q[64];
			mysql_format(SQL, q, sizeof(q), "DELETE FROM `gangzone` WHERE `gZSQLID` = '%d'", id);
			mysql_tquery(SQL, q);
			
			GangZoneDestroy(ZonaID[id]);
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			DestroyDynamicPickup(ZonaPickup[id]);
			
			for(new i; gzone:i < gzone; i++) 
			{ 
				GZ[id][gzone:i] = -5555; 		
			}
			
            va_SendClientMessage(playerid,-1, ""CRVENA"[V:RPG] "SIVA"Zona je uspesno obrisana (ID Zone: %d)!",id);
			return 1;
		}
	}
	return SCM(playerid,-1,""CRVENA"[GRESKA]: "BELA"Nema zona u vasoj blizini");
}

public KrajGlasanja(playerid)
{
	new string[128];
	format(string,sizeof(string),""SIVA"[Glasanje] "SPLAVA"Da ("SIVA"%d"SPLAVA")"SIVA", "SPLAVA"Ne ("SIVA"%d"SPLAVA")",voteyes,voteno);
	SCMTA(COLOR_RED,string);
	voteno = 0;
	voteyes = 0;
	votation = 0;
	foreach(new i : Player)
	{
		votedrecently[i] = 0;
	}
	return 1;
}
//----------------------------------------------------------------------------//
forward VremeTimer(playerid);
public VremeTimer(playerid)
{
	new string[128],godina,mesec,dan,sati,minute,sekunde;
    getdate(godina, mesec, dan), gettime(sati, minute, sekunde);
    format(string, sizeof string, "%s%d:%s%d:%s%d", (sati < 10) ? ("0") : (""), sati, (minute < 10) ? ("0") : (""), minute, (sekunde < 10) ? ("0") : (""), sekunde);
    TextDrawSetString(NwnEditor_TD[9], string);
    format(string, sizeof string, "%d.%s%d.%s%d", dan, ((mesec < 10) ? ("0") : ("")), mesec, (godina < 10) ? ("0") : (""), godina);
    TextDrawSetString(NwnEditor_TD[8], string);
    return 1;
}
//----------------------------------------------------------------------------//
new gm = 0;
forward GameMode();
public GameMode()
{
	new string[24];

	if(gm == 0) gm = 1;
	else if(gm == 1) gm = 0;

	format(string, sizeof string, "%s", (gm == 0) ? ("V:RPG v1.0 by bunta") : ("V:RPG v1.0 by bunta"));
	SetGameModeText(string);
	return 1;
}
//----------------------------------------------------------------------------//

///////////////////////////////////////////////////////////////////////////////
OstecenjeVozila(playerid)
{
	if(UlogovanProvera[playerid] == 1)
 	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    new Float:HP, string[40];
		    new veh = GetPlayerVehicleID(playerid);
		    GetVehicleHealth(veh, HP);
		    format(string, sizeof(string), "OSTECENJE:_%d", floatround (HP));
		    PlayerTextDrawSetString(playerid, Brzinomer[playerid][9], string);
		}
	}
	return 1;
}
//------------------------------ / Anti Fake Kill / ----------------------------//
forward antifakekill2(playerid);
public antifakekill2(playerid)
{
    antifakekill[playerid] --;
    if(antifakekill[playerid] > 5)
    {
        Kick(playerid);
    }
    return 1;
}
//////////////////////////////////////
DodajWarnRed(text[]) {

    strmid(AdminWarns[ 7 ][ Text ], AdminWarns[ 6 ][ Text ], 0, strlen(AdminWarns[ 6 ][ Text ]), 256);
    strmid(AdminWarns[ 6 ][ Text ], AdminWarns[ 5 ][ Text ], 0, strlen(AdminWarns[ 5 ][ Text ]), 256);
    strmid(AdminWarns[ 5 ][ Text ], AdminWarns[ 4 ][ Text ], 0, strlen(AdminWarns[ 4 ][ Text ]), 256);
    strmid(AdminWarns[ 4 ][ Text ], AdminWarns[ 3 ][ Text ], 0, strlen(AdminWarns[ 3 ][ Text ]), 256);
    strmid(AdminWarns[ 3 ][ Text ], AdminWarns[ 2 ][ Text ], 0, strlen(AdminWarns[ 2 ][ Text ]), 256);
    strmid(AdminWarns[ 2 ][ Text ], AdminWarns[ 1 ][ Text ], 0, strlen(AdminWarns[ 1 ][ Text ]), 256);
    strmid(AdminWarns[ 1 ][ Text ], AdminWarns[ 0 ][ Text ], 0, strlen(AdminWarns[ 0 ][ Text ]), 256);
    strmid(AdminWarns[ 0 ][ Text ], text, 0, strlen(text), 256);
	return 1;
}
function: _SQLLoadImanja()
{
	if(cache_num_rows()) 
	{
		for(new i; i < cache_num_rows(); i++)
		{
			cache_get_value_name_int(i, "iSQLID", II[i][iSQLID]);
			cache_get_value_name_int(i,"iImaVlasnika",II[i][iImaVlasnika]);
			cache_get_value_name(i,"iVlasnik",II[i][iVlasnik],32);
			cache_get_value_name_float(i,"iImanjeX",II[i][iImanjeX]);
			cache_get_value_name_float(i,"iImanjeY",II[i][iImanjeY]);
			cache_get_value_name_float(i,"iImanjeZ",II[i][iImanjeZ]);
			cache_get_value_name_int(i,"iLevel",II[i][iLevel]);
			cache_get_value_name_int(i,"iCena",II[i][iCena]);
			cache_get_value_name_int(i,"iNeakt",II[i][iNeakt]);
			cache_get_value_name_int(i,"iPostavljeno",II[i][iPostavljeno]);
			cache_get_value_name_int(i,"iRadius",II[i][iRadius]);

			new b = i, string[300];
			if(II[b][iPostavljeno] == 1)
			{
			    imanja++;
				if(II[b][iImaVlasnika] == 0)
				{
					format(string,sizeof(string),"{6EF83C}Imanje na prodaju!\nCena: {FFFFFF}$%d\n{6EF83C}Nivo: {FFFFFF}%d\n{6EF83C}Adresa: {FFFFFF}%d\n{6EF83C}Precnik: {FFFFFF}%dm\n{6EF83C}Za kupovinu /kupiimanje",II[b][iCena],II[b][iLevel],b,II[b][iRadius]);
					ImanjeLabel[b] = CreateDynamic3DTextLabel(string ,-1,II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ],15);
					ImanjePickup[b] = CreateDynamicPickup(1239, 1, II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ]);
					CreateDynamicMapIcon(II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ], 57, -1, -1, -1, -1, 100);
				}
				if(II[b][iImaVlasnika] == 1)
				{
					format(string,sizeof(string),"{F3FF02}Vlasnik: {FFFFFF}%s\n{F3FF02}Nivo: {FFFFFF}%d\n{F3FF02}Cena: {FFFFFF}$%d\n{F3FF02}Adresa: {FFFFFF}%d\n{F3FF02}Precnik: {FFFFFF}%dm\n{F3FF02}Neaktivnost: {FFFFFF}%d sati",II[b][iVlasnik],II[b][iLevel],II[b][iCena],b,II[b][iRadius],II[b][iNeakt]);
					ImanjeLabel[b] = CreateDynamic3DTextLabel(string ,-1,II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ],15);
					ImanjePickup[b] = CreateDynamicPickup(1239, 1, II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ]);
					CreateDynamicMapIcon(II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ], 57, -1, -1, -1, -1, 100);
				}
			}
		}
		printf("[ Sistem ] Imanja: Uctano je %d imanja, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	}
	return 1;
}
function: SacuvajImanje(idimanja)
{
	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `imanja` SET `iImaVlasnika` = '%d', `iVlasnik` = '%s', `iImanjeX` = '%f', `iImanjeY` = '%f', `iImanjeZ` = '%f' WHERE `iSQLID` = '%d' LIMIT 1",
	II[idimanja][iImaVlasnika],
	II[idimanja][iVlasnik],
	II[idimanja][iImanjeX],
	II[idimanja][iImanjeY],
	II[idimanja][iImanjeZ],

	II[idimanja][iSQLID]);
	mysql_tquery(SQL, q);

	q[0] = EOS;
	mysql_format(SQL, q, sizeof(q), "UPDATE `imanja` SET `iLevel` = '%d', `iCena` = '%d', `iNeakt` = '%d', `iPostavljeno` = '%d', `iRadius` = '%d' WHERE `iSQLID` = '%d' LIMIT 1",
	II[idimanja][iLevel],
	II[idimanja][iCena],
	II[idimanja][iNeakt],
	II[idimanja][iPostavljeno],
	II[idimanja][iRadius],

	II[idimanja][iSQLID]);
	mysql_tquery(SQL, q);
	return 1;
}
ImanjeLabelIPickup(b)
{
	new string[256];
	if(II[b][iImaVlasnika] == 0)
	{
	    DestroyDynamic3DTextLabel(ImanjeLabel[b]);
		DestroyDynamicPickup(ImanjePickup[b]);
		format(string,sizeof(string),"{6EF83C}Imanje na prodaju!\nCena: {FFFFFF}$%d\n{6EF83C}Nivo: {FFFFFF}%d\n{6EF83C}Adresa: {FFFFFF}%d\n{6EF83C}Precnik: {FFFFFF}%dm\n{6EF83C}Za kupovinu /kupiimanje",II[b][iCena],II[b][iLevel],b,II[b][iRadius]);
		ImanjeLabel[b] = CreateDynamic3DTextLabel(string ,-1,II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ],15);
		ImanjePickup[b] = CreateDynamicPickup(1239, 1, II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ]);
	}
	if(II[b][iImaVlasnika] == 1)
	{
		DestroyDynamic3DTextLabel(ImanjeLabel[b]);
		DestroyDynamicPickup(ImanjePickup[b]);
		format(string,sizeof(string),"{F3FF02}Vlasnik: {FFFFFF}%s\n{F3FF02}Nivo: {FFFFFF}%d\n{F3FF02}Cena: {FFFFFF}$%d\n{F3FF02}Adresa: {FFFFFF}%d\n{F3FF02}Precnik: {FFFFFF}%dm\n{F3FF02}Neaktivnost: {FFFFFF}%d sati",II[b][iVlasnik],II[b][iLevel],II[b][iCena],b,II[b][iRadius],II[b][iNeakt]);
		ImanjeLabel[b] = CreateDynamic3DTextLabel(string ,-1,II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ],15);
		ImanjePickup[b] = CreateDynamicPickup(1239, 1, II[b][iImanjeX], II[b][iImanjeY], II[b][iImanjeZ]);
	}
	return 1;
}
function: ResetKradja(playerid)
{
	KillTimer(KVTimer[playerid]);
	if(KradeVoce[playerid] == 1)
	{
	    KradeVoce[playerid] = 0;
	}
	return 1;
}
function: _SQLLoadDrvece()
{
	if(cache_num_rows()) 
	{
		for(new i; i < cache_num_rows(); i++)
		{
			cache_get_value_name_int(i, "dSQLID", DI[i][dSQLID]);
			cache_get_value_name_float(i,"dDrvoX",DI[i][dDrvoX]);
			cache_get_value_name_float(i,"dDrvoY",DI[i][dDrvoY]);
			cache_get_value_name_float(i,"dDrvoZ",DI[i][dDrvoZ]);
			cache_get_value_name_int(i,"dVrsta",DI[i][dVrsta]);
			cache_get_value_name_int(i,"dRast",DI[i][dRast]);
			cache_get_value_name_int(i,"dRastVoca",DI[i][dRastVoca]);
			cache_get_value_name_int(i,"dPostavljeno",DI[i][dPostavljeno]);
			cache_get_value_name_int(i,"dIDImanja",DI[i][dIDImanja]);

			new b = i;			
			if(DI[b][dPostavljeno] == 1)
			{
			    drvece++;
			    if(DI[b][dRast] < 24)
			    {
			    	DrvoObject[b] = CreateDynamicObject(633, DI[b][dDrvoX], DI[b][dDrvoY], DI[b][dDrvoZ]+1.2, 0.0, 0.0, 0.0);
			    	new dvr[24];
			    	if(DI[b][dVrsta] == 1) { dvr = "Kruska"; }
			    	else if(DI[b][dVrsta] == 2) { dvr = "Jabuka"; }
			    	else if(DI[b][dVrsta] == 3) { dvr = "Sljiva"; }
			    	new krk[256];
			    	format(krk,sizeof(krk),"{00FFEE}Drvo jos nije izraslo!\nPreostalo vreme do izrastanja drveta: {FFFFFF}%d sati\n{00FFEE}Vrsta drveta: {FFFFFF}%s",24-DI[b][dRast],dvr);
			    	DrvoLabel[b] = CreateDynamic3DTextLabel(krk, -1, DI[b][dDrvoX], DI[b][dDrvoY], DI[b][dDrvoZ]+2, 10);
				}
				else if(DI[b][dRast] > 23)
				{
					if(DI[b][dVrsta] == 1) { DrvoObject[b] = CreateDynamicObject(618, DI[b][dDrvoX], DI[b][dDrvoY], DI[b][dDrvoZ], 0.0, 0.0, 0.0); }
					else if(DI[b][dVrsta] == 2) { DrvoObject[b] = CreateDynamicObject(672, DI[b][dDrvoX], DI[b][dDrvoY], DI[b][dDrvoZ]+1, 0.0, 0.0, 0.0); }
					else if(DI[b][dVrsta] == 3) { DrvoObject[b] = CreateDynamicObject(729, DI[b][dDrvoX], DI[b][dDrvoY], DI[b][dDrvoZ], 0.0, 0.0, 0.0); }
					new dvr[24];
			    	if(DI[b][dVrsta] == 1) { dvr = "Kruska"; }
			    	else if(DI[b][dVrsta] == 2) { dvr = "Jabuka"; }
			    	else if(DI[b][dVrsta] == 3) { dvr = "Sljiva"; }
			    	new krk[256];
			    	if(DI[b][dRastVoca] < 24) { format(krk,sizeof(krk),"{FFAF00}Voce jos nije izraslo!\nPreostalo vreme do izrastanja voca: {FFFFFF}%d sati\n{FFAF00}Vrsta drveta: {FFFFFF}%s",24-DI[b][dRastVoca],dvr); }
			    	else if(DI[b][dRastVoca] > 23) { format(krk,sizeof(krk),"{FFAF00}Voce je izraslo!\nMozete ga obrati - /oberivoce - (/ukradivoce)\nVrsta drveta: {FFFFFF}%s",dvr); }
			    	DrvoLabel[b] = CreateDynamic3DTextLabel(krk, -1, DI[b][dDrvoX], DI[b][dDrvoY], DI[b][dDrvoZ]+2, 10);
				}
			}
		}
		printf("[ Sistem ] Imanja: Uctano je %d drveta, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	}
	return 1;
}
function: SacuvajDrvo(iddrv)
{
	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `drvo` SET `dDrvoX` = '%f', `dDrvoY` = '%f', `dDrvoZ` = '%f', `dVrsta` = '%d', `dRast` = '%d' WHERE `dSQLID` = '%d' LIMIT 1",
	DI[iddrv][dDrvoX],
	DI[iddrv][dDrvoY],
	DI[iddrv][dDrvoZ],
	DI[iddrv][dVrsta],
	DI[iddrv][dRast],

	DI[iddrv][dSQLID]);
	mysql_tquery(SQL, q);

	q[0] = EOS;
	mysql_format(SQL, q, sizeof(q), "UPDATE `drvo` SET `dRastVoca` = '%d', `dPostavljeno` = '%d', `dIDImanja` = '%d' WHERE `dSQLID` = '%d' LIMIT 1",
	DI[iddrv][dRastVoca],
	DI[iddrv][dPostavljeno],
	DI[iddrv][dIDImanja],

	DI[iddrv][dSQLID]);
	mysql_tquery(SQL, q);	
	return 1;
}
forward Drvo();
public Drvo()
{
    for(new drvoid = 0; drvoid < MAX_DRVECE; drvoid++)
	{
		if(DI[drvoid][dPostavljeno] == 1)
		{
			if(DI[drvoid][dRast] < 23)
			{
			    DI[drvoid][dRast]++;
				DrvoLabelUpdate(drvoid);
				DestroyDynamicObject(DrvoObject[drvoid]);
				DrvoObject[drvoid] = CreateDynamicObject(633, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+1.2, 0.0, 0.0, 0.0);
				SacuvajDrvo(drvoid);
			}
			else if(DI[drvoid][dRast] == 23)
			{
			    DI[drvoid][dRast]++;
				DrvoLabelUpdate(drvoid);
				SacuvajDrvo(drvoid);
				DestroyDynamicObject(DrvoObject[drvoid]);
				if(DI[drvoid][dVrsta] == 1) { DrvoObject[drvoid] = CreateDynamicObject(618, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ], 0.0, 0.0, 0.0); }
				else if(DI[drvoid][dVrsta] == 2) { DrvoObject[drvoid] = CreateDynamicObject(672, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+1, 0.0, 0.0, 0.0); }
				else if(DI[drvoid][dVrsta] == 3) { DrvoObject[drvoid] = CreateDynamicObject(729, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ], 0.0, 0.0, 0.0); }
			}
			else if(DI[drvoid][dRast] > 23)
			{
			    DI[drvoid][dRastVoca]++;
			    DrvoLabelUpdate(drvoid);
			    DestroyDynamicObject(DrvoObject[drvoid]);
				if(DI[drvoid][dVrsta] == 1) { DrvoObject[drvoid] = CreateDynamicObject(618, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ], 0.0, 0.0, 0.0); }
				else if(DI[drvoid][dVrsta] == 2) { DrvoObject[drvoid] = CreateDynamicObject(672, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ]+1, 0.0, 0.0, 0.0); }
				else if(DI[drvoid][dVrsta] == 3) { DrvoObject[drvoid] = CreateDynamicObject(729, DI[drvoid][dDrvoX], DI[drvoid][dDrvoY], DI[drvoid][dDrvoZ], 0.0, 0.0, 0.0); }
			    SacuvajDrvo(drvoid);
			}
		}
	}
}

DrvoLabelUpdate(b)
{
    new dvr[24];
   	if(DI[b][dVrsta] == 1) { dvr = "Kruska"; }
   	else if(DI[b][dVrsta] == 2) { dvr = "Jabuka"; }
   	else if(DI[b][dVrsta] == 3) { dvr = "Sljiva"; }
   	new krk[256];
   	if(DI[b][dRast] < 24)
   	{
	   	format(krk,sizeof(krk),"{00FFEE}Drvo jos nije izraslo!\nPreostalo vreme do izrastanja drveta: {FFFFFF}%d sati\n{00FFEE}Vrsta drveta: {FFFFFF}%s",24-DI[b][dRast],dvr);
	}
	if(DI[b][dRast] > 23)
   	{
	   	if(DI[b][dRastVoca] < 24) { format(krk,sizeof(krk),"{FFAF00}Voce jos nije izraslo!\nPreostalo vreme do izrastanja voca: {FFFFFF}%d sati\n{FFAF00}Vrsta drveta: {FFFFFF}%s",24-DI[b][dRastVoca],dvr); }
    	else if(DI[b][dRastVoca] > 23) { format(krk,sizeof(krk),"{FFAF00}Voce je izraslo!\nMozete ga obrati - /oberivoce - (/ukradivoce)\nVrsta drveta: {FFFFFF}%s",dvr); }
	}
	UpdateDynamic3DTextLabelText(DrvoLabel[b], -1, krk);
	return 1;
}
function: JeoBroto(playerid)
{
	if(JeoBrt[playerid] == 1)
	{
	    JeoBrt[playerid] = 0;
	}
	return 1;
}
isNearNargila(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,1.0,380.4100,-1859.2144,7.9340) ||
	!IsPlayerInRangeOfPoint(playerid, 1.0, 1101.3817,-1022.7857,32.4045) ||
	!IsPlayerInRangeOfPoint(playerid, 1.0, 1104.9596,-1022.7794,32.4045) ||
	!IsPlayerInRangeOfPoint(playerid, 1.0, 1108.9683,-1022.7781,32.4045) ||
	!IsPlayerInRangeOfPoint(playerid, 1.0, 1114.3137,-1025.7015,32.4045))
	return 0;
	else
		return 1;
}
CMD:nargila(playerid, params[])
{
	if(!isNearNargila(playerid)) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA" Nisi blizu nargile");
	if(PlayerInfo[playerid][pNargila] == 0) return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Vi nemate nargilu, kupite je");
	ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0);
	SetPlayerAttachedObject(playerid, NARGILA_SMOKE, 18735, 2, 0.0, 0.1, -0.2, -25.5000, 0.0, 0.0, 0.10, 0.3, 0.15);
	OnePlayAnim(playerid,"SMOKING","M_smk_out", 4.0, 0, 0, 0, 0, 0);
	NargilaTimer[playerid] = SetTimerEx("Narg_Effect", 9000, false, "d",playerid);
	NargilaOpet[playerid] = true;
	return 1;
}
function: Narg_Effect(playerid) {

	NargilaOpet[playerid] = false;
	RemovePlayerAttachedObject(playerid, NARGILA_SMOKE);
	KillTimer(NargilaTimer[playerid]);
	return 1;
}
forward UkloniNargilu(playerid);
public UkloniNargilu(playerid)
{
RemovePlayerAttachedObject(playerid, NARGILA_SMOKE);
return 1;
}
fDialog(339)
{
        switch(listitem)
		{
		case 0: { PlayerInfo[playerid][pNargila] += 1; return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Kupili ste "SRWBOJA"Al Fakher!");}
		case 1: { PlayerInfo[playerid][pNargila] += 1; return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Kupili ste "SRWBOJA"StarBuzz!");}
		case 2: { PlayerInfo[playerid][pNargila] += 1; return SCM(playerid, -1, ""SRWBOJA"[V:RPG] "BELA"Kupili ste "SRWBOJA"Nakhla!");}
		}
		return 1;
}
function: GetPlayerIDS(string[])
{
    new testname[MPN];
    for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(UlogovanProvera[i] == 1)
		    {
				GetPlayerName(i, testname, sizeof(testname));
				if(!strcmp(testname, string, true))
				{
					return i;
				}
			}
		}
	}
	return IPI;
}
////////////////////////////////////////////////////////////////
function: Firework(i)
{
	new Float:x, Float:y, Float:z;
 	x = rx6[i];
	y = ry6[i];
 	z = rz6[i];
  	z += RocketHeight;
   	if(RocketExplosions[i] == 0)
    {
    	DestroyDynamicObject(Rocket[i]);
     	DestroyDynamicObject(RocketLight[i]);
      	DestroyDynamicObject(RocketSmoke[i]);
       	CreateExplosion(x ,y, z, 4, 10);
        CreateExplosion(x ,y, z, 5, 10);
        CreateExplosion(x ,y, z, 6, 10);
	}
 	else if(RocketExplosions[i] >= MAX_FIREWORKS)
  	{
   		for(new j = 0; j <= RocketSpread; j++)
     	{
      		CreateExplosion(x + float(j - (RocketSpread / 2)), y, z, 7, 10);
        	CreateExplosion(x, y + float(j - (RocketSpread / 2)), z, 7, 10);
         	CreateExplosion(x, y, z + float(j - (RocketSpread / 2)), 7, 10);
        }
        RocketExplosions[i] = -1;
        FireworkTotal = 0;
        Fired = 0;
        return true;
	}
 	else
  	{
   		x += float(random(RocketSpread) - (RocketSpread / 2));
     	y += float(random(RocketSpread) - (RocketSpread / 2));
      	z += float(random(RocketSpread) - (RocketSpread / 2));
       	CreateExplosion(x, y, z, 7, 10);
   	}
    RocketExplosions[i]++;
    SetTimerEx("Firework", 250, 0, "i", i);
    return 1;
}
///////////////////////////////////////////// WAR SYSTEM ///////////////////////////////////////////////////////////
CreateMaps( ) {

    // WAR MAP FREE 1
    CreateDynamicObjectEx(987, 1402.24536, 2725.05518, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1390.26404, 2725.06543, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1378.31885, 2725.07349, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1366.35645, 2725.08228, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1354.41626, 2725.06909, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1342.46826, 2725.05127, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1330.49927, 2725.06299, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1318.52832, 2725.06982, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1306.56763, 2725.06885, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1294.60339, 2725.07227, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1282.63672, 2725.05591, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1270.67261, 2725.07129, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1258.72913, 2725.08618, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1246.76160, 2725.08960, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1234.81372, 2725.08594, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1222.89075, 2725.08862, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1210.91333, 2725.09033, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1198.95313, 2725.09375, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1186.97864, 2725.10913, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1175.02136, 2725.11401, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1163.05969, 2725.12476, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1151.07605, 2725.11548, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1139.09717, 2725.15405, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1127.13562, 2725.16724, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1115.20520, 2725.17578, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(987, 1115.34839, 2737.05737, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.33215, 2749.04248, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.29431, 2761.00757, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.27698, 2772.97949, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.26611, 2784.92017, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.26294, 2796.90186, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.25940, 2808.88159, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.25647, 2820.85303, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.24048, 2832.83887, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.23950, 2844.83472, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.24780, 2856.75928, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1115.22070, 2862.74048, 9.80890,   0.00000, 0.00000, -90.00000);
    CreateDynamicObjectEx(987, 1127.12402, 2862.97852, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1139.06519, 2862.98975, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1151.01318, 2863.00220, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1162.96143, 2863.03613, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1174.92896, 2863.04810, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1186.89026, 2863.03076, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1198.87122, 2863.04126, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1210.81763, 2863.03394, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1222.73877, 2863.03052, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1234.70117, 2863.04736, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1246.66406, 2863.06421, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1258.64526, 2863.07935, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1270.60657, 2863.11597, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1282.54724, 2863.12769, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1294.50769, 2863.14014, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1306.46375, 2863.13843, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1318.41870, 2863.14063, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1330.35999, 2863.15503, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1342.32080, 2863.16919, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1354.26807, 2863.15820, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1366.20166, 2863.14795, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1378.16162, 2863.16138, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1390.08862, 2863.17212, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1402.01514, 2863.17798, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1413.96252, 2863.20532, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1416.96423, 2863.21606, 9.80890,   0.00000, 0.00000, -180.00000);
    CreateDynamicObjectEx(987, 1416.89087, 2851.31323, 9.80890,   0.00000, 0.00000, -270.00000);
    CreateDynamicObjectEx(987, 1416.87317, 2839.38721, 9.80890,   0.00000, 0.00000, -270.00000);
    CreateDynamicObjectEx(987, 1416.87952, 2827.44702, 9.80890,   0.00000, 0.00000, -270.00000);
    CreateDynamicObjectEx(987, 1416.89124, 2815.50659, 9.80890,   0.00000, 0.00000, -270.00000);
    CreateDynamicObjectEx(987, 1427.16016, 2809.34521, 9.80890,   0.00000, 0.00000, -211.00000);
    CreateDynamicObjectEx(987, 1437.34827, 2803.20337, 9.80890,   0.00000, 0.00000, -211.00000);
    CreateDynamicObjectEx(987, 1414.16968, 2725.04785, 9.80890,   0.00000, 0.00000, 47.00000);
    CreateDynamicObjectEx(987, 1422.31311, 2733.78906, 9.80890,   0.00000, 0.00000, 39.00000);
    CreateDynamicObjectEx(3887, 1230.42151, 2796.69702, 7.29060,   0.00000, 0.00000, -156.00000);
    CreateDynamicObjectEx(11441, 1350.94287, 2833.11011, 9.80600,   0.00000, 0.00000, 76.00000);
    CreateDynamicObjectEx(3374, 1378.27673, 2802.86523, 11.30570,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(3374, 1343.54895, 2761.32080, 9.86570,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(3374, 1215.42517, 2760.70410, 11.30570,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(3374, 1197.53918, 2813.81812, 11.30570,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(3374, 1261.20776, 2837.02905, 11.28570,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1345.34375, 2821.74805, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(3887, 1392.30969, 2749.75195, 11.99060,   0.00000, 0.00000, -62.00000);
    CreateDynamicObjectEx(1225, 1389.02783, 2822.76733, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1388.89087, 2824.23730, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1388.08826, 2823.26025, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1390.50586, 2811.41016, 10.23200,   0.00000, 91.00000, 76.00000);
    CreateDynamicObjectEx(1225, 1405.41479, 2797.38818, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(11441, 1351.93457, 2824.92578, 9.80600,   0.00000, 0.00000, -164.00000);
    CreateDynamicObjectEx(1225, 1345.27417, 2822.78687, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1336.10559, 2797.72266, 10.15200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1335.11780, 2798.80396, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1340.89380, 2784.21606, 9.63200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1340.35193, 2783.20654, 9.55200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1341.02002, 2762.57544, 9.01200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1340.58154, 2761.26416, 9.01200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1374.03882, 2748.16919, 10.63200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1387.54565, 2755.45483, 11.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1386.31445, 2755.26904, 11.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1309.16650, 2758.02100, 10.17200,   -0.04000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1308.42639, 2758.92725, 10.17200,   -0.04000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1286.70679, 2759.12500, 9.55200,   -0.04000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1287.17090, 2760.54395, 9.55200,   -0.04000, 0.00000, 0.00000);
    CreateDynamicObjectEx(12957, 1284.31543, 2757.97754, 10.56130,   0.00000, 0.00000, -18.00000);
    CreateDynamicObjectEx(1225, 1278.00623, 2768.32422, 10.17200,   90.00000, -2.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1268.38147, 2774.02905, 10.19200,   0.00000, -2.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1248.82690, 2774.68872, 10.19200,   0.00000, -2.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1242.80884, 2757.51929, 10.19200,   0.00000, -2.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1251.97766, 2741.87622, 9.59200,   0.00000, -2.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1234.04407, 2741.60352, 10.25200,   0.00000, -2.00000, 0.00000);
    CreateDynamicObjectEx(11440, 1161.18787, 2802.94019, 9.20590,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1162.79236, 2806.82666, 12.66940,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(13591, 1201.63550, 2851.41064, 10.37750,   0.00000, 0.00000, 47.00000);
    CreateDynamicObjectEx(1225, 1196.92114, 2847.86133, 10.27920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1261.68506, 2839.84619, 10.29400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(11440, 1318.50671, 2833.33472, 9.14880,   0.00000, 0.00000, 69.00000);
    CreateDynamicObjectEx(1225, 1309.56897, 2828.14404, 10.17700,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1303.88879, 2809.01147, 10.21700,   0.00000, 91.00000, 0.00000);
    CreateDynamicObjectEx(11443, 1393.70508, 2848.73633, 9.59060,   0.00000, 0.00000, -52.00000);
    CreateDynamicObjectEx(1225, 1393.84058, 2846.14209, 10.12890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1390.42456, 2848.55322, 10.12890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(11443, 1183.32727, 2767.95508, 9.80886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1186.34802, 2767.93628, 10.23610,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1185.02710, 2771.86255, 10.23610,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(3363, 1277.47925, 2799.51782, 9.80920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1342.50500, 2841.29810, 10.21200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1385.46948, 2781.96582, 10.33200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(1225, 1385.95361, 2780.62671, 10.33200,   0.00000, 0.00000, 0.00000);
    CreateDynamicObjectEx(12957, 1390.28198, 2782.74414, 10.61180,   0.00000, 0.00000, 0.00000);
	// WAR MAP FREE 2
	CreateDynamicObjectEx(8171, 2946.0625, 4109.7930, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(8171, 2906.4460, 4109.7998, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(8171, 2887.0964, 4109.9063, 60.4812, 0.2350, 91.3100, 359.7500);
    CreateDynamicObjectEx(8171, 2966.1877, 4109.6035, 60.5463, 0.2335, 89.3224, 180.0543);
    CreateDynamicObjectEx(8171, 2906.4038, 4248.0059, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(8171, 2946.0469, 4248.0132, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(8171, 2887.6990, 4248.1597, 61.0062, 359.9807, 91.3074, 359.7473);
    CreateDynamicObjectEx(8171, 2965.8220, 4247.4531, 60.0713, 0.2307, 89.3188, 180.2994);
    CreateDynamicObjectEx(8171, 2926.5183, 4316.0449, 60.0213, 0.2307, 89.3134, 270.0416);
    CreateDynamicObjectEx(8171, 2929.2061, 4041.4587, 60.0213, 0.2307, 89.3079, 90.1884);
    CreateDynamicObjectEx(8171, 2946.4397, 4248.4385, 79.3963, 0.0000, 179.1900, 0.0000);
    CreateDynamicObjectEx(8171, 2906.7041, 4248.4395, 78.8463, 0.0000, 179.1870, 0.0000);
    CreateDynamicObjectEx(8171, 2906.6987, 4110.1406, 78.8463, 0.0000, 179.1870, 0.0000);
    CreateDynamicObjectEx(3110, 2945.3767, 4153.6963, 38.6663, 0.0000, 0.0000, 5.9550);
    CreateDynamicObjectEx(6052, 2898.2649, 4199.9722, 43.4139, 0.0000, 0.0000, 29.9100);
    CreateDynamicObjectEx(6052, 2899.5896, 4199.0464, 43.0989, 359.5750, 177.1150, 284.2800);
    CreateDynamicObjectEx(16084, 2901.1116, 4133.3525, 38.4913, 1.7500, 356.0300, 15.9700);
    CreateDynamicObjectEx(3663, 2927.2021, 4166.1641, 43.0220, 0.0000, 0.0000, 272.2102);
    CreateDynamicObjectEx(3663, 2927.0901, 4170.1211, 43.0220, 0.0000, 0.0000, 92.4481);
    CreateDynamicObjectEx(16084, 2949.8240, 4213.4536, 37.3412, 1.7468, 356.0284, 191.4136);
    CreateDynamicObjectEx(3269, 2905.7034, 4160.4521, 40.9413, 0.0000, 0.0000, 57.8350);
    CreateDynamicObjectEx(12934, 2973.6648, 4161.0703, 44.3245, 0.0000, 0.0000, 48.1301);
    CreateDynamicObjectEx(18260, 2940.8855, 4118.3267, 42.5145, 0.0000, 0.0000, 190.5106);
    CreateDynamicObjectEx(2932, 2916.1472, 4044.9136, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2932, 2930.3440, 4044.7532, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2932, 2930.2915, 4054.1082, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2932, 2915.9849, 4053.4519, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2932, 2925.5251, 4061.8821, 42.3932, 0.0000, 0.0000, 90.5078);
    CreateDynamicObjectEx(2932, 2918.3765, 4061.8315, 42.3932, 0.0000, 0.0000, 90.5054);
    CreateDynamicObjectEx(2973, 2929.5278, 4071.7622, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2973, 2933.3254, 4074.2947, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2973, 2931.3643, 4073.2207, 43.3662, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2973, 2934.2549, 4076.8298, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2973, 2924.2859, 4078.3643, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2973, 2920.9131, 4079.6577, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2973, 2922.5464, 4079.2798, 43.3913, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2973, 2914.6040, 4077.2412, 40.8763, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2975, 2912.0498, 4076.4343, 40.9413, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2975, 2912.0498, 4076.4336, 42.1663, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2975, 2909.8635, 4076.1775, 42.1663, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2975, 2909.8833, 4076.2266, 41.1663, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2991, 2921.7510, 4103.8647, 41.5690, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2991, 2921.7744, 4103.8726, 42.7690, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2991, 2921.7744, 4103.8721, 43.9191, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2934, 2935.0413, 4312.3618, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2934, 2935.0022, 4303.6436, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2934, 2920.7473, 4312.1729, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2934, 2920.5190, 4302.8579, 42.3932, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2934, 2922.3162, 4295.3857, 42.3932, 0.0000, 0.0000, 89.5101);
    CreateDynamicObjectEx(2934, 2933.4146, 4295.3623, 42.3932, 0.0000, 0.0000, 90.0057);
    CreateDynamicObjectEx(2934, 2926.8384, 4295.3472, 42.3932, 0.0000, 0.0000, 89.5056);
    CreateDynamicObjectEx(2974, 2913.1233, 4281.4204, 40.9413, 0.0000, 0.0000, 119.6400);
    CreateDynamicObjectEx(2974, 2915.3826, 4280.4678, 40.9413, 0.0000, 0.0000, 181.6455);
    CreateDynamicObjectEx(2974, 2918.6296, 4280.6685, 40.9413, 0.0000, 0.0000, 269.3875);
    CreateDynamicObjectEx(2974, 2927.0398, 4279.2568, 40.9413, 0.0000, 0.0000, 253.3698);
    CreateDynamicObjectEx(2974, 2929.8049, 4279.1147, 40.9413, 0.0000, 0.0000, 279.3544);
    CreateDynamicObjectEx(2974, 2928.8606, 4277.5688, 40.9413, 0.0000, 0.0000, 278.0994);
    CreateDynamicObjectEx(2974, 2926.5779, 4277.2715, 40.9413, 0.0000, 0.0000, 278.0969);
    CreateDynamicObjectEx(2974, 2928.1638, 4277.4058, 43.7663, 0.0000, 0.0000, 278.0969);
    CreateDynamicObjectEx(2974, 2924.7744, 4278.5913, 40.9413, 0.0000, 0.0000, 340.5964);
    CreateDynamicObjectEx(3378, 2946.0964, 4280.7583, 42.1112, 0.0000, 0.0000, 304.1952);
    CreateDynamicObjectEx(3378, 2946.0957, 4280.7578, 44.3512, 0.0000, 0.0000, 304.1949);
    CreateDynamicObjectEx(3585, 2908.1560, 4065.1472, 42.5711, 0.0000, 0.0000, 47.8650);
    CreateDynamicObjectEx(3585, 2906.3303, 4066.7869, 42.5711, 0.0000, 0.0000, 47.8619);
    CreateDynamicObjectEx(3585, 2904.6826, 4068.4734, 42.5711, 0.0000, 0.0000, 39.9219);
    CreateDynamicObjectEx(3585, 2903.3472, 4070.2861, 42.5711, 0.0000, 0.0000, 33.9639);
    CreateDynamicObjectEx(3585, 2902.2825, 4072.2351, 42.5711, 0.0000, 0.0000, 20.8438);
    CreateDynamicObjectEx(3585, 2901.7178, 4074.3394, 42.5461, 0.0000, 0.0000, 6.9461);
    CreateDynamicObjectEx(3585, 2901.5010, 4076.6543, 42.5211, 0.0000, 0.0000, 2.9734);
    CreateDynamicObjectEx(2991, 2950.1531, 4094.4287, 41.5690, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2991, 2950.1523, 4094.4287, 42.8190, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2991, 2950.1523, 4094.4287, 44.0690, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(2991, 2954.3076, 4093.2632, 41.5690, 0.0000, 0.0000, 328.1051);
    CreateDynamicObjectEx(2991, 2954.3213, 4093.2837, 42.8190, 0.0000, 0.0000, 328.1012);
    CreateDynamicObjectEx(2991, 2954.3213, 4093.2832, 44.0689, 0.0000, 0.0000, 328.1012);
    CreateDynamicObjectEx(2991, 2942.9612, 4095.0745, 41.5439, 0.0000, 0.0000, 328.1012);
    CreateDynamicObjectEx(2991, 2942.9609, 4095.0742, 42.7689, 0.0000, 0.0000, 328.1012);
    CreateDynamicObjectEx(2991, 2942.9609, 4095.0742, 43.8939, 0.0000, 0.0000, 328.1012);
    CreateDynamicObjectEx(2991, 2946.3823, 4094.3325, 45.2190, 359.2500, 358.0150, 4.0111);
    CreateDynamicObjectEx(16301, 2914.8337, 4120.4917, 45.1091, 0.0000, 0.0000, 71.7750);
    CreateDynamicObjectEx(16311, 2930.9119, 4148.0361, 52.3643, 0.0000, 0.0000, 45.8950);
    CreateDynamicObjectEx(16311, 2953.0288, 4188.8677, 52.2393, 0.0000, 0.0000, 256.5099);
    CreateDynamicObjectEx(16301, 2952.8406, 4220.3813, 44.2092, 358.7500, 358.0150, 282.2239);
    CreateDynamicObjectEx(3865, 2907.0601, 4280.1265, 42.8752, 0.0000, 0.0000, 131.5950);
    CreateDynamicObjectEx(3865, 2900.9775, 4273.8223, 42.8752, 0.0000, 0.0000, 141.5642);
    CreateDynamicObjectEx(3865, 2897.5974, 4266.8145, 42.8752, 0.0000, 0.0000, 171.4688);
    CreateDynamicObjectEx(3865, 2896.8999, 4258.4038, 42.8752, 0.0000, 0.0000, 181.4336);
    CreateDynamicObjectEx(3865, 2897.0337, 4250.6128, 42.8752, 0.0000, 0.0000, 181.4282);
    CreateDynamicObjectEx(3865, 2897.1570, 4241.4370, 42.8752, 0.0000, 0.0000, 181.4282);
    CreateDynamicObjectEx(3865, 2897.2605, 4232.4385, 42.8752, 0.0000, 0.0000, 181.4282);
    CreateDynamicObjectEx(3865, 2897.3896, 4223.4839, 42.8752, 0.0000, 0.0000, 181.4282);
    CreateDynamicObjectEx(3865, 2897.3127, 4210.8110, 43.5502, 14.6750, 0.0000, 181.4282);
    CreateDynamicObjectEx(3865, 2897.3782, 4202.7544, 46.6752, 27.8322, 0.0000, 181.4227);
    CreateDynamicObjectEx(3865, 2897.4624, 4195.0615, 50.7502, 27.8284, 0.0000, 181.4227);
    CreateDynamicObjectEx(3865, 2897.5408, 4187.7300, 55.5501, 37.7684, 0.0000, 181.4227);
    CreateDynamicObjectEx(3865, 2897.4651, 4180.3711, 60.9252, 34.5455, 0.0000, 179.4227);
    CreateDynamicObjectEx(3865, 2897.1863, 4171.4805, 64.1002, 4.7660, 0.0000, 178.4177);
    CreateDynamicObjectEx(3675, 2964.6809, 4127.9097, 47.7725, 0.0000, 0.0000, 270.2703);
    CreateDynamicObjectEx(3214, 2897.4216, 4162.3687, 56.3810, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(3214, 2897.3164, 4154.2368, 56.3810, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(3269, 2896.8799, 4150.0088, 42.3413, 0.0000, 0.0000, 348.0420);
    CreateDynamicObjectEx(3865, 2898.0813, 4146.1489, 64.1002, 4.7626, 0.0000, 359.8123);
    CreateDynamicObjectEx(3865, 2897.9731, 4137.1470, 62.7251, 12.7026, 0.0000, 359.8077);
    CreateDynamicObjectEx(3865, 2897.8188, 4128.4048, 60.5751, 14.6852, 0.0000, 359.8022);
    CreateDynamicObjectEx(3865, 2897.9934, 4119.8823, 57.8000, 20.9332, 0.0000, 3.7722);
    CreateDynamicObjectEx(3865, 2898.4143, 4111.4478, 54.5500, 20.9290, 0.0000, 3.7683);
    CreateDynamicObjectEx(3865, 2898.8235, 4103.2388, 51.1500, 23.1790, 0.0000, 3.7683);
    CreateDynamicObjectEx(3865, 2899.2803, 4094.7463, 47.5000, 23.1757, 0.0000, 3.7628);
    CreateDynamicObjectEx(3865, 2899.8013, 4087.6245, 45.1249, 14.9706, 0.0000, 5.7478);
    CreateDynamicObjectEx(3865, 2900.8042, 4081.6189, 43.9000, 9.9839, 0.0000, 11.4958);
    CreateDynamicObjectEx(3406, 2962.1606, 4124.8135, 47.0120, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(3406, 2951.8049, 4123.2603, 47.0120, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(12934, 2937.2039, 4098.4331, 44.3245, 0.0000, 0.0000, 199.4000);
    CreateDynamicObjectEx(925, 2961.7756, 4241.9683, 42.0032, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(925, 2959.4500, 4241.9927, 42.0032, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(925, 2957.1260, 4242.0928, 42.0032, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(925, 2953.7290, 4242.2393, 42.0032, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(925, 2951.3335, 4243.0142, 42.0032, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(925, 2951.2844, 4242.9897, 44.0532, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(925, 2953.7285, 4242.2393, 44.1032, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(1348, 2946.2793, 4246.0381, 41.6438, 0.0000, 0.0000, 139.5800);
    CreateDynamicObjectEx(964, 2953.7417, 4242.2329, 45.1740, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(3566, 2949.3616, 4258.5718, 43.5549, 0.0000, 0.0000, 49.8500);
    CreateDynamicObjectEx(3566, 2936.5239, 4250.1211, 43.5549, 0.0000, 0.0000, 119.6350);
    CreateDynamicObjectEx(3566, 2912.6487, 4244.3428, 43.5549, 0.0000, 0.0000, 229.3001);
    CreateDynamicObjectEx(3761, 2932.2522, 4188.7314, 42.9402, 0.0000, 0.0000, 55.8950);
    CreateDynamicObjectEx(3761, 2926.2815, 4193.4009, 42.9402, 0.0000, 0.0000, 135.6530);
    CreateDynamicObjectEx(3761, 2935.1130, 4197.8228, 42.9402, 0.0000, 0.0000, 185.4984);
    CreateDynamicObjectEx(3761, 2921.3103, 4200.0815, 42.9402, 0.0000, 0.0000, 125.6732);
    CreateDynamicObjectEx(3761, 2917.0486, 4192.9609, 42.9402, 0.0000, 0.0000, 215.4027);
    CreateDynamicObjectEx(2395, 2925.3589, 4167.7871, 71.9962, 270.6749, 0.0000, 359.0000);
    CreateDynamicObjectEx(8171, 2946.4680, 4110.1543, 79.4213, 0.0000, 179.1870, 0.0000);
    CreateDynamicObjectEx(2395, 2925.3147, 4165.0737, 71.9712, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2925.2715, 4162.3584, 71.9462, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2928.9763, 4162.2866, 71.9462, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2929.0112, 4165.0371, 71.9712, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2929.0752, 4167.7290, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2925.4006, 4170.5552, 71.8462, 90.2851, 0.0000, 358.4797);
    CreateDynamicObjectEx(2395, 2929.1240, 4170.4775, 71.8462, 90.2802, 0.0000, 358.9784);
    CreateDynamicObjectEx(2395, 2929.1077, 4167.8022, 71.8462, 90.2802, 0.0000, 358.9783);
    CreateDynamicObjectEx(2395, 2929.0605, 4165.1211, 71.8212, 90.2802, 0.0000, 358.9783);
    CreateDynamicObjectEx(2395, 2925.3518, 4167.8628, 71.8212, 90.2802, 0.0000, 358.9783);
    CreateDynamicObjectEx(2395, 2925.3230, 4165.1523, 71.8212, 90.2802, 0.0000, 358.9783);
    CreateDynamicObjectEx(987, 2924.9365, 4162.5845, 71.7927, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(987, 2925.0972, 4174.1118, 71.8677, 0.0000, 0.0000, 270.2703);
    CreateDynamicObjectEx(987, 2936.6013, 4174.0420, 71.8677, 0.0000, 0.0000, 180.5392);
    CreateDynamicObjectEx(987, 2936.7102, 4162.2393, 71.8677, 0.0000, 0.0000, 90.8084);
    CreateDynamicObjectEx(2395, 2925.3977, 4170.5176, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2925.4326, 4171.6479, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2929.1550, 4171.5186, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2929.1260, 4169.9878, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2932.8457, 4171.4375, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2932.8379, 4168.7305, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2932.7468, 4166.0405, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2932.6855, 4163.2832, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2932.6709, 4162.2046, 71.9962, 270.6702, 0.0000, 358.9948);
    CreateDynamicObjectEx(2395, 2937.3682, 4162.5752, 71.9712, 270.6702, 0.0000, 88.7397);
    CreateDynamicObjectEx(2395, 2937.3582, 4166.2656, 71.9712, 270.6647, 0.0000, 88.7366);
    CreateDynamicObjectEx(2395, 2937.3662, 4169.9263, 71.9712, 270.6647, 0.0000, 88.7366);
    CreateDynamicObjectEx(2395, 2937.5039, 4170.8687, 71.9712, 270.6647, 0.0000, 88.7366);
    CreateDynamicObjectEx(2395, 2925.4963, 4173.2295, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2925.4705, 4174.1040, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2929.1973, 4174.0586, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2929.2031, 4173.0093, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2932.9282, 4173.9673, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2932.8831, 4171.2441, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2932.8367, 4168.5713, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2932.8132, 4165.9478, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2932.8315, 4165.2998, 71.8462, 90.2802, 0.0000, 358.4784);
    CreateDynamicObjectEx(2395, 2934.0190, 4163.1309, 71.8462, 90.2802, 354.0450, 93.8027);
    CreateDynamicObjectEx(2395, 2933.9878, 4166.7329, 71.8462, 90.2802, 356.0249, 93.8013);
    CreateDynamicObjectEx(2395, 2933.8804, 4170.3828, 71.8462, 90.2802, 356.0229, 93.8013);
    CreateDynamicObjectEx(987, 2936.6035, 4174.4302, 76.5927, 0.0000, 0.0000, 180.5383);
    CreateDynamicObjectEx(987, 2937.1362, 4162.2231, 76.6927, 0.0000, 0.0000, 90.8075);
    CreateDynamicObjectEx(987, 2924.9365, 4162.1846, 76.6927, 0.0000, 0.0000, 0.0000);
    CreateDynamicObjectEx(987, 2924.6235, 4174.1113, 76.7927, 0.0000, 0.0000, 270.2692);
    CreateDynamicObjectEx(1472, 2908.9597, 4064.4204, 41.3564, 0.0000, 0.0000, 48.6000);
}
WarTDControl( playerid, bool:show ) {
	if( show == true ) {
        for( new i = 0; i < 9; i ++ ) {
			PlayerTextDrawShow( playerid, WARTextDraw[ playerid ][ i ] );
		}
	}
	else if( show == false ) {
		for( new i = 0; i < 9; i ++ ) {
			PlayerTextDrawHide( playerid, WARTextDraw[ playerid ][ i ]);
		}
	}
}

WARMessage( w, color, string[] ) {
	foreach(new i: Player) {
		if( WARPInfo[ i ][ warID ] == w ) {
			SCM( i, color, string );
		}
	}
}

SetWarStatsTD( w ) {
	new string[ 128 ], stringcic[ 10 ];
	foreach(new id: Player) {
 		if( WARPInfo[ id ][ warID ] == w ) {
			format( string ,sizeof( string ),"~w~Ubistva: ~g~%d~n~~w~Smrti: ~r~%d~n~~w~Igraci: ~y~%d", WARInfo[ w ][ warTeamScore ][ 0 ], WARInfo[ w ][ warTeamScore ][ 1 ], WARInfo[ w ][ warTeamMembers ][ 0 ] );
			PlayerTextDrawSetString( id, WARTextDraw[ id ][ 5 ],  string );
			format( string ,sizeof( string ),"~w~Ubistva: ~g~%d~n~~w~Smrti: ~r~%d~n~~w~Igraci: ~y~%d", WARInfo[ w ][ warTeamScore ][ 1 ], WARInfo[ w ][ warTeamScore ][ 0 ], WARInfo[ w ][ warTeamMembers ][ 1 ] );
			PlayerTextDrawSetString( id, WARTextDraw[ id ][ 6 ],  string );
			format( stringcic, sizeof( stringcic ), "%s", ImeOrganizacije( PlayerInfo[ WARInfo[ w ][ warTeamLeader ][ 0 ] ][ pClan ] ) );
			PlayerTextDrawSetString( id, WARTextDraw[ id ][ 3 ],  stringcic );
			format( stringcic, sizeof( stringcic ), "%s", ImeOrganizacije( PlayerInfo[ WARInfo[ w ][ warTeamLeader ][ 1 ] ][ pClan ] ) );
			PlayerTextDrawSetString( id, WARTextDraw[ id ][ 4 ],  stringcic );
		}
	}
}
ResetWarStatistics( playerid ) {
    WARPInfo[ playerid ][ warTeam ][ 0 ] = false;
    WARPInfo[ playerid ][ warTeam ][ 1 ] = false;
    WARPInfo[ playerid ][ warKills ] = 0;
    WARPInfo[ playerid ][ warDeaths ] = 0;
    WARPInfo[ playerid ][ warID ] = -1;
}
forward StopWAR( w );
public StopWAR( w ) {
    WARInfo[ w ][ warActive ] = false;
    WARInfo[ w ][ warCreating ] = false;
	KillTimer( WARInfo[ w ][ warTimer ] );
	foreach(new i: Player) {
	    if( WARPInfo[ i ][ warID ] == w ) {

  		    if (WARInfo[ w ][ warTeamScore ][ 0 ] > WARInfo[ w ][ warTeamScore ][ 1 ] ) {
  		        if( WARPInfo[ i ][ warTeam ][ 0 ] ) {
  		        	SCM( i, -1, ""BELA"WAR "BELA"| "BELA"Vas tim je pobedio!CESTITAMO VAM.");
  		        }
  		    }
  		    if(WARInfo[ w ][ warTeamScore ][ 1 ] > WARInfo[ w ][ warTeamScore ][ 0 ] ) {
  		        if( WARPInfo[ i ][ warTeam ][ 1 ] ) {
  		        	SCM( i, -1, ""BELA"WAR "BELA"| "BELA"Vas tim je pobedio!CESTITAMO VAM.");
  		        }
  		    }
  		    SCM( i, -1, globalstring );
  		    format( globalstring, sizeof( globalstring ), ""SRWBOJA"WAR "BELA"| "SRWBOJA"Tvoj skor"BELA": "SRWBOJA"Ubistva: "BELA"(%d) "BELA"| "SRWBOJA"Smrti: "BELA"(%d)", WARPInfo[ i ][ warKills ], WARPInfo[ i ][ warDeaths ] );
  		    SCM( i, -1, globalstring);
  		    format( globalstring, sizeof( globalstring ), ""SRWBOJA"WAR "BELA"| "COL_TEAM1"Tim 1: "SRWBOJA"(%d) | "COL_TEAM2"Tim 2: "SRWBOJA"(%d)", WARInfo[ w ][ warTeamScore ][ 0 ], WARInfo[ w ][ warTeamScore ][ 1 ] );
  		    SCM( i, -1, globalstring );

  		    WARPInfo[ i ][ warID ] = -1;
	        SetPlayerHealth( i, 100 );

	        SetPlayerPos( i, WARPInfo[ i ][ LastPosition ][ 0 ], WARPInfo[ i ][ LastPosition ][ 1 ],  WARPInfo[ i ][ LastPosition ][ 2 ] );
	        SetPlayerVirtualWorld( i, WARPInfo[ i ][ LastVirtualWorld ] );
	        SetPlayerInterior( i, WARPInfo[ i ][ LastInterior ] );


			ResetPlayerWeapons( i );

	        ResetWarStatistics( i );

	        WarTDControl( i, false );
		}
	}
	WARInfo[ w ][ warTeamMembers ][ 0 ] = 0;
    WARInfo[ w ][ warTeamMembers ][ 1 ] = 0;
    WARInfo[ w ][ warTeamScore ][ 0 ] = 0;
    WARInfo[ w ][ warTeamScore ][ 1 ] = 0;
	return true;
}
forward StopWARTimer( w );
public StopWARTimer( w ) {
    if( WARInfo[ w ][ warActive ] == false ) { WARInfo[ w ][ warTimerMin ] = 1; WARInfo[ w ][ warTimerSec ] = 0; KillTimer( WARInfo[ w ][ warTimerTime ] ); }
    WARInfo[ w ][ warTimerSec ]++;
    if( WARInfo[ w ][ warTimerSec ] == 60 ) { WARInfo[ w ][ warTimerMin ]++; WARInfo[ w ][ warTimerSec ] = 0; }
    foreach(new i: Player) {
        if( WARPInfo[ i ][ warID ] == w ) {
            new vreme_string[ 10 ];
		    if( WARInfo[ w ][ warTimerSec ] >= 51 ) {
           		format( vreme_string, sizeof( vreme_string ), "%d:0%d",10*60000/60000 - WARInfo[ w ][ warTimerMin ], 10*60000/10000 - WARInfo[ w ][ warTimerSec ] );
		    }
		    else if( WARInfo[ w ][ warTimerMin ] >= 6 ) {
           		format( vreme_string, sizeof( vreme_string ), "0%d:%d",10*60000/60000 - WARInfo[ w ][ warTimerMin ], 10*60000/10000 - WARInfo[ w ][ warTimerSec ] );
		    }
			else if( WARInfo[ w ][ warTimerSec ] >= 51 && WARInfo[ w ][ warTimerMin ] >= 6) {
           		format( vreme_string, sizeof( vreme_string ), "0%d:0%d",10*60000/60000 - WARInfo[ w ][ warTimerMin ], 10*60000/10000 - WARInfo[ w ][ warTimerSec ] );
			}
			else {
           		format( vreme_string, sizeof( vreme_string ), "%d:%d",10*60000/60000 - WARInfo[ w ][ warTimerMin ], 10*60000/10000 - WARInfo[ w ][ warTimerSec ] );
			}
			PlayerTextDrawSetString( i, WARTextDraw[ i ][ 8 ],  vreme_string );
    	}
    }
    return true;
}
//==============================================================//
forward PovecajDutyTime(); public PovecajDutyTime() {
    foreach(new i:Player)
	{
        if(UlogovanProvera[i] == 1 && (PlayerInfo[i][pGM] >= 1 || PlayerInfo[i][pAdmin] >= 1))
		{
            PlayerInfo[ i ][ pDutyTime ] ++;
            SavePlayer( i );
        }
    }
    return true;
}

// == == == == == == == == == == == == == == == == == == == == == == == == == //
VoziloJeAuto(id)
{
    if(id == 400 || id == 401 || id == 402 || id == 404 || id == 405 || id == 409 || id == 401 || id == 411 || id == 412 || id == 413 || id == 414 || id == 415 || id == 416 || id == 418 || id == 419 || id == 420 || id == 421) return 1;
    else if(id == 422 || id == 423 || id == 424 || id == 426 || id == 428 || id == 429 || id == 434 || id == 436 || id == 438 || id == 439 || id == 440 || id == 442 || id == 444 || id == 445 || id == 451 || id == 457) return 1;
    else if(id == 458 || id == 459 || id == 466 || id == 467 || id == 470 || id == 474 || id == 475 || id == 477 || id == 478 || id == 479 || id == 480 || id == 482 || id == 483 || id == 485 || id == 489 || id == 490) return 1;
    else if(id == 491 || id == 492 || id == 494 || id == 495 || id == 496 || id == 500 || id == 502 || id == 503 || id == 504 || id == 505 || id == 506 || id == 507 || id == 508 || id == 516 || id == 517 || id == 518) return 1;
    else if(id == 525 || id == 526 || id == 527 || id == 528 || id == 529 || id == 530 || id == 531 || id == 533 || id == 534 || id == 535 || id == 536 || id == 539 || id == 540 || id == 541 || id == 542 || id == 543) return 1;
    else if(id == 545 || id == 546 || id == 547 || id == 549 || id == 550 || id == 551 || id == 552 || id == 554 || id == 555 || id == 556 || id == 557 || id == 558 || id == 559 || id == 560 || id == 561 || id == 562) return 1;
	else if(id == 565 || id == 566 || id == 567 || id == 568 || id == 571 || id == 572 || id == 573 || id == 574 || id == 575 || id == 576 || id == 578 || id == 579 || id == 580 || id == 582 || id == 583 || id == 585) return 1;
	else if(id == 587 || id == 588 || id == 589 || id == 596 || id == 597 || id == 598 || id == 599 || id == 600 || id == 601 || id == 602 || id == 603 || id == 604 || id == 605) return 1;
	return 0;
}
/////////////////////////////////////////////////////////////////////
forward TehnickiPregledV(playerid, pregledid);
public TehnickiPregledV(playerid, pregledid)
{
	if(UlogovanProvera[playerid] == 0) return 1;
	if(pregledid == 1)
	{
		Tehnicki_Pregled[playerid] = 0; TogglePlayerControllable(playerid, 1);
		if(PlayerInfo[playerid][pPosedovanjeAuta] == -1) return SCM(playerid,-1, ""CRVENA"* "BELA"Nemate vozilo na slotu 1!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1, ""CRVENA"* "BELA"Morate biti u vozilu!");
		if(GetPlayerVehicleID(playerid) != VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID]) return SCM(playerid,-1, ""CRVENA"* "BELA"Morate biti u svom vozilu na slotu 1!");
		if(!VoziloJeAuto(GetVehicleModel(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID])) && !VoziloJeMotor(GetVehicleModel(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID]))) return SCM(playerid,-1, ""CRVENA"* "BELA"Registraciju/Tehnicki pregled mozete vrsiti samo na autima/motorima!");
		if(PlayerInfo[playerid][pNovacDzep] < 7000) return SCM(playerid,-1, ""CRVENA"* "BELA"Nemate dovoljno novca (7000$)!");
		new Float: HP; GetVehicleHealth(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vID], HP); g_NovacMinus(playerid, 600);
		if(HP < 900.0)
		{
			SCM(playerid,-1, ""CRVENA"* "BELA"Tehnicki pregled ste platili 7000$!");
			SCM(playerid,-1, ""CRVENA"* "BELA"Vase vozilo nije proslo tehnicki pregled morate ga popraviti!");
			GameTextForPlayer(playerid,"~r~Vase vozilo nije proslo tehnicki pregled...", 4000, 4);
			return 1;
		}
		else
		{
			SCM(playerid,-1, ""CRVENA"* "BELA"Tehnicki pregled ste platili 7000$!");
			SCM(playerid,-1, ""CRVENA"* "BELA"Vase vozilo je ispravno i uspesno je proslo tehnicki pregled!");
			GameTextForPlayer(playerid,"~g~Vase vozilo je uspesno proslo tehnicki pregled...", 4000, 4);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta]][vTehnickiPregled] = 1; SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta]);
			return 1;
		}
	}
	else if(pregledid == 2)
	{
		Tehnicki_Pregled[playerid] = 0; TogglePlayerControllable(playerid, 1);
		if(PlayerInfo[playerid][pPosedovanjeAuta2] == -1) return SCM(playerid, -1, "Nemate vozilo na slotu 2!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "Morate biti u vozilu!");
		if(GetPlayerVehicleID(playerid) != VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID]) return SCM(playerid, -1, "Morate biti u svom vozilu na slotu 2!");
		if(!VoziloJeAuto(GetVehicleModel(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID])) && !VoziloJeMotor(GetVehicleModel(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID]))) return SCM(playerid, -1, "Registraciju/Tehnicki pregled mozete vrsiti samo na autima/motorima!");
		if(PlayerInfo[playerid][pNovacDzep] < 7000) return SCM(playerid, -1, "Nemate dovoljno novca (7000$)!");
		new Float: HP; GetVehicleHealth(VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vID], HP); g_NovacMinus(playerid, 600);
		if(HP < 800.0)
		{
			SCM(playerid,-1, ""CRVENA"* "BELA"Tehnicki pregled ste platili 7000$!");
			SCM(playerid,-1, ""CRVENA"* "BELA"Vase vozilo je ispravno i uspesno je proslo tehnicki pregled!");
			GameTextForPlayer(playerid,"~r~Vase vozilo nije proslo tehnicki pregled...", 4000, 4);
			return 1;
		}
		else
		{
			SCM(playerid,-1, ""CRVENA"* "BELA"Tehnicki pregled ste platili 7000$!");
			SCM(playerid,-1, ""CRVENA"* "BELA"Vase vozilo je ispravno i uspesno je proslo tehnicki pregled!");
			GameTextForPlayer(playerid,"~g~Vase vozilo je uspesno proslo tehnicki pregled...", 4000, 4);
			VoziloInfo[PlayerInfo[playerid][pPosedovanjeAuta2]][vTehnickiPregled] = 1; SacuvajVozilo(PlayerInfo[playerid][pPosedovanjeAuta2]);
			return 1;
		}
	}
	return 1;
}
forward ZonaZauzmi(playerid);//na dnu skirpte ubaciti
public ZonaZauzmi(playerid) //na dnu skirpte ubaciti
{
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, GZ[zonaid[playerid]][gPickupx], GZ[zonaid[playerid]][gPickupy], GZ[zonaid[playerid]][gPickupz]))
	{
		new id = zonaid[playerid];
		GangZoneStopFlashForAll(ZonaID[id]);
		PlayerTextDrawHide(playerid, klecanjetd[playerid]);
		zonaid[playerid] -= 1;
		zonatime[playerid] -= 1;
		KillTimer(zonatimer[playerid]);
		SCM(playerid, -1 ,""SRWBOJA"[GRESKA]: "BELA"Niste uspeli da zauzmete teritoriju, udaljili ste se od mesta zauzimanja!");
		return 1;
	}
	zonatime[playerid] -= 1;
	if(zonatime[playerid] > 240 && zonatime[playerid] < 301)
	{
		if(zonas[playerid] == 1)
		{
			zonas[playerid] = 60;
		}
		zonas[playerid] -= 1;
		new text2[126];
		format(text2, sizeof(text2), "Zauzimanje u toku: 04:%d.",zonas[playerid]);
		PlayerTextDrawSetString(playerid,klecanjetd[playerid], text2);
		PlayerTextDrawShow(playerid, klecanjetd[playerid]);
	}
	if(zonatime[playerid] > 180 && zonatime[playerid] < 240)
	{
		if(zonas[playerid] == 1)
		{
			zonas[playerid] = 60;
		}
		zonas[playerid] -= 1;
		new text2[126];
		format(text2, sizeof(text2), "Zauzimanje u toku: 03:%d.",zonas[playerid]);
		PlayerTextDrawSetString(playerid,klecanjetd[playerid], text2);
		PlayerTextDrawShow(playerid, klecanjetd[playerid]);
	}
	if(zonatime[playerid] > 120 && zonatime[playerid] < 180)
	{
		if(zonas[playerid] == 1)
		{
			zonas[playerid] = 60;
		}
		zonas[playerid] -= 1;
		new text2[126];
		format(text2, sizeof(text2), "Zauzimanje u toku: 02:%d.",zonas[playerid]);
		PlayerTextDrawSetString(playerid,klecanjetd[playerid], text2);
		PlayerTextDrawShow(playerid, klecanjetd[playerid]);
	}
	if(zonatime[playerid] > 60 && zonatime[playerid] < 120)
	{
		if(zonas[playerid] == 1)
		{
			zonas[playerid] = 60;
		}
		zonas[playerid] -= 1;
		new text2[126];
		format(text2, sizeof(text2), "Zauzimanje u toku: 01:%d.",zonas[playerid]);
		PlayerTextDrawSetString(playerid,klecanjetd[playerid], text2);
		PlayerTextDrawShow(playerid, klecanjetd[playerid]);
	}
	if(zonatime[playerid] > 0 && zonatime[playerid] < 60)
	{
		if(zonas[playerid] == 1)
		{
			zonas[playerid] = 60;
		}
		zonas[playerid] -= 1;
		new text2[126];
		format(text2, sizeof(text2), "Zauzimanje u toku: 00:%d.",zonas[playerid]);
		PlayerTextDrawSetString(playerid,klecanjetd[playerid], text2);
		PlayerTextDrawShow(playerid, klecanjetd[playerid]);
	}
	if(zonatime[playerid] < 1)
	{
		PlayerTextDrawHide(playerid, klecanjetd[playerid]);
		SCM(playerid,-1,"Uspesno ste zauzeli ovu zonu!");
		KillTimer(zonatimer[playerid]);
		new clan = PlayerInfo[playerid][pClan];
		new lider = PlayerInfo[playerid][pLider];
		new id = zonaid[playerid];
		GangZoneStopFlashForAll(ZonaID[id]);
		new string[256];
		new sttatus[64];
		if(GZ[id][zonaTeam] == 1) { sttatus = "The Vinci Family"; }
		else if(GZ[id][zonaTeam] == 2) { sttatus = "Black Dragon Triads"; }
		else if(GZ[id][zonaTeam] == 3) { sttatus = "Groove Street Family"; }
		else if(GZ[id][zonaTeam] == 4) { sttatus = "Ballas"; }
		else if(GZ[id][zonaTeam] == 5) { sttatus = "Condor"; }
		else if(GZ[id][zonaTeam] == 6) { sttatus = "Hitman"; }
		else if(GZ[id][zonaTeam] == 7) { sttatus = "Blue Lagoon"; }
		else if(GZ[id][zonaTeam] == 8) { sttatus = "La Cosa Nostra"; }
		else if(GZ[id][zonaTeam] == 9) { sttatus = "Da Naga Boys"; }
		else if(GZ[id][zonaTeam] == 10) { sttatus = "Yakuza"; }
		else if(GZ[id][zonaTeam] == 11) { sttatus = "Black Cobra Corporation"; }
		else if(GZ[id][zonaTeam] == 12) { sttatus = "DeathRow"; }
		else if(GZ[id][zonaTeam] == 13) { sttatus = "The Russia Mafia"; }
		else if(GZ[id][zonaTeam] == 14) { sttatus = "Narco Cartel"; }
		else if(GZ[id][zonaTeam] == 15) { sttatus = "Loca Cartel"; }
		else if(GZ[id][zonaTeam] == 16) { sttatus = "TBB"; }
		if(PlayerInfo[playerid][pClan] > 0)
		{
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA" Vasa organizacija je prosirila svoju vladavinu na jos jednu teritoriju. Clan %s je zauzeo teritoriju koju je kontrolisala organizacija %s i dobio 5000$.",GetName(playerid),sttatus);
			SendFamilyMessage(PlayerInfo[playerid][pClan],-1,string);
		}
		else
		{
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA" Vasa organizacija je prosirila svoju vladavinu na jos jednu teritoriju. Clan %s je zauzeo teritoriju koju je kontrolisala organizacija %s i dobio 5000$.",GetName(playerid),sttatus);
			SendFamilyMessage(PlayerInfo[playerid][pLider],-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------The Vinci Family----------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 2 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 2 || lider == 2)
		{
			GZ[id][zonaTeam] = 1;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xe80d0dEE);
			new status[64];
			format(status,sizeof(status),"The Vinci Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija The Vinci Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Black Dragon Triads-------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}
		if(GZ[id][zonaTeam] == 4 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
        if(GZ[id][zonaTeam] == 14 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 3 || lider == 3)
		{
			GZ[id][zonaTeam] = 2;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xF5DEB3FF);
			new status[64];
			format(status,sizeof(status),"Black Dragon Triads");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Dragon Triads je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//-------------------------Groove Street Family-------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 4 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 4 || lider == 4)
		{
			GZ[id][zonaTeam] = 3;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x06e006DD);
			new status[64];
			format(status,sizeof(status),"Groove Street Family");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Groove Street Family je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//-------------------------------Ballas---------------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 5 || lider == 5)
		{
			GZ[id][zonaTeam] = 4;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x800080FF);
			new status[64];
			format(status,sizeof(status),"Ballas");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Ballas je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//------------------------------Condor----------------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 9 || lider == 9)
		{
			GZ[id][zonaTeam] = 5;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFFDD48EE);
			new status[64];
			format(status,sizeof(status),"Condor");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Condor je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Hitman--------------------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 10 || lider == 10)
		{
			GZ[id][zonaTeam] = 6;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x729b1aDD);
			new status[64];
			format(status,sizeof(status),"Hitman");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Hitman je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Blue Lagoon---------------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBAA);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
   			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
		    format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 11 || lider == 11)
		{
			GZ[id][zonaTeam] = 7;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x0000BBDD);
			new status[64];
			format(status,sizeof(status),"Blue Lagoon");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Blue Lagoon je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------La Cosa Nostra----------------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
   			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
		    format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 12 || lider == 12)
		{
			GZ[id][zonaTeam] = 8;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x33CCFFAA);
			new status[64];
			format(status,sizeof(status),"La Cosa Nostra");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija La Cosa Nostra je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Da Naga Boys---------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
   			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
		    format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 13 || lider == 13)
		{
			GZ[id][zonaTeam] = 9;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xB8860BAA);
			new status[64];
			format(status,sizeof(status),"Da Naga Boys");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Da Naga Boys je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Yakuza---------------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
   			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
		    format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 11 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(11,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 15 || lider == 15)
		{
			GZ[id][zonaTeam] = 10;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0xFF8040EE);
			new status[64];
			format(status,sizeof(status),"Yakuza");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Yakuza je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Black Cobra Corporation---------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
   			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
		    format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 17 || lider == 17)
		{
			GZ[id][zonaTeam] = 11;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Black Cobra Corporation");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------DeathRow---------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
   			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
		    format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
            format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 19 || lider == 19)
		{
			GZ[id][zonaTeam] = 12;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"DeathRow");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------The Russia Mafia---------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
   			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
		    format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
            format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 20 || lider == 20)
		{
			GZ[id][zonaTeam] = 13;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"The Russia Mafia");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Narco Cartel---------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
   			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
		    format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
            format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 21 || lider == 21)
		{
			GZ[id][zonaTeam] = 14;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		//----------------------------------------------------------------------
		//--------------------------Loca Cartel---------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
   			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Narco Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 21 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
		    format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
            format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 22 || lider == 22)
		{
			GZ[id][zonaTeam] = 15;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"Loca Cartel");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
				//----------------------------------------------------------------------
		//--------------------------TBB---------------------
		//----------------------------------------------------------------------
		if(GZ[id][zonaTeam] == 1 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(1,-1,string);
		}
		if(GZ[id][zonaTeam] == 2 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
   			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(2,-1,string);
		}
		if(GZ[id][zonaTeam] == 3 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(3,-1,string);
		}

		if(GZ[id][zonaTeam] == 4 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(4,-1,string);
		}
		if(GZ[id][zonaTeam] == 5 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(5,-1,string);
		}
		if(GZ[id][zonaTeam] == 6 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(6,-1,string);
		}
		if(GZ[id][zonaTeam] == 7 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(7,-1,string);
		}
		if(GZ[id][zonaTeam] == 8 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
		    format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(8,-1,string);
		}
		if(GZ[id][zonaTeam] == 9 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(9,-1,string);
		}
		if(GZ[id][zonaTeam] == 10 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(10,-1,string);
		}
		if(GZ[id][zonaTeam] == 12 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
            format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(12,-1,string);
		}
		if(GZ[id][zonaTeam] == 13 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(13,-1,string);
		}
		if(GZ[id][zonaTeam] == 14 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(14,-1,string);
		}
		if(GZ[id][zonaTeam] == 15 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(15,-1,string);
		}
		if(GZ[id][zonaTeam] == 16 && clan == 23 || lider == 23)
		{
			GZ[id][zonaTeam] = 16;
			DestroyDynamic3DTextLabel(ZonaLabel[id]);
			GangZoneHideForAll(ZonaID[id]);
			GangZoneShowForAll(ZonaID[id],0x000000EE);
			new status[64];
			format(status,sizeof(status),"TBB");
			format(string,sizeof(string),"{157DEC}[ {FFFFFF}TERITORIJA {157DEC}]\nTeritorija je u vlasnistvu bande {FFFFFF}%s\n{157DEC}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi",status);
			ZonaLabel[id] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz],15);
			SacuvajZonu(id);
			format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Suparnicka organizacija Black Cobra Corporation je preuzela jednu od vasih teritorija.");
			SendFamilyMessage(16,-1,string);
		}
		return 1;
	}
	return 1;
}
//-------------------------------Zauzimanje-------------------------------------
forward ZonaTimer(); //na dnu skirpte ubaciti
public ZonaTimer() //na dnu skirpte ubaciti
{
	for(new id = 0; id < sizeof(GZ); id++)
	{
		if(GZ[id][gPreuzeto] > 0)
		{
			GZ[id][gPreuzeto] -= 1;
		}
	}
	return 1;
}
//-------------------------------Zauzimanje-------------------------------------
forward SendFamilyMessage(family, color, string[]); //na dnu skirpte ubaciti
public SendFamilyMessage(family, color, string[]) //na dnu skirpte ubaciti
{
	foreach (new i : Player)
	{
	    if(PlayerInfo[i][pClan] == family || PlayerInfo[i][pLider] == family)
	    {
            if(!gFam[i])
            {
				SCM(i, color, string);
			}
		}
	}
}
function: _SQLLoadGangZones()
{
	if(cache_num_rows()) 
	{
		for(new b; b < cache_num_rows(); b++)
		{
			cache_get_value_name_int(b,"gZSQLID", GZ[b][gZSQLID]);
			cache_get_value_name_float(b,"minX",GZ[b][mX69]);
			cache_get_value_name_float(b,"minY",GZ[b][mY69]);
			cache_get_value_name_float(b,"maxX",GZ[b][vX69]);
			cache_get_value_name_float(b,"maxY",GZ[b][vY69]);
			cache_get_value_name_int(b,"Team",GZ[b][zonaTeam]);
			cache_get_value_name_int(b,"Preuzeto",GZ[b][gPreuzeto]);
			cache_get_value_name_int(b,"Glavna",GZ[b][gGlavna]);
			cache_get_value_name_float(b,"Pickupx",GZ[b][gPickupx]);
			cache_get_value_name_float(b,"Pickupy",GZ[b][gPickupy]);
			cache_get_value_name_float(b,"Pickupz",GZ[b][gPickupz]);

			new string[200];
			if(GZ[b][gPickupx] != 0)
  			{
				ZonaID[b] = GangZoneCreate(GZ[b][mX69], GZ[b][mY69], GZ[b][vX69], GZ[b][vY69]);
			    new status[64];
				if(GZ[b][zonaTeam] == 1) { status = "The Vinci Family"; }
				else if(GZ[b][zonaTeam] == 2) { status = "Black Dragon Triads"; }
				else if(GZ[b][zonaTeam] == 3) { status = "Groove Street Family"; }
				else if(GZ[b][zonaTeam] == 4) { status = "Ballas"; }
				else if(GZ[b][zonaTeam] == 5) { status = "Condor"; }
				else if(GZ[b][zonaTeam] == 6) { status = "Hitman"; }
				else if(GZ[b][zonaTeam] == 7) { status = "Blue Lagoon"; }
				else if(GZ[b][zonaTeam] == 8) { status = "La Cosa Nostra"; }
				else if(GZ[b][zonaTeam] == 9) { status = "Da Naga Boys"; }
				else if(GZ[b][zonaTeam] == 10) { status = "Yakuza"; }
				else if(GZ[b][zonaTeam] == 11) { status = "Black Cobra Corporation"; }
				else if(GZ[b][zonaTeam] == 12) { status = "DeathRow"; }
				else if(GZ[b][zonaTeam] == 13) { status = "The Russia Mafia"; }
				else if(GZ[b][zonaTeam] == 14) { status = "Narco Cartel"; }
				else if(GZ[b][zonaTeam] == 15) { status = "Loca Cartel"; }
				else if(GZ[b][zonaTeam] == 16) { status = "TBB"; }
				format(string,sizeof(string),"{19B0E3}[ {FFFFFF}TERITORIJA {19B0E3}]\nTeritorija je u vlasnistvu {FFFFFF}%s\n{19B0E3}Ako zelis da je zauzmes kucaj {FFFFFF}/zauzmi\n{19B0E3}Zona: "SIVA"%d",status, b);
				ZonaLabel[b] = CreateDynamic3DTextLabel(string ,0xFFFFFFAA,GZ[b][gPickupx], GZ[b][gPickupy], GZ[b][gPickupz],15);
				ZonaPickup[b] = CreateDynamicPickup(1254, 1, GZ[b][gPickupx], GZ[b][gPickupy], GZ[b][gPickupz]);				
            }
		}
		printf("[ Sistem ] GangZone: Uctano je %d zona, vreme: (%dms)", cache_num_rows(), cache_get_query_exec_time(MILLISECONDS));
	}
	return 1;
}
//-------------------------------Zauzimanje-------------------------------------
function: SacuvajZonu(idzona)
{
	new q[301];
	mysql_format(SQL, q, sizeof(q), "UPDATE `gangzone` SET `minX` = '%f', `minY` = '%f', `maxX` = '%f', `maxY` = '%f', `Team` = '%d', `Preuzeto` = '%d', `Glavna` = '%d' WHERE `gZSQLID` = '%d' LIMIT 1",
	GZ[idzona][mX69],
	GZ[idzona][mY69],
	GZ[idzona][vX69],
	GZ[idzona][vY69],
	GZ[idzona][zonaTeam],
	GZ[idzona][gPreuzeto],
	GZ[idzona][gGlavna],

	GZ[idzona][gZSQLID]);
	mysql_tquery(SQL, q);

	q[0] = EOS;

	mysql_format(SQL, q, sizeof(q), "UPDATE `gangzone` SET `Pickupx` = '%f', `Pickupy` = '%f', `Pickupz` = '%f' WHERE `gZSQLID` = '%d' LIMIT 1",
	GZ[idzona][gPickupx],
	GZ[idzona][gPickupy],
	GZ[idzona][gPickupz],

	GZ[idzona][gZSQLID]);
	mysql_tquery(SQL, q);

	return 1;
}
//-------------------------------Zauzimanje-------------------------------------
forward ABroadCast(color,const string[],level);
public ABroadCast(color,const string[],level)
{
	foreach (new i : Player)
	{
		if (PlayerInfo[i][pAdmin] >= 1)
		{
			SCM(i, color, string);
			printf("%s", string);
		}
	}
	return 1;
}
//-------------------------------Zauzimanje-------------------------------------
CMD:zauzmi(playerid, params[])
{
	//#pragma unused help
	//#pragma unused help
    new sat, minut, sekund;
    gettime(sat, minut, sekund);
    if(sat >= 1 && sat <= 7) return SCM(playerid, -1, ""CRVENA"[GRESKA]: "BELA"Ne mozete zauzimati teritorije izmedju 7-1h!");
	new gunID = GetPlayerWeapon(playerid);
	new gunAmmo = GetPlayerAmmo(playerid);
	if(gunID != 0 && gunAmmo != 0)
	{
	}
	else return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Morate drzati oruzje u ruci kako biste zapoceli osvajanje zone!");
	if(PlayerInfo[playerid][pLider] < 1 && PlayerInfo[playerid][pClan] < 1 )  return SendClientMessage(playerid,-1,""SRWBOJA"[V:RPG] "SIVA"Niste clan ni jedne organizacije!");
	if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pClan] == 7) return SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Vi ste clan drzavne organizacije, vi morate da vodite red oko igraca!");
	for(new id = 0; id < sizeof(GZ); id++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, GZ[id][gPickupx], GZ[id][gPickupy], GZ[id][gPickupz]))
		{
			new string[126];
			new clan = PlayerInfo[playerid][pClan];
			new lider = PlayerInfo[playerid][pLider];
			if(GZ[id][zonaTeam] == 1)
			{
				if(clan == 2 || lider == 2) //----The Vinci Family
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 2)
			{
				if(clan == 3 || lider == 3) //----Black Dragon Triads
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 3)
			{
				if(clan == 4 || lider == 4) //----Groove Street Family
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 4)
			{
				if(clan == 5 || lider == 5) //----Ballas
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 5)
			{
				if(clan == 9 || lider == 9) //----Condor
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 6)
			{
				if(clan == 10 || lider == 10) //----Hitman
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 7)
			{
				if(clan == 11 || lider == 11) //----Blue Lagoon
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 8)
			{
				if(clan == 12 || lider == 12) //----La Cosa Nostra
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 9)
			{
				if(clan == 13 || lider == 13) //----La Cosa Nostra
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 10)
			{
				if(clan == 15 || lider == 15) //----Yakuza
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 11)
			{
				if(clan == 17 || lider == 17) //----Black Cobra Corporation
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 12)
			{
				if(clan == 19 || lider == 19) //----DeathRow
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 13)
			{
				if(clan == 20 || lider == 20) //----DeathRow
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 14)
			{
				if(clan == 21 || lider == 21) //----Narco Cartel
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 15)
			{
				if(clan == 22 || lider == 22) //----Loca Cartel
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			if(GZ[id][zonaTeam] == 16)
			{
				if(clan == 23 || lider == 23) //----TBB
				{
					SCM(playerid, -1, ""SRWBOJA"[GRESKA]: "BELA"Ne mozete zauzimati svoju teritoriju!");
					return 1;
				}
			}
			GZ[id][gPreuzeto] = 120;
			zonaid[playerid] = id;
			zonatime[playerid] = 300; //10min
			zonas[playerid] = 60;
			zonatimer[playerid] = SetTimerEx("ZonaZauzmi", 1000, true, "i", playerid);
			SCM(playerid,-1,""SRWBOJA"** ZAPOCEO SI ZAUZIMANJE zone. "BELA"Moras ostati ziv sljedecih "SRWBOJA"5 minuta "BELA"kako bi je osvojio.");
			SCM(playerid,-1,""SRWBOJA"**** "BELA"Ne smijes se previse udaljiti od mjesta zauzimanja, jer ce zauzimanje biti prekinuto. "SRWBOJA"*****");
			///////////////////////FLASHING/////////////////////
			if(clan == 2 || lider == 2)           //<<<<----The Vinci Family
				GangZoneFlashForAll(ZonaID[id],0xe80d0dEE);
			if(clan == 3 || lider == 3)           //<<<<----Black Dragon Triads
				GangZoneFlashForAll(ZonaID[id],0xF5DEB3FF);
			if(clan == 4 || lider == 4)           //<<<<<-----Groove Street Family
				GangZoneFlashForAll(ZonaID[id],0x06e006DD);
			if(clan == 5 || lider == 5)           //<<<<<----Ballas
				GangZoneFlashForAll(ZonaID[id],0x800080FF);
			if(clan == 9 || lider == 9)           //<<<<<---Condor
				GangZoneFlashForAll(ZonaID[id],0xFFDD48EE);
			if(clan == 10 || lider == 10)         //<<<<<----Hitman
				GangZoneFlashForAll(ZonaID[id],0x729b1aDD);
			if(clan == 11 || lider == 11)         //<<<<<----Blue Lagoon
				GangZoneFlashForAll(ZonaID[id],0x0000BBDD);
			if(clan == 12 || lider == 12)         //<<<<<----La Cosa Nostra
				GangZoneFlashForAll(ZonaID[id],0x33CCFFAA);
			if(clan == 13 || lider == 13)         //<<<<<----Da Naga Boys
				GangZoneFlashForAll(ZonaID[id],0xB8860BAA);
			if(clan == 15 || lider == 15)         //<<<<<----Yakuza
				GangZoneFlashForAll(ZonaID[id],0xFF8040EE);
			if(clan == 17 || lider == 17)         //<<<<<----Black Cobra Corporation
				GangZoneFlashForAll(ZonaID[id],0x000000EE);
			if(clan == 19 || lider == 19)         //<<<<<----DeathRow
				GangZoneFlashForAll(ZonaID[id],0x872424EE);
			if(clan == 20 || lider == 20)         //<<<<<----The Russia Mafia
				GangZoneFlashForAll(ZonaID[id],0xFF9AFFEE);
			if(clan == 21 || lider == 21)         //<<<<<----Narco Cartel
				GangZoneFlashForAll(ZonaID[id],0xFF9AFFEE);
   			if(clan == 22 || lider == 22)         //<<<<<----Loca Cartel
				GangZoneFlashForAll(ZonaID[id],0xFF9AFFEE);
			if(clan == 23 || lider == 23)         //<<<<<----TBB
				GangZoneFlashForAll(ZonaID[id],0xFF9AFFEE);
			////////////////////////////////////////////////////////////////////////
			if(PlayerInfo[playerid][pClan] > 0)
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Clan vase organizacije pokusava da zauzme tudju teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(PlayerInfo[playerid][pClan],-1,string);
			}
			else
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Clan vase organizacije pokusava da zauzme tudju teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(PlayerInfo[playerid][pLider],-1,string);
			}

			if(GZ[id][zonaTeam] == 1)	//---The Vinci Family
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(1,-1,string);
			}
			if(GZ[id][zonaTeam] == 2)   //---Black Dragon Triads
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(2,-1,string);
			}
			if(GZ[id][zonaTeam] == 3)   //---Groove Street Family
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(3,-1,string);
			}
			if(GZ[id][zonaTeam] == 4)   //---Ballas
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(4,-1,string);
			}
			if(GZ[id][zonaTeam] == 5)   //---Condor
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(5,-1,string);
			}
			if(GZ[id][zonaTeam] == 6)   //---Hitman
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(6,-1,string);
			}
			if(GZ[id][zonaTeam] == 7)   //---Blue Lagoon
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(7,-1,string);
			}
			if(GZ[id][zonaTeam] == 8)   //---La Cosa Nostra
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(8,-1,string);
			}
			if(GZ[id][zonaTeam] == 9)   //---Da Naga Boys
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(9,-1,string);
			}
			if(GZ[id][zonaTeam] == 10)   //---Yakuza
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(10,-1,string);
			}
			if(GZ[id][zonaTeam] == 11)   //---Black Cobra Corporation
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(11,-1,string);
			}
			if(GZ[id][zonaTeam] == 12)   //---DeathRow
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(12,-1,string);
			}
			if(GZ[id][zonaTeam] == 13)   //---The Russian Mafia
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(13,-1,string);
			}
			if(GZ[id][zonaTeam] == 14)   //---Narco Cartel
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(14,-1,string);
			}
			if(GZ[id][zonaTeam] == 15)   //---Loca Cartel
			{
				format(string,sizeof(string),""CRVENA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(15,-1,string);
			}
			if(GZ[id][zonaTeam] == 16)   //---Loca Cartel
			{
				format(string,sizeof(string),""SRWBOJA"Obavestenje: "BELA"Druga organizacija pokusava da zauzime vasu teritoriju. "SRWBOJA"[ESC MENU-MAP]");
				SendFamilyMessage(16,-1,string);
			}
			//----------------------------------------------------------------------
			return 1;
		}
	}
	return SCM(playerid, -1, ""SRWBOJA"#ERROR: "BELA"Ne nalazite se u blizini tocke za preuzimanje zone!");
}
forward OnCheatDetected(playerid, ip_address[], type, code);
public OnCheatDetected(playerid, ip_address[], type, code) 
{        
	if(PlayerInfo[playerid][pAdmin] >= 1) return 0;
    new cheat_name[24];
    switch(code) {
            case 0, 1:      format(cheat_name, charsmax(cheat_name), "AirBreak");
            case 2..6:      format(cheat_name, charsmax(cheat_name), "Teleport");
            case 7,8:       format(cheat_name, charsmax(cheat_name), "Fly");
            case 9,10:      format(cheat_name, charsmax(cheat_name), "Speed");
            case 11,12: 	format(cheat_name, charsmax(cheat_name), "Health");
            case 13:        format(cheat_name, charsmax(cheat_name), "Armour");
            case 14:        format(cheat_name, charsmax(cheat_name), "Money");
            case 15:        format(cheat_name, charsmax(cheat_name), "Weapon");
            case 16,17: 	format(cheat_name, charsmax(cheat_name), "Ammo");
            case 18:        format(cheat_name, charsmax(cheat_name), "Special Action");
            case 19,20: 	format(cheat_name, charsmax(cheat_name), "Godmode");
            case 21:        format(cheat_name, charsmax(cheat_name), "Invisible");
            case 22:        format(cheat_name, charsmax(cheat_name), "Langcomp-spoof");
            case 23:        format(cheat_name, charsmax(cheat_name), "Tuning");
            case 24:        format(cheat_name, charsmax(cheat_name), "Parkour");
            case 25:        format(cheat_name, charsmax(cheat_name), "Quick");
            case 26:        format(cheat_name, charsmax(cheat_name), "Rapid-Fire");
            case 27:        format(cheat_name, charsmax(cheat_name), "Fakespawn");
            case 28:        format(cheat_name, charsmax(cheat_name), "FakeKill");
            case 29:        format(cheat_name, charsmax(cheat_name), "Pro aim");
            case 30:        format(cheat_name, charsmax(cheat_name), "CJ run");
            case 31:        format(cheat_name, charsmax(cheat_name), "CarShot");
            case 32:        format(cheat_name, charsmax(cheat_name), "CarJack");
            case 33:        format(cheat_name, charsmax(cheat_name), "UnFreeze");
            case 34:        format(cheat_name, charsmax(cheat_name), "AFK-Ghost");
            case 35:        format(cheat_name, charsmax(cheat_name), "Full Aiming");
            case 36:        format(cheat_name, charsmax(cheat_name), "Fake NPC");
            case 37:        format(cheat_name, charsmax(cheat_name), "Reconnect");
            case 38:        format(cheat_name, charsmax(cheat_name), "High ping");
            case 39:        format(cheat_name, charsmax(cheat_name), "Dialog hack");
            case 40:        format(cheat_name, charsmax(cheat_name), "sandbox");
            case 41:        format(cheat_name, charsmax(cheat_name), "invalid version");
            case 42:        format(cheat_name, charsmax(cheat_name), "Rcon");
            case 43:        format(cheat_name, charsmax(cheat_name), "Tuning Crasher");
            case 44:        format(cheat_name, charsmax(cheat_name), "Invalid seat crasher");
            case 45:        format(cheat_name, charsmax(cheat_name), "Dialog crasher");
            case 46:        format(cheat_name, charsmax(cheat_name), "Attached object crasher");
            case 47:        format(cheat_name, charsmax(cheat_name), "Weapon Crasher");
            case 48:        format(cheat_name, charsmax(cheat_name), "Flood protection connects to one slot");
            case 49:        format(cheat_name, charsmax(cheat_name), "flood callback functions");
            case 50:        format(cheat_name, charsmax(cheat_name), "flood change seat");
            case 51:        format(cheat_name, charsmax(cheat_name), "Ddos");
            case 52:        format(cheat_name, charsmax(cheat_name), "NOP's");
            default:     	format(cheat_name, charsmax(cheat_name), "Nepoznat %d", code);
    }

    new string[256];        
    format(string, charsmax(string), "AC: ~r~%s mozda ima (~w~%s~r~) ~w~- /specon [%i]. ",GetName(playerid),cheat_name, playerid);
    DodajWarnRed(string);
    return 1;
}
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL: handle) {
	switch(errorid) {
		case CR_SERVER_GONE_ERROR:
		{
			printf("Lost connection to server");
		}
		case ER_SYNTAX_ERROR: 
		{
			printf("Syntax error: %s",query);
		}
		case ER_UNKNOWN_TABLE:
		{
			printf("Unknown table error: %s",query);
		}		
	}
	printf("> OnQueryError: Error: %s | Query: %s | Callback: %s", error, query, callback);
	return 1;
}
sql_update_string(playerid, field[], str[])
{
	new q[128];
	mysql_format(SQL, q, sizeof(q), "UPDATE `players` SET `%s` = '%d' WHERE `SQLID` = '%d'", field, str, PlayerInfo[playerid][pSQLID]);
	mysql_tquery(SQL, q);
	return 1;
}

sql_update_int(playerid, field[], int)
{
	new q[128];
	mysql_format(SQL, q, sizeof(q), "UPDATE `players` SET `%d` = '%d' WHERE `SQLID` = '%d'", field, int, PlayerInfo[playerid][pSQLID]);
	mysql_tquery(SQL, q);
	return 1;
}


CreatePlayer(playerid)
{
	new q[400];
	mysql_format(SQL, q, sizeof q, "INSERT INTO `players` SET `Name` = '%e', `Password` = '%e', `Skin` = '%d', `Godine` = '%d', `Drzava` = %d, `Pol` = %d",
		GetName(playerid),
		PlayerInfo[playerid][pPassword],
		PlayerInfo[playerid][pSkin],
		PlayerInfo[playerid][pGodine],
		PlayerInfo[playerid][pDrzava],
		PlayerInfo[playerid][pSex]);		
	mysql_tquery(SQL, q, "_sqlInsertNewPlayer", "d", playerid);
	return 1;
}

forward _sqlInsertNewPlayer(playerid);
public _sqlInsertNewPlayer(playerid)
{
	PlayerInfo[playerid][pSQLID] = cache_insert_id();
	printf("Umetnuo si ID: %d", PlayerInfo[playerid][pSQLID]);
	return 1;
}





function: _sqlMakeAdminOffline(playerid, targetname, level)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "Igrac nije pronadjem u bazi.");
	else 
	{
		new q[128];
		mysql_format( SQL, q, sizeof(q), "UPDATE `players` SET `Admin` = '%d' WHERE `Name` = '%e';", level, targetname);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid,-1 , "Postavili ste igracu %s, Admin Level %d.", targetname, level);
	}
	return 1;
}

function: _sqlMakeSpecAdminOffline(playerid, targetname, level)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "Igrac nije pronadjem u bazi.");
	else 
	{
		new q[128];
		mysql_format( SQL, q, sizeof(q), "UPDATE `players` SET `Spec` = '%d' WHERE `Name` = '%e';", level, targetname);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid,-1 , "Postavili ste igracu %s, Spec-Team level %d.", targetname, level);
	}
	return 1;
}
	
function: _sqlMakeGameMasterOffline(playerid, targetname, level)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "Igrac nije pronadjem u bazi.");
	else 
	{
		new q[128];
		mysql_format( SQL, q, sizeof(q), "UPDATE `players` SET `Gamemaster` = '%d' WHERE `Name` = '%e';", level, targetname);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid,-1 , "Postavili ste igracu %s, GM level %d.", targetname, level);
	}
	return 1;
}


//////////////////////////////////////////
function: _sqlMakeLiderOffline(playerid, targetname, level)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "Igrac nije pronadjem u bazi.");
	else 
	{
		new q[128];
		mysql_format( SQL, q, sizeof(q), "UPDATE `players` SET `Lider` = '%d' WHERE `Name` = '%e';", level, targetname);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid,-1 , "Postavili ste igracu %s, lidera ID org/mafije/bande na: %d.", targetname, level);
	}
	return 1;
}

function: _sqlJailPlayer(playerid, playername, Vreme)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, -1, "Igrac nije pronadjem u bazi.");
	else 
	{
		new q[128], jebemtisranje[64+22];
		mysql_format( SQL, q, sizeof(q), "UPDATE `players` SET `Zatvor` = '3' , `ZatvorenVreme` = '%d' WHERE `Name` = '%e';", Vreme*60, playername);
		mysql_tquery(SQL, q);
		va_SendClientMessage(playerid, -1, ""ORANGE"[V:RPG] [OFF] Zatvorili ste %s u zatvor na %d minuta!.", playername,Vreme);


		format(jebemtisranje, sizeof(jebemtisranje), ""ORANGE"Administrator %s je off zatvorio igraca %s", GetName(playerid), playername);
		AdminGameMaster(-1, jebemtisranje);
	}
	return 1;
}
